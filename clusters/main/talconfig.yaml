clusterName: main
talosVersion: v1.9.5
kubernetesVersion: v1.32.3
endpoint: https://kmain.cin.macro.network:6443
cniConfig:
  name: none

additionalMachineCertSans:
  - kmain.cin.macro.network
  - 127.0.0.1
additionalApiServerCertSans:
  - 127.0.0.1

clusterSvcNets:
  - 10.112.0.0/12
  - fc42:0:0:70::/108
clusterPodNets:
  - 10.128.0.0/14
  - fc42:0:0:80::/64

nodes:
  - hostname: kmain01.cin.macro.network
    ipAddress: 10.10.10.1
    controlPlane: true
    installDisk: /dev/nvme0n1
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az01
    networkInterfaces:
      - deviceSelector: &rk1NetDevice
          driver: rk_gmac-dwmac
          busPath: "fe1c0000.ethernet"
        dhcp: false
        addresses:
          - "10.10.10.1/16"
          - "fc42:0:0:a::1001/64"
        mtu: &mtu 1500
        routes: &routes
          - network: 0.0.0.0/0
            gateway: "10.10.0.1"
          # Link-local IPv6 route set via RA with `metric: 1024`.
          - network: ::/0
            gateway: "fc42:0:0:a::"
            metric: 4096
    schematic: &rk1schematic
      overlay:
        name: turingrk1
        image: siderolabs/sbc-rockchip
      customization:
        extraKernelArgs:
          - cpufreq.default_governor=ondemand

  - hostname: kmain02.cin.macro.network
    ipAddress: 10.10.10.2
    controlPlane: true
    installDisk: /dev/nvme0n1
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az02
    networkInterfaces:
      - deviceSelector: *rk1NetDevice
        dhcp: false
        addresses:
          - "10.10.10.2/16"
          - "fc42:0:0:a::1002/64"
        mtu: *mtu
        routes: *routes
    schematic: *rk1schematic

  - hostname: kmain03.cin.macro.network
    ipAddress: 10.10.10.3
    controlPlane: true
    installDisk: /dev/nvme0n1
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az03
    networkInterfaces:
      - deviceSelector: *rk1NetDevice
        dhcp: false
        addresses:
          - "10.10.10.3/16"
          - "fc42:0:0:a::1003/64"
        mtu: *mtu
        routes: *routes
    schematic: *rk1schematic

  - hostname: kmain04.cin.macro.network
    ipAddress: 10.10.10.4
    controlPlane: false
    installDisk: /dev/mmcblk0
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az01
    networkInterfaces:
      - deviceSelector: *rk1NetDevice
        dhcp: false
        addresses:
          - "10.10.10.4/16"
          - "fc42:0:0:a::1004/64"
        mtu: *mtu
        routes: *routes
    schematic: *rk1schematic

  - hostname: kmain05.cin.macro.network
    ipAddress: 10.10.10.5
    controlPlane: false
    installDisk: /dev/mmcblk0
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az02
    networkInterfaces:
      - deviceSelector: *rk1NetDevice
        dhcp: false
        addresses:
          - "10.10.10.5/16"
          - "fc42:0:0:a::1005/64"
        mtu: *mtu
        routes: *routes
    schematic: *rk1schematic

  - hostname: kmain06.cin.macro.network
    ipAddress: 10.10.10.6
    controlPlane: false
    installDisk: /dev/mmcblk0
    nodeLabels:
      feature.node.kubernetes.io/network.max-link-speed: 1g
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az03
    networkInterfaces:
      - deviceSelector: *rk1NetDevice
        dhcp: false
        addresses:
          - "10.10.10.6/16"
          - "fc42:0:0:a::1006/64"
        mtu: *mtu
        routes: *routes
    schematic: *rk1schematic

  # - hostname: kmain13.cin.macro.network
  #   ipAddress: 10.10.10.13
  #   controlPlane: false
  #   installDisk: /dev/sda
  #   nodeLabels:
  #     bgp.kubernetes.macro.network/peer_group: cbgp
  #     feature.node.kubernetes.io/network.max-link-speed: 10g
  #     topology.kubernetes.io/region: rack01
  #     topology.kubernetes.io/zone: az01
  #   networkInterfaces:
  #     - interface: enp5s0
  #       dhcp: false
  #       addresses:
  #         - "10.10.10.13/16"
  #         - "2603:6010:5300:ad0a::a013/64"
  #       mtu: *mtu
  #       routes: *routes
  #   schematic: &M11SDVschematic
  #     customization:
  #       systemExtensions:
  #         officialExtensions:
  #           - siderolabs/i915-ucode
  #           - siderolabs/intel-ucode

  # - hostname: kmain14.cin.macro.network
  #   ipAddress: 10.10.10.14
  #   controlPlane: false
  #   installDisk: /dev/sda
  #   nodeLabels:
  #     bgp.kubernetes.macro.network/peer_group: cbgp
  #     feature.node.kubernetes.io/network.max-link-speed: 10g
  #     topology.kubernetes.io/region: rack01
  #     topology.kubernetes.io/zone: az02
  #   networkInterfaces:
  #     - interface: enp5s0
  #       dhcp: false
  #       addresses:
  #         - "10.10.10.14/16"
  #         - "2603:6010:5300:ad0a::a014/64"
  #       mtu: *mtu
  #       routes: *routes
  #   schematic: *M11SDVschematic

  # - hostname: kmain15.cin.macro.network
  #   ipAddress: 10.10.10.15
  #   controlPlane: false
  #   installDisk: /dev/sda
  #   nodeLabels:
  #     bgp.kubernetes.macro.network/peer_group: cbgp
  #     feature.node.kubernetes.io/network.max-link-speed: 10g
  #     topology.kubernetes.io/region: rack01
  #     topology.kubernetes.io/zone: az03
  #   networkInterfaces:
  #     - interface: enp5s0
  #       dhcp: false
  #       addresses:
  #         - "10.10.10.15/16"
  #         - "2603:6010:5300:ad0a::a015/64"
  #       mtu: *mtu
  #       routes: *routes
  #   schematic: *M11SDVschematic

controlPlane:
  nameservers: &nameservers
    - "10.10.0.1"
    - "fc42:0:0:a::"
  disableSearchDomain: &disableSearchDomain true
  schematic:
    customization:
      extraKernelArgs: &extraKernelArgs
        - "talos.logging.kernel=udp://syslog.cin.macro.network:6050/"
  patches:
    - |-
      - op: replace
        path: /cluster/apiServer/admissionControl
        value: []
    - |-
      cluster:
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
            ## Node CIDR mask size for IPv4 and IPv6.
            ## One unique subnet of this size will be cut from the clusterPodNets
            ## for every node.
            ##
            node-cidr-mask-size-ipv4: "20"
            ## The IPv6 node cidr mask size MUST be within 16 bits of the
            ## clusterPodNets IPv6cidr. By default, the clusterPodNets IPv6 mask
            ## size is 48 and the clusterPodNets IPv6 cidr is /64 (48+16).
            ##
            node-cidr-mask-size-ipv6: "80"
            allocate-node-cidrs: "true"
            feature-gates: MemoryQoS=true,InPlacePodVerticalScaling=true,RotateKubeletServerCertificate=true
            tls-cipher-suites: TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
    - |-
      cluster:
        scheduler:
          extraArgs:
            bind-address: "0.0.0.0"
            feature-gates: MemoryQoS=true,InPlacePodVerticalScaling=true,RotateKubeletServerCertificate=true
            tls-cipher-suites: TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384
    - |-
      cluster:
        proxy:
          # Replaced by Cillium.
          disabled: true
    - |-
      cluster:
        apiServer:
          extraArgs:
            max-mutating-requests-inflight: 20
            max-requests-inflight: 80
            feature-gates: MemoryQoS=true,InPlacePodVerticalScaling=true,RotateKubeletServerCertificate=true
            tls-cipher-suites: TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384
    - &machineKubelet |-
      machine:
        kubelet:
          nodeIP:
            validSubnets:
              - 10.10.0.0/16
              - fc42:0:0:a::/64
          extraArgs:
            feature-gates: MemoryQoS=true,InPlacePodVerticalScaling=true,RotateKubeletServerCertificate=true
            rotate-server-certificates: "true"
            tls-cipher-suites: TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384
    - &machineLogging |-
      machine:
        logging:
          destinations:
            - endpoint: "udp://syslog.cin.macro.network:6051/"
              format: json_lines
    - &machineTime |-
      machine:
        time:
          disabled: false
          servers:
            - 0.north-america.pool.ntp.org
            - 1.north-america.pool.ntp.org
            - 2.north-america.pool.ntp.org
            - 3.north-america.pool.ntp.org

worker:
  nameservers: *nameservers
  disableSearchDomain: *disableSearchDomain
  schematic:
    customization:
      extraKernelArgs: *extraKernelArgs
  patches:
    - *machineKubelet
    - *machineLogging
    - *machineTime
    - |-
      machine:
        kubelet:
          extraConfig:
            maxPods: 250
