---
apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: authentik
spec:
  providerConfigRef:
    name: authentik
  writeConnectionSecretToRef:
    namespace: authentik
    name: terraform-workspace-authentik
  forProvider:
    source: Inline
    initArgs:
      - -upgrade=true
    varFiles:
      - source: SecretKey
        format: HCL
        secretKeyRef:
          namespace: authentik
          name: authentik-cluster-credentials
          key: authentik.tfvars
    module: |
      variable "authentik_cluster_external_host" {
        type = string
      }

      variable "authentik_cluster_external_domain" {
        type = string
      }

      data "authentik_flow" "default_authentication" {
        slug = "default-authentication-flow"
      }

      data "authentik_flow" "default_authorization" {
        slug = "default-provider-authorization-explicit-consent"
      }

      resource "authentik_certificate_key_pair" "cert" {
        name             = "Authentik Certificate"
        certificate_data = file("${path.module}/authentik-cert-tls-crt")
        key_data         = file("${path.module}/authentik-cert-tls-key")
      }

      resource "authentik_provider_proxy" "domain_forward_auth_provider" {
        name               = "domain-forward-auth-provider"
        cookie_domain      = var.authentik_cluster_external_domain
        external_host      = "https://${var.authentik_cluster_external_host}"
        mode               = "forward_domain"
        authentication_flow = data.authentik_flow.default_authentication.id
        authorization_flow  = data.authentik_flow.default_authorization.id
      }

      resource "authentik_application" "domain_forward_auth_application" {
        name              = var.authentik_cluster_external_domain
        slug              = "domain-forward-auth-application"
        protocol_provider = authentik_provider_proxy.domain_forward_auth_provider.id
      }
