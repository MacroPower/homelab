# Note that replicas require redis/db to be enabled
replicaCount: 1
leaderElection:
  enabled: false

# Allow additional env variables to be added
envVars: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   memory: 100Mi
  #   cpu: 10m
  # requests:
  #   memory: 75Mi
  #   cpu: 5m

# Enable a NetworkPolicy for this chart. Useful on clusters where Network Policies are
# used and configured in a default-deny fashion.
networkPolicy:
  enabled: false
  # Kubernetes API Server
  egress:
  - to:
    ports:
    - protocol: TCP
      port: 6443
  ingress: []

ingress:
  enabled: false

logging:
  encoding: json # possible encodings are console and json
  logLevel: 0 # default info
  development: false # more human readable structure, enables stacktraces and removes log sampling

api:
  logging: false # enable debug API access logging, sets logLevel to debug

# REST API
rest:
  enabled: false

# Prometheus Metrics API
metrics:
  enabled: true
  mode: detailed

# amount of queue workers for PolicyReport resource processing
worker: 5

# enable policy-report-ui
ui:
  enabled: true

kyvernoPlugin:
  enabled: true

database:
  # Database Type, supported: mysql, postgres, mariadb
  type: ""
  database: "" # Database Name
  username: ""
  password: ""
  host: ""
  enableSSL: false
  # instead of configure the individual values you can also provide an DSN string
  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable
  # example mysql: root:password@tcp(localhost:3306)/test?tls=false
  dsn: ""
  # configure an existing secret as source for your values
  # supported fields: username, password, host, dsn, database
  secretRef: ""
  # use an mounted secret as source for your values, required the information in JSON format
  # supported fields: username, password, host, dsn, database
  mountedSecret: ""

emailReports:
  clusterName: "" # (optional) - displayed in the email report if configured
  titlePrefix: "Report" # title prefix in the email subject
  smtp:
    secret: "" # (optional) secret name to provide the complete or partial SMTP configuration
    host: ""
    port: 465
    username: ""
    password: ""
    from: "" # displayed from email address
    encryption: "" # default is none, supports ssl/tls and starttls
    skipTLS: false
    certificate: ""

  # basic summary report
  summary:
    enabled: false
    schedule: "0 8 * * *" # CronJob schedule defines when the report will be send
    activeDeadlineSeconds: 300 # timeout in seconds
    backoffLimit: 3 # retry counter
    ttlSecondsAfterFinished: 0
    restartPolicy: Never # pod restart policy

    to: [] # list of receiver email addresses
    filter: {} # optional filters
    #  disableClusterReports: false # remove ClusterPolicyResults from Reports
    #  namespaces:
    #    include: []
    #    exclude: []
    #  sources:
    #    include: []
    #    exclude: []
    channels: [] # (optional) channels can be used to to send only a subset of namespaces / sources to dedicated email addresses    channels: [] # (optional) channels can be used to to send only a subset of namespaces / sources to dedicated email addresses
    #  - to: ['team-a@company.org']
    #    filter:
    #      disableClusterReports: true
    #      namespaces:
    #        include: ['team-a-*']
    #      sources:
    #        include: ['Kyverno']
  # violation summary report
  violations:
    enabled: false
    schedule: "0 8 * * *" # CronJob schedule defines when the report will be send
    activeDeadlineSeconds: 300 # timeout in seconds
    backoffLimit: 3 # retry counter
    ttlSecondsAfterFinished: 0
    restartPolicy: Never # pod restart policy

    to: [] # list of receiver email addresses
    filter: {} # optional filters
    #  disableClusterReports: false # remove ClusterPolicyResults from Reports
    #  namespaces:
    #    include: []
    #    exclude: []
    #  sources:
    #    include: []
    #    exclude: []
    channels: [] # (optional) channels can be used to to send only a subset of namespaces / sources to dedicated email addresses    channels: [] # (optional) channels can be used to to send only a subset of namespaces / sources to dedicated email addresses
    #  - to: ['team-a@company.org']
    #    filter:
    #      disableClusterReports: true
    #      namespaces:
    #        include: ['team-a-*']
    #      sources:
    #        include: ['Kyverno']
  resources: {}
  # limits:
  #   memory: 100Mi
  #   cpu: 10m
  # requests:
  #   memory: 75Mi
  #   cpu: 5m

# Reference a configuration which already exists instead of creating one
existingTargetConfig:
  enabled: false
  # Name of the secret with the config
  name: ""
  # subPath within the secret (defaults to config.yaml)
  subPath: ""

# use redis as external result cache instead of the in memory cache
redis:
  enabled: false
  address: ""
  database: 0
  prefix: "policy-reporter"
  username: ""
  password: ""

extraVolumes:
  volumeMounts: []

  volumes: []

# If set the volume for sqlite is freely configurable below "- name: sqlite". If no value is set an emptyDir is used.
sqliteVolume: {}
  # emptyDir:
  #   sizeLimit: 10Mi

# If set the volume for /tmp is freely configurable below "- name: tmp". If no value is set an emptyDir is used.
tmpVolume: {}
  # emptyDir:
  #   sizeLimit: 10Mi
