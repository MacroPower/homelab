# linkerd --context=home multicluster link --cluster-name home \
#   --gateway-addresses "h.macro.network" \
#   --api-server-address "https://linkerd-tunnel-data-plane.inlets.svc.cluster.local:6443"

---
apiVersion: multicluster.linkerd.io/v1alpha1
kind: Link
metadata:
  name: home
  namespace: linkerd-multicluster
spec:
  clusterCredentialsSecret: cluster-credentials-home
  gatewayAddress: h.macro.network
  gatewayIdentity: linkerd-gateway.linkerd-multicluster.serviceaccount.identity.linkerd.cluster.local
  gatewayPort: "4143"
  probeSpec:
    path: /ready
    period: 3s
    port: "4191"
  selector:
    matchLabels:
      mirror.linkerd.io/exported: "true"
  targetClusterDomain: cluster.local
  targetClusterLinkerdNamespace: linkerd
  targetClusterName: home
---
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-home
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
rules:
- apiGroups: [""]
  resources: ["endpoints", "services"]
  verbs: ["list", "get", "watch", "create", "delete", "update"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-home
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-service-mirror-access-local-resources-home
subjects:
- kind: ServiceAccount
  name: linkerd-service-mirror-home
  namespace: linkerd-multicluster
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-home
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["cluster-credentials-home"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["multicluster.linkerd.io"]
    resources: ["links"]
    verbs: ["list", "get", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-home
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkerd-service-mirror-read-remote-creds-home
subjects:
  - kind: ServiceAccount
    name: linkerd-service-mirror-home
    namespace: linkerd-multicluster
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-service-mirror-home
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: home
  name: linkerd-service-mirror-home
  namespace: linkerd-multicluster
spec:
  replicas: 1
  selector:
    matchLabels:
      component: linkerd-service-mirror
      mirror.linkerd.io/cluster-name: home
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: "0"
      labels:
        component: linkerd-service-mirror
        mirror.linkerd.io/cluster-name: home
    spec:
      containers:
      - args:
        - service-mirror
        - -log-level=info
        - -event-requeue-limit=3
        - -namespace=linkerd-multicluster
        - -enable-pprof=false
        - home
        image: cr.l5d.io/linkerd/controller:edge-23.2.2
        name: service-mirror
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 9999
          name: admin-http
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-service-mirror-home
---
apiVersion: v1
kind: Service
metadata:
  name: probe-gateway-home
  namespace: linkerd-multicluster
  labels:
    mirror.linkerd.io/mirrored-gateway: "true"
    mirror.linkerd.io/cluster-name: home
spec:
  ports:
  - name: mc-probe
    port: 4191
    protocol: TCP
---
