apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: timescale

helmCharts:
  - name: timescaledb-single
    repo: https://charts.timescale.com
    version: 0.17.0
    releaseName: timescaledb-single
    namespace: timescale
    valuesInline:
      replicaCount: 1

      image:
        repository: timescale/timescaledb-ha
        tag: pg14.6-ts2.9.2-p0

      patroni:
        postgresql:
          pg_hba:
            - local     all             postgres                              peer
            - local     all             all                                   md5
            - hostnossl all,replication all                all                md5
            - hostssl   all             all                127.0.0.1/32       md5
            - hostssl   all             all                ::1/128            md5
            - hostssl   replication     standby            all                md5
            - hostssl   all             all                all                md5

      secrets:
        credentialsSecretName: 'timescaledb-credentials'

      env:
        - name: PATRONI_readonly_PASSWORD
          valueFrom:
            secretKeyRef:
              name: timescaledb-credentials
              key: PATRONI_readonly_PASSWORD
        - name: PATRONI_readonly_OPTIONS
          value: login

      postInit:
        - configMap:
            name: timescaledb-init-scripts

      loadBalancer:
        enabled: false

      persistentVolumes:
        # For sanity reasons, the actual PGDATA and wal directory will be subdirectories of the Volume mounts,
        # this allows Patroni/a human/an automated operator to move directories during bootstrap, which cannot
        # be done if we did not use subdirectories
        # https://www.postgresql.org/docs/current/creating-cluster.html#CREATING-CLUSTER-MOUNT-POINTS
        data:
          enabled: true
          size: 10Gi
          storageClass: '-'
          subPath: ''
          mountPath: '/var/lib/postgresql'
          annotations: {}
          accessModes:
            - ReadWriteOnce
        wal:
          enabled: false

      prometheus:
        enabled: true

      backup:
        # Performed via podAnnotations.
        enabled: false

      podAnnotations:
        'k8up.io/backup': 'true'
        'k8up.io/backupcommand': sh -c 'PGUSER="postgres" PGPASSWORD="$PATRONI_SUPERUSER_PASSWORD" pg_dumpall --clean'
        'k8up.io/file-extension': .sql

      resources:
        requests:
          cpu: 300m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 2Gi

resources:
  - secrets.yaml
  - init.yaml
  - crossplane.yaml
  - backup.yaml
