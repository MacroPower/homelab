authentik:
  log_level: info

server:
  replicas: 2
  serviceMonitor: &serviceMonitor
    enabled: true
    interval: 30s
    scrapeTimeout: 3s
  env: &env
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: AUTHENTIK_SECRET_KEY
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: AUTHENTIK_BOOTSTRAP_PASSWORD
    - name: AUTHENTIK_BOOTSTRAP_TOKEN
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: AUTHENTIK_BOOTSTRAP_TOKEN
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: AUTHENTIK_BOOTSTRAP_EMAIL
    - name: AUTHENTIK_REDIS__HOST
      value: "authentik-redis-dragonfly.authentik.svc"
    - name: AUTHENTIK_REDIS__PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-credentials
          key: AUTHENTIK_REDIS_PASS
    - name: AUTHENTIK_POSTGRESQL__HOST
      value: "postgres-shared-rw.postgres-shared.svc"
    - name: AUTHENTIK_POSTGRESQL__PORT
      value: "5432"
    - name: AUTHENTIK_POSTGRESQL__NAME
      value: "authentik"
    - name: AUTHENTIK_POSTGRESQL__USER
      value: "authentik"
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-database-credentials
          key: AUTHENTIK_DB_PASS
  resources:
    requests:
      cpu: 50m
      memory: 1Gi
    limits:
      memory: 1Gi

worker:
  replicas: 2
  serviceMonitor: *serviceMonitor
  env: *env
  resources:
    requests:
      cpu: 10m
      memory: 1Gi
    limits:
      memory: 1Gi

prometheus:
  rules:
    enabled: true

postgresql:
  enabled: false

redis:
  enabled: false
