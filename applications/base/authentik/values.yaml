authentik:
  log_level: info

  # email:
  #  # https://goauthentik.io/docs/installation/configuration#authentik_email

  outposts:
    # -- Template used for managed outposts. The following placeholders can be used
    # %(type)s - the type of the outpost
    # %(version)s - version of your authentik install
    # %(build_hash)s - only for beta versions, the build hash of the image
    container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

prometheus:
  serviceMonitor:
    create: true
    interval: 30s
    scrapeTimeout: 3s
  rules:
    create: true

geoip:
  # -- optional GeoIP, deploys a cronjob to download the maxmind database
  enabled: false
  # -- sign up under https://www.maxmind.com/en/geolite2/signup
  accountId: ""
  # -- sign up under https://www.maxmind.com/en/geolite2/signup
  licenseKey: ""
  editionIds: GeoLite2-City
  image: maxmindinc/geoipupdate:v4.8
  # -- number of hours between update runs
  updateInterval: 8

postgresql:
  enabled: true
  existingSecret: authentik-postgres-credentials

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    existingSecret: authentik-credentials
    existingSecretPasswordKey: AUTHENTIK_REDIS_PASS

# -- List of config maps to mount blueprints from. Only keys in the
# configmap ending with ".yaml" wil be discovered and applied
blueprints: []

# -- see configuration options at https://goauthentik.io/docs/installation/configuration/
env: {}
# AUTHENTIK_VAR_NAME: VALUE

envFrom: []
#  - configMapRef:
#      name: special-config

envValueFrom:
  AUTHENTIK_SECRET_KEY:
    secretKeyRef:
      key: AUTHENTIK_SECRET_KEY
      name: authentik-credentials
  AUTHENTIK_BOOTSTRAP_TOKEN:
    secretKeyRef:
      key: AUTHENTIK_BOOTSTRAP_TOKEN
      name: authentik-credentials
  AUTHENTIK_REDIS__PASSWORD:
    secretKeyRef:
      key: AUTHENTIK_REDIS_PASS
      name: authentik-credentials
  AUTHENTIK_POSTGRESQL__PASSWORD:
    secretKeyRef:
      key: postgresql-password
      name: authentik-postgres-credentials

service:
  # -- Service that is created to access authentik
  enabled: true
  type: ClusterIP
  port: 80
  name: http
  protocol: TCP
  labels:
    mirror.linkerd.io/exported: 'true'
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
