# -- Deployment mode lets you specify how to deploy Loki.
# There are 3 options:
# - SingleBinary: Loki is deployed as a single binary, useful for small installs typically without HA, up to a few tens of GB/day.
# - SimpleScalable: Loki is deployed as 3 targets: read, write, and backend. Useful for medium installs easier to manage than distributed, up to a about 1TB/day.
# - Distributed: Loki is deployed as individual microservices. The most complicated but most capable, useful for large installs, typically over 1TB/day.
# There are also 2 additional modes used for migrating between deployment modes:
# - SingleBinary<->SimpleScalable: Migrate from SingleBinary to SimpleScalable (or vice versa)
# - SimpleScalable<->Distributed: Migrate from SimpleScalable to Distributed (or vice versa)
# Note: SimpleScalable and Distributed REQUIRE the use of object storage.
deploymentMode: SimpleScalable

loki:
  auth_enabled: false
  analytics:
    reporting_enabled: false
  compactor:
    working_directory: /var/loki/compactor/retention
    delete_request_store: s3
    retention_enabled: true
  frontend:
    max_outstanding_per_tenant: 4096
  ingester:
    chunk_encoding: snappy
  server:
    log_level: info
    grpc_server_max_recv_msg_size: 8388608
    grpc_server_max_send_msg_size: 8388608
  limits_config:
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_cache_freshness_per_query: 10m
    split_queries_by_interval: 15m
    query_timeout: 300s
    retention_period: 30d
    ingestion_burst_size_mb: 128
    ingestion_rate_mb: 64
    max_query_parallelism: 100
    per_stream_rate_limit: 64M
    per_stream_rate_limit_burst: 128M
    shard_streams:
      enabled: true
  query_scheduler:
    max_outstanding_requests_per_tenant: 4096
  storage:
    bucketNames:
      chunks: "${BUCKET_NAME:-REPLACED_BY_ENV}"
    type: s3
    s3:
      endpoint: "${BUCKET_HOST:-REPLACED_BY_ENV}"
      accessKeyId: "${AWS_ACCESS_KEY_ID:-REPLACED_BY_ENV}"
      secretAccessKey: "${AWS_SECRET_ACCESS_KEY:-REPLACED_BY_ENV}"
      insecure: true
      s3ForcePathStyle: true
  schemaConfig:
    configs:
      - from: "2024-04-01" # quote
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  rulerConfig:
    enable_alertmanager_v2: true
    alertmanager_url: http://alertmanager-operated.prometheus.svc.cluster.local:9093
    storage:
      type: local
      local:
        directory: /rules
    rule_path: /rules/fake

gateway:
  replicas: 2
  ingress:
    enabled: false
  service:
    labels:
      prometheus.io/service-monitor: "false"

read:
  replicas: 2
  persistence:
    storageClass: ceph-block
    size: 50Gi
  extraArgs: &extraArgs
    - -config.expand-env=true
  extraEnvFrom: &extraEnvFrom
    - configMapRef:
        name: loki-bucket
    - secretRef:
        name: loki-bucket

write:
  replicas: 2
  persistence:
    storageClass: ceph-block
    size: 50Gi
  extraArgs: *extraArgs
  extraEnvFrom: *extraEnvFrom

backend:
  replicas: 2
  persistence:
    storageClass: ceph-block
    size: 50Gi
  extraArgs: *extraArgs
  extraEnvFrom: *extraEnvFrom

monitoring:
  dashboards:
    annotations:
      grafana_dashboard: "1"
      grafana_folder: Loki
  rules:
    enabled: true
    alerting: true
    disabled: {}
    #  LokiRequestErrors: true
    #  LokiRequestPanics: true
  serviceMonitor:
    enabled: true
    metricsInstance:
      enabled: false
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false
  lokiCanary:
    enabled: true

sidecar:
  image:
    repository: ghcr.io/kiwigrid/k8s-sidecar
  rules:
    searchNamespace: ALL
    folder: /rules/fake

test:
  enabled: false
