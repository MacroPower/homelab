role: Stateless-Aggregator

replicas: 2

customConfig:
  data_dir: /vector-data-dir
  api:
    enabled: true
    address: 0.0.0.0:8686
  sources:
    talos_kernel_logs:
      address: 0.0.0.0:6050
      type: socket
      mode: udp
      max_length: 102400
      decoding:
        codec: json
      host_key: __host
    talos_service_logs:
      address: 0.0.0.0:6051
      type: socket
      mode: udp
      max_length: 102400
      decoding:
        codec: json
      host_key: __host
    journal_logs:
      type: vector
      address: 0.0.0.0:6000
      version: "2"
    kubernetes_logs:
      type: vector
      address: 0.0.0.0:6010
      version: "2"
    pfsense_logs:
      type: syslog
      address: 0.0.0.0:5140
      mode: udp
    vector_metrics:
      type: internal_metrics
  transforms:
    kubernetes_logs_remap:
      type: remap
      inputs:
        - kubernetes_logs
      source: |
        # Standardize 'app' index
        .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"
        # Standardize 'component' index
        .custom_component_name = .pod_labels."app.kubernetes.io/component" || .pod_labels.component || .pod_labels."k8s-component" || "unknown"
        # Standardize 'instance' index
        .custom_instance_name = .pod_labels."app.kubernetes.io/instance" || .pod_labels.instance || .pod_labels."k8s-instance" || "unknown"
    pfsense_logs_remap:
      type: remap
      inputs:
        - pfsense_logs
      source: |
        # Taken from https://github.com/billimek/k8s-gitops/blob/master/logs/vector/aggregator.yaml
        msg = parse_csv!(string!(.message))
        # Only parse IPv4 / IPv6
        if msg[8] == "4" || msg[8] == "6" {
          .filter_interface = msg[4]
          .filter_direction = msg[7]
          .filter_action = msg[6]
          .filter_ip_version = msg[8]
          .filter_protocol = msg[16]
          .filter_source_ip = msg[18]
          .filter_destination_ip = msg[19]
          if (msg[16] == "icmp" || msg[16] == "igmp" || msg[16] == "gre") {
            .filter_data = msg[20]
          } else {
            .filter_source_port = msg[20]
            .filter_destination_port = msg[21]
            .filter_data_length = msg[22]
            if msg[8] == "4" && msg[16] == "tcp" {
              .filter_tcp_flags = msg[23]
            }
          }
        }
  sinks:
    loki_kubernetes:
      type: loki
      inputs:
        - kubernetes_logs_remap
      endpoint: &lokiGateway http://loki-gateway.loki.svc.cluster.local:80
      encoding:
        codec: raw_message
      batch:
        max_bytes: 2049000
      out_of_order_action: accept
      remove_label_fields: true
      remove_timestamp: true
      labels:
        app: >-
          {{`{{ custom_app_name }}`}}
        component: >-
          {{`{{ custom_component_name }}`}}
        container: >-
          {{`{{ .container_name }}`}}
        instance: >-
          {{`{{ custom_instance_name }}`}}
        namespace: >-
          {{`{{ .pod_namespace }}`}}
        node: >-
          {{`{{ .pod_node_name }}`}}
        pod: >-
          {{`{{ .pod_name }}`}}
        source: kubernetes-pods
        stream: >-
          {{`{{ .stream }}`}}
    loki_journal:
      type: loki
      inputs:
        - journal_logs
      endpoint: *lokiGateway
      encoding:
        codec: json
      batch:
        max_bytes: 2049000
      out_of_order_action: accept
      remove_label_fields: true
      remove_timestamp: true
      labels:
        hostname: >-
          {{`{{ host }}`}}
        source: kubernetes-journal
    talos_kernel:
      type: loki
      inputs:
        - talos_kernel_logs
      endpoint: *lokiGateway
      encoding:
        codec: json
        except_fields: ["__host"]
      batch:
        max_bytes: 1048576
      out_of_order_action: accept
      labels:
        hostname: >-
          {{`{{ __host }}`}}
        source: "talos-kernel"
    talos_service:
      type: loki
      inputs:
        - talos_service_logs
      endpoint: *lokiGateway
      encoding:
        codec: json
        except_fields: ["__host"]
      batch:
        max_bytes: 524288
      out_of_order_action: accept
      labels:
        hostname: >-
          {{`{{ __host }}`}}
        source: "talos-service"
    loki_pfsense:
      type: loki
      inputs:
        - pfsense_logs_remap
      endpoint: *lokiGateway
      encoding:
        codec: json
      batch:
        max_bytes: 2049000
      out_of_order_action: accept
      labels:
        source: pfsense
    prom_exporter:
      type: prometheus_exporter
      inputs:
        - vector_metrics
      address: 0.0.0.0:9090

resources:
  requests:
    cpu: 10m
    memory: 1Gi
  limits:
    memory: 1Gi
