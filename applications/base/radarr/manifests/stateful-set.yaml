apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
  labels:
    'app.kubernetes.io/name': radarr

spec:
  replicas: 1
  serviceName: radarr
  selector:
    matchLabels:
      'app.kubernetes.io/name': radarr

  template:
    metadata:
      labels:
        'app.kubernetes.io/name': radarr

    spec:
      securityContext:
        fsGroup: 1000

      initContainers:
        - name: init-db
          image: postgres:14
          command:
            - bash
            - /scripts/radarr_db_init.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts

        - name: init-cfg
          image: busybox:1.35.0
          command:
            - sh
            - /scripts/radarr_cfg_init.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: config-file
              mountPath: /tmp/config.xml
              subPath: config.xml
            - name: config
              mountPath: /config

      containers:
        - name: radarr
          image: linuxserver/radarr:4.2.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 20
          volumeMounts:
            - name: config
              mountPath: /config
          env:
            - name: TZ
              value: 'America/New_York'
            - name: PGID
              value: '1000'
            - name: PUID
              value: '1000'

        - name: radarr-exporter
          image: ghcr.io/onedr0p/exportarr:v1.1.0
          imagePullPolicy: IfNotPresent
          args:
            - radarr
          env:
            - name: PORT
              value: '9707'
            - name: URL
              value: 'http://localhost:7878'
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: radarr-credentials
                  key: RADARR_API_KEY
          ports:
            - name: metrics
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi

      volumes:
        - name: config-file
          secret:
            secretName: radarr-config
            optional: false
        - name: config
          emptyDir: {}
        - name: scripts
          secret:
            secretName: radarr-init-scripts
            optional: false
