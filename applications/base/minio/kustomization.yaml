apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: data

helmCharts:
  - name: minio
    repo: https://charts.min.io/
    version: 4.0.15
    releaseName: minio
    namespace: data
    valuesInline:
      # Additational pod annotations
      podAnnotations: {}

      # Additional pod labels
      podLabels: {}

      existingSecret: 'minio-credentials'

      # Number of drives attached to a node
      drivesPerNode: 1
      # Number of MinIO containers running
      replicas: 4
      # Number of expanded MinIO clusters
      pools: 1

      persistence:
        enabled: true
        storageClass: ''
        accessMode: ReadWriteOnce
        size: 100Gi

      resources:
        requests:
          memory: 256Mi

      ## List of users to be created after minio install
      ##
      users:
        ## Username, password and policy to be assigned to the user
        ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]
        ## Add new policies as explained here https://min.io/docs/minio/kubernetes/upstream/administration/identity-access-management.html#access-management
        ## NOTE: this will fail if LDAP is enabled in your MinIO deployment
        ## make sure to disable this if you are using LDAP.
        - accessKey: timescale-pgbackrest
          existingSecret: minio-timescale-pgbackrest-credentials
          existingSecretKey: password
          policy: readwrite

      ## List of buckets to be created after minio install
      ##
      buckets:
        #   # Name of the bucket
        # - name: bucket1
        #   # Policy to be set on the
        #   # bucket [none|download|upload|public]
        #   policy: none
        #   # Purge if bucket exists already
        #   purge: false
        #   # set versioning for
        #   # bucket [true|false]
        #   versioning: false
        #   # set objectlocking for
        #   # bucket [true|false] NOTE: versioning is enabled by default if you use locking
        #   objectlocking: false
        # - name: bucket2
        #   policy: none
        #   purge: false
        #   versioning: true
        #   # set objectlocking for
        #   # bucket [true|false] NOTE: versioning is enabled by default if you use locking
        #   objectlocking: false
        - name: timescale-pgbackrest
          policy: none
          purge: false
          versioning: false
          objectlocking: false

      metrics:
        serviceMonitor:
          enabled: true
          # scrape each node/pod individually for additional metrics
          includeNode: true
          public: true
          additionalLabels: {}
          # for node metrics
          relabelConfigs: {}
          # for cluster metrics
          relabelConfigsCluster:
            {}
            # metricRelabelings:
            #   - regex: (server|pod)
            #     action: labeldrop
          # namespace: monitoring
          # interval: 30s
          # scrapeTimeout: 10s

resources:
  - secrets.yaml
