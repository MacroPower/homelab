apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudflare-credentials
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: default

  target:
    name: cloudflare-credentials

  data:
    - secretKey: CLOUDFLARE_API_TOKEN
      remoteRef:
        key: CLOUDFLARE_API_TOKEN

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: jacobcolvin1@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - dns01:
          cloudflare:
            email: jacobcolvin1@gmail.com
            apiTokenSecretRef:
              name: cloudflare-credentials
              key: CLOUDFLARE_API_TOKEN

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: restic-cert
spec:
  secretName: restic-cert
  duration: 2160h0m0s # 90d
  renewBefore: 720h0m0s # 30d
  issuerRef:
    name: letsencrypt-prod
  dnsNames:
    - robot-restic.macro.network
    - robot-restic-webdav.macro.network

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: rclone-credentials
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: default

  target:
    name: rclone-credentials
    template:
      type: kubernetes.io/basic-auth
      engineVersion: v2
      data:
        username: '{{ .RCLONE_RESTIC_USER }}'
        password: '{{ .RCLONE_RESTIC_PASS }}'

  data:
    - secretKey: RCLONE_RESTIC_USER
      remoteRef:
        key: RCLONE_RESTIC_USER

    - secretKey: RCLONE_RESTIC_PASS
      remoteRef:
        key: RCLONE_RESTIC_PASS

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: restic-auth
spec:
  basicAuth:
    secret: rclone-credentials
    removeHeader: true

---
apiVersion: v1
kind: Service
metadata:
  name: rclone-restic
spec:
  selector:
    app.kubernetes.io/name: rclone
    app.kubernetes.io/instance: rclone
  ports:
    - name: restic
      port: 50001
      targetPort: restic
      protocol: TCP
    - name: restic-webdav
      port: 50002
      targetPort: restic-webdav
      protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: restic-ingress
  annotations:
    'external-dns.alpha.kubernetes.io/hostname': 'robot-restic.macro.network'
    'external-dns.alpha.kubernetes.io/cloudflare-proxied': 'false'
    'traefik.ingress.kubernetes.io/router.tls.options': 'kube-system-no-client-auth@kubernetescrd'
    'traefik.ingress.kubernetes.io/router.entrypoints': 'websecure'
    'traefik.ingress.kubernetes.io/router.middlewares': 'backup-restic-auth@kubernetescrd'
    'cert-manager.io/issuer': 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - robot-restic.macro.network
      secretName: restic-cert
  rules:
    - host: robot-restic.macro.network
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rclone-restic
                port:
                  number: 50001

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: restic-webdav-ingress
  annotations:
    'external-dns.alpha.kubernetes.io/hostname': 'robot-restic-webdav.macro.network'
    'external-dns.alpha.kubernetes.io/cloudflare-proxied': 'false'
    'traefik.ingress.kubernetes.io/router.tls.options': 'kube-system-no-client-auth@kubernetescrd'
    'traefik.ingress.kubernetes.io/router.entrypoints': 'websecure'
    'traefik.ingress.kubernetes.io/router.middlewares': 'backup-restic-auth@kubernetescrd'
    'cert-manager.io/issuer': 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - robot-restic-webdav.macro.network
      secretName: restic-cert
  rules:
    - host: robot-restic-webdav.macro.network
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rclone-restic
                port:
                  number: 50002
