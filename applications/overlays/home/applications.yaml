---
apiVersion: v1
kind: Secret
metadata:
  name: home
  namespace: argocd
  labels:
    kubernetes.io/environment: home
    argocd.argoproj.io/secret-type: cluster
stringData:
  name: home
  server: "https://kubernetes.default.svc"
  config: |
    {
      "tlsClientConfig": {
        "insecure": true
      }
    }

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: applications
  namespace: argocd
  annotations:
    argocd.argoproj.io/compare-options: ServerSideDiff=true,IncludeMutationWebhook=true
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          ## https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Git/
          - matrix:
              generators:
                - git:
                    repoURL: &gitRepo https://github.com/MacroPower/homelab
                    revision: &gitRevision main
                    files:
                      - path: applications/base-new/*/values.yaml
                    pathParamPrefix: app
                - git:
                    repoURL: *gitRepo
                    revision: *gitRevision
                    files:
                      - path: applications/overlays/*/{{.app.path.basename}}/config.yaml
                    pathParamPrefix: env
          ## https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Cluster/
          - clusters:
              selector:
                matchLabels:
                  argocd.argoproj.io/secret-type: cluster
                  kubernetes.io/environment: "{{index .env.path.segments 2}}"
  template:
    metadata:
      name: "{{.app.path.basename}}-{{index .env.path.segments 2}}"
      annotations:
        argocd.argoproj.io/compare-options: ServerSideDiff=true,IncludeMutationWebhook=true
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: default
      source:
        repoURL: *gitRepo
        targetRevision: *gitRevision
        path: "{{.app.path.path}}"
        helm:
          valueFiles: "{{.valueFiles}}"
      destination:
        server: "{{.server}}"
        namespace: "{{.app.path.basename}}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - ServerSideApply=true
          - CreateNamespace=true
