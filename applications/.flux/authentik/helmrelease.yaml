## This file was automatically generated using Jsonnet located at:
## applications/base/authentik/application.libsonnet
##
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  chart:
    spec:
      chart: authentik
      version: 2023.6.3
      sourceRef:
        kind: HelmRepository
        name: https://charts.goauthentik.io/
  values:
    authentik:
      log_level: info
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
    blueprints: []
    env: {}
    envFrom: []
    envValueFrom:
      AUTHENTIK_BOOTSTRAP_EMAIL:
        secretKeyRef:
          key: AUTHENTIK_BOOTSTRAP_EMAIL
          name: authentik-credentials
      AUTHENTIK_BOOTSTRAP_PASSWORD:
        secretKeyRef:
          key: AUTHENTIK_BOOTSTRAP_PASSWORD
          name: authentik-credentials
      AUTHENTIK_BOOTSTRAP_TOKEN:
        secretKeyRef:
          key: AUTHENTIK_BOOTSTRAP_TOKEN
          name: authentik-credentials
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          key: postgresql-password
          name: authentik-postgres-credentials
      AUTHENTIK_REDIS__PASSWORD:
        secretKeyRef:
          key: AUTHENTIK_REDIS_PASS
          name: authentik-credentials
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          key: AUTHENTIK_SECRET_KEY
          name: authentik-credentials
    geoip:
      accountId: ""
      editionIds: GeoLite2-City
      enabled: false
      image: maxmindinc/geoipupdate:v4.8
      licenseKey: ""
      updateInterval: 8
    postgresql:
      enabled: true
      existingSecret: authentik-postgres-credentials
      persistence:
        accessModes:
        - ReadWriteOnce
        enabled: true
    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true
        interval: 30s
        scrapeTimeout: 3s
    redis:
      architecture: standalone
      auth:
        enabled: true
        existingSecret: authentik-credentials
        existingSecretPasswordKey: AUTHENTIK_REDIS_PASS
      enabled: true
      master:
        persistence:
          accessModes:
          - ReadWriteOnce
          enabled: true
    service:
      enabled: true
      name: http
      port: 80
      protocol: TCP
      type: ClusterIP
