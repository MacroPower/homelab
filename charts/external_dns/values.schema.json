{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "affinity": {
      "description": "Affinity settings for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/). If an explicit label selector is not provided for pod affinity or pod anti-affinity one will be created from the pod selector labels.",
      "required": [],
      "type": "object"
    },
    "annotationFilter": {
      "description": "Filter resources queried for endpoints by annotation selector.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "automountServiceAccountToken": {
      "description": "Set this to `false` to [opt out of API credential automounting](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting) for the `Pod`.",
      "required": [],
      "type": "boolean"
    },
    "commonLabels": {
      "description": "Labels to add to all chart resources.",
      "required": [],
      "type": "object"
    },
    "deploymentAnnotations": {
      "description": "Annotations to add to the `Deployment`.",
      "required": [],
      "type": "object"
    },
    "deploymentStrategy": {
      "additionalProperties": true,
      "description": "[Deployment Strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).",
      "properties": {
        "type": {
          "default": "Recreate",
          "enum": [
            "Recreate",
            "RollingUpdate"
          ],
          "required": [],
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "dnsConfig": {
      "description": "[DNS config](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config) for the pod, if not set the default will be used.",
      "required": [],
      "type": [
        "object",
        "null"
      ]
    },
    "dnsPolicy": {
      "description": "[DNS policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) for the pod, if not set the default will be used.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "domainFilters": {
      "description": "Limit possible target zones by domain suffixes.",
      "required": [],
      "type": "array"
    },
    "enabled": {
      "description": "No effect - reserved for use in sub-charting",
      "required": [],
      "type": [
        "boolean",
        "null"
      ]
    },
    "env": {
      "description": "[Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `external-dns` container.",
      "required": [],
      "type": "array"
    },
    "excludeDomains": {
      "description": "Intentionally exclude domains from being managed.",
      "required": [],
      "type": "array"
    },
    "extraArgs": {
      "description": "Extra arguments to provide to _ExternalDNS_. An array or map can be used, with maps allowing for value overrides; maps also support slice values to use the same arg multiple times.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "type": [
        "array",
        "null",
        "object"
      ]
    },
    "extraContainers": {
      "description": "Extra containers to add to the `Deployment`.",
      "required": [],
      "type": "array"
    },
    "extraVolumeMounts": {
      "description": "Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `external-dns` container.",
      "required": [],
      "type": "array"
    },
    "extraVolumes": {
      "description": "Extra [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) for the `Pod`.",
      "required": [],
      "type": "array"
    },
    "fullnameOverride": {
      "description": "Override the full name of the chart.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "gatewayNamespace": {
      "description": "_Gateway API_ gateway namespace to watch.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "global": {
      "properties": {
        "imagePullSecrets": {
          "description": "Global image pull secrets.",
          "items": {
            "required": [],
            "type": "object"
          },
          "required": [],
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "description": "Image pull policy for the `external-dns` container.",
          "enum": [
            "IfNotPresent",
            "Always"
          ],
          "required": [],
          "type": "string"
        },
        "repository": {
          "description": "Image repository for the `external-dns` container.",
          "required": [],
          "type": "string"
        },
        "tag": {
          "description": "Image tag for the `external-dns` container, this will default to `.Chart.AppVersion` if not set.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "Image pull secrets.",
      "items": {
        "required": [],
        "type": "object"
      },
      "required": [],
      "type": "array"
    },
    "initContainers": {
      "description": "[Init containers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/) to add to the `Pod` definition.",
      "required": [],
      "type": "array"
    },
    "interval": {
      "description": "Interval for DNS updates.",
      "required": [],
      "type": "string"
    },
    "labelFilter": {
      "description": "Filter resources queried for endpoints by label selector.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "livenessProbe": {
      "description": "[Liveness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.",
      "properties": {
        "failureThreshold": {
          "required": [],
          "type": "integer"
        },
        "httpGet": {
          "properties": {
            "path": {
              "required": [],
              "type": "string"
            },
            "port": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "initialDelaySeconds": {
          "required": [],
          "type": "integer"
        },
        "periodSeconds": {
          "required": [],
          "type": "integer"
        },
        "successThreshold": {
          "required": [],
          "type": "integer"
        },
        "timeoutSeconds": {
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "logFormat": {
      "default": "text",
      "description": "Log format.",
      "enum": [
        "text",
        "json"
      ],
      "required": [],
      "type": "string"
    },
    "logLevel": {
      "default": "info",
      "description": "Log level.",
      "enum": [
        "panic",
        "debug",
        "info",
        "warning",
        "error",
        "fatal"
      ],
      "required": [],
      "type": "string"
    },
    "managedRecordTypes": {
      "description": "Record types to manage (default: A, AAAA, CNAME)",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "type": [
        "array",
        "null"
      ]
    },
    "nameOverride": {
      "description": "Override the name of the chart.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "namespaced": {
      "description": "if `true`, _ExternalDNS_ will run in a namespaced scope (`Role`` and `Rolebinding`` will be namespaced too).",
      "required": [],
      "type": "boolean"
    },
    "nodeSelector": {
      "description": "Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).",
      "required": [],
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to add to the `Pod`.",
      "required": [],
      "type": "object"
    },
    "podLabels": {
      "description": "Labels to add to the `Pod`.",
      "required": [],
      "type": "object"
    },
    "podSecurityContext": {
      "description": "[Pod security context](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core), this supports full customisation.",
      "properties": {
        "fsGroup": {
          "required": [],
          "type": "integer"
        },
        "runAsNonRoot": {
          "required": [],
          "type": "boolean"
        },
        "seccompProfile": {
          "properties": {
            "type": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "type": "object"
    },
    "policy": {
      "default": "upsert-only",
      "description": "How DNS records are synchronized between sources and providers; available values are `create-only`, `sync`, \u0026 `upsert-only`.",
      "enum": [
        "create-only",
        "sync",
        "upsert-only"
      ],
      "required": [],
      "type": "string"
    },
    "priorityClassName": {
      "description": "Priority class name for the `Pod`.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "provider": {
      "properties": {
        "name": {
          "description": "_ExternalDNS_ provider name; for the available providers and how to configure them see [README](https://github.com/kubernetes-sigs/external-dns/blob/master/charts/external-dns/README.md#providers).",
          "required": [],
          "type": "string"
        },
        "webhook": {
          "properties": {
            "args": {
              "description": "Extra arguments to provide for the `webhook` container.",
              "required": [],
              "type": "array"
            },
            "env": {
              "description": "[Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `webhook` container.",
              "required": [],
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `webhook` container.",
              "required": [],
              "type": "array"
            },
            "image": {
              "properties": {
                "pullPolicy": {
                  "description": "Image pull policy for the `webhook` container.",
                  "required": [],
                  "type": "string"
                },
                "repository": {
                  "description": "Image repository for the `webhook` container.",
                  "required": [],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "description": "Image tag for the `webhook` container.",
                  "required": [],
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "type": "object"
            },
            "limits": {
              "properties": {
                "cpu": {
                  "required": [],
                  "type": "string"
                },
                "memory": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "livenessProbe": {
              "description": "[Liveness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.",
              "properties": {
                "failureThreshold": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "httpGet": {
                  "properties": {
                    "path": {
                      "required": [],
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "port": {
                      "default": "string",
                      "required": [],
                      "type": [
                        "integer",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "initialDelaySeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "periodSeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "successThreshold": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "timeoutSeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                }
              },
              "required": [],
              "type": "object"
            },
            "readinessProbe": {
              "description": "[Readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `webhook` container.",
              "properties": {
                "failureThreshold": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "httpGet": {
                  "properties": {
                    "path": {
                      "required": [],
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "port": {
                      "default": "string",
                      "required": [],
                      "type": [
                        "integer",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "initialDelaySeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "periodSeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "successThreshold": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "timeoutSeconds": {
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                }
              },
              "required": [],
              "type": "object"
            },
            "requests": {
              "properties": {
                "cpu": {
                  "required": [],
                  "type": "string"
                },
                "memory": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "resources": {
              "description": "[Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the `webhook` container.",
              "required": [],
              "type": "object"
            },
            "securityContext": {
              "description": "[Pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) for the `webhook` container.",
              "required": [],
              "type": "object"
            },
            "service": {
              "properties": {
                "port": {
                  "description": "Webhook exposed HTTP port for the service.",
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "type": "object"
            },
            "serviceMonitor": {
              "description": "Optional [Service Monitor](https://prometheus-operator.dev/docs/operator/design/#servicemonitor) configuration for the `webhook` container.",
              "properties": {
                "bearerTokenFile": {
                  "required": [],
                  "type": "null"
                },
                "interval": {
                  "required": [],
                  "type": "null"
                },
                "metricRelabelings": {
                  "required": [],
                  "type": "array"
                },
                "relabelings": {
                  "required": [],
                  "type": "array"
                },
                "scheme": {
                  "required": [],
                  "type": "null"
                },
                "scrapeTimeout": {
                  "required": [],
                  "type": "null"
                },
                "tlsConfig": {
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "type": [
        "object",
        "string"
      ]
    },
    "rbac": {
      "additionalProperties": true,
      "properties": {
        "additionalPermissions": {
          "description": "Additional rules to add to the `ClusterRole`.",
          "required": [],
          "type": "array"
        },
        "create": {
          "description": "If `true`, create a `ClusterRole` \u0026 `ClusterRoleBinding` with access to the Kubernetes API.",
          "required": [],
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "readinessProbe": {
      "description": "[Readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.",
      "properties": {
        "failureThreshold": {
          "required": [],
          "type": "integer"
        },
        "httpGet": {
          "properties": {
            "path": {
              "required": [],
              "type": "string"
            },
            "port": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "initialDelaySeconds": {
          "required": [],
          "type": "integer"
        },
        "periodSeconds": {
          "required": [],
          "type": "integer"
        },
        "successThreshold": {
          "required": [],
          "type": "integer"
        },
        "timeoutSeconds": {
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "registry": {
      "default": "txt",
      "description": "Specify the registry for storing ownership and labels. Valid values are `txt`, `aws-sd`, `dynamodb` \u0026 `noop`.",
      "enum": [
        "txt",
        "aws-sd",
        "dynamodb",
        "noop"
      ],
      "required": [],
      "type": "string"
    },
    "resources": {
      "description": "[Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the `external-dns` container.",
      "properties": {
        "limits": {
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "requests": {
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "type": "object"
    },
    "revisionHistoryLimit": {
      "description": "Specify the number of old `ReplicaSets` to retain to allow rollback of the `Deployment``.",
      "minimum": 0,
      "required": [],
      "type": [
        "integer",
        "null"
      ]
    },
    "secretConfiguration": {
      "properties": {
        "data": {
          "description": "`Secret` data.",
          "required": [],
          "type": "object"
        },
        "enabled": {
          "description": "If `true`, create a `Secret` to store sensitive provider configuration (**DEPRECATED**).",
          "required": [],
          "type": "boolean"
        },
        "mountPath": {
          "description": "Mount path for the `Secret`, this can be templated.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "subPath": {
          "description": "Sub-path for mounting the `Secret`, this can be templated.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "securityContext": {
      "description": "[Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) for the `external-dns` container.",
      "properties": {
        "allowPrivilegeEscalation": {
          "required": [],
          "type": "boolean"
        },
        "capabilities": {
          "properties": {
            "drop": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "type": "array"
            }
          },
          "required": [],
          "type": "object"
        },
        "privileged": {
          "required": [],
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "required": [],
          "type": "boolean"
        },
        "runAsGroup": {
          "required": [],
          "type": "integer"
        },
        "runAsNonRoot": {
          "required": [],
          "type": "boolean"
        },
        "runAsUser": {
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "properties": {
        "annotations": {
          "description": "Service annotations.",
          "required": [],
          "type": "object"
        },
        "ipFamilies": {
          "description": "Service IP families (e.g. IPv4 and/or IPv6).",
          "items": {
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "required": [],
            "type": "string"
          },
          "maxItems": 2,
          "minItems": 0,
          "required": [],
          "type": [
            "array",
            "null"
          ]
        },
        "ipFamilyPolicy": {
          "description": "Service IP family policy.",
          "enum": [
            "SingleStack",
            "PreferDualStack",
            "RequireDualStack"
          ],
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "default": 7979,
          "description": "Service HTTP port.",
          "minimum": 0,
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account. Templates are allowed in both the key and the value. Example: `example.com/annotation/{{ .Values.nameOverride }}: {{ .Values.nameOverride }}`",
          "required": [],
          "type": "object"
        },
        "automountServiceAccountToken": {
          "description": "Set this to `false` to [opt out of API credential automounting](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting) for the `ServiceAccount`.",
          "required": [],
          "type": "boolean"
        },
        "create": {
          "description": "If `true`, create a new `ServiceAccount`.",
          "required": [],
          "type": "boolean"
        },
        "labels": {
          "description": "Labels to add to the service account.",
          "required": [],
          "type": "object"
        },
        "name": {
          "description": "If this is set and `serviceAccount.create` is `true` this will be used for the created `ServiceAccount` name, if set and `serviceAccount.create` is `false` then this will define an existing `ServiceAccount` to use.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "serviceMonitor": {
      "properties": {
        "additionalLabels": {
          "description": "Additional labels for the `ServiceMonitor`.",
          "required": [],
          "type": "object"
        },
        "annotations": {
          "description": "Annotations to add to the `ServiceMonitor`.",
          "required": [],
          "type": "object"
        },
        "bearerTokenFile": {
          "description": "Provide a bearer token file for the `ServiceMonitor`.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "enabled": {
          "description": "If `true`, create a `ServiceMonitor` resource to support the _Prometheus Operator_.",
          "required": [],
          "type": "boolean"
        },
        "interval": {
          "description": "If set override the _Prometheus_ default interval.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "metricRelabelings": {
          "description": "[Metric relabel configs](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs) to apply to samples before ingestion.",
          "required": [],
          "type": "array"
        },
        "namespace": {
          "description": "If set create the `ServiceMonitor` in an alternate namespace.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "relabelings": {
          "description": "[Relabel configs](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config) to apply to samples before ingestion.",
          "required": [],
          "type": "array"
        },
        "scheme": {
          "description": "If set overrides the _Prometheus_ default scheme.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "scrapeTimeout": {
          "description": "If set override the _Prometheus_ default scrape timeout.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "targetLabels": {
          "description": "Provide target labels for the `ServiceMonitor`.",
          "required": [],
          "type": "array"
        },
        "tlsConfig": {
          "description": "Configure the `ServiceMonitor` [TLS config](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#tlsconfig).",
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "type": "object"
    },
    "shareProcessNamespace": {
      "description": "If `true`, the `Pod` will have [process namespace sharing](https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/) enabled.",
      "required": [],
      "type": "boolean"
    },
    "sources": {
      "description": "_Kubernetes_ resources to monitor for DNS entries.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "type": "array"
    },
    "terminationGracePeriodSeconds": {
      "description": "Termination grace period for the `Pod` in seconds.",
      "required": [],
      "type": [
        "integer",
        "null"
      ]
    },
    "tolerations": {
      "description": "Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).",
      "required": [],
      "type": "array"
    },
    "topologySpreadConstraints": {
      "description": "Topology spread constraints for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/). If an explicit label selector is not provided one will be created from the pod selector labels.",
      "required": [],
      "type": "array"
    },
    "triggerLoopOnEvent": {
      "description": "If `true`, triggers run loop on create/update/delete events in addition of regular interval.",
      "required": [],
      "type": "boolean"
    },
    "txtOwnerId": {
      "description": "Specify an identifier for this instance of _ExternalDNS_ when using a registry other than `noop`.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "txtPrefix": {
      "description": "Specify a prefix for the domain names of TXT records created for the `txt` registry. Mutually exclusive with `txtSuffix`.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    },
    "txtSuffix": {
      "description": "Specify a suffix for the domain names of TXT records created for the `txt` registry. Mutually exclusive with `txtPrefix`.",
      "required": [],
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [],
  "type": "object"
}