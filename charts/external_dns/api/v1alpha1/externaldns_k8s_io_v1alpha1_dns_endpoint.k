"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema DNSEndpoint:
    r"""
    externaldns k8s io v1alpha1 DNS endpoint

    Attributes
    ----------
    apiVersion : str, default is "externaldns.k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNSEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ExternaldnsK8sIoV1alpha1DNSEndpointSpec, default is Undefined, optional
        spec
    status : ExternaldnsK8sIoV1alpha1DNSEndpointStatus, default is Undefined, optional
        status
    """
    apiVersion: "externaldns.k8s.io/v1alpha1" = "externaldns.k8s.io/v1alpha1"

    kind: "DNSEndpoint" = "DNSEndpoint"

    metadata?: v1.ObjectMeta
    spec?: ExternaldnsK8sIoV1alpha1DNSEndpointSpec
    status?: ExternaldnsK8sIoV1alpha1DNSEndpointStatus

schema ExternaldnsK8sIoV1alpha1DNSEndpointSpec:
    r"""
    DNSEndpointSpec defines the desired state of DNSEndpoint

    Attributes
    ----------
    endpoints : [ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0], default is Undefined, optional
        endpoints
    """
    endpoints?: [ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0]

schema ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0:
    r"""
    Endpoint is a high-level way of a connection between a service and an IP

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        The hostname of the DNS record
    labels : {str:str}, default is Undefined, optional
        Labels stores labels defined for the Endpoint
    providerSpecific : [ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0ProviderSpecificItems0], default is Undefined, optional
        ProviderSpecific stores provider specific config
    recordTTL : int, default is Undefined, optional
        TTL for the record
    recordType : str, default is Undefined, optional
        RecordType type of record, e.g. CNAME, A, AAAA, SRV, TXT etc
    setIdentifier : str, default is Undefined, optional
        Identifier to distinguish multiple records with the same name and type (e.g. Route53 records with routing policies other than 'simple')
    targets : [str], default is Undefined, optional
        The targets the DNS record points to
    """
    dnsName?: str
    labels?: {str:str}
    providerSpecific?: [ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0ProviderSpecificItems0]
    recordTTL?: int
    recordType?: str
    setIdentifier?: str
    targets?: [str]

schema ExternaldnsK8sIoV1alpha1DNSEndpointSpecEndpointsItems0ProviderSpecificItems0:
    r"""
    ProviderSpecificProperty holds the name and value of a configuration which is specific to individual DNS providers

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """
    name?: str
    value?: str

schema ExternaldnsK8sIoV1alpha1DNSEndpointStatus:
    r"""
    DNSEndpointStatus defines the observed state of DNSEndpoint

    Attributes
    ----------
    observedGeneration : int, default is Undefined, optional
        The generation observed by the external-dns controller.
    """
    observedGeneration?: int

