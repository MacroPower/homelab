"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema ScheduledBackup:
    r"""
    ScheduledBackup is the Schema for the scheduledbackups API

    Attributes
    ----------
    apiVersion : str, default is "postgresql.cnpg.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ScheduledBackup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : PostgresqlCnpgIoV1ScheduledBackupSpec, default is Undefined, required
        spec
    status : PostgresqlCnpgIoV1ScheduledBackupStatus, default is Undefined, optional
        status
    """
    apiVersion: "postgresql.cnpg.io/v1" = "postgresql.cnpg.io/v1"

    kind: "ScheduledBackup" = "ScheduledBackup"

    metadata: v1.ObjectMeta

    spec: PostgresqlCnpgIoV1ScheduledBackupSpec

    status?: PostgresqlCnpgIoV1ScheduledBackupStatus

schema PostgresqlCnpgIoV1ScheduledBackupSpec:
    r"""
    Specification of the desired behavior of the ScheduledBackup.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    backupOwnerReference : str, default is "none", optional
        Indicates which ownerReference should be put inside the created backup resources.<br />
        - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
        - self: sets the Scheduled backup object as owner of the backup<br />
        - cluster: set the cluster as owner of the backup<br />
    cluster : PostgresqlCnpgIoV1ScheduledBackupSpecCluster, default is Undefined, required
        cluster
    immediate : bool, default is Undefined, optional
        If the first backup has to be immediately start after creation or not
    method : str, default is "barmanObjectStore", optional
        The backup method to be used, possible options are `barmanObjectStore`,
        `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
    online : bool, default is Undefined, optional
        Whether the default type of backup with volume snapshots is
        online/hot (`true`, default) or offline/cold (`false`)
        Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
    onlineConfiguration : PostgresqlCnpgIoV1ScheduledBackupSpecOnlineConfiguration, default is Undefined, optional
        online configuration
    pluginConfiguration : PostgresqlCnpgIoV1ScheduledBackupSpecPluginConfiguration, default is Undefined, optional
        plugin configuration
    schedule : str, default is Undefined, required
        The schedule does not follow the same format used in Kubernetes CronJobs
        as it includes an additional seconds specifier,
        see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
    suspend : bool, default is Undefined, optional
        If this backup is suspended or not
    target : str, default is Undefined, optional
        The policy to decide which instance should perform this backup. If empty,
        it defaults to `cluster.spec.backup.target`.
        Available options are empty string, `primary` and `prefer-standby`.
        `primary` to have backups run always on primary instances,
        `prefer-standby` to have backups run preferably on the most updated
        standby, if available.
    """
    backupOwnerReference?: "none" | "self" | "cluster" = "none"
    cluster: PostgresqlCnpgIoV1ScheduledBackupSpecCluster

    immediate?: bool
    method?: "barmanObjectStore" | "volumeSnapshot" | "plugin" = "barmanObjectStore"
    online?: bool
    onlineConfiguration?: PostgresqlCnpgIoV1ScheduledBackupSpecOnlineConfiguration
    pluginConfiguration?: PostgresqlCnpgIoV1ScheduledBackupSpecPluginConfiguration
    schedule: str

    suspend?: bool
    target?: "primary" | "prefer-standby"

schema PostgresqlCnpgIoV1ScheduledBackupSpecCluster:
    r"""
    The cluster to backup

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """
    name: str

schema PostgresqlCnpgIoV1ScheduledBackupSpecOnlineConfiguration:
    r"""
    Configuration parameters to control the online/hot backup with volume snapshots
    Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza

    Attributes
    ----------
    immediateCheckpoint : bool, default is Undefined, optional
        Control whether the I/O workload for the backup initial checkpoint will
        be limited, according to the `checkpoint_completion_target` setting on
        the PostgreSQL server. If set to true, an immediate checkpoint will be
        used, meaning PostgreSQL will complete the checkpoint as soon as
        possible. `false` by default.
    waitForArchive : bool, default is True, optional
        If false, the function will return immediately after the backup is completed,
        without waiting for WAL to be archived.
        This behavior is only useful with backup software that independently monitors WAL archiving.
        Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
        By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
        enabled.
        On a standby, this means that it will wait only when archive_mode = always.
        If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
        an immediate segment switch.
    """
    immediateCheckpoint?: bool
    waitForArchive?: bool = True

schema PostgresqlCnpgIoV1ScheduledBackupSpecPluginConfiguration:
    r"""
    Configuration parameters passed to the plugin managing this backup

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the plugin managing this backup
    parameters : {str:str}, default is Undefined, optional
        Parameters are the configuration parameters passed to the backup
        plugin for this backup
    """
    name: str

    parameters?: {str:str}

schema PostgresqlCnpgIoV1ScheduledBackupStatus:
    r"""
    Most recently observed status of the ScheduledBackup. This data may not be up
    to date. Populated by the system. Read-only.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    lastCheckTime : str, default is Undefined, optional
        The latest time the schedule
    lastScheduleTime : str, default is Undefined, optional
        Information when was the last time that backup was successfully scheduled.
    nextScheduleTime : str, default is Undefined, optional
        Next time we will run a backup
    """
    lastCheckTime?: str
    lastScheduleTime?: str
    nextScheduleTime?: str

