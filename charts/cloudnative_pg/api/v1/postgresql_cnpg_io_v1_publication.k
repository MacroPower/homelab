"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema Publication:
    r"""
    Publication is the Schema for the publications API

    Attributes
    ----------
    apiVersion : str, default is "postgresql.cnpg.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Publication", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : PostgresqlCnpgIoV1PublicationSpec, default is Undefined, required
        spec
    status : PostgresqlCnpgIoV1PublicationStatus, default is Undefined, optional
        status
    """
    apiVersion: "postgresql.cnpg.io/v1" = "postgresql.cnpg.io/v1"

    kind: "Publication" = "Publication"

    metadata: v1.ObjectMeta

    spec: PostgresqlCnpgIoV1PublicationSpec

    status?: PostgresqlCnpgIoV1PublicationStatus

schema PostgresqlCnpgIoV1PublicationSpec:
    r"""
    PublicationSpec defines the desired state of Publication

    Attributes
    ----------
    cluster : PostgresqlCnpgIoV1PublicationSpecCluster, default is Undefined, required
        cluster
    dbname : str, default is Undefined, required
        The name of the database where the publication will be installed in
        the "publisher" cluster
    name : str, default is Undefined, required
        The name of the publication inside PostgreSQL
    parameters : {str:str}, default is Undefined, optional
        Publication parameters part of the `WITH` clause as expected by
        PostgreSQL `CREATE PUBLICATION` command
    publicationReclaimPolicy : str, default is "retain", optional
        The policy for end-of-life maintenance of this publication
    target : PostgresqlCnpgIoV1PublicationSpecTarget, default is Undefined, required
        target
    """
    cluster: PostgresqlCnpgIoV1PublicationSpecCluster

    dbname: str

    name: str

    parameters?: {str:str}
    publicationReclaimPolicy?: "delete" | "retain" = "retain"
    target: PostgresqlCnpgIoV1PublicationSpecTarget

schema PostgresqlCnpgIoV1PublicationSpecCluster:
    r"""
    The name of the PostgreSQL cluster that identifies the "publisher"

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PublicationSpecTarget:
    r"""
    Target of the publication as expected by PostgreSQL `CREATE PUBLICATION` command

    Attributes
    ----------
    allTables : bool, default is Undefined, optional
        Marks the publication as one that replicates changes for all tables
        in the database, including tables created in the future.
        Corresponding to `FOR ALL TABLES` in PostgreSQL.
    objects : [PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0], default is Undefined, optional
        Just the following schema objects
    """
    allTables?: bool
    objects?: [PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0]

    check:
        len(objects) <= 100000 if objects

schema PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0:
    r"""
    PublicationTargetObject is an object to publish

    Attributes
    ----------
    table : PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0Table, default is Undefined, optional
        table
    tablesInSchema : str, default is Undefined, optional
        Marks the publication as one that replicates changes for all tables
        in the specified list of schemas, including tables created in the
        future. Corresponding to `FOR TABLES IN SCHEMA` in PostgreSQL.
    """
    table?: PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0Table
    tablesInSchema?: str

schema PostgresqlCnpgIoV1PublicationSpecTargetObjectsItems0Table:
    r"""
    Specifies a list of tables to add to the publication. Corresponding
    to `FOR TABLE` in PostgreSQL.

    Attributes
    ----------
    columns : [str], default is Undefined, optional
        The columns to publish
    name : str, default is Undefined, required
        The table name
    only : bool, default is Undefined, optional
        Whether to limit to the table only or include all its descendants
    $schema : str, default is Undefined, optional
        The schema name
    """
    columns?: [str]
    name: str

    only?: bool
    $schema?: str

schema PostgresqlCnpgIoV1PublicationStatus:
    r"""
    PublicationStatus defines the observed state of Publication

    Attributes
    ----------
    applied : bool, default is Undefined, optional
        Applied is true if the publication was reconciled correctly
    message : str, default is Undefined, optional
        Message is the reconciliation output message
    observedGeneration : int, default is Undefined, optional
        A sequence number representing the latest
        desired state that was synchronized
    """
    applied?: bool
    message?: str
    observedGeneration?: int

