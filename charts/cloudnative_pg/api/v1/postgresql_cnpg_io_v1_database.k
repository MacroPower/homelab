"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema Database:
    r"""
    Database is the Schema for the databases API

    Attributes
    ----------
    apiVersion : str, default is "postgresql.cnpg.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Database", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : PostgresqlCnpgIoV1DatabaseSpec, default is Undefined, required
        spec
    status : PostgresqlCnpgIoV1DatabaseStatus, default is Undefined, optional
        status
    """
    apiVersion: "postgresql.cnpg.io/v1" = "postgresql.cnpg.io/v1"

    kind: "Database" = "Database"

    metadata: v1.ObjectMeta

    spec: PostgresqlCnpgIoV1DatabaseSpec

    status?: PostgresqlCnpgIoV1DatabaseStatus

schema PostgresqlCnpgIoV1DatabaseSpec:
    r"""
    Specification of the desired Database.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    allowConnections : bool, default is Undefined, optional
        Maps to the `ALLOW_CONNECTIONS` parameter of `CREATE DATABASE` and
        `ALTER DATABASE`. If false then no one can connect to this database.
    builtinLocale : str, default is Undefined, optional
        Maps to the `BUILTIN_LOCALE` parameter of `CREATE DATABASE`. This
        setting cannot be changed. Specifies the locale name when the
        builtin provider is used. This option requires `localeProvider` to
        be set to `builtin`. Available from PostgreSQL 17.
    cluster : PostgresqlCnpgIoV1DatabaseSpecCluster, default is Undefined, required
        cluster
    collationVersion : str, default is Undefined, optional
        Maps to the `COLLATION_VERSION` parameter of `CREATE DATABASE`. This
        setting cannot be changed.
    connectionLimit : int, default is Undefined, optional
        Maps to the `CONNECTION LIMIT` clause of `CREATE DATABASE` and
        `ALTER DATABASE`. How many concurrent connections can be made to
        this database. -1 (the default) means no limit.
    databaseReclaimPolicy : str, default is "retain", optional
        The policy for end-of-life maintenance of this database.
    encoding : str, default is Undefined, optional
        Maps to the `ENCODING` parameter of `CREATE DATABASE`. This setting
        cannot be changed. Character set encoding to use in the database.
    ensure : str, default is "present", optional
        Ensure the PostgreSQL database is `present` or `absent` - defaults to "present".
    extensions : [PostgresqlCnpgIoV1DatabaseSpecExtensionsItems0], default is Undefined, optional
        The list of extensions to be managed in the database
    icuLocale : str, default is Undefined, optional
        Maps to the `ICU_LOCALE` parameter of `CREATE DATABASE`. This
        setting cannot be changed. Specifies the ICU locale when the ICU
        provider is used. This option requires `localeProvider` to be set to
        `icu`. Available from PostgreSQL 15.
    icuRules : str, default is Undefined, optional
        Maps to the `ICU_RULES` parameter of `CREATE DATABASE`. This setting
        cannot be changed. Specifies additional collation rules to customize
        the behavior of the default collation. This option requires
        `localeProvider` to be set to `icu`. Available from PostgreSQL 16.
    isTemplate : bool, default is Undefined, optional
        Maps to the `IS_TEMPLATE` parameter of `CREATE DATABASE` and `ALTER
        DATABASE`. If true, this database is considered a template and can
        be cloned by any user with `CREATEDB` privileges.
    locale : str, default is Undefined, optional
        Maps to the `LOCALE` parameter of `CREATE DATABASE`. This setting
        cannot be changed. Sets the default collation order and character
        classification in the new database.
    localeCType : str, default is Undefined, optional
        Maps to the `LC_CTYPE` parameter of `CREATE DATABASE`. This setting
        cannot be changed.
    localeCollate : str, default is Undefined, optional
        Maps to the `LC_COLLATE` parameter of `CREATE DATABASE`. This
        setting cannot be changed.
    localeProvider : str, default is Undefined, optional
        Maps to the `LOCALE_PROVIDER` parameter of `CREATE DATABASE`. This
        setting cannot be changed. This option sets the locale provider for
        databases created in the new cluster. Available from PostgreSQL 16.
    name : str, default is Undefined, required
        The name of the database to create inside PostgreSQL. This setting cannot be changed.
    owner : str, default is Undefined, required
        Maps to the `OWNER` parameter of `CREATE DATABASE`.
        Maps to the `OWNER TO` command of `ALTER DATABASE`.
        The role name of the user who owns the database inside PostgreSQL.
    schemas : [PostgresqlCnpgIoV1DatabaseSpecSchemasItems0], default is Undefined, optional
        The list of schemas to be managed in the database
    tablespace : str, default is Undefined, optional
        Maps to the `TABLESPACE` parameter of `CREATE DATABASE`.
        Maps to the `SET TABLESPACE` command of `ALTER DATABASE`.
        The name of the tablespace (in PostgreSQL) that will be associated
        with the new database. This tablespace will be the default
        tablespace used for objects created in this database.
    template : str, default is Undefined, optional
        Maps to the `TEMPLATE` parameter of `CREATE DATABASE`. This setting
        cannot be changed. The name of the template from which to create
        this database.
    """
    allowConnections?: bool
    builtinLocale?: str
    cluster: PostgresqlCnpgIoV1DatabaseSpecCluster

    collationVersion?: str
    connectionLimit?: int
    databaseReclaimPolicy?: "delete" | "retain" = "retain"
    encoding?: str
    ensure?: "present" | "absent" = "present"
    extensions?: [PostgresqlCnpgIoV1DatabaseSpecExtensionsItems0]
    icuLocale?: str
    icuRules?: str
    isTemplate?: bool
    locale?: str
    localeCType?: str
    localeCollate?: str
    localeProvider?: str
    name: str

    owner: str

    schemas?: [PostgresqlCnpgIoV1DatabaseSpecSchemasItems0]
    tablespace?: str
    template?: str

schema PostgresqlCnpgIoV1DatabaseSpecCluster:
    r"""
    The name of the PostgreSQL cluster hosting the database.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1DatabaseSpecExtensionsItems0:
    r"""
    ExtensionSpec configures an extension in a database

    Attributes
    ----------
    ensure : str, default is "present", optional
        Specifies whether an extension/schema should be present or absent in
        the database. If set to `present`, the extension/schema will be
        created if it does not exist. If set to `absent`, the
        extension/schema will be removed if it exists.
    name : str, default is Undefined, required
        Name of the extension/schema
    $schema : str, default is Undefined, optional
        The name of the schema in which to install the extension's objects,
        in case the extension allows its contents to be relocated. If not
        specified (default), and the extension's control file does not
        specify a schema either, the current default object creation schema
        is used.
    version : str, default is Undefined, optional
        The version of the extension to install. If empty, the operator will
        install the default version (whatever is specified in the
        extension's control file)
    """
    ensure?: "present" | "absent" = "present"
    name: str

    $schema?: str
    version?: str

schema PostgresqlCnpgIoV1DatabaseSpecSchemasItems0:
    r"""
    SchemaSpec configures a schema in a database

    Attributes
    ----------
    ensure : str, default is "present", optional
        Specifies whether an extension/schema should be present or absent in
        the database. If set to `present`, the extension/schema will be
        created if it does not exist. If set to `absent`, the
        extension/schema will be removed if it exists.
    name : str, default is Undefined, required
        Name of the extension/schema
    owner : str, default is Undefined, optional
        The role name of the user who owns the schema inside PostgreSQL.
        It maps to the `AUTHORIZATION` parameter of `CREATE SCHEMA` and the
        `OWNER TO` command of `ALTER SCHEMA`.
    """
    ensure?: "present" | "absent" = "present"
    name: str

    owner?: str

schema PostgresqlCnpgIoV1DatabaseStatus:
    r"""
    Most recently observed status of the Database. This data may not be up to
    date. Populated by the system. Read-only.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    applied : bool, default is Undefined, optional
        Applied is true if the database was reconciled correctly
    extensions : [PostgresqlCnpgIoV1DatabaseStatusExtensionsItems0], default is Undefined, optional
        Extensions is the status of the managed extensions
    message : str, default is Undefined, optional
        Message is the reconciliation output message
    observedGeneration : int, default is Undefined, optional
        A sequence number representing the latest
        desired state that was synchronized
    schemas : [PostgresqlCnpgIoV1DatabaseStatusSchemasItems0], default is Undefined, optional
        Schemas is the status of the managed schemas
    """
    applied?: bool
    extensions?: [PostgresqlCnpgIoV1DatabaseStatusExtensionsItems0]
    message?: str
    observedGeneration?: int
    schemas?: [PostgresqlCnpgIoV1DatabaseStatusSchemasItems0]

schema PostgresqlCnpgIoV1DatabaseStatusExtensionsItems0:
    r"""
    DatabaseObjectStatus is the status of the managed database objects

    Attributes
    ----------
    applied : bool, default is Undefined, required
        True of the object has been installed successfully in
        the database
    message : str, default is Undefined, optional
        Message is the object reconciliation message
    name : str, default is Undefined, required
        The name of the object
    """
    applied: bool

    message?: str
    name: str

schema PostgresqlCnpgIoV1DatabaseStatusSchemasItems0:
    r"""
    DatabaseObjectStatus is the status of the managed database objects

    Attributes
    ----------
    applied : bool, default is Undefined, required
        True of the object has been installed successfully in
        the database
    message : str, default is Undefined, optional
        Message is the object reconciliation message
    name : str, default is Undefined, required
        The name of the object
    """
    applied: bool

    message?: str
    name: str

