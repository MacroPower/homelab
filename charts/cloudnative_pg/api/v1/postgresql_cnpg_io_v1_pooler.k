"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema Pooler:
    r"""
    Pooler is the Schema for the poolers API

    Attributes
    ----------
    apiVersion : str, default is "postgresql.cnpg.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Pooler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : PostgresqlCnpgIoV1PoolerSpec, default is Undefined, required
        spec
    status : PostgresqlCnpgIoV1PoolerStatus, default is Undefined, optional
        status
    """
    apiVersion: "postgresql.cnpg.io/v1" = "postgresql.cnpg.io/v1"

    kind: "Pooler" = "Pooler"

    metadata: v1.ObjectMeta

    spec: PostgresqlCnpgIoV1PoolerSpec

    status?: PostgresqlCnpgIoV1PoolerStatus

schema PostgresqlCnpgIoV1PoolerSpec:
    r"""
    Specification of the desired behavior of the Pooler.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    cluster : PostgresqlCnpgIoV1PoolerSpecCluster, default is Undefined, required
        cluster
    deploymentStrategy : PostgresqlCnpgIoV1PoolerSpecDeploymentStrategy, default is Undefined, optional
        deployment strategy
    instances : int, default is 1, optional
        The number of replicas we want. Default: 1.
    monitoring : PostgresqlCnpgIoV1PoolerSpecMonitoring, default is Undefined, optional
        monitoring
    pgbouncer : PostgresqlCnpgIoV1PoolerSpecPgbouncer, default is Undefined, required
        pgbouncer
    serviceTemplate : PostgresqlCnpgIoV1PoolerSpecServiceTemplate, default is Undefined, optional
        service template
    template : PostgresqlCnpgIoV1PoolerSpecTemplate, default is Undefined, optional
        template
    $type : str, default is "rw", optional
        Type of service to forward traffic to. Default: `rw`.
    """
    cluster: PostgresqlCnpgIoV1PoolerSpecCluster

    deploymentStrategy?: PostgresqlCnpgIoV1PoolerSpecDeploymentStrategy
    instances?: int = 1
    monitoring?: PostgresqlCnpgIoV1PoolerSpecMonitoring
    pgbouncer: PostgresqlCnpgIoV1PoolerSpecPgbouncer

    serviceTemplate?: PostgresqlCnpgIoV1PoolerSpecServiceTemplate
    template?: PostgresqlCnpgIoV1PoolerSpecTemplate
    $type?: "rw" | "ro" | "r" = "rw"

schema PostgresqlCnpgIoV1PoolerSpecCluster:
    r"""
    This is the cluster reference on which the Pooler will work.
    Pooler name should never match with any cluster name within the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """
    name: str

schema PostgresqlCnpgIoV1PoolerSpecDeploymentStrategy:
    r"""
    The deployment strategy to use for pgbouncer to replace existing pods with new ones

    Attributes
    ----------
    rollingUpdate : PostgresqlCnpgIoV1PoolerSpecDeploymentStrategyRollingUpdate, default is Undefined, optional
        rolling update
    $type : str, default is Undefined, optional
        Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
    """
    rollingUpdate?: PostgresqlCnpgIoV1PoolerSpecDeploymentStrategyRollingUpdate
    $type?: str

schema PostgresqlCnpgIoV1PoolerSpecDeploymentStrategyRollingUpdate:
    r"""
    Rolling update config params. Present only if DeploymentStrategyType =
    RollingUpdate.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of
        pods.
        Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
        This can not be 0 if MaxUnavailable is 0.
        Absolute number is calculated from percentage by rounding up.
        Defaults to 25%.
        Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
        the rolling update starts, such that the total number of old and new pods do not exceed
        130% of desired pods. Once old pods have been killed,
        new ReplicaSet can be scaled up further, ensuring that total number of pods running
        at any time during the update is at most 130% of desired pods.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update.
        Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
        Absolute number is calculated from percentage by rounding down.
        This can not be 0 if MaxSurge is 0.
        Defaults to 25%.
        Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
        immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
        can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
        that the total number of pods available at all times during the update is at
        least 70% of desired pods.
    """
    maxSurge?: int | str
    maxUnavailable?: int | str

schema PostgresqlCnpgIoV1PoolerSpecMonitoring:
    r"""
    The configuration of the monitoring infrastructure of this pooler.

    Attributes
    ----------
    enablePodMonitor : bool, default is Undefined, optional
        Enable or disable the `PodMonitor`
    podMonitorMetricRelabelings : [PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorMetricRelabelingsItems0], default is Undefined, optional
        The list of metric relabelings for the `PodMonitor`. Applied to samples before ingestion.
    podMonitorRelabelings : [PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorRelabelingsItems0], default is Undefined, optional
        The list of relabelings for the `PodMonitor`. Applied to samples before scraping.
    """
    enablePodMonitor?: bool = False
    podMonitorMetricRelabelings?: [PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorMetricRelabelingsItems0]
    podMonitorRelabelings?: [PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorRelabelingsItems0]

schema PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorMetricRelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

    check:
        all sourceLabels in sourceLabels {_regex_match(str(sourceLabels), r"^[a-zA-Z_][a-zA-Z0-9_]*$") if sourceLabels} if sourceLabels

schema PostgresqlCnpgIoV1PoolerSpecMonitoringPodMonitorRelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

    check:
        all sourceLabels in sourceLabels {_regex_match(str(sourceLabels), r"^[a-zA-Z_][a-zA-Z0-9_]*$") if sourceLabels} if sourceLabels

schema PostgresqlCnpgIoV1PoolerSpecPgbouncer:
    r"""
    The PgBouncer configuration

    Attributes
    ----------
    authQuery : str, default is Undefined, optional
        The query that will be used to download the hash of the password
        of a certain user. Default: "SELECT usename, passwd FROM public.user_search($1)".
        In case it is specified, also an AuthQuerySecret has to be specified and
        no automatic CNPG Cluster integration will be triggered.
    authQuerySecret : PostgresqlCnpgIoV1PoolerSpecPgbouncerAuthQuerySecret, default is Undefined, optional
        auth query secret
    parameters : {str:str}, default is Undefined, optional
        Additional parameters to be passed to PgBouncer - please check
        the CNPG documentation for a list of options you can configure
    paused : bool, default is Undefined, optional
        When set to `true`, PgBouncer will disconnect from the PostgreSQL
        server, first waiting for all queries to complete, and pause all new
        client connections until this value is set to `false` (default). Internally,
        the operator calls PgBouncer's `PAUSE` and `RESUME` commands.
    pg_hba : [str], default is Undefined, optional
        PostgreSQL Host Based Authentication rules (lines to be appended
        to the pg_hba.conf file)
    poolMode : str, default is "session", optional
        The pool mode. Default: `session`.
    """
    authQuery?: str
    authQuerySecret?: PostgresqlCnpgIoV1PoolerSpecPgbouncerAuthQuerySecret
    parameters?: {str:str}
    paused?: bool = False
    pg_hba?: [str]
    poolMode?: "session" | "transaction" = "session"

schema PostgresqlCnpgIoV1PoolerSpecPgbouncerAuthQuerySecret:
    r"""
    The credentials of the user that need to be used for the authentication
    query. In case it is specified, also an AuthQuery
    (e.g. "SELECT usename, passwd FROM pg_catalog.pg_shadow WHERE usename=$1")
    has to be specified and no automatic CNPG Cluster integration will be triggered.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """
    name: str

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplate:
    r"""
    Template for the Service to be created

    Attributes
    ----------
    metadata : PostgresqlCnpgIoV1PoolerSpecServiceTemplateMetadata, default is Undefined, optional
        metadata
    spec : PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpec, default is Undefined, optional
        spec
    """
    metadata?: PostgresqlCnpgIoV1PoolerSpecServiceTemplateMetadata
    spec?: PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpec

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        The name of the resource. Only supported for certain types
    """
    annotations?: {str:str}
    labels?: {str:str}
    name?: str

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpec:
    r"""
    Specification of the desired behavior of the service.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    allocateLoadBalancerNodePorts : bool, default is Undefined, optional
        allocateLoadBalancerNodePorts defines if NodePorts will be automatically
        allocated for services with type LoadBalancer.  Default is "true". It
        may be set to "false" if the cluster load-balancer does not rely on
        NodePorts.  If the caller requests specific NodePorts (by specifying a
        value), those requests will be respected, regardless of this field.
        This field may only be set for services with type LoadBalancer and will
        be cleared if the type is changed to any other type.
    clusterIP : str, default is Undefined, optional
        clusterIP is the IP address of the service and is usually assigned
        randomly. If an address is specified manually, is in-range (as per
        system configuration), and is not in use, it will be allocated to the
        service; otherwise creation of the service will fail. This field may not
        be changed through updates unless the type field is also being changed
        to ExternalName (which requires this field to be blank) or the type
        field is being changed from ExternalName (in which case this field may
        optionally be specified, as describe above).  Valid values are "None",
        empty string (""), or a valid IP address. Setting this to "None" makes a
        "headless service" (no virtual IP), which is useful when direct endpoint
        connections are preferred and proxying is not required.  Only applies to
        types ClusterIP, NodePort, and LoadBalancer. If this field is specified
        when creating a Service of type ExternalName, creation will fail. This
        field will be wiped when updating a Service to type ExternalName.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    clusterIPs : [str], default is Undefined, optional
        ClusterIPs is a list of IP addresses assigned to this service, and are
        usually assigned randomly.  If an address is specified manually, is
        in-range (as per system configuration), and is not in use, it will be
        allocated to the service; otherwise creation of the service will fail.
        This field may not be changed through updates unless the type field is
        also being changed to ExternalName (which requires this field to be
        empty) or the type field is being changed from ExternalName (in which
        case this field may optionally be specified, as describe above).  Valid
        values are "None", empty string (""), or a valid IP address.  Setting
        this to "None" makes a "headless service" (no virtual IP), which is
        useful when direct endpoint connections are preferred and proxying is
        not required.  Only applies to types ClusterIP, NodePort, and
        LoadBalancer. If this field is specified when creating a Service of type
        ExternalName, creation will fail. This field will be wiped when updating
        a Service to type ExternalName.  If this field is not specified, it will
        be initialized from the clusterIP field.  If this field is specified,
        clients must ensure that clusterIPs[0] and clusterIP have the same
        value.

        This field may hold a maximum of two entries (dual-stack IPs, in either order).
        These IPs must correspond to the values of the ipFamilies field. Both
        clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    externalIPs : [str], default is Undefined, optional
        externalIPs is a list of IP addresses for which nodes in the cluster
        will also accept traffic for this service.  These IPs are not managed by
        Kubernetes.  The user is responsible for ensuring that traffic arrives
        at a node with this IP.  A common example is external load-balancers
        that are not part of the Kubernetes system.
    externalName : str, default is Undefined, optional
        externalName is the external reference that discovery mechanisms will
        return as an alias for this service (e.g. a DNS CNAME record). No
        proxying will be involved.  Must be a lowercase RFC-1123 hostname
        (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
    externalTrafficPolicy : str, default is Undefined, optional
        externalTrafficPolicy describes how nodes distribute service traffic they
        receive on one of the Service's "externally-facing" addresses (NodePorts,
        ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
        the service in a way that assumes that external load balancers will take care
        of balancing the service traffic between nodes, and so each node will deliver
        traffic only to the node-local endpoints of the service, without masquerading
        the client source IP. (Traffic mistakenly sent to a node with no endpoints will
        be dropped.) The default value, "Cluster", uses the standard behavior of
        routing to all endpoints evenly (possibly modified by topology and other
        features). Note that traffic sent to an External IP or LoadBalancer IP from
        within the cluster will always get "Cluster" semantics, but clients sending to
        a NodePort from within the cluster may need to take traffic policy into account
        when picking a node.
    healthCheckNodePort : int, default is Undefined, optional
        healthCheckNodePort specifies the healthcheck nodePort for the service.
        This only applies when type is set to LoadBalancer and
        externalTrafficPolicy is set to Local. If a value is specified, is
        in-range, and is not in use, it will be used.  If not specified, a value
        will be automatically allocated.  External systems (e.g. load-balancers)
        can use this port to determine if a given node holds endpoints for this
        service or not.  If this field is specified when creating a Service
        which does not need it, creation will fail. This field will be wiped
        when updating a Service to no longer need it (e.g. changing type).
        This field cannot be updated once set.
    internalTrafficPolicy : str, default is Undefined, optional
        InternalTrafficPolicy describes how nodes distribute service traffic they
        receive on the ClusterIP. If set to "Local", the proxy will assume that pods
        only want to talk to endpoints of the service on the same node as the pod,
        dropping the traffic if there are no local endpoints. The default value,
        "Cluster", uses the standard behavior of routing to all endpoints evenly
        (possibly modified by topology and other features).
    ipFamilies : [str], default is Undefined, optional
        IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
        service. This field is usually assigned automatically based on cluster
        configuration and the ipFamilyPolicy field. If this field is specified
        manually, the requested family is available in the cluster,
        and ipFamilyPolicy allows it, it will be used; otherwise creation of
        the service will fail. This field is conditionally mutable: it allows
        for adding or removing a secondary IP family, but it does not allow
        changing the primary IP family of the Service. Valid values are "IPv4"
        and "IPv6".  This field only applies to Services of types ClusterIP,
        NodePort, and LoadBalancer, and does apply to "headless" services.
        This field will be wiped when updating a Service to type ExternalName.

        This field may hold a maximum of two entries (dual-stack families, in
        either order).  These families must correspond to the values of the
        clusterIPs field, if specified. Both clusterIPs and ipFamilies are
        governed by the ipFamilyPolicy field.
    ipFamilyPolicy : str, default is Undefined, optional
        IPFamilyPolicy represents the dual-stack-ness requested or required by
        this Service. If there is no value provided, then this field will be set
        to SingleStack. Services can be "SingleStack" (a single IP family),
        "PreferDualStack" (two IP families on dual-stack configured clusters or
        a single IP family on single-stack clusters), or "RequireDualStack"
        (two IP families on dual-stack configured clusters, otherwise fail). The
        ipFamilies and clusterIPs fields depend on the value of this field. This
        field will be wiped when updating a service to type ExternalName.
    loadBalancerClass : str, default is Undefined, optional
        loadBalancerClass is the class of the load balancer implementation this Service belongs to.
        If specified, the value of this field must be a label-style identifier, with an optional prefix,
        e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
        This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
        balancer implementation is used, today this is typically done through the cloud provider integration,
        but should apply for any default implementation. If set, it is assumed that a load balancer
        implementation is watching for Services with a matching class. Any default load balancer
        implementation (e.g. cloud providers) should ignore Services that set this field.
        This field can only be set when creating or updating a Service to type 'LoadBalancer'.
        Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
    loadBalancerIP : str, default is Undefined, optional
        Only applies to Service Type: LoadBalancer.
        This feature depends on whether the underlying cloud-provider supports specifying
        the loadBalancerIP when a load balancer is created.
        This field will be ignored if the cloud-provider does not support the feature.
        Deprecated: This field was under-specified and its meaning varies across implementations.
        Using it is non-portable and it may not support dual-stack.
        Users are encouraged to use implementation-specific annotations when available.
    loadBalancerSourceRanges : [str], default is Undefined, optional
        If specified and supported by the platform, this will restrict traffic through the cloud-provider
        load-balancer will be restricted to the specified client IPs. This field will be ignored if the
        cloud-provider does not support the feature."
        More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
    ports : [PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecPortsItems0], default is Undefined, optional
        The list of ports that are exposed by this service.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    publishNotReadyAddresses : bool, default is Undefined, optional
        publishNotReadyAddresses indicates that any agent which deals with endpoints for this
        Service should disregard any indications of ready/not-ready.
        The primary use case for setting this field is for a StatefulSet's Headless Service to
        propagate SRV DNS records for its Pods for the purpose of peer discovery.
        The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
        Services interpret this to mean that all endpoints are considered "ready" even if the
        Pods themselves are not. Agents which consume only Kubernetes generated endpoints
        through the Endpoints or EndpointSlice resources can safely assume this behavior.
    selector : {str:str}, default is Undefined, optional
        Route service traffic to pods with label keys and values matching this
        selector. If empty or not present, the service is assumed to have an
        external process managing its endpoints, which Kubernetes will not
        modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
        Ignored if type is ExternalName.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/
    sessionAffinity : str, default is Undefined, optional
        Supports "ClientIP" and "None". Used to maintain session affinity.
        Enable client IP based session affinity.
        Must be ClientIP or None.
        Defaults to None.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    sessionAffinityConfig : PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfig, default is Undefined, optional
        session affinity config
    trafficDistribution : str, default is Undefined, optional
        TrafficDistribution offers a way to express preferences for how traffic
        is distributed to Service endpoints. Implementations can use this field
        as a hint, but are not required to guarantee strict adherence. If the
        field is not set, the implementation will apply its default routing
        strategy. If set to "PreferClose", implementations should prioritize
        endpoints that are in the same zone.
    $type : str, default is Undefined, optional
        type determines how the Service is exposed. Defaults to ClusterIP. Valid
        options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
        "ClusterIP" allocates a cluster-internal IP address for load-balancing
        to endpoints. Endpoints are determined by the selector or if that is not
        specified, by manual construction of an Endpoints object or
        EndpointSlice objects. If clusterIP is "None", no virtual IP is
        allocated and the endpoints are published as a set of endpoints rather
        than a virtual IP.
        "NodePort" builds on ClusterIP and allocates a port on every node which
        routes to the same endpoints as the clusterIP.
        "LoadBalancer" builds on NodePort and creates an external load-balancer
        (if supported in the current cloud) which routes to the same endpoints
        as the clusterIP.
        "ExternalName" aliases this service to the specified externalName.
        Several other fields do not apply to ExternalName services.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    """
    allocateLoadBalancerNodePorts?: bool
    clusterIP?: str
    clusterIPs?: [str]
    externalIPs?: [str]
    externalName?: str
    externalTrafficPolicy?: str
    healthCheckNodePort?: int
    internalTrafficPolicy?: str
    ipFamilies?: [str]
    ipFamilyPolicy?: str
    loadBalancerClass?: str
    loadBalancerIP?: str
    loadBalancerSourceRanges?: [str]
    ports?: [PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecPortsItems0]
    publishNotReadyAddresses?: bool
    selector?: {str:str}
    sessionAffinity?: str
    sessionAffinityConfig?: PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfig
    trafficDistribution?: str
    $type?: str

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecPortsItems0:
    r"""
    ServicePort contains information on service's port.

    Attributes
    ----------
    appProtocol : str, default is Undefined, optional
        The application protocol for this port.
        This is used as a hint for implementations to offer richer behavior for protocols that they understand.
        This field follows standard Kubernetes label syntax.
        Valid values are either:

        * Un-prefixed protocol names - reserved for IANA standard service names (as per
        RFC-6335 and https://www.iana.org/assignments/service-names).

        * Kubernetes-defined prefixed names:
          * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
          * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
          * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455

        * Other protocols should use implementation-defined prefixed names such as
        mycompany.com/my-custom-protocol.
    name : str, default is Undefined, optional
        The name of this port within the service. This must be a DNS_LABEL.
        All ports within a ServiceSpec must have unique names. When considering
        the endpoints for a Service, this must match the 'name' field in the
        EndpointPort.
        Optional if only one ServicePort is defined on this service.
    nodePort : int, default is Undefined, optional
        The port on each node on which this service is exposed when type is
        NodePort or LoadBalancer.  Usually assigned by the system. If a value is
        specified, in-range, and not in use it will be used, otherwise the
        operation will fail.  If not specified, a port will be allocated if this
        Service requires one.  If this field is specified when creating a
        Service which does not need it, creation will fail. This field will be
        wiped when updating a Service to no longer need it (e.g. changing type
        from NodePort to ClusterIP).
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    port : int, default is Undefined, required
        The port that will be exposed by this service.
    $protocol : str, default is "TCP", optional
        The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
        Default is TCP.
    targetPort : int | str, default is Undefined, optional
        Number or name of the port to access on the pods targeted by the service.
        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        If this is a string, it will be looked up as a named port in the
        target Pod's container ports. If this is not specified, the value
        of the 'port' field is used (an identity map).
        This field is ignored for services with clusterIP=None, and should be
        omitted or set equal to the 'port' field.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
    """
    appProtocol?: str
    name?: str
    nodePort?: int
    port: int

    $protocol?: str = "TCP"
    targetPort?: int | str

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfig:
    r"""
    sessionAffinityConfig contains the configurations of session affinity.

    Attributes
    ----------
    clientIP : PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfigClientIP, default is Undefined, optional
        client IP
    """
    clientIP?: PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfigClientIP

schema PostgresqlCnpgIoV1PoolerSpecServiceTemplateSpecSessionAffinityConfigClientIP:
    r"""
    clientIP contains the configurations of Client IP based session affinity.

    Attributes
    ----------
    timeoutSeconds : int, default is Undefined, optional
        timeoutSeconds specifies the seconds of ClientIP type session sticky time.
        The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
        Default value is 10800(for 3 hours).
    """
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplate:
    r"""
    The template of the Pod to be created

    Attributes
    ----------
    metadata : PostgresqlCnpgIoV1PoolerSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : PostgresqlCnpgIoV1PoolerSpecTemplateSpec, default is Undefined, optional
        spec
    """
    metadata?: PostgresqlCnpgIoV1PoolerSpecTemplateMetadata
    spec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpec

schema PostgresqlCnpgIoV1PoolerSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        The name of the resource. Only supported for certain types
    """
    annotations?: {str:str}
    labels?: {str:str}
    name?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpec:
    r"""
    Specification of the desired behavior of the pod.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod may be active on the node relative to
        StartTime before the system will actively try to mark it failed and kill associated containers.
        Value must be a positive integer.
    affinity : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinity, default is Undefined, optional
        affinity
    automountServiceAccountToken : bool, default is Undefined, optional
        AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
    containers : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0], default is Undefined, required
        List of containers belonging to the pod.
        Containers cannot currently be added or removed.
        There must be at least one container in a Pod.
        Cannot be updated.
    dnsConfig : PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        Set DNS policy for the pod.
        Defaults to "ClusterFirst".
        Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
        DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
        To have DNS options set along with hostNetwork, you have to specify DNS policy
        explicitly to 'ClusterFirstWithHostNet'.
    enableServiceLinks : bool, default is Undefined, optional
        EnableServiceLinks indicates whether information about services should be injected into pod's
        environment variables, matching the syntax of Docker links.
        Optional: Defaults to true.
    ephemeralContainers : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0], default is Undefined, optional
        List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
        pod to perform user-initiated actions such as debugging. This list cannot be specified when
        creating a pod, and it cannot be modified by updating the pod spec. In order to add an
        ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
    hostAliases : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecHostAliasesItems0], default is Undefined, optional
        HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
        file if specified.
    hostIPC : bool, default is Undefined, optional
        Use the host's ipc namespace.
        Optional: Default to false.
    hostNetwork : bool, default is Undefined, optional
        Host networking requested for this pod. Use the host's network namespace.
        If this option is set, the ports that will be used must be specified.
        Default to false.
    hostPID : bool, default is Undefined, optional
        Use the host's pid namespace.
        Optional: Default to false.
    hostUsers : bool, default is Undefined, optional
        Use the host's user namespace.
        Optional: Default to true.
        If set to true or not present, the pod will be run in the host user namespace, useful
        for when the pod needs a feature only available to the host user namespace, such as
        loading a kernel module with CAP_SYS_MODULE.
        When set to false, a new userns is created for the pod. Setting false is useful for
        mitigating container breakout vulnerabilities even allowing users to run their
        containers as root without actually having root privileges on the host.
        This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
    hostname : str, default is Undefined, optional
        Specifies the hostname of the Pod
        If not specified, the pod's hostname will be set to a system-defined value.
    imagePullSecrets : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
        If specified, these secrets will be passed to individual puller implementations for them to use.
        More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
    initContainers : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0], default is Undefined, optional
        List of initialization containers belonging to the pod.
        Init containers are executed in order prior to containers being started. If any
        init container fails, the pod is considered to have failed and is handled according
        to its restartPolicy. The name for an init container or normal container must be
        unique among all containers.
        Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
        The resourceRequirements of an init container are taken into account during scheduling
        by finding the highest request/limit for each resource type, and then using the max of
        that value or the sum of the normal containers. Limits are applied to init containers
        in a similar fashion.
        Init containers cannot currently be added or removed.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    nodeName : str, default is Undefined, optional
        NodeName indicates in which node this pod is scheduled.
        If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
        Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
        This field should not be used to express a desire for the pod to be scheduled on a specific node.
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector is a selector which must be true for the pod to fit on a node.
        Selector which must match a node's labels for the pod to be scheduled on that node.
        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    os : PostgresqlCnpgIoV1PoolerSpecTemplateSpecOs, default is Undefined, optional
        os
    overhead : {str:int | str}, default is Undefined, optional
        Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
        This field will be autopopulated at admission time by the RuntimeClass admission controller. If
        the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
        The RuntimeClass admission controller will reject Pod create requests which have the overhead already
        set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
        defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
        More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
    preemptionPolicy : str, default is Undefined, optional
        PreemptionPolicy is the Policy for preempting pods with lower priority.
        One of Never, PreemptLowerPriority.
        Defaults to PreemptLowerPriority if unset.
    priority : int, default is Undefined, optional
        The priority value. Various system components use this field to find the
        priority of the pod. When Priority Admission Controller is enabled, it
        prevents users from setting this field. The admission controller populates
        this field from PriorityClassName.
        The higher the value, the higher the priority.
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. "system-node-critical" and
        "system-cluster-critical" are two special keywords which indicate the
        highest priorities with the former being the highest priority. Any other
        name must be defined by creating a PriorityClass object with that name.
        If not specified, the pod priority will be default or zero if there is no
        default.
    readinessGates : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecReadinessGatesItems0], default is Undefined, optional
        If specified, all readiness gates will be evaluated for pod readiness.
        A pod is ready when all its containers are ready AND
        all conditions specified in the readiness gates have status equal to "True"
        More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
    resourceClaims : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourceClaimsItems0], default is Undefined, optional
        ResourceClaims defines which ResourceClaims must be allocated
        and reserved before the Pod is allowed to start. The resources
        will be made available to those containers which consume them
        by name.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable.
    resources : PostgresqlCnpgIoV1PoolerSpecTemplateSpecResources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        Restart policy for all containers within the pod.
        One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
        Default to Always.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
        to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
        If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
        empty definition that uses the default runtime handler.
        More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
    schedulerName : str, default is Undefined, optional
        If specified, the pod will be dispatched by specified scheduler.
        If not specified, the pod will be dispatched by default scheduler.
    schedulingGates : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecSchedulingGatesItems0], default is Undefined, optional
        SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
        If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
        scheduler will not attempt to schedule the pod.

        SchedulingGates can only be set at pod creation time, and be removed only afterwards.
    securityContext : PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccount : str, default is Undefined, optional
        DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
        Deprecated: Use serviceAccountName instead.
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run this pod.
        More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    setHostnameAsFQDN : bool, default is Undefined, optional
        If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
        In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
        In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
        If a pod does not have FQDN, this has no effect.
        Default to false.
    shareProcessNamespace : bool, default is Undefined, optional
        Share a single process namespace between all of the containers in a pod.
        When this is set containers will be able to view and signal processes from other containers
        in the same pod, and the first process in each container will not be assigned PID 1.
        HostPID and ShareProcessNamespace cannot both be set.
        Optional: Default to false.
    subdomain : str, default is Undefined, optional
        If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
        If not specified, the pod will not have a domainname at all.
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        If this value is nil, the default grace period will be used instead.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        Defaults to 30 seconds.
    tolerations : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTolerationsItems0], default is Undefined, optional
        If specified, the pod's tolerations.
    topologySpreadConstraints : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints describes how a group of pods ought to spread across topology
        domains. Scheduler will schedule pods in a way which abides by the constraints.
        All topologySpreadConstraints are ANDed.
    volumes : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0], default is Undefined, optional
        List of volumes that can be mounted by containers belonging to the pod.
        More info: https://kubernetes.io/docs/concepts/storage/volumes
    """
    activeDeadlineSeconds?: int
    affinity?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinity
    automountServiceAccountToken?: bool
    containers: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0]

    dnsConfig?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfig
    dnsPolicy?: str
    enableServiceLinks?: bool
    ephemeralContainers?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0]
    hostAliases?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecHostAliasesItems0]
    hostIPC?: bool
    hostNetwork?: bool
    hostPID?: bool
    hostUsers?: bool
    hostname?: str
    imagePullSecrets?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecImagePullSecretsItems0]
    initContainers?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0]
    nodeName?: str
    nodeSelector?: {str:str}
    os?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecOs
    overhead?: {str:int | str}
    preemptionPolicy?: str
    priority?: int
    priorityClassName?: str
    readinessGates?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecReadinessGatesItems0]
    resourceClaims?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourceClaimsItems0]
    resources?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecResources
    restartPolicy?: str
    runtimeClassName?: str
    schedulerName?: str
    schedulingGates?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecSchedulingGatesItems0]
    securityContext?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContext
    serviceAccount?: str
    serviceAccountName?: str
    setHostnameAsFQDN?: bool
    shareProcessNamespace?: bool
    subdomain?: str
    terminationGracePeriodSeconds?: int
    tolerations?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTolerationsItems0]
    topologySpreadConstraints?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0]
    volumes?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0]

    check:
        all _, overhead in overhead {_regex_match(str(overhead), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if overhead} if overhead

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinity:
    r"""
    If specified, the pod's scheduling constraints

    Attributes
    ----------
    nodeAffinity : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """
    nodeAffinity?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinity
    podAffinity?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinity
    podAntiAffinity?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinity

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions. The node that is
        most preferred is the one with the greatest sum of weights, i.e.
        for each node that meets all of the scheduling requirements (resource
        request, requiredDuringScheduling affinity expressions, etc.),
        compute a sum by iterating through the elements of this field and adding
        "weight" to the sum if the node matches the corresponding matchExpressions; the
        node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0
    (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """
    preference: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]
    matchFields?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. If the operator is Gt or Lt, the values
        array must have a single element, which will be interpreted as an integer.
        This array is replaced during a strategic merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. If the operator is Gt or Lt, the values
        array must have a single element, which will be interpreted as an integer.
        This array is replaced during a strategic merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at
    scheduling time, the pod will not be scheduled onto the node.
    If the affinity requirements specified by this field cease to be met
    at some point during pod execution (e.g. due to an update), the system
    may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """
    nodeSelectorTerms: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of
    them are ANDed.
    The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]
    matchFields?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. If the operator is Gt or Lt, the values
        array must have a single element, which will be interpreted as an integer.
        This array is replaced during a strategic merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. If the operator is Gt or Lt, the values
        array must have a single element, which will be interpreted as an integer.
        This array is replaced during a strategic merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions. The node that is
        most preferred is the one with the greatest sum of weights, i.e.
        for each node that meets all of the scheduling requirements (resource
        request, requiredDuringScheduling affinity expressions, etc.),
        compute a sum by iterating through the elements of this field and adding
        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
        node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at
        scheduling time, the pod will not be scheduled onto the node.
        If the affinity requirements specified by this field cease to be met
        at some point during pod execution (e.g. due to a pod label update), the
        system may or may not try to eventually evict the pod from its node.
        When there are multiple elements, the lists of nodes corresponding to each
        podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm,
        in the range 1-100.
    """
    podAffinityTerm: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
        Also, matchLabelKeys cannot be set when labelSelector isn't set.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
    namespaceSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of any node on which any of the
        selected pods is running.
        Empty topologyKey is not allowed.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.
    null selector and null or empty namespaces list means "this pod's namespace".
    An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector
    relative to the given namespace(s)) that this pod should be
    co-located (affinity) or not co-located (anti-affinity) with,
    where co-located is defined as running on a node whose value of
    the label with key <topologyKey> matches that of any node on which
    a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
        Also, matchLabelKeys cannot be set when labelSelector isn't set.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
    namespaceSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of any node on which any of the
        selected pods is running.
        Empty topologyKey is not allowed.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.
    null selector and null or empty namespaces list means "this pod's namespace".
    An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the anti-affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions. The node that is
        most preferred is the one with the greatest sum of weights, i.e.
        for each node that meets all of the scheduling requirements (resource
        request, requiredDuringScheduling anti-affinity expressions, etc.),
        compute a sum by iterating through the elements of this field and adding
        "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
        node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at
        scheduling time, the pod will not be scheduled onto the node.
        If the anti-affinity requirements specified by this field cease to be met
        at some point during pod execution (e.g. due to a pod label update), the
        system may or may not try to eventually evict the pod from its node.
        When there are multiple elements, the lists of nodes corresponding to each
        podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm,
        in the range 1-100.
    """
    podAffinityTerm: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
        Also, matchLabelKeys cannot be set when labelSelector isn't set.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
    namespaceSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of any node on which any of the
        selected pods is running.
        Empty topologyKey is not allowed.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.
    null selector and null or empty namespaces list means "this pod's namespace".
    An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector
    relative to the given namespace(s)) that this pod should be
    co-located (affinity) or not co-located (anti-affinity) with,
    where co-located is defined as running on a node whose value of
    the label with key <topologyKey> matches that of any node on which
    a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
        Also, matchLabelKeys cannot be set when labelSelector isn't set.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
        to select the group of existing pods which pods will be taken into consideration
        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
        pod labels will be ignored. The default value is empty.
        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
    namespaceSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of any node on which any of the
        selected pods is running.
        Empty topologyKey is not allowed.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.
    null selector and null or empty namespaces list means "this pod's namespace".
    An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0:
    r"""
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The container image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The container image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Cannot be updated.
    envFrom : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the container is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Container image name.
        More info: https://kubernetes.io/docs/concepts/containers/images
        This field is optional to allow higher level config management to default or override
        container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL.
        Each container in a pod must have a unique name (DNS_LABEL).
        Cannot be updated.
    ports : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here
        DOES NOT prevent that port from being exposed. Any port which is
        listening on the default "0.0.0.0" address inside a container will be
        accessible from the network.
        Modifying this array with strategic merge patch may corrupt the data.
        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
        Cannot be updated.
    readinessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod.
        This field may only be set for init containers, and the only allowed value is "Always".
        For non-init containers or when this field is not specified,
        the restart behavior is defined by the Pod's restart policy and the container type.
        Setting the RestartPolicy as "Always" for the init container will have the following effect:
        this init container will be continually restarted on
        exit until all regular containers have terminated. Once all regular
        containers have completed, all init containers with restartPolicy "Always"
        will be shut down. This lifecycle differs from normal init containers and
        is often referred to as a "sidecar" container. Although this init
        container still starts in the init container sequence, it does not wait
        for the container to complete before proceeding to the next init
        container. Instead, the next init container starts immediately after this
        init container is started, or after any startupProbe has successfully
        completed.
    securityContext : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this
        is not set, reads from stdin in the container will always result in EOF.
        Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by
        a single attach. When stdin is true the stdin stream will remain open across multiple attach
        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
        at which time stdin is closed and remains closed until the container is restarted. If this
        flag is false, a container processes that reads from stdin will never receive an EOF.
        Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message
        will be written is mounted into the container's filesystem.
        Message written is intended to be brief final status, such as an assertion failure message.
        Will be truncated by the node if greater than 4096 bytes. The total message length across
        all containers will be limited to 12kb.
        Defaults to /dev/termination-log.
        Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of
        terminationMessagePath to populate the container status message on both success and failure.
        FallbackToLogsOnError will use the last chunk of container log output if the termination
        message file is empty and the container exited with an error.
        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
        Defaults to File.
        Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
        Default is false.
    volumeDevices : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    """
    args?: [str]
    command?: [str]
    env?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0]
    envFrom?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0]
    image?: str
    imagePullPolicy?: str
    lifecycle?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Lifecycle
    livenessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbe
    name: str

    ports?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0PortsItems0]
    readinessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbe
    resizePolicy?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResizePolicyItems0]
    resources?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Resources
    restartPolicy?: str
    securityContext?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContext
    startupProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbe
    stdin?: bool
    stdinOnce?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: str
    tty?: bool
    volumeDevices?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeDevicesItems0]
    volumeMounts?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeMountsItems0]
    workingDir?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps or Secrets

    Attributes
    ----------
    configMapRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """
    configMapRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef
    prefix?: str
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0SecretRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """
    name: str

    value?: str
    valueFrom?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFrom

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """
    configMapKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef
    fieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef
    resourceFieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef
    secretKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Lifecycle:
    r"""
    Actions that the management system should take in response to container lifecycle events.
    Cannot be updated.

    Attributes
    ----------
    postStart : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    stopSignal : str, default is Undefined, optional
        StopSignal defines which signal will be sent to a container when it is being stopped.
        If not specified, the default is defined by the container runtime in use.
        StopSignal can only be set for Pods with a non-empty .spec.os.name
    """
    postStart?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStart
    preStop?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStop
    stopSignal?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails,
    the container is terminated and restarted according to its restart policy.
    Other management of the container blocks until the hook completes.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an
    API request or management event such as liveness/startup probe failure,
    preemption, resource contention, etc. The handler is not called if the
    container crashes or exits. The Pod's termination grace period countdown begins before the
    PreStop hook is executed. Regardless of the outcome of the handler, the
    container will eventually terminate within the Pod's termination grace
    period (unless delayed by finalizers). Other management of the container blocks until the hook completes
    or until the termination grace period is reached.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbe:
    r"""
    Periodic probe of container liveness.
    Container will be restarted if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address.
        This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host.
        If specified, this must be a valid port number, 0 < x < 65536.
        If HostNetwork is specified, this must match ContainerPort.
        Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
        named port in a pod must have a unique name. Name for the port that can be
        referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP.
        Defaults to "TCP".
    """
    containerPort: int

    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str = "TCP"

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbe:
    r"""
    Periodic probe of container service readiness.
    Container will be removed from service endpoints if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResizePolicyItems0:
    r"""
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies.
        Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized.
        If not specified, it defaults to NotRequired.
    """
    resourceName: str

    restartPolicy: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0Resources:
    r"""
    Compute Resources required by this container.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """
    claims?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResourcesClaimsItems0]
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0ResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """
    name: str

    request?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContext:
    r"""
    SecurityContext defines the security options the container should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """
    allowPrivilegeEscalation?: bool
    appArmorProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextAppArmorProfile
    capabilities?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextCapabilities
    privileged?: bool
    procMount?: str
    readOnlyRootFilesystem?: bool
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions
    seccompProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeccompProfile
    windowsOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextWindowsOptions

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """
    add?: [str]
    drop?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """
    level?: str
    role?: str
    $type?: str
    user?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """
    gmsaCredentialSpec?: str
    gmsaCredentialSpecName?: str
    hostProcess?: bool
    runAsUserName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod has successfully initialized.
    If specified, no other probes are executed until this completes successfully.
    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
    when it might take a long time to load data or warm a cache, than during steady-state operation.
    This cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """
    devicePath: str

    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """
    mountPath: str

    mountPropagation?: str
    name: str

    readOnly?: bool
    recursiveReadOnly?: str
    subPath?: str
    subPathExpr?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfig:
    r"""
    Specifies the DNS parameters of a pod.
    Parameters specified here will be merged to the generated DNS
    configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses.
        This will be appended to the base nameservers generated from DNSPolicy.
        Duplicated nameservers will be removed.
    options : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options.
        This will be merged with the base options generated from DNSPolicy.
        Duplicated entries will be removed. Resolution options given in Options
        will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup.
        This will be appended to the base search paths generated from DNSPolicy.
        Duplicated search paths will be removed.
    """
    nameservers?: [str]
    options?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfigOptionsItems0]
    searches?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecDNSConfigOptionsItems0:
    r"""
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is this DNS resolver option's name.
        Required.
    value : str, default is Undefined, optional
        Value is this DNS resolver option's value.
    """
    name?: str
    value?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0:
    r"""
    An EphemeralContainer is a temporary container that you may add to an existing Pod for
    user-initiated activities such as debugging. Ephemeral containers have no resource or
    scheduling guarantees, and they will not be restarted when they exit or when a Pod is
    removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
    Pod to exceed its resource allocation.

    To add an ephemeral container, use the ephemeralcontainers subresource of an existing
    Pod. Ephemeral containers may not be removed or restarted.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Cannot be updated.
    envFrom : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the container is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Container image name.
        More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the ephemeral container specified as a DNS_LABEL.
        This name must be unique among all containers, init containers and ephemeral containers.
    ports : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0PortsItems0], default is Undefined, optional
        Ports are not allowed for ephemeral containers.
    readinessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        Restart policy for the container to manage the restart behavior of each
        container within a pod.
        This may only be set for init containers. You cannot set this field on
        ephemeral containers.
    securityContext : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this
        is not set, reads from stdin in the container will always result in EOF.
        Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by
        a single attach. When stdin is true the stdin stream will remain open across multiple attach
        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
        at which time stdin is closed and remains closed until the container is restarted. If this
        flag is false, a container processes that reads from stdin will never receive an EOF.
        Default is false
    targetContainerName : str, default is Undefined, optional
        If set, the name of the container from PodSpec that this ephemeral container targets.
        The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
        If not set then the ephemeral container uses the namespaces configured in the Pod spec.

        The container runtime must implement support for this feature. If the runtime does not
        support namespace targeting then the result of setting this field is undefined.
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message
        will be written is mounted into the container's filesystem.
        Message written is intended to be brief final status, such as an assertion failure message.
        Will be truncated by the node if greater than 4096 bytes. The total message length across
        all containers will be limited to 12kb.
        Defaults to /dev/termination-log.
        Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of
        terminationMessagePath to populate the container status message on both success and failure.
        FallbackToLogsOnError will use the last chunk of container log output if the termination
        message file is empty and the container exited with an error.
        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
        Defaults to File.
        Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
        Default is false.
    volumeDevices : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    """
    args?: [str]
    command?: [str]
    env?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0]
    envFrom?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0]
    image?: str
    imagePullPolicy?: str
    lifecycle?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Lifecycle
    livenessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbe
    name: str

    ports?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0PortsItems0]
    readinessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbe
    resizePolicy?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0]
    resources?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Resources
    restartPolicy?: str
    securityContext?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContext
    startupProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbe
    stdin?: bool
    stdinOnce?: bool
    targetContainerName?: str
    terminationMessagePath?: str
    terminationMessagePolicy?: str
    tty?: bool
    volumeDevices?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0]
    volumeMounts?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0]
    workingDir?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps or Secrets

    Attributes
    ----------
    configMapRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """
    configMapRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef
    prefix?: str
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """
    name: str

    value?: str
    valueFrom?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """
    configMapKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef
    fieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef
    resourceFieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef
    secretKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Lifecycle:
    r"""
    Lifecycle is not allowed for ephemeral containers.

    Attributes
    ----------
    postStart : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    stopSignal : str, default is Undefined, optional
        StopSignal defines which signal will be sent to a container when it is being stopped.
        If not specified, the default is defined by the container runtime in use.
        StopSignal can only be set for Pods with a non-empty .spec.os.name
    """
    postStart?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart
    preStop?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop
    stopSignal?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails,
    the container is terminated and restarted according to its restart policy.
    Other management of the container blocks until the hook completes.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an
    API request or management event such as liveness/startup probe failure,
    preemption, resource contention, etc. The handler is not called if the
    container crashes or exits. The Pod's termination grace period countdown begins before the
    PreStop hook is executed. Regardless of the outcome of the handler, the
    container will eventually terminate within the Pod's termination grace
    period (unless delayed by finalizers). Other management of the container blocks until the hook completes
    or until the termination grace period is reached.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address.
        This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host.
        If specified, this must be a valid port number, 0 < x < 65536.
        If HostNetwork is specified, this must match ContainerPort.
        Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
        named port in a pod must have a unique name. Name for the port that can be
        referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP.
        Defaults to "TCP".
    """
    containerPort: int

    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str = "TCP"

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0:
    r"""
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies.
        Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized.
        If not specified, it defaults to NotRequired.
    """
    resourceName: str

    restartPolicy: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0Resources:
    r"""
    Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
    already allocated to the pod.

    Attributes
    ----------
    claims : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """
    claims?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0]
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """
    name: str

    request?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContext:
    r"""
    Optional: SecurityContext defines the security options the ephemeral container should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """
    allowPrivilegeEscalation?: bool
    appArmorProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextAppArmorProfile
    capabilities?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities
    privileged?: bool
    procMount?: str
    readOnlyRootFilesystem?: bool
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions
    seccompProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile
    windowsOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """
    add?: [str]
    drop?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """
    level?: str
    role?: str
    $type?: str
    user?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """
    gmsaCredentialSpec?: str
    gmsaCredentialSpecName?: str
    hostProcess?: bool
    runAsUserName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """
    devicePath: str

    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """
    mountPath: str

    mountPropagation?: str
    name: str

    readOnly?: bool
    recursiveReadOnly?: str
    subPath?: str
    subPathExpr?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
    pod's hosts file.

    Attributes
    ----------
    hostnames : [str], default is Undefined, optional
        Hostnames for the above IP address.
    ip : str, default is Undefined, required
        IP address of the host file entry.
    """
    hostnames?: [str]
    ip: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0:
    r"""
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint.
        The container image's CMD is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell.
        The container image's ENTRYPOINT is used if this is not provided.
        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
        of whether the variable exists or not. Cannot be updated.
        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Cannot be updated.
    envFrom : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container.
        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
        will be reported as an event when the container is starting. When a key exists in multiple
        sources, the value associated with the last source will take precedence.
        Values defined by an Env with a duplicate key will take precedence.
        Cannot be updated.
    image : str, default is Undefined, optional
        Container image name.
        More info: https://kubernetes.io/docs/concepts/containers/images
        This field is optional to allow higher level config management to default or override
        container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy.
        One of Always, Never, IfNotPresent.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL.
        Each container in a pod must have a unique name (DNS_LABEL).
        Cannot be updated.
    ports : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here
        DOES NOT prevent that port from being exposed. Any port which is
        listening on the default "0.0.0.0" address inside a container will be
        accessible from the network.
        Modifying this array with strategic merge patch may corrupt the data.
        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
        Cannot be updated.
    readinessProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod.
        This field may only be set for init containers, and the only allowed value is "Always".
        For non-init containers or when this field is not specified,
        the restart behavior is defined by the Pod's restart policy and the container type.
        Setting the RestartPolicy as "Always" for the init container will have the following effect:
        this init container will be continually restarted on
        exit until all regular containers have terminated. Once all regular
        containers have completed, all init containers with restartPolicy "Always"
        will be shut down. This lifecycle differs from normal init containers and
        is often referred to as a "sidecar" container. Although this init
        container still starts in the init container sequence, it does not wait
        for the container to complete before proceeding to the next init
        container. Instead, the next init container starts immediately after this
        init container is started, or after any startupProbe has successfully
        completed.
    securityContext : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this
        is not set, reads from stdin in the container will always result in EOF.
        Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by
        a single attach. When stdin is true the stdin stream will remain open across multiple attach
        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
        at which time stdin is closed and remains closed until the container is restarted. If this
        flag is false, a container processes that reads from stdin will never receive an EOF.
        Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message
        will be written is mounted into the container's filesystem.
        Message written is intended to be brief final status, such as an assertion failure message.
        Will be truncated by the node if greater than 4096 bytes. The total message length across
        all containers will be limited to 12kb.
        Defaults to /dev/termination-log.
        Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of
        terminationMessagePath to populate the container status message on both success and failure.
        FallbackToLogsOnError will use the last chunk of container log output if the termination
        message file is empty and the container exited with an error.
        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
        Defaults to File.
        Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
        Default is false.
    volumeDevices : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem.
        Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory.
        If not specified, the container runtime's default will be used, which
        might be configured in the container image.
        Cannot be updated.
    """
    args?: [str]
    command?: [str]
    env?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0]
    envFrom?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0]
    image?: str
    imagePullPolicy?: str
    lifecycle?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Lifecycle
    livenessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbe
    name: str

    ports?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0PortsItems0]
    readinessProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbe
    resizePolicy?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResizePolicyItems0]
    resources?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Resources
    restartPolicy?: str
    securityContext?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContext
    startupProbe?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbe
    stdin?: bool
    stdinOnce?: bool
    terminationMessagePath?: str
    terminationMessagePolicy?: str
    tty?: bool
    volumeDevices?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeDevicesItems0]
    volumeMounts?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeMountsItems0]
    workingDir?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps or Secrets

    Attributes
    ----------
    configMapRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """
    configMapRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef
    prefix?: str
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    valueFrom : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """
    name: str

    value?: str
    valueFrom?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """
    configMapKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef
    fieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef
    resourceFieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef
    secretKeyRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Lifecycle:
    r"""
    Actions that the management system should take in response to container lifecycle events.
    Cannot be updated.

    Attributes
    ----------
    postStart : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    stopSignal : str, default is Undefined, optional
        StopSignal defines which signal will be sent to a container when it is being stopped.
        If not specified, the default is defined by the container runtime in use.
        StopSignal can only be set for Pods with a non-empty .spec.os.name
    """
    postStart?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStart
    preStop?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStop
    stopSignal?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails,
    the container is terminated and restarted according to its restart policy.
    Other management of the container blocks until the hook completes.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an
    API request or management event such as liveness/startup probe failure,
    preemption, resource contention, etc. The handler is not called if the
    container crashes or exits. The Pod's termination grace period countdown begins before the
    PreStop hook is executed. Regardless of the outcome of the handler, the
    container will eventually terminate within the Pod's termination grace
    period (unless delayed by finalizers). Other management of the container blocks until the hook completes
    or until the termination grace period is reached.
    More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    sleep : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopSleep, default is Undefined, optional
        sleep
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopExec
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet
    sleep?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopSleep
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopSleep:
    r"""
    Sleep represents a duration that the container should sleep.

    Attributes
    ----------
    seconds : int, default is Undefined, required
        Seconds is the number of seconds to sleep.
    """
    seconds: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket:
    r"""
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
    for backward compatibility. There is no validation of this field and
    lifecycle hooks will fail at runtime when it is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbe:
    r"""
    Periodic probe of container liveness.
    Container will be restarted if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address.
        This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host.
        If specified, this must be a valid port number, 0 < x < 65536.
        If HostNetwork is specified, this must match ContainerPort.
        Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
        named port in a pod must have a unique name. Name for the port that can be
        referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP.
        Defaults to "TCP".
    """
    containerPort: int

    hostIP?: str
    hostPort?: int
    name?: str
    $protocol?: str = "TCP"

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbe:
    r"""
    Periodic probe of container service readiness.
    Container will be removed from service endpoints if the probe fails.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResizePolicyItems0:
    r"""
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies.
        Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized.
        If not specified, it defaults to NotRequired.
    """
    resourceName: str

    restartPolicy: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0Resources:
    r"""
    Compute Resources required by this container.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """
    claims?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0]
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """
    name: str

    request?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContext:
    r"""
    SecurityContext defines the security options the container should be run with.
    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more
        privileges than its parent process. This bool directly controls if
        the no_new_privs flag will be set on the container process.
        AllowPrivilegeEscalation is true always when the container is:
        1) run as Privileged
        2) has CAP_SYS_ADMIN
        Note that this field cannot be set when spec.os.name is windows.
    appArmorProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    capabilities : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode.
        Processes in privileged containers are essentially equivalent to root on the host.
        Defaults to false.
        Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers.
        The default value is Default which uses the container runtime defaults for
        readonly paths and masked paths.
        This requires the ProcMountType feature flag to be enabled.
        Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem.
        Default is false.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in PodSecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """
    allowPrivilegeEscalation?: bool
    appArmorProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextAppArmorProfile
    capabilities?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextCapabilities
    privileged?: bool
    procMount?: str
    readOnlyRootFilesystem?: bool
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions
    seccompProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile
    windowsOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by this container. If set, this profile
    overrides the pod's appArmorProfile.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers.
    Defaults to the default set of capabilities granted by the container runtime.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """
    add?: [str]
    drop?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
    PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """
    level?: str
    role?: str
    $type?: str
    user?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile:
    r"""
    The seccomp options to use by this container. If seccomp options are
    provided at both the pod & container level, the container options
    override the pod options.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options from the PodSecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """
    gmsaCredentialSpec?: str
    gmsaCredentialSpecName?: str
    hostProcess?: bool
    runAsUserName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod has successfully initialized.
    If specified, no other probes are executed until this completes successfully.
    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
    when it might take a long time to load data or warm a cache, than during steady-state operation.
    This cannot be updated.
    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded.
        Defaults to 3. Minimum value is 1.
    grpc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe.
        Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed.
        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
        The grace period is the duration in seconds after the processes running in the pod are sent
        a termination signal and the time when the processes are forcibly halted with a kill signal.
        Set this value longer than the expected cleanup time for your process.
        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
        value overrides the value provided by the pod spec.
        Value must be non-negative integer. The value zero indicates stop immediately via
        the kill signal (no opportunity to shut down).
        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out.
        Defaults to 1 second. Minimum value is 1.
        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """
    exec?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeExec
    failureThreshold?: int
    grpc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeGrpc
    httpGet?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    tcpSocket?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket
    terminationGracePeriodSeconds?: int
    timeoutSeconds?: int

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeExec:
    r"""
    Exec specifies a command to execute in the container.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the
        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
        a shell, you need to explicitly call out to that shell.
        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """
    command?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeGrpc:
    r"""
    GRPC specifies a GRPC HealthCheckRequest.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest
        (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

        If this is not specified, the default behavior is defined by gRPC.
    """
    port: int

    service?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies an HTTP GET request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set
        "Host" in httpHeaders instead.
    httpHeaders : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host.
        Defaults to HTTP.
    """
    host?: str
    httpHeaders?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]
    path?: str
    port: int | str

    scheme?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name.
        This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies a connection to a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container.
        Number must be in the range 1 to 65535.
        Name must be an IANA_SVC_NAME.
    """
    host?: str
    port: int | str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """
    devicePath: str

    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecInitContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
        (which defaults to None).
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.

        If ReadOnly is true, and this field is set to Disabled, the mount is not made
        recursively read-only.  If this field is set to IfPossible, the mount is made
        recursively read-only, if it is supported by the container runtime.  If this
        field is set to Enabled, the mount is made recursively read-only if it is
        supported by the container runtime, otherwise the pod will not be started and
        an error will be generated to indicate the reason.

        If this field is set to IfPossible or Enabled, MountPropagation must be set to
        None (or be unspecified, which defaults to None).

        If this field is not specified, it is treated as an equivalent of Disabled.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """
    mountPath: str

    mountPropagation?: str
    name: str

    readOnly?: bool
    recursiveReadOnly?: str
    subPath?: str
    subPathExpr?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecOs:
    r"""
    Specifies the OS of the containers in the pod.
    Some pod and container fields are restricted if this is set.

    If the OS field is set to linux, the following fields must be unset:
    -securityContext.windowsOptions

    If the OS field is set to windows, following fields must be unset:
    - spec.hostPID
    - spec.hostIPC
    - spec.hostUsers
    - spec.securityContext.appArmorProfile
    - spec.securityContext.seLinuxOptions
    - spec.securityContext.seccompProfile
    - spec.securityContext.fsGroup
    - spec.securityContext.fsGroupChangePolicy
    - spec.securityContext.sysctls
    - spec.shareProcessNamespace
    - spec.securityContext.runAsUser
    - spec.securityContext.runAsGroup
    - spec.securityContext.supplementalGroups
    - spec.securityContext.supplementalGroupsPolicy
    - spec.containers[*].securityContext.appArmorProfile
    - spec.containers[*].securityContext.seLinuxOptions
    - spec.containers[*].securityContext.seccompProfile
    - spec.containers[*].securityContext.capabilities
    - spec.containers[*].securityContext.readOnlyRootFilesystem
    - spec.containers[*].securityContext.privileged
    - spec.containers[*].securityContext.allowPrivilegeEscalation
    - spec.containers[*].securityContext.procMount
    - spec.containers[*].securityContext.runAsUser
    - spec.containers[*].securityContext.runAsGroup

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the operating system. The currently supported values are linux and windows.
        Additional value may be defined in future and can be one of:
        https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
        Clients should expect to handle additional values and treat unrecognized values in this field as os: null
    """
    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecReadinessGatesItems0:
    r"""
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """
    conditionType: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourceClaimsItems0:
    r"""
    PodResourceClaim references exactly one ResourceClaim, either directly
    or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
    for the pod.

    It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
    Containers that need access to the ResourceClaim reference it with this name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name uniquely identifies this resource claim inside the pod.
        This must be a DNS_LABEL.
    resourceClaimName : str, default is Undefined, optional
        ResourceClaimName is the name of a ResourceClaim object in the same
        namespace as this pod.

        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
        be set.
    resourceClaimTemplateName : str, default is Undefined, optional
        ResourceClaimTemplateName is the name of a ResourceClaimTemplate
        object in the same namespace as this pod.

        The template will be used to create a new ResourceClaim, which will
        be bound to this pod. When this pod is deleted, the ResourceClaim
        will also be deleted. The pod name and resource name, along with a
        generated component, will be used to form a unique name for the
        ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

        This field is immutable and no changes will be made to the
        corresponding ResourceClaim by the control plane after creating the
        ResourceClaim.

        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
        be set.
    """
    name: str

    resourceClaimName?: str
    resourceClaimTemplateName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecResources:
    r"""
    Resources is the total amount of CPU and Memory resources required by all
    containers in the pod. It supports specifying Requests and Limits for
    "cpu" and "memory" resource names only. ResourceClaims are not supported.

    This field enables fine-grained control over resource allocation for the
    entire pod, allowing resource sharing among containers in a pod.

    This is an alpha field and requires enabling the PodLevelResources feature
    gate.

    Attributes
    ----------
    claims : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """
    claims?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourcesClaimsItems0]
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """
    name: str

    request?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSchedulingGatesItems0:
    r"""
    PodSchedulingGate is associated to a Pod to guard its scheduling.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the scheduling gate.
        Each scheduling gate must have a unique name field.
    """
    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContext:
    r"""
    SecurityContext holds pod-level security attributes and common container settings.
    Optional: Defaults to empty.  See type description for default values of each field.

    Attributes
    ----------
    appArmorProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextAppArmorProfile, default is Undefined, optional
        app armor profile
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod.
        Some volume types allow the Kubelet to change the ownership of that volume
        to be owned by the pod:

        1. The owning GID will be the FSGroup
        2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
        3. The permission bits are OR'd with rw-rw----

        If unset, the Kubelet will not modify the ownership and permissions of any volume.
        Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
        before being exposed inside Pod. This field will only apply to
        volume types which support fsGroup based ownership(and permissions).
        It will have no effect on ephemeral volume types such as: secret, configmaps
        and emptydir.
        Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
        Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process.
        Uses runtime default if unset.
        May also be set in SecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence
        for that container.
        Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
        If true, the Kubelet will validate the image at runtime to ensure that it
        does not run as UID 0 (root) and fail to start the container if it does.
        If unset or false, no such validation will be performed.
        May also be set in SecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process.
        Defaults to user specified in image metadata if unspecified.
        May also be set in SecurityContext.  If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence
        for that container.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxChangePolicy : str, default is Undefined, optional
        seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
        It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
        Valid values are "MountOption" and "Recursive".

        "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
        This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

        "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
        This requires all Pods that share the same volume to use the same SELinux label.
        It is not possible to share the same volume among privileged and unprivileged Pods.
        Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
        whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
        CSIDriver instance. Other volumes are always re-labelled recursively.
        "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

        If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
        If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
        and "Recursive" for all other volumes.

        This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

        All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
        Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in
        addition to the container's primary GID and fsGroup (if specified).  If
        the SupplementalGroupsPolicy feature is enabled, the
        supplementalGroupsPolicy field determines whether these are in addition
        to or instead of any group memberships defined in the container image.
        If unspecified, no additional groups are added, though group memberships
        defined in the container image may still be used, depending on the
        supplementalGroupsPolicy field.
        Note that this field cannot be set when spec.os.name is windows.
    supplementalGroupsPolicy : str, default is Undefined, optional
        Defines how supplemental groups of the first container processes are calculated.
        Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
        (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
        and the container runtime must implement support for this feature.
        Note that this field cannot be set when spec.os.name is windows.
    sysctls : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
        sysctls (by the container runtime) might fail to launch.
        Note that this field cannot be set when spec.os.name is windows.
    windowsOptions : PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """
    appArmorProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextAppArmorProfile
    fsGroup?: int
    fsGroupChangePolicy?: str
    runAsGroup?: int
    runAsNonRoot?: bool
    runAsUser?: int
    seLinuxChangePolicy?: str
    seLinuxOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeLinuxOptions
    seccompProfile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeccompProfile
    supplementalGroups?: [int]
    supplementalGroupsPolicy?: str
    sysctls?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSysctlsItems0]
    windowsOptions?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextWindowsOptions

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextAppArmorProfile:
    r"""
    appArmorProfile is the AppArmor options to use by the containers in this pod.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile loaded on the node that should be used.
        The profile must be preconfigured on the node to work.
        Must match the loaded name of the profile.
        Must be set if and only if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of AppArmor profile will be applied.
        Valid options are:
          Localhost - a profile pre-loaded on the node.
          RuntimeDefault - the container runtime's default profile.
          Unconfined - no AppArmor enforcement.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to all containers.
    If unspecified, the container runtime will allocate a random SELinux context for each
    container.  May also be set in SecurityContext.  If set in
    both SecurityContext and PodSecurityContext, the value specified in SecurityContext
    takes precedence for that container.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """
    level?: str
    role?: str
    $type?: str
    user?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSeccompProfile:
    r"""
    The seccomp options to use by the containers in this pod.
    Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used.
        The profile must be preconfigured on the node to work.
        Must be a descending path, relative to the kubelet's configured seccomp profile location.
        Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied.
        Valid options are:

        Localhost - a profile defined in a file on the node should be used.
        RuntimeDefault - the container runtime default profile should be used.
        Unconfined - no profile should be applied.
    """
    localhostProfile?: str
    $type: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextSysctlsItems0:
    r"""
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """
    name: str

    value: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecSecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers.
    If unspecified, the options within a container's SecurityContext will be used.
    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook
        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
        GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
        All of a Pod's containers must have the same effective HostProcess value
        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
        In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process.
        Defaults to the user specified in image metadata if unspecified.
        May also be set in PodSecurityContext. If set in both SecurityContext and
        PodSecurityContext, the value specified in SecurityContext takes precedence.
    """
    gmsaCredentialSpec?: str
    gmsaCredentialSpecName?: str
    hostProcess?: bool
    runAsUserName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches
    the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects.
        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys.
        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value.
        Valid operators are Exists and Equal. Defaults to Equal.
        Exists is equivalent to wildcard for value, so that a pod can
        tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be
        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
        it is not set, which means tolerate the taint forever (do not evict). Zero and
        negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to.
        If the operator is Exists, the value should be empty, otherwise just a regular string.
    """
    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which
        spreading will be calculated. The keys are used to lookup values from the
        incoming pod labels, those key-value labels are ANDed with labelSelector
        to select the group of existing pods over which spreading will be calculated
        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
        MatchLabelKeys cannot be set when LabelSelector isn't set.
        Keys that don't exist in the incoming pod labels will
        be ignored. A null or empty list means only match against labelSelector.

        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed.
        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
        between the number of matching pods in the target topology and the global minimum.
        The global minimum is the minimum number of matching pods in an eligible domain
        or zero if the number of eligible domains is less than MinDomains.
        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
        labelSelector spread as 2/2/1:
        In this case, the global minimum is 1.
        | zone1 | zone2 | zone3 |
        |  P P  |  P P  |   P   |
        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
        violate MaxSkew(1).
        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
        to topologies that satisfy it.
        It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains.
        When the number of eligible domains with matching topology keys is less than minDomains,
        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
        this value has no effect on scheduling.
        As a result, when the number of eligible domains is less than minDomains,
        scheduler won't schedule more than maxSkew Pods to those domains.
        If value is nil, the constraint behaves as if MinDomains is equal to 1.
        Valid values are integers greater than 0.
        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
        labelSelector spread as 2/2/2:
        | zone1 | zone2 | zone3 |
        |  P P  |  P P  |  P P  |
        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
        In this situation, new pod with the same labelSelector cannot be scheduled,
        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
        it will violate MaxSkew.
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
        when calculating pod topology spread skew. Options are:
        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

        If this value is nil, the behavior is equivalent to the Honor policy.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating
        pod topology spread skew. Options are:
        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
        has a toleration, are included.
        - Ignore: node taints are ignored. All nodes are included.

        If this value is nil, the behavior is equivalent to the Ignore policy.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key
        and identical values are considered to be in the same topology.
        We consider each <key, value> as a "bucket", and try to put balanced number
        of pods into each bucket.
        We define a domain as a particular instance of a topology.
        Also, we define an eligible domain as a domain whose nodes meet the requirements of
        nodeAffinityPolicy and nodeTaintsPolicy.
        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
        It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
        the spread constraint.
        - DoNotSchedule (default) tells the scheduler not to schedule it.
        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
          but giving higher precedence to topologies that would help reduce the
          skew.
        A constraint is considered "Unsatisfiable" for an incoming pod
        if and only if every possible node assignment for that pod would violate
        "MaxSkew" on some topology.
        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
        labelSelector spread as 3/1/1:
        | zone1 | zone2 | zone3 |
        | P P P |   P   |   P   |
        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
        won't make it *more* imbalanced.
        It's a required field.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector
    matchLabelKeys?: [str]
    maxSkew: int

    minDomains?: int
    nodeAffinityPolicy?: str
    nodeTaintsPolicy?: str
    topologyKey: str

    whenUnsatisfiable: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector:
    r"""
    LabelSelector is used to find matching pods.
    Pods that match this label selector are counted to determine the number of pods
    in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0:
    r"""
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    image : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Image, default is Undefined, optional
        image
    iscsi : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume.
        Must be a DNS_LABEL and unique within the pod.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """
    awsElasticBlockStore?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AwsElasticBlockStore
    azureDisk?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureDisk
    azureFile?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureFile
    cephfs?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cephfs
    cinder?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cinder
    configMap?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMap
    csi?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Csi
    downwardAPI?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPI
    emptyDir?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EmptyDir
    ephemeral?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Ephemeral
    fc?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Fc
    flexVolume?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolume
    flocker?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Flocker
    gcePersistentDisk?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GcePersistentDisk
    gitRepo?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GitRepo
    glusterfs?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Glusterfs
    hostPath?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0HostPath
    image?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Image
    iscsi?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Iscsi
    name: str

    nfs?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Nfs
    persistentVolumeClaim?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PersistentVolumeClaim
    photonPersistentDisk?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PhotonPersistentDisk
    portworxVolume?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PortworxVolume
    projected?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Projected
    quobyte?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Quobyte
    rbd?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Rbd
    scaleIO?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIO
    secret?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Secret
    storageos?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Storageos
    vsphereVolume?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0VsphereVolume

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AwsElasticBlockStore:
    r"""
    awsElasticBlockStore represents an AWS Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
    awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount.
        If omitted, the default is to mount by volume name.
        Examples: For volume /dev/sda1, you specify the partition as "1".
        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """
    fsType?: str
    partition?: int
    readOnly?: bool
    volumeID: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureDisk:
    r"""
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
    Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
    are redirected to the disk.csi.azure.com CSI driver.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is "ext4", optional
        fsType is Filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    """
    cachingMode?: str
    diskName: str

    diskURI: str

    fsType?: str = "ext4"
    kind?: str
    readOnly?: bool = False

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0AzureFile:
    r"""
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.
    Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
    are redirected to the file.csi.azure.com CSI driver.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """
    readOnly?: bool
    secretName: str

    shareName: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cephfs:
    r"""
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
    Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """
    monitors: [str]

    path?: str
    readOnly?: bool
    secretFile?: str
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CephfsSecretRef
    user?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CephfsSecretRef:
    r"""
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Cinder:
    r"""
    cinder represents a cinder volume attached and mounted on kubelets host machine.
    Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
    are redirected to the cinder.csi.openstack.org CSI driver.
    More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """
    fsType?: str
    readOnly?: bool
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CinderSecretRef
    volumeID: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CinderSecretRef:
    r"""
    secretRef is optional: points to a secret object containing parameters used to connect
    to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMap:
    r"""
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """
    defaultMode?: int
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMapItemsItems0]
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Csi:
    r"""
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume.
        Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs".
        If not provided, the empty value is passed to the associated CSI driver
        which will determine the default filesystem to apply.
    nodePublishSecretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume.
        Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI
        driver. Consult your driver's documentation for supported values.
    """
    driver: str

    fsType?: str
    nodePublishSecretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef
    readOnly?: bool
    volumeAttributes?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef:
    r"""
    nodePublishSecretRef is a reference to the secret object containing
    sensitive information to pass to the CSI driver to complete the CSI
    NodePublishVolume and NodeUnpublishVolume calls.
    This field is optional, and  may be empty if no secret is required. If the
    secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPI:
    r"""
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a
        Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """
    defaultMode?: int
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """
    fieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef
    mode?: int
    path: str

    resourceFieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EmptyDir:
    r"""
    emptyDir represents a temporary directory that shares a pod's lifetime.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory.
        The default is "" which means to use the node's default medium.
        Must be an empty string (default) or Memory.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume.
        The size limit is also applicable for memory medium.
        The maximum usage on memory medium EmptyDir would be the minimum value between
        the SizeLimit specified here and the sum of memory limits of all containers in a pod.
        The default is nil which means that the limit is undefined.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """
    medium?: str
    sizeLimit?: int | str

    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Ephemeral:
    r"""
    ephemeral represents a volume that is handled by a cluster storage driver.
    The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
    and deleted when the pod is removed.

    Use this if:
    a) the volume is only needed while the pod runs,
    b) features of normal volumes like restoring from snapshot or capacity
       tracking are needed,
    c) the storage driver is specified through a storage class, and
    d) the storage driver supports dynamic volume provisioning through
       a PersistentVolumeClaim (see EphemeralVolumeSource for more
       information on the connection between this volume type
       and PersistentVolumeClaim).

    Use PersistentVolumeClaim or one of the vendor-specific
    APIs for volumes that persist for longer than the lifecycle
    of an individual pod.

    Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
    be used that way - see the documentation of the driver for
    more information.

    A pod can use both types of ephemeral volumes and
    persistent volumes at the same time.

    Attributes
    ----------
    volumeClaimTemplate : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """
    volumeClaimTemplate?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate:
    r"""
    Will be used to create a stand-alone PVC to provision the volume.
    The pod in which this EphemeralVolumeSource is embedded will be the
    owner of the PVC, i.e. the PVC will be deleted together with the
    pod.  The name of the PVC will be `<pod name>-<volume name>` where
    `<volume name>` is the name from the `PodSpec.Volumes` array
    entry. Pod validation will reject the pod if the concatenated name
    is not valid for a PVC (for example, too long).

    An existing PVC with that name that is not owned by the pod
    will *not* be used for the pod to avoid using an unrelated
    volume by mistake. Starting the pod is then blocked until
    the unrelated PVC is removed. If such a pre-created PVC is
    meant to be used by the pod, the PVC has to updated with an
    owner reference to the pod once the pod exists. Normally
    this should not be necessary, but it may be useful when
    manually reconstructing a broken cluster.

    This field is read-only and no changes will be made by Kubernetes
    to the PVC after it has been created.

    Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC
        when creating it. No other fields are allowed and will be rejected during
        validation.
    spec : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """
    metadata?: any
    spec: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    r"""
    The specification for the PersistentVolumeClaim. The entire content is
    copied unchanged into the PVC that gets created from this
    template. The same fields as in a PersistentVolumeClaim
    are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeAttributesClassName : str, default is Undefined, optional
        volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
        If specified, the CSI driver will create or update the volume with the attributes defined
        in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
        it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
        will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
        If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
        will be set by the persistentvolume controller if it exists.
        If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
        set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
        exists.
        More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
        (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim.
        Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """
    accessModes?: [str]
    dataSource?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource
    dataSourceRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef
    resources?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources
    selector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector
    storageClassName?: str
    volumeAttributesClassName?: str
    volumeMode?: str
    volumeName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    r"""
    dataSource field can be used to specify either:
    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
    * An existing PVC (PersistentVolumeClaim)
    If the provisioner or an external controller can support the specified data source,
    it will create a new volume based on the contents of the specified data source.
    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
    If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """
    apiGroup?: str
    kind: str

    name: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    r"""
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
    volume is desired. This may be any object from a non-empty API group (non
    core object) or a PersistentVolumeClaim object.
    When this field is specified, volume binding will only succeed if the type of
    the specified object matches some installed volume populator or dynamic
    provisioner.
    This field will replace the functionality of the dataSource field and as such
    if both fields are non-empty, they must have the same value. For backwards
    compatibility, when namespace isn't specified in dataSourceRef,
    both fields (dataSource and dataSourceRef) will be set to the same
    value automatically if one of them is empty and the other is non-empty.
    When namespace is specified in dataSourceRef,
    dataSource isn't set to the same value and must be empty.
    There are three important differences between dataSource and dataSourceRef:
    * While dataSource only allows two specific types of objects, dataSourceRef
      allows any non-core object, as well as PersistentVolumeClaim objects.
    * While dataSource ignores disallowed values (dropping them), dataSourceRef
      preserves all values, and generates an error if a disallowed value is
      specified.
    * While dataSource only allows local objects, dataSourceRef allows objects
      in any namespaces.
    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced
        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """
    apiGroup?: str
    kind: str

    name: str

    namespace?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    r"""
    resources represents the minimum resources the volume should have.
    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
    that are lower than previous value but must still be higher than capacity recorded in the
    status field of the claim.
    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    r"""
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Fc:
    r"""
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids)
        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """
    fsType?: str
    lun?: int
    readOnly?: bool
    targetWWNs?: [str]
    wwids?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolume:
    r"""
    flexVolume represents a generic volume resource that is
    provisioned/attached using an exec based plugin.
    Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """
    driver: str

    fsType?: str
    options?: {str:str}
    readOnly?: bool
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolumeSecretRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0FlexVolumeSecretRef:
    r"""
    secretRef is Optional: secretRef is reference to the secret object containing
    sensitive information to pass to the plugin scripts. This may be
    empty if no secret object is specified. If the secret object
    contains more than one secret, all secrets are passed to the plugin
    scripts.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Flocker:
    r"""
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
    Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
        should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """
    datasetName?: str
    datasetUUID?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GcePersistentDisk:
    r"""
    gcePersistentDisk represents a GCE Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
    gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount.
        If omitted, the default is to mount by volume name.
        Examples: For volume /dev/sda1, you specify the partition as "1".
        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """
    fsType?: str
    partition?: int
    pdName: str

    readOnly?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0GitRepo:
    r"""
    gitRepo represents a git repository at a particular revision.
    Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
    EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
    into the Pod's container.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name.
        Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
        git repository.  Otherwise, if specified, the volume will contain the git repository in
        the subdirectory with the given name.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """
    directory?: str
    repository: str

    revision?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Glusterfs:
    r"""
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
    Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
    More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology.
        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path.
        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
        Defaults to false.
        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """
    endpoints: str

    path: str

    readOnly?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0HostPath:
    r"""
    hostPath represents a pre-existing file or directory on the host
    machine that is directly exposed to the container. This is generally
    used for system agents or other privileged things that are allowed
    to see the host machine. Most containers will NOT need this.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host.
        If the path is a symlink, it will follow the link to the real path.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume
        Defaults to ""
        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """
    path: str

    $type?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Image:
    r"""
    image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
    The volume is resolved at pod startup depending on which PullPolicy value is provided:

    - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
    - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
    - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

    The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
    A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
    The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
    The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
    The volume will be mounted read-only (ro) and non-executable files (noexec).
    Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33.
    The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        Policy for pulling OCI objects. Possible values are:
        Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
        Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
        IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
    reference : str, default is Undefined, optional
        Required: Image or artifact reference to be used.
        Behaves in the same way as pod.spec.containers[*].image.
        Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
        More info: https://kubernetes.io/docs/concepts/containers/images
        This field is optional to allow higher level config management to default or override
        container images in workload controllers like Deployments and StatefulSets.
    """
    pullPolicy?: str
    reference?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Iscsi:
    r"""
    iscsi represents an ISCSI Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name.
        If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
        <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is "default", optional
        iscsiInterface is the interface Name that uses an iSCSI transport.
        Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
        is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
        is other than default (typically TCP ports 860 and 3260).
    """
    chapAuthDiscovery?: bool
    chapAuthSession?: bool
    fsType?: str
    initiatorName?: str
    iqn: str

    iscsiInterface?: str = "default"
    lun: int

    portals?: [str]
    readOnly?: bool
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0IscsiSecretRef
    targetPortal: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0IscsiSecretRef:
    r"""
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Nfs:
    r"""
    nfs represents an NFS mount on the host that shares a pod's lifetime
    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions.
        Defaults to false.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """
    path: str

    readOnly?: bool
    server: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PersistentVolumeClaim:
    r"""
    persistentVolumeClaimVolumeSource represents a reference to a
    PersistentVolumeClaim in the same namespace.
    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts.
        Default false.
    """
    claimName: str

    readOnly?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PhotonPersistentDisk:
    r"""
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
    Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """
    fsType?: str
    pdID: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0PortworxVolume:
    r"""
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
    Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
    are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
    is on.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """
    fsType?: str
    readOnly?: bool
    volumeID: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Projected:
    r"""
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    sources : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections. Each entry in this list
        handles one source.
    """
    defaultMode?: int
    sources?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types.
    Exactly one of these fields must be set.

    Attributes
    ----------
    clusterTrustBundle : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle, default is Undefined, optional
        cluster trust bundle
    configMap : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """
    clusterTrustBundle?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle
    configMap?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap
    downwardAPI?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI
    secret?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret
    serviceAccountToken?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle:
    r"""
    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
    of ClusterTrustBundle objects in an auto-updating file.

    Alpha, gated by the ClusterTrustBundleProjection feature gate.

    ClusterTrustBundle objects can either be selected by name, or by the
    combination of signer name and a label selector.

    Kubelet performs aggressive normalization of the PEM contents written
    into the pod filesystem.  Esoteric PEM features such as inter-block
    comments and block headers are stripped.  Certificates are deduplicated.
    The ordering of certificates within the file is arbitrary, and Kubelet
    may change the order over time.

    Attributes
    ----------
    labelSelector : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
        with signerName and labelSelector.
    optional : bool, default is Undefined, optional
        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
        aren't available.  If using name, then the named ClusterTrustBundle is
        allowed not to exist.  If using signerName, then the combination of
        signerName and labelSelector is allowed to match zero
        ClusterTrustBundles.
    path : str, default is Undefined, required
        Relative path from the volume root to write the bundle.
    signerName : str, default is Undefined, optional
        Select all ClusterTrustBundles that match this signer name.
        Mutually-exclusive with name.  The contents of all selected
        ClusterTrustBundles will be unified and deduplicated.
    """
    labelSelector?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector
    name?: str
    optional?: bool
    path: str

    signerName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector:
    r"""
    Select all ClusterTrustBundles that match this label selector.  Only has
    effect if signerName is set.  Mutually-exclusive with name.  If unset,
    interpreted as "match nothing".  If set but empty, interpreted as "match
    everything".

    Attributes
    ----------
    matchExpressions : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the ConfigMap,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """
    fieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef
    mode?: int
    path: str

    resourceFieldRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret:
    r"""
    secret information about the secret data to project

    Attributes
    ----------
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]
    name?: str = ""
    optional?: bool

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token
        must identify itself with an identifier specified in the audience of the
        token, and otherwise should reject the token. The audience defaults to the
        identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service
        account token. As the token approaches expiration, the kubelet volume
        plugin will proactively rotate the service account token. The kubelet will
        start trying to rotate the token if the token is older than 80 percent of
        its time to live or if the token is older than 24 hours.Defaults to 1 hour
        and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the
        token into.
    """
    audience?: str
    expirationSeconds?: int
    path: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Quobyte:
    r"""
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
    Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to
        Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions.
        Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services
        specified as a string as host:port pair (multiple entries are separated with commas)
        which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend
        Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to
        Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """
    group?: str
    readOnly?: bool
    registry: str

    tenant?: str
    user?: str
    volume: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Rbd:
    r"""
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
    Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
    More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
    image : str, default is Undefined, required
        image is the rados image name.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is "/etc/ceph/keyring", optional
        keyring is the path to key ring for RBDUser.
        Default is /etc/ceph/keyring.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is "rbd", optional
        pool is the rados pool name.
        Default is rbd.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is "admin", optional
        user is the rados user name.
        Default is admin.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """
    fsType?: str
    image: str

    keyring?: str = "/etc/ceph/keyring"
    monitors: [str]

    pool?: str = "rbd"
    readOnly?: bool
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0RbdSecretRef
    user?: str = "admin"

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0RbdSecretRef:
    r"""
    secretRef is name of the authentication secret for RBDUser. If provided
    overrides keyring.
    Default is nil.
    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIO:
    r"""
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
    Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.

    Attributes
    ----------
    fsType : str, default is "xfs", optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs".
        Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is "ThinProvisioned", optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
        Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system
        that is associated with this volume source.
    """
    fsType?: str = "xfs"
    gateway: str

    protectionDomain?: str
    readOnly?: bool
    secretRef: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool
    storageMode?: str = "ThinProvisioned"
    storagePool?: str
    system: str

    volumeName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0ScaleIOSecretRef:
    r"""
    secretRef references to the secret for ScaleIO user and other
    sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Secret:
    r"""
    secret represents a secret that should populate this volume.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values
        for mode bits. Defaults to 0644.
        Directories within the path are not affected by this setting.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    items : [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value. If specified, the listed keys will be
        projected into the specified paths, and unlisted keys will not be
        present. If a key is specified which is not present in the Secret,
        the volume setup will error unless it is marked optional. Paths must be
        relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """
    defaultMode?: int
    items?: [PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0SecretItemsItems0]
    optional?: bool
    secretName?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
        If not specified, the volume defaultMode will be used.
        This might be in conflict with other options that affect the file
        mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0Storageos:
    r"""
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
    Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume
        names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no
        namespace is specified then the Pod's namespace will be used.  This allows the
        Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
        Set VolumeName to any name to override the default behaviour.
        Set to "default" if you are not using namespaces within StorageOS.
        Namespaces that do not pre-exist within StorageOS will be created.
    """
    fsType?: str
    readOnly?: bool
    secretRef?: PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0StorageosSecretRef
    volumeName?: str
    volumeNamespace?: str

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0StorageosSecretRef:
    r"""
    secretRef specifies the secret to use for obtaining the StorageOS API
    credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PostgresqlCnpgIoV1PoolerSpecTemplateSpecVolumesItems0VsphereVolume:
    r"""
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
    Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
    are redirected to the csi.vsphere.vmware.com CSI driver.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """
    fsType?: str
    storagePolicyID?: str
    storagePolicyName?: str
    volumePath: str

schema PostgresqlCnpgIoV1PoolerStatus:
    r"""
    Most recently observed status of the Pooler. This data may not be up to
    date. Populated by the system. Read-only.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    instances : int, default is Undefined, optional
        The number of pods trying to be scheduled
    secrets : PostgresqlCnpgIoV1PoolerStatusSecrets, default is Undefined, optional
        secrets
    """
    instances?: int
    secrets?: PostgresqlCnpgIoV1PoolerStatusSecrets

schema PostgresqlCnpgIoV1PoolerStatusSecrets:
    r"""
    The resource version of the config object

    Attributes
    ----------
    clientCA : PostgresqlCnpgIoV1PoolerStatusSecretsClientCA, default is Undefined, optional
        client c a
    pgBouncerSecrets : PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecrets, default is Undefined, optional
        pg bouncer secrets
    serverCA : PostgresqlCnpgIoV1PoolerStatusSecretsServerCA, default is Undefined, optional
        server c a
    serverTLS : PostgresqlCnpgIoV1PoolerStatusSecretsServerTLS, default is Undefined, optional
        server TLS
    """
    clientCA?: PostgresqlCnpgIoV1PoolerStatusSecretsClientCA
    pgBouncerSecrets?: PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecrets
    serverCA?: PostgresqlCnpgIoV1PoolerStatusSecretsServerCA
    serverTLS?: PostgresqlCnpgIoV1PoolerStatusSecretsServerTLS

schema PostgresqlCnpgIoV1PoolerStatusSecretsClientCA:
    r"""
    The client CA secret version

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the secret
    version : str, default is Undefined, optional
        The ResourceVersion of the secret
    """
    name?: str
    version?: str

schema PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecrets:
    r"""
    The version of the secrets used by PgBouncer

    Attributes
    ----------
    authQuery : PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecretsAuthQuery, default is Undefined, optional
        auth query
    """
    authQuery?: PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecretsAuthQuery

schema PostgresqlCnpgIoV1PoolerStatusSecretsPgBouncerSecretsAuthQuery:
    r"""
    The auth query secret version

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the secret
    version : str, default is Undefined, optional
        The ResourceVersion of the secret
    """
    name?: str
    version?: str

schema PostgresqlCnpgIoV1PoolerStatusSecretsServerCA:
    r"""
    The server CA secret version

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the secret
    version : str, default is Undefined, optional
        The ResourceVersion of the secret
    """
    name?: str
    version?: str

schema PostgresqlCnpgIoV1PoolerStatusSecretsServerTLS:
    r"""
    The server TLS secret version

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the secret
    version : str, default is Undefined, optional
        The ResourceVersion of the secret
    """
    name?: str
    version?: str

