"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema Consumer:
    r"""
    jetstream nats io v1beta1 consumer

    Attributes
    ----------
    apiVersion : str, default is "jetstream.nats.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Consumer", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : JetstreamNatsIoV1beta1ConsumerSpec, default is Undefined, optional
        spec
    status : JetstreamNatsIoV1beta1ConsumerStatus, default is Undefined, optional
        status
    """
    apiVersion: "jetstream.nats.io/v1beta1" = "jetstream.nats.io/v1beta1"

    kind: "Consumer" = "Consumer"

    metadata?: v1.ObjectMeta
    spec?: JetstreamNatsIoV1beta1ConsumerSpec
    status?: JetstreamNatsIoV1beta1ConsumerStatus

schema JetstreamNatsIoV1beta1ConsumerSpec:
    r"""
    jetstream nats io v1beta1 consumer spec

    Attributes
    ----------
    ackPolicy : str, default is "none", optional
        How messages should be acknowledged.
    ackWait : str, default is "1ns", optional
        How long to allow messages to remain un-acknowledged before attempting redelivery.
    deliverGroup : str, default is Undefined, optional
        The name of a queue group.
    deliverPolicy : str, default is "all", optional
        deliver policy
    deliverSubject : str, default is Undefined, optional
        The subject to deliver observed messages, when not set, a pull-based Consumer is created.
    description : str, default is Undefined, optional
        The description of the consumer.
    durableName : str, default is Undefined, optional
        The name of the Consumer.
    filterSubject : str, default is Undefined, optional
        Select only a specific incoming subjects, supports wildcards.
    flowControl : bool, default is Undefined, optional
        Enables flow control.
    heartbeatInterval : str, default is Undefined, optional
        The interval used to deliver idle heartbeats for push-based consumers, in Go's time.Duration format.
    maxAckPending : int, default is Undefined, optional
        Maximum pending Acks before consumers are paused.
    maxDeliver : int, default is Undefined, optional
        max deliver
    optStartSeq : int, default is Undefined, optional
        opt start seq
    optStartTime : str, default is Undefined, optional
        Time format must be RFC3339.
    rateLimitBps : int, default is Undefined, optional
        Rate at which messages will be delivered to clients, expressed in bit per second.
    replayPolicy : str, default is "instant", optional
        How messages are sent.
    sampleFreq : str, default is Undefined, optional
        What percentage of acknowledgements should be samples for observability.
    streamName : str, default is Undefined, optional
        The name of the Stream to create the Consumer in.
    """
    ackPolicy?: "none" | "all" | "explicit" = "none"
    ackWait?: str = "1ns"
    deliverGroup?: str
    deliverPolicy?: "all" | "last" | "new" | "byStartSequence" | "byStartTime" = "all"
    deliverSubject?: str
    description?: str
    durableName?: str
    filterSubject?: str
    flowControl?: bool = False
    heartbeatInterval?: str
    maxAckPending?: int
    maxDeliver?: int
    optStartSeq?: int
    optStartTime?: str
    rateLimitBps?: int
    replayPolicy?: "instant" | "original" = "instant"
    sampleFreq?: str
    streamName?: str

    check:
        len(durableName) >= 1 if durableName
        _regex_match(str(durableName), r"^[^.*>]+$") if durableName
        maxDeliver >= -1 if maxDeliver not in [None, Undefined]
        optStartSeq >= 0 if optStartSeq not in [None, Undefined]

schema JetstreamNatsIoV1beta1ConsumerStatus:
    r"""
    jetstream nats io v1beta1 consumer status

    Attributes
    ----------
    conditions : [JetstreamNatsIoV1beta1ConsumerStatusConditionsItems0], default is Undefined, optional
        conditions
    observedGeneration : int, default is Undefined, optional
        observed generation
    """
    conditions?: [JetstreamNatsIoV1beta1ConsumerStatusConditionsItems0]
    observedGeneration?: int

schema JetstreamNatsIoV1beta1ConsumerStatusConditionsItems0:
    r"""
    jetstream nats io v1beta1 consumer status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, optional
        status
    $type : str, default is Undefined, optional
        type
    """
    lastTransitionTime?: str
    message?: str
    reason?: str
    status?: str
    $type?: str

