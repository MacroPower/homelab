"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    affinity : ValuesAffinity, optional
    crds : ValuesCrds, optional
    daemonSetAnnotations : ValuesDaemonSetAnnotations, optional
    daemonSetLabelsOverride : ValuesDaemonSetLabelsOverride, optional
    dnsPolicy : str, optional, default is "Default"
        DNS policy for Tetragon pods.

        https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
    enabled : bool, optional, default is True
        Global settings
    export : ValuesExport, optional
        Tetragon events export settings
    exportDirectory : str, optional, default is "/var/run/cilium/tetragon"
        Directory to put Tetragon JSON export files.
    extraConfigmapMounts : [any], optional
    extraHostPathMounts : [any], optional
    extraVolumes : [any], optional
    global : ValuesGlobal, optional
        Global values are values that can be accessed from any chart or subchart by exactly the same name.
    hostNetwork : bool, optional, default is True
        Configures whether Tetragon pods run on the host network.

        IMPORTANT: Tetragon must be on the host network for the process visibility to
        function properly.
    imagePullPolicy : str, optional, default is "IfNotPresent"
    imagePullSecrets : [any], optional
    nodeSelector : ValuesNodeSelector, optional
    podAnnotations : ValuesPodAnnotations, optional
    podLabels : ValuesPodLabels, optional
    podLabelsOverride : ValuesPodLabelsOverride, optional
    podSecurityContext : ValuesPodSecurityContext, optional
    priorityClassName : str, optional, default is ""
        Tetragon agent settings
    rthooks : ValuesRthooks, optional
        Method for installing Tetagon rthooks (tetragon-rthooks) daemonset
        The tetragon-rthooks daemonset is responsible for installing run-time hooks on the host.
        See: https://tetragon.io/docs/concepts/runtime-hooks
    selectorLabelsOverride : ValuesSelectorLabelsOverride, optional
    serviceAccount : ValuesServiceAccount, optional
    serviceLabelsOverride : ValuesServiceLabelsOverride, optional
    tetragon : ValuesTetragon, optional
    tetragonOperator : ValuesTetragonOperator, optional
        Tetragon Operator settings
    tolerations : [ValuesTolerationsItems0], optional
    updateStrategy : ValuesUpdateStrategy, optional
    """
    [...str]: any
    affinity?: ValuesAffinity
    crds?: ValuesCrds
    daemonSetAnnotations?: ValuesDaemonSetAnnotations
    daemonSetLabelsOverride?: ValuesDaemonSetLabelsOverride
    dnsPolicy?: str
    enabled?: bool
    export?: ValuesExport
    exportDirectory?: str
    extraConfigmapMounts?: [any]
    extraHostPathMounts?: [any]
    extraVolumes?: [any]
    global?: ValuesGlobal
    hostNetwork?: bool
    imagePullPolicy?: str
    imagePullSecrets?: [any]
    nodeSelector?: ValuesNodeSelector
    podAnnotations?: ValuesPodAnnotations
    podLabels?: ValuesPodLabels
    podLabelsOverride?: ValuesPodLabelsOverride
    podSecurityContext?: ValuesPodSecurityContext
    priorityClassName?: str
    rthooks?: ValuesRthooks
    selectorLabelsOverride?: ValuesSelectorLabelsOverride
    serviceAccount?: ValuesServiceAccount
    serviceLabelsOverride?: ValuesServiceLabelsOverride
    tetragon?: ValuesTetragon
    tetragonOperator?: ValuesTetragonOperator
    tolerations?: [ValuesTolerationsItems0]
    updateStrategy?: ValuesUpdateStrategy

schema ValuesAffinity:
    r"""
    ValuesAffinity
    """
    [...str]: any

schema ValuesCrds:
    r"""
    ValuesCrds

    Attributes
    ----------
    installMethod : str, optional, default is "operator"
        Method for installing CRDs. Supported values are: "operator", "helm" and "none".
        The "operator" method allows for fine-grained control over which CRDs are installed and by
        default doesn't perform CRD downgrades. These can be configured in tetragonOperator section.
        The "helm" method always installs all CRDs for the chart version.
    """
    [...str]: any
    installMethod?: str

schema ValuesDaemonSetAnnotations:
    r"""
    ValuesDaemonSetAnnotations
    """
    [...str]: any

schema ValuesDaemonSetLabelsOverride:
    r"""
    ValuesDaemonSetLabelsOverride
    """
    [...str]: any

schema ValuesExport:
    r"""
    Tetragon events export settings

    Attributes
    ----------
    filenames : [str], optional
        filenames defines list of files for fluentd to tail and export.
    mode : str, optional, default is "stdout"
        "stdout". "" to disable.
    resources : ValuesExportResources, optional
    securityContext : ValuesExportSecurityContext, optional
    stdout : ValuesExportStdout, optional
        stdout specific exporter settings
    """
    [...str]: any
    filenames?: [str]
    mode?: str
    resources?: ValuesExportResources
    securityContext?: ValuesExportSecurityContext
    stdout?: ValuesExportStdout

schema ValuesExportResources:
    r"""
    ValuesExportResources
    """
    [...str]: any

schema ValuesExportSecurityContext:
    r"""
    ValuesExportSecurityContext
    """
    [...str]: any

schema ValuesExportStdout:
    r"""
    stdout specific exporter settings

    Attributes
    ----------
    argsOverride : [any], optional
        specific manifest args to use
    commandOverride : [any], optional
        specific manifest command to use
    enabledArgs : bool, optional, default is True
        * When enabledArgs=true and argsOverride is not set, the args inserted will be the default ones for export-stdout.
        * When enabledArgs=true and argsOverride override is set, the args value inserted will be the value of argsOverride.
          This is useful for inserting another sidecar container that requires args override.
        * When enabledArgs=false, no command will be specified in the manifest and container's default args value will take over.
    enabledCommand : bool, optional, default is True
        * When enabledCommand=true and commandOverride is not set, the command inserted will be hubble-export-stdout.
          This supports the default for the current deployment instructions to deploy stdout-export sidecar container.
        * When enabledCommand=true and commandOverride override is set, the command inserted will be the value of commandOverride.
          This is useful for inserting another sidecar container that requires a command override.
        * When enabledCommand=false, no command will be specified in the manifest and container's default command will take over.
    extraEnv : [any], optional
    extraVolumeMounts : [any], optional
        Extra volume mounts to add to stdout export pod
    image : ValuesExportStdoutImage, optional
    """
    [...str]: any
    argsOverride?: [any]
    commandOverride?: [any]
    enabledArgs?: bool
    enabledCommand?: bool
    extraEnv?: [any]
    extraVolumeMounts?: [any]
    image?: ValuesExportStdoutImage

schema ValuesExportStdoutImage:
    r"""
    ValuesExportStdoutImage

    Attributes
    ----------
    override : any, optional, default is "~"
    repository : str, optional, default is "quay.io/cilium/hubble-export-stdout"
    tag : str, optional, default is "v1.1.0"
    """
    [...str]: any
    override?: any
    repository?: str
    tag?: str

schema ValuesGlobal:
    r"""
    Global values are values that can be accessed from any chart or subchart by exactly the same name.
    """
    [...str]: any

schema ValuesNodeSelector:
    r"""
    ValuesNodeSelector
    """
    [...str]: any

schema ValuesPodAnnotations:
    r"""
    ValuesPodAnnotations
    """
    [...str]: any

schema ValuesPodLabels:
    r"""
    ValuesPodLabels
    """
    [...str]: any

schema ValuesPodLabelsOverride:
    r"""
    ValuesPodLabelsOverride
    """
    [...str]: any

schema ValuesPodSecurityContext:
    r"""
    ValuesPodSecurityContext
    """
    [...str]: any

schema ValuesRthooks:
    r"""
    Method for installing Tetagon rthooks (tetragon-rthooks) daemonset
    The tetragon-rthooks daemonset is responsible for installing run-time hooks on the host.
    See: https://tetragon.io/docs/concepts/runtime-hooks

    Attributes
    ----------
    annotations : ValuesRthooksAnnotations, optional
        Annotations for the Tetragon rthooks daemonset
    enabled : bool, optional, default is False
        Enable the Tetragon rthooks daemonset
    extraHookArgs : ValuesRthooksExtraHookArgs, optional
        extra args to pass to tetragon-oci-hook
    extraLabels : ValuesRthooksExtraLabels, optional
        Extra labels for the Tetrargon rthooks daemonset
    extraVolumeMounts : [any], optional
        Extra volume mounts to add to the oci-hook-setup init container
    failAllowNamespaces : str, optional, default is ""
        Comma-separated list of namespaces to allow Pod creation for, in case tetragon-oci-hook fails to reach Tetragon agent.
        The namespace Tetragon is deployed in is always added as an exception and must not be added again.
    image : ValuesRthooksImage, optional
        image for the Tetragon rthooks pod
    installDir : str, optional, default is "/opt/tetragon"
        installDir is the host location where the tetragon-oci-hook binary will be installed
    interface : str, optional, default is ""
        Method to use for installing  rthooks. Values:

           "oci-hooks":
              Add an apppriate file to "/usr/share/containers/oci/hooks.d". Use this with CRI-O.
              See https://github.com/containers/common/blob/main/pkg/hooks/docs/oci-hooks.5.md
              for more details.
              Specific configuration for this interface can be found under "ociHooks".

           "nri-hook":
             Install the hook via NRI. Use this with containerd. Requires NRI being enabled.
             see: https://github.com/containerd/containerd/blob/main/docs/NRI.md.
             Specific configuration for this interface can be found under "nriHook".

    nriHook : ValuesRthooksNriHook, optional
        configuration for the "nri-hook" interface
    ociHooks : ValuesRthooksOciHooks, optional
        configuration for "oci-hooks" interface
    podAnnotations : ValuesRthooksPodAnnotations, optional
        Pod annotations for the Tetrargon rthooks pod
    podSecurityContext : ValuesRthooksPodSecurityContext, optional
        security context for the Tetrargon rthooks pod
    priorityClassName : str, optional, default is ""
        priorityClassName for the Tetrargon rthooks pod
    resources : ValuesRthooksResources, optional
        resources for the the oci-hook-setup init container
    serviceAccount : ValuesRthooksServiceAccount, optional
        rthooks service account.
    """
    [...str]: any
    annotations?: ValuesRthooksAnnotations
    enabled?: bool
    extraHookArgs?: ValuesRthooksExtraHookArgs
    extraLabels?: ValuesRthooksExtraLabels
    extraVolumeMounts?: [any]
    failAllowNamespaces?: str
    image?: ValuesRthooksImage
    installDir?: str
    interface?: str
    nriHook?: ValuesRthooksNriHook
    ociHooks?: ValuesRthooksOciHooks
    podAnnotations?: ValuesRthooksPodAnnotations
    podSecurityContext?: ValuesRthooksPodSecurityContext
    priorityClassName?: str
    resources?: ValuesRthooksResources
    serviceAccount?: ValuesRthooksServiceAccount

schema ValuesRthooksAnnotations:
    r"""
    Annotations for the Tetragon rthooks daemonset
    """
    [...str]: any

schema ValuesRthooksExtraHookArgs:
    r"""
    extra args to pass to tetragon-oci-hook
    """
    [...str]: any

schema ValuesRthooksExtraLabels:
    r"""
    Extra labels for the Tetrargon rthooks daemonset
    """
    [...str]: any

schema ValuesRthooksImage:
    r"""
    image for the Tetragon rthooks pod

    Attributes
    ----------
    override : any, optional, default is "~"
    repository : str, optional, default is "quay.io/cilium/tetragon-rthooks"
    tag : str, optional, default is "v0.5"
    """
    [...str]: any
    override?: any
    repository?: str
    tag?: str

schema ValuesRthooksNriHook:
    r"""
    configuration for the "nri-hook" interface

    Attributes
    ----------
    nriSocket : str, optional, default is "/var/run/nri/nri.sock"
        path to NRI socket
    """
    [...str]: any
    nriSocket?: str

schema ValuesRthooksOciHooks:
    r"""
    configuration for "oci-hooks" interface

    Attributes
    ----------
    hooksPath : str, optional, default is "/usr/share/containers/oci/hooks.d"
        directory to install .json file for running the hook
    """
    [...str]: any
    hooksPath?: str

schema ValuesRthooksPodAnnotations:
    r"""
    Pod annotations for the Tetrargon rthooks pod
    """
    [...str]: any

schema ValuesRthooksPodSecurityContext:
    r"""
    security context for the Tetrargon rthooks pod
    """
    [...str]: any

schema ValuesRthooksResources:
    r"""
    resources for the the oci-hook-setup init container
    """
    [...str]: any

schema ValuesRthooksServiceAccount:
    r"""
    rthooks service account.

    Attributes
    ----------
    name : str, optional, default is ""
    """
    [...str]: any
    name?: str

schema ValuesSelectorLabelsOverride:
    r"""
    ValuesSelectorLabelsOverride
    """
    [...str]: any

schema ValuesServiceAccount:
    r"""
    ValuesServiceAccount

    Attributes
    ----------
    annotations : ValuesServiceAccountAnnotations, optional
    create : bool, optional, default is True
    name : str, optional, default is ""
    """
    [...str]: any
    annotations?: ValuesServiceAccountAnnotations
    create?: bool
    name?: str

schema ValuesServiceAccountAnnotations:
    r"""
    ValuesServiceAccountAnnotations
    """
    [...str]: any

schema ValuesServiceLabelsOverride:
    r"""
    ValuesServiceLabelsOverride
    """
    [...str]: any

schema ValuesTetragon:
    r"""
    ValuesTetragon

    Attributes
    ----------
    argsOverride : [any], optional
        Override the arguments. For advanced users only.
    btf : str, optional, default is ""
        Set --btf option to explicitly specify an absolute path to a btf file. For advanced users only.
    cgidmap : ValuesTetragonCgidmap, optional
        Enabling cgidmap instructs the Tetragon agent to use cgroup ids (instead of cgroup names) for
        pod association. This feature depends on cri being enabled.
    clusterName : str, optional, default is ""
        Name of the cluster where Tetragon is installed. Tetragon uses this value
        to set the cluster_name field in GetEventsResponse messages.
    commandOverride : [any], optional
        Override the command. For advanced users only.
    cri : ValuesTetragonCri, optional
        Configure tetragon pod so that it can contact the CRI running on the host
    debug : bool, optional, default is False
        If you want to run Tetragon in debug mode change this value to true
    enableK8sAPI : bool, optional, default is True
        Access Kubernetes API to associate Tetragon events with Kubernetes pods.
    enableKeepSensorsOnExit : bool, optional, default is False
        Persistent enforcement to allow the enforcement policy to continue running even when its Tetragon process is gone.
    enableMsgHandlingLatency : bool, optional, default is False
        Enable latency monitoring in message handling
    enablePolicyFilter : bool, optional, default is "True"
        Enable policy filter. This is required for K8s namespace and pod-label filtering.
    enablePolicyFilterCgroupMap : bool, optional, default is False
        Enable policy filter cgroup map.
    enablePolicyFilterDebug : bool, optional, default is False
        Enable policy filter debug messages.
    enableProcessCred : bool, optional, default is False
        Enable Capabilities visibility in exec and kprobe events.
    enableProcessNs : bool, optional, default is False
        Enable Namespaces visibility in exec and kprobe events.
    enabled : bool, optional, default is True
    eventCacheRetries : int, optional, default is 15
        Configure the number of retries in tetragon's event cache.
    eventCacheRetryDelay : int, optional, default is 2
        Configure the delay (in seconds) between retires in tetragon's event cache.
    exportAllowList : str, optional, default is "{\"event_set\":[\"PROCESS_EXEC\", \"PROCESS_EXIT\", \"PROCESS_KPROBE\", \"PROCESS_UPROBE\", \"PROCESS_TRACEPOINT\", \"PROCESS_LSM\"]}"
        Allowlist for JSON export. For example, to export only process_connect events from
        the default namespace:

        exportAllowList: |
          {"namespace":["default"],"event_set":["PROCESS_EXEC"]}
    exportDenyList : str, optional, default is "{\"health_check\":true}\n{\"namespace\":[\"\", \"cilium\", \"kube-system\"]}"
        Denylist for JSON export **(for file sinks only; does not filter gRPC output)**. For example, to exclude exec events that look similar to
        Kubernetes health checks and all the events from kube-system namespace and the host:

        exportDenyList: |
          {"health_check":true}
          {"namespace":["kube-system",""]}

    exportFileCompress : bool, optional, default is False
        Compress rotated JSON export files.
    exportFileMaxBackups : int, optional, default is 5
        Number of rotated files to retain.
    exportFileMaxSizeMB : int, optional, default is 10
        Size in megabytes at which to rotate JSON export files.
    exportFilePerm : str, optional, default is "600"
        JSON export file permissions as a string. Typically it's either "600" (to restrict access to
        owner) or "640"/"644" (to allow read access by logs collector or another agent).
    exportFilename : str, optional, default is "tetragon.log"
        JSON export filename. Set it to an empty string to disable JSON export altogether.
    exportRateLimit : int, optional, default is -1
        Rate-limit event export (events per minute), Set to -1 to export all events.
    extraArgs : ValuesTetragonExtraArgs, optional
    extraEnv : [any], optional
    extraVolumeMounts : [any], optional
    fieldFilters : str, optional, default is ""
        Filters to include or exclude fields from Tetragon events. Without any filters, all
        fields are included by default. The presence of at least one inclusion filter implies
        default-exclude (i.e. any fields that don't match an inclusion filter will be
        excluded). Field paths are expressed using dot notation like "a.b.c" and multiple
        field paths can be separated by commas like "a.b.c,d,e.f". An optional "event_set" may
        be specified to apply the field filter to a specific set of events.

        For example, to exclude the "parent" field from all events and include the "process"
        field in PROCESS_KPROBE events while excluding all others:

        fieldFilters: |
          {"fields": "parent", "action": "EXCLUDE"}
          {"event_set": ["PROCESS_KPROBE"], "fields": "process", "action": "INCLUDE"}

    gops : ValuesTetragonGops, optional
    grpc : ValuesTetragonGrpc, optional
    healthGrpc : ValuesTetragonHealthGrpc, optional
    hostProcPath : str, optional, default is "/proc"
        Location of the host proc filesystem in the runtime environment. If the runtime runs in the
        host, the path is /proc. Exceptions to this are environments like kind, where the runtime itself
        does not run on the host.
    image : ValuesTetragonImage, optional
    livenessProbe : ValuesTetragonLivenessProbe, optional
        Overrides the default livenessProbe for the tetragon container.
    nameOverride : str, optional, default is ""
    podAnnotations : ValuesTetragonPodAnnotations, optional
        extraEnv:
          - name: foo
            value: bar
    pprof : ValuesTetragonPprof, optional
    processAncestors : ValuesTetragonProcessAncestors, optional
    processCacheGCInterval : str, optional, default is "30s"
        Configure the interval (suffixed with s for seconds, m for minutes, etc) for the process cache garbage collector.
    processCacheSize : int, optional, default is 65536
        Tetragon puts processes in an LRU cache. The cache is used to find ancestors
        for subsequently exec'ed processes.
    prometheus : ValuesTetragonPrometheus, optional
    redactionFilters : str, optional, default is ""
        Filters to redact secrets from the args fields in Tetragon events. To perform
        redactions, redaction filters define RE2 regular expressions in the `redact`
        field. Any capture groups in these RE2 regular expressions are redacted and
        replaced with "*****".

        For more control, you can select which binary or binaries should have their
        arguments redacted with the `binary_regex` field.

        NOTE: This feature uses RE2 as its regular expression library. Make sure that you follow
        RE2 regular expression guidelines as you may observe unexpected results otherwise.
        More information on RE2 syntax can be found [here](https://github.com/google/re2/wiki/Syntax).

        NOTE: When writing regular expressions in JSON, it is important to escape
        backslash characters. For instance `\Wpasswd\W?` would be written as
        `{"redact": "\\Wpasswd\\W?"}`.

        As a concrete example, the following will redact all passwords passed to
        processes with the "--password" argument:

          {"redact": ["--password(?:\\s+|=)(\\S*)"]}

        Now, an event which contains the string "--password=foo" would have that
        string replaced with "--password=*****".

        Suppose we also see some passwords passed via the -p shorthand for a specific binary, foo.
        We can also redact these as follows:

          {"binary_regex": ["(?:^|/)foo$"], "redact": ["-p(?:\\s+|=)(\\S*)"]}

        With both of the above redaction filters in place, we are now redacting all
        password arguments.
    resources : ValuesTetragonResources, optional
    securityContext : ValuesTetragonSecurityContext, optional
    """
    [...str]: any
    argsOverride?: [any]
    btf?: str
    cgidmap?: ValuesTetragonCgidmap
    clusterName?: str
    commandOverride?: [any]
    cri?: ValuesTetragonCri
    debug?: bool
    enableK8sAPI?: bool
    enableKeepSensorsOnExit?: bool
    enableMsgHandlingLatency?: bool
    enablePolicyFilter?: bool
    enablePolicyFilterCgroupMap?: bool
    enablePolicyFilterDebug?: bool
    enableProcessCred?: bool
    enableProcessNs?: bool
    enabled?: bool
    eventCacheRetries?: int
    eventCacheRetryDelay?: int
    exportAllowList?: str
    exportDenyList?: str
    exportFileCompress?: bool
    exportFileMaxBackups?: int
    exportFileMaxSizeMB?: int
    exportFilePerm?: str
    exportFilename?: str
    exportRateLimit?: int
    extraArgs?: ValuesTetragonExtraArgs
    extraEnv?: [any]
    extraVolumeMounts?: [any]
    fieldFilters?: str
    gops?: ValuesTetragonGops
    grpc?: ValuesTetragonGrpc
    healthGrpc?: ValuesTetragonHealthGrpc
    hostProcPath?: str
    image?: ValuesTetragonImage
    livenessProbe?: ValuesTetragonLivenessProbe
    nameOverride?: str
    podAnnotations?: ValuesTetragonPodAnnotations
    pprof?: ValuesTetragonPprof
    processAncestors?: ValuesTetragonProcessAncestors
    processCacheGCInterval?: str
    processCacheSize?: int
    prometheus?: ValuesTetragonPrometheus
    redactionFilters?: str
    resources?: ValuesTetragonResources
    securityContext?: ValuesTetragonSecurityContext

schema ValuesTetragonCgidmap:
    r"""
    Enabling cgidmap instructs the Tetragon agent to use cgroup ids (instead of cgroup names) for
    pod association. This feature depends on cri being enabled.

    Attributes
    ----------
    enabled : bool, optional, default is False
    """
    [...str]: any
    enabled?: bool

schema ValuesTetragonCri:
    r"""
    Configure tetragon pod so that it can contact the CRI running on the host

    Attributes
    ----------
    enabled : bool, optional, default is False
    socketHostPath : str, optional, default is ""
        path of the CRI socket on the host. This will typically be
        "/run/containerd/containerd.sock" for containerd or "/var/run/crio/crio.sock"  for crio.
    """
    [...str]: any
    enabled?: bool
    socketHostPath?: str

schema ValuesTetragonExtraArgs:
    r"""
    ValuesTetragonExtraArgs
    """
    [...str]: any

schema ValuesTetragonGops:
    r"""
    ValuesTetragonGops

    Attributes
    ----------
    address : str, optional, default is "localhost"
        The address at which to expose gops.
    enabled : bool, optional, default is True
        Whether to enable exposing gops server.
    port : int, optional, default is 8118
        The port at which to expose gops.
    """
    [...str]: any
    address?: str
    enabled?: bool
    port?: int

schema ValuesTetragonGrpc:
    r"""
    ValuesTetragonGrpc

    Attributes
    ----------
    address : str, optional, default is "localhost:54321"
        The address at which to expose gRPC. Examples: localhost:54321, unix:///var/run/cilum/tetragon/tetragon.sock
    enabled : bool, optional, default is True
        Whether to enable exposing Tetragon gRPC.
    """
    [...str]: any
    address?: str
    enabled?: bool

schema ValuesTetragonHealthGrpc:
    r"""
    ValuesTetragonHealthGrpc

    Attributes
    ----------
    enabled : bool, optional, default is True
        Whether to enable health gRPC server.
    interval : int, optional, default is 10
        The interval at which to check the health of the agent.
    port : int, optional, default is 6789
        The port at which to expose health gRPC.
    """
    [...str]: any
    enabled?: bool
    interval?: int
    port?: int

schema ValuesTetragonImage:
    r"""
    ValuesTetragonImage

    Attributes
    ----------
    override : any, optional, default is "~"
    repository : str, optional, default is "quay.io/cilium/tetragon"
    tag : str, optional, default is "v1.5.0"
    """
    [...str]: any
    override?: any
    repository?: str
    tag?: str

schema ValuesTetragonLivenessProbe:
    r"""
    Overrides the default livenessProbe for the tetragon container.
    """
    [...str]: any

schema ValuesTetragonOperator:
    r"""
    Tetragon Operator settings

    Attributes
    ----------
    affinity : ValuesTetragonOperatorAffinity, optional
    annotations : ValuesTetragonOperatorAnnotations, optional
        Annotations for the Tetragon Operator Deployment.
    enabled : bool, optional, default is True
        Enables the Tetragon Operator.
    extraLabels : ValuesTetragonOperatorExtraLabels, optional
        Extra labels to be added on the Tetragon Operator Deployment.
    extraPodLabels : ValuesTetragonOperatorExtraPodLabels, optional
        Extra labels to be added on the Tetragon Operator Deployment Pods.
    extraVolumeMounts : [any], optional
    extraVolumes : [any], optional
        Extra volumes for the Tetragon Operator Deployment.
    failoverLease : ValuesTetragonOperatorFailoverLease, optional
        Lease handling for an automated failover when running multiple replicas
    forceUpdateCRDs : bool, optional, default is False
    image : ValuesTetragonOperatorImage, optional
        tetragon-operator image.
    nameOverride : str, optional, default is ""
        The name of the Tetragon Operator deployment.
    nodeSelector : ValuesTetragonOperatorNodeSelector, optional
        Steer the Tetragon Operator Deployment Pod placement via nodeSelector, tolerations and affinity rules.
    podAnnotations : ValuesTetragonOperatorPodAnnotations, optional
        Annotations for the Tetragon Operator Deployment Pods.
    podInfo : ValuesTetragonOperatorPodInfo, optional
    podSecurityContext : ValuesTetragonOperatorPodSecurityContext, optional
        securityContext for the Tetragon Operator Deployment Pods.
    priorityClassName : str, optional, default is ""
        priorityClassName for the Tetragon Operator Deployment Pods.
    prometheus : ValuesTetragonOperatorPrometheus, optional
    replicas : int, optional, default is 1
        Number of replicas to run for the tetragon-operator deployment
    resources : ValuesTetragonOperatorResources, optional
        resources for the Tetragon Operator Deployment Pod container.
    securityContext : ValuesTetragonOperatorSecurityContext, optional
        securityContext for the Tetragon Operator Deployment Pod container.
    serviceAccount : ValuesTetragonOperatorServiceAccount, optional
        tetragon-operator service account.
    strategy : ValuesTetragonOperatorStrategy, optional
        resources for the Tetragon Operator Deployment update strategy
    tolerations : [any], optional
    tracingPolicy : ValuesTetragonOperatorTracingPolicy, optional
    """
    [...str]: any
    affinity?: ValuesTetragonOperatorAffinity
    annotations?: ValuesTetragonOperatorAnnotations
    enabled?: bool
    extraLabels?: ValuesTetragonOperatorExtraLabels
    extraPodLabels?: ValuesTetragonOperatorExtraPodLabels
    extraVolumeMounts?: [any]
    extraVolumes?: [any]
    failoverLease?: ValuesTetragonOperatorFailoverLease
    forceUpdateCRDs?: bool
    image?: ValuesTetragonOperatorImage
    nameOverride?: str
    nodeSelector?: ValuesTetragonOperatorNodeSelector
    podAnnotations?: ValuesTetragonOperatorPodAnnotations
    podInfo?: ValuesTetragonOperatorPodInfo
    podSecurityContext?: ValuesTetragonOperatorPodSecurityContext
    priorityClassName?: str
    prometheus?: ValuesTetragonOperatorPrometheus
    replicas?: int
    resources?: ValuesTetragonOperatorResources
    securityContext?: ValuesTetragonOperatorSecurityContext
    serviceAccount?: ValuesTetragonOperatorServiceAccount
    strategy?: ValuesTetragonOperatorStrategy
    tolerations?: [any]
    tracingPolicy?: ValuesTetragonOperatorTracingPolicy

schema ValuesTetragonOperatorAffinity:
    r"""
    ValuesTetragonOperatorAffinity

    Attributes
    ----------
    podAntiAffinity : ValuesTetragonOperatorAffinityPodAntiAffinity, optional
    """
    [...str]: any
    podAntiAffinity?: ValuesTetragonOperatorAffinityPodAntiAffinity

schema ValuesTetragonOperatorAffinityPodAntiAffinity:
    r"""
    ValuesTetragonOperatorAffinityPodAntiAffinity

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], optional
    """
    [...str]: any
    preferredDuringSchedulingIgnoredDuringExecution?: [ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

schema ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0

    Attributes
    ----------
    podAffinityTerm : ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, optional
    weight : int, optional, default is 100
    """
    [...str]: any
    podAffinityTerm?: ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm
    weight?: int

schema ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    Attributes
    ----------
    labelSelector : ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, optional
    topologyKey : str, optional, default is "kubernetes.io/hostname"
    """
    [...str]: any
    labelSelector?: ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    topologyKey?: str

schema ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    Attributes
    ----------
    matchLabels : ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels, optional
    """
    [...str]: any
    matchLabels?: ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

schema ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels:
    r"""
    ValuesTetragonOperatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchLabels

    Attributes
    ----------
    "app.kubernetes.io/name" : str, optional, default is "tetragon-operator"
    """
    [...str]: any
    "app.kubernetes.io/name"?: str

schema ValuesTetragonOperatorAnnotations:
    r"""
    Annotations for the Tetragon Operator Deployment.
    """
    [...str]: any

schema ValuesTetragonOperatorExtraLabels:
    r"""
    Extra labels to be added on the Tetragon Operator Deployment.
    """
    [...str]: any

schema ValuesTetragonOperatorExtraPodLabels:
    r"""
    Extra labels to be added on the Tetragon Operator Deployment Pods.
    """
    [...str]: any

schema ValuesTetragonOperatorFailoverLease:
    r"""
    Lease handling for an automated failover when running multiple replicas

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enable lease failover functionality
    leaseDuration : str, optional, default is "15s"
        If a lease is not renewed for X duration, the current leader is considered dead, a new leader is picked
    leaseRenewDeadline : str, optional, default is "5s"
        The interval at which the leader will renew the lease
    leaseRetryPeriod : str, optional, default is "2s"
        The timeout between retries if renewal fails
    namespace : str, optional, default is ""
        Kubernetes Namespace in which the Lease resource is created. Defaults to the namespace where Tetragon is deployed in, if it's empty.
    """
    [...str]: any
    enabled?: bool
    leaseDuration?: str
    leaseRenewDeadline?: str
    leaseRetryPeriod?: str
    namespace?: str

schema ValuesTetragonOperatorImage:
    r"""
    tetragon-operator image.

    Attributes
    ----------
    override : any, optional, default is "~"
    pullPolicy : str, optional, default is "IfNotPresent"
    repository : str, optional, default is "quay.io/cilium/tetragon-operator"
    tag : str, optional, default is "v1.5.0"
    """
    [...str]: any
    override?: any
    pullPolicy?: str
    repository?: str
    tag?: str

schema ValuesTetragonOperatorNodeSelector:
    r"""
    Steer the Tetragon Operator Deployment Pod placement via nodeSelector, tolerations and affinity rules.
    """
    [...str]: any

schema ValuesTetragonOperatorPodAnnotations:
    r"""
    Annotations for the Tetragon Operator Deployment Pods.
    """
    [...str]: any

schema ValuesTetragonOperatorPodInfo:
    r"""
    ValuesTetragonOperatorPodInfo

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enables the PodInfo CRD and the controller that reconciles PodInfo
        custom resources.
    """
    [...str]: any
    enabled?: bool

schema ValuesTetragonOperatorPodSecurityContext:
    r"""
    securityContext for the Tetragon Operator Deployment Pods.
    """
    [...str]: any

schema ValuesTetragonOperatorPrometheus:
    r"""
    ValuesTetragonOperatorPrometheus

    Attributes
    ----------
    address : str, optional, default is ""
        The address at which to expose Tetragon Operator metrics. Set it to "" to expose on all available interfaces.
    enabled : bool, optional, default is True
        Enables the Tetragon Operator metrics.
    port : int, optional, default is 2113
        The port at which to expose metrics.
    serviceMonitor : ValuesTetragonOperatorPrometheusServiceMonitor, optional
    """
    [...str]: any
    address?: str
    enabled?: bool
    port?: int
    serviceMonitor?: ValuesTetragonOperatorPrometheusServiceMonitor

schema ValuesTetragonOperatorPrometheusServiceMonitor:
    r"""
    ValuesTetragonOperatorPrometheusServiceMonitor

    Attributes
    ----------
    enabled : bool, optional, default is False
        Whether to create a 'ServiceMonitor' resource targeting the tetragonOperator pods.
    extraLabels : ValuesTetragonOperatorPrometheusServiceMonitorExtraLabels, optional
        Extra labels to be added on the Tetragon Operator ServiceMonitor.
    labelsOverride : ValuesTetragonOperatorPrometheusServiceMonitorLabelsOverride, optional
        The set of labels to place on the 'ServiceMonitor' resource.
    scrapeInterval : str, optional, default is "60s"
        Interval at which metrics should be scraped. If not specified, Prometheus' global scrape interval is used.
    """
    [...str]: any
    enabled?: bool
    extraLabels?: ValuesTetragonOperatorPrometheusServiceMonitorExtraLabels
    labelsOverride?: ValuesTetragonOperatorPrometheusServiceMonitorLabelsOverride
    scrapeInterval?: str

schema ValuesTetragonOperatorPrometheusServiceMonitorExtraLabels:
    r"""
    Extra labels to be added on the Tetragon Operator ServiceMonitor.
    """
    [...str]: any

schema ValuesTetragonOperatorPrometheusServiceMonitorLabelsOverride:
    r"""
    The set of labels to place on the 'ServiceMonitor' resource.
    """
    [...str]: any

schema ValuesTetragonOperatorResources:
    r"""
    resources for the Tetragon Operator Deployment Pod container.

    Attributes
    ----------
    limits : ValuesTetragonOperatorResourcesLimits, optional
    requests : ValuesTetragonOperatorResourcesRequests, optional
    """
    [...str]: any
    limits?: ValuesTetragonOperatorResourcesLimits
    requests?: ValuesTetragonOperatorResourcesRequests

schema ValuesTetragonOperatorResourcesLimits:
    r"""
    ValuesTetragonOperatorResourcesLimits

    Attributes
    ----------
    cpu : str, optional, default is "500m"
    memory : str, optional, default is "128Mi"
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesTetragonOperatorResourcesRequests:
    r"""
    ValuesTetragonOperatorResourcesRequests

    Attributes
    ----------
    cpu : str, optional, default is "10m"
    memory : str, optional, default is "64Mi"
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesTetragonOperatorSecurityContext:
    r"""
    securityContext for the Tetragon Operator Deployment Pod container.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
    capabilities : ValuesTetragonOperatorSecurityContextCapabilities, optional
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    capabilities?: ValuesTetragonOperatorSecurityContextCapabilities

schema ValuesTetragonOperatorSecurityContextCapabilities:
    r"""
    ValuesTetragonOperatorSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], optional
    """
    [...str]: any
    drop?: [str]

schema ValuesTetragonOperatorServiceAccount:
    r"""
    tetragon-operator service account.

    Attributes
    ----------
    annotations : ValuesTetragonOperatorServiceAccountAnnotations, optional
    create : bool, optional, default is True
    name : str, optional, default is ""
    """
    [...str]: any
    annotations?: ValuesTetragonOperatorServiceAccountAnnotations
    create?: bool
    name?: str

schema ValuesTetragonOperatorServiceAccountAnnotations:
    r"""
    ValuesTetragonOperatorServiceAccountAnnotations
    """
    [...str]: any

schema ValuesTetragonOperatorStrategy:
    r"""
    resources for the Tetragon Operator Deployment update strategy

    Attributes
    ----------
    rollingUpdate : ValuesTetragonOperatorStrategyRollingUpdate, optional
    $type : str, optional, default is "RollingUpdate"
    """
    [...str]: any
    rollingUpdate?: ValuesTetragonOperatorStrategyRollingUpdate
    $type?: str

schema ValuesTetragonOperatorStrategyRollingUpdate:
    r"""
    ValuesTetragonOperatorStrategyRollingUpdate

    Attributes
    ----------
    maxSurge : int, optional, default is 1
    maxUnavailable : int, optional, default is 0
    """
    [...str]: any
    maxSurge?: int
    maxUnavailable?: int

schema ValuesTetragonOperatorTracingPolicy:
    r"""
    ValuesTetragonOperatorTracingPolicy

    Attributes
    ----------
    enabled : bool, optional, default is True
        Enables the TracingPolicy and TracingPolicyNamespaced CRD creation.
    """
    [...str]: any
    enabled?: bool

schema ValuesTetragonPodAnnotations:
    r"""
    extraEnv:
      - name: foo
        value: bar

    Attributes
    ----------
    enabled : bool, optional, default is False
    """
    [...str]: any
    enabled?: bool

schema ValuesTetragonPprof:
    r"""
    ValuesTetragonPprof

    Attributes
    ----------
    address : str, optional, default is "localhost"
        The address at which to expose pprof.
    enabled : bool, optional, default is False
        Whether to enable exposing pprof server.
    port : int, optional, default is 6060
        The port at which to expose pprof.
    """
    [...str]: any
    address?: str
    enabled?: bool
    port?: int

schema ValuesTetragonProcessAncestors:
    r"""
    ValuesTetragonProcessAncestors

    Attributes
    ----------
    enabled : str, optional, default is ""
        Comma-separated list of process event types to enable ancestors for.
        Supported event types are: base, kprobe, tracepoint, uprobe, lsm. Unknown event types will be ignored.
        Type "base" is required by all other supported event types for correct reference counting.
        Set it to "" to disable ancestors completely.
    """
    [...str]: any
    enabled?: str

schema ValuesTetragonPrometheus:
    r"""
    ValuesTetragonPrometheus

    Attributes
    ----------
    address : str, optional, default is ""
        The address at which to expose metrics. Set it to "" to expose on all available interfaces.
    enabled : bool, optional, default is True
        Whether to enable exposing Tetragon metrics.
    metricsLabelFilter : str, optional, default is "namespace,workload,pod,binary"
        Comma-separated list of enabled metrics labels.
        The configurable labels are: namespace, workload, pod, binary. Unknown labels will be ignored.
        Removing some labels from the list might help reduce the metrics cardinality if needed.
    port : int, optional, default is 2112
        The port at which to expose metrics.
    serviceMonitor : ValuesTetragonPrometheusServiceMonitor, optional
    """
    [...str]: any
    address?: str
    enabled?: bool
    metricsLabelFilter?: str
    port?: int
    serviceMonitor?: ValuesTetragonPrometheusServiceMonitor

schema ValuesTetragonPrometheusServiceMonitor:
    r"""
    ValuesTetragonPrometheusServiceMonitor

    Attributes
    ----------
    enabled : bool, optional, default is False
        Whether to create a 'ServiceMonitor' resource targeting the tetragon pods.
    extraLabels : ValuesTetragonPrometheusServiceMonitorExtraLabels, optional
        Extra labels to be added on the Tetragon ServiceMonitor.
    labelsOverride : ValuesTetragonPrometheusServiceMonitorLabelsOverride, optional
        The set of labels to place on the 'ServiceMonitor' resource.
    scrapeInterval : str, optional, default is "60s"
        Interval at which metrics should be scraped. If not specified, Prometheus' global scrape interval is used.
    """
    [...str]: any
    enabled?: bool
    extraLabels?: ValuesTetragonPrometheusServiceMonitorExtraLabels
    labelsOverride?: ValuesTetragonPrometheusServiceMonitorLabelsOverride
    scrapeInterval?: str

schema ValuesTetragonPrometheusServiceMonitorExtraLabels:
    r"""
    Extra labels to be added on the Tetragon ServiceMonitor.
    """
    [...str]: any

schema ValuesTetragonPrometheusServiceMonitorLabelsOverride:
    r"""
    The set of labels to place on the 'ServiceMonitor' resource.
    """
    [...str]: any

schema ValuesTetragonResources:
    r"""
    ValuesTetragonResources
    """
    [...str]: any

schema ValuesTetragonSecurityContext:
    r"""
    ValuesTetragonSecurityContext

    Attributes
    ----------
    privileged : bool, optional, default is True
    """
    [...str]: any
    privileged?: bool

schema ValuesTolerationsItems0:
    r"""
    ValuesTolerationsItems0

    Attributes
    ----------
    operator : str, optional, default is "Exists"
    """
    [...str]: any
    operator?: str

schema ValuesUpdateStrategy:
    r"""
    ValuesUpdateStrategy
    """
    [...str]: any

