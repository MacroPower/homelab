"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema AlertmanagerConfig:
    r"""
    AlertmanagerConfig configures the Prometheus Alertmanager,
    specifying how alerts should be grouped, inhibited and notified to external systems.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AlertmanagerConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1alpha1AlertmanagerConfigSpec, default is Undefined, required
        spec
    """
    apiVersion: "monitoring.coreos.com/v1alpha1" = "monitoring.coreos.com/v1alpha1"

    kind: "AlertmanagerConfig" = "AlertmanagerConfig"

    metadata?: v1.ObjectMeta
    spec: MonitoringCoreosComV1alpha1AlertmanagerConfigSpec

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpec:
    r"""
    spec defines the specification of AlertmanagerConfigSpec

    Attributes
    ----------
    inhibitRules : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0], default is Undefined, optional
        inhibitRules defines the list of inhibition rules. The rules will only apply to alerts matching
        the resource's namespace.
    muteTimeIntervals : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0], default is Undefined, optional
        muteTimeIntervals defines the list of MuteTimeInterval specifying when the routes should be muted.
    receivers : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0], default is Undefined, optional
        receivers defines the list of receivers.
    route : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRoute, default is Undefined, optional
        route
    """
    inhibitRules?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0]
    muteTimeIntervals?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0]
    receivers?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0]
    route?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRoute

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0:
    r"""
    InhibitRule defines an inhibition rule that allows to mute alerts when other
    alerts are already firing.
    See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule

    Attributes
    ----------
    equal : [str], default is Undefined, optional
        equal defines labels that must have an equal value in the source and target alert
        for the inhibition to take effect. This ensures related alerts are properly grouped.
    sourceMatch : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0SourceMatchItems0], default is Undefined, optional
        sourceMatch defines matchers for which one or more alerts have to exist for the inhibition
        to take effect. The operator enforces that the alert matches the resource's namespace.
        These are the "trigger" alerts that cause other alerts to be inhibited.
    targetMatch : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0TargetMatchItems0], default is Undefined, optional
        targetMatch defines matchers that have to be fulfilled in the alerts to be muted.
        The operator enforces that the alert matches the resource's namespace.
        When these conditions are met, matching alerts will be inhibited (silenced).
    """
    equal?: [str]
    sourceMatch?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0SourceMatchItems0]
    targetMatch?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0TargetMatchItems0]

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0SourceMatchItems0:
    r"""
    Matcher defines how to match on alert's labels.

    Attributes
    ----------
    matchType : str, default is Undefined, optional
        matchType defines the match operation available with AlertManager >= v0.22.0.
        Takes precedence over Regex (deprecated) if non-empty.
        Valid values: "=" (equality), "!=" (inequality), "=~" (regex match), "!~" (regex non-match).
    name : str, default is Undefined, required
        name defines the label to match.
        This specifies which alert label should be evaluated.
    regex : bool, default is Undefined, optional
        regex defines whether to match on equality (false) or regular-expression (true).
        Deprecated: for AlertManager >= v0.22.0, `matchType` should be used instead.
    value : str, default is Undefined, optional
        value defines the label value to match.
        This is the expected value for the specified label.
    """
    matchType?: "!=" | "=" | "=~" | "!~"
    name: str

    regex?: bool
    value?: str

    check:
        len(name) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecInhibitRulesItems0TargetMatchItems0:
    r"""
    Matcher defines how to match on alert's labels.

    Attributes
    ----------
    matchType : str, default is Undefined, optional
        matchType defines the match operation available with AlertManager >= v0.22.0.
        Takes precedence over Regex (deprecated) if non-empty.
        Valid values: "=" (equality), "!=" (inequality), "=~" (regex match), "!~" (regex non-match).
    name : str, default is Undefined, required
        name defines the label to match.
        This specifies which alert label should be evaluated.
    regex : bool, default is Undefined, optional
        regex defines whether to match on equality (false) or regular-expression (true).
        Deprecated: for AlertManager >= v0.22.0, `matchType` should be used instead.
    value : str, default is Undefined, optional
        value defines the label value to match.
        This is the expected value for the specified label.
    """
    matchType?: "!=" | "=" | "=~" | "!~"
    name: str

    regex?: bool
    value?: str

    check:
        len(name) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0:
    r"""
    MuteTimeInterval specifies the periods in time when notifications will be muted

    Attributes
    ----------
    name : str, default is Undefined, required
        name of the time interval
    timeIntervals : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0], default is Undefined, optional
        timeIntervals defines a list of TimeInterval
    """
    name: str

    timeIntervals?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0]

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0:
    r"""
    TimeInterval describes intervals of time

    Attributes
    ----------
    daysOfMonth : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0DaysOfMonthItems0], default is Undefined, optional
        daysOfMonth defines a list of DayOfMonthRange
    months : [str], default is Undefined, optional
        months defines a list of MonthRange
    times : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0TimesItems0], default is Undefined, optional
        times defines a list of TimeRange
    weekdays : [str], default is Undefined, optional
        weekdays defines a list of WeekdayRange
    years : [str], default is Undefined, optional
        years defines a list of YearRange
    """
    daysOfMonth?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0DaysOfMonthItems0]
    months?: [str]
    times?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0TimesItems0]
    weekdays?: [str]
    years?: [str]

    check:
        all months in months {_regex_match(str(months), r"^((?i)january|february|march|april|may|june|july|august|september|october|november|december|1[0-2]|[1-9])(?:((:((?i)january|february|march|april|may|june|july|august|september|october|november|december|1[0-2]|[1-9]))$)|$)") if months} if months
        all weekdays in weekdays {_regex_match(str(weekdays), r"^((?i)sun|mon|tues|wednes|thurs|fri|satur)day(?:((:(sun|mon|tues|wednes|thurs|fri|satur)day)$)|$)") if weekdays} if weekdays
        all years in years {_regex_match(str(years), r"^2\d{3}(?::2\d{3}|$)") if years} if years

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0DaysOfMonthItems0:
    r"""
    DayOfMonthRange is an inclusive range of days of the month beginning at 1

    Attributes
    ----------
    end : int, default is Undefined, optional
        end of the inclusive range
    start : int, default is Undefined, optional
        start of the inclusive range
    """
    end?: int
    start?: int

    check:
        end <= 31 if end not in [None, Undefined]
        end >= -31 if end not in [None, Undefined]
        start <= 31 if start not in [None, Undefined]
        start >= -31 if start not in [None, Undefined]

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecMuteTimeIntervalsItems0TimeIntervalsItems0TimesItems0:
    r"""
    TimeRange defines a start and end time in 24hr format

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        endTime defines the end time in 24hr format.
    startTime : str, default is Undefined, optional
        startTime defines the start time in 24hr format.
    """
    endTime?: str
    startTime?: str

    check:
        _regex_match(str(endTime), r"^((([01][0-9])|(2[0-3])):[0-5][0-9])$|(^24:00$)") if endTime
        _regex_match(str(startTime), r"^((([01][0-9])|(2[0-3])):[0-5][0-9])$|(^24:00$)") if startTime

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0:
    r"""
    Receiver defines one or more notification integrations.

    Attributes
    ----------
    discordConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0], default is Undefined, optional
        discordConfigs defines the list of Slack configurations.
    emailConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0], default is Undefined, optional
        emailConfigs defines the list of Email configurations.
    msteamsConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0], default is Undefined, optional
        msteamsConfigs defines the list of MSTeams configurations.
        It requires Alertmanager >= 0.26.0.
    msteamsv2Configs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0], default is Undefined, optional
        msteamsv2Configs defines the list of MSTeamsV2 configurations.
        It requires Alertmanager >= 0.28.0.
    name : str, default is Undefined, required
        name defines the name of the receiver. Must be unique across all items from the list.
    opsgenieConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0], default is Undefined, optional
        opsgenieConfigs defines the list of OpsGenie configurations.
    pagerdutyConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0], default is Undefined, optional
        pagerdutyConfigs defines the List of PagerDuty configurations.
    pushoverConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0], default is Undefined, optional
        pushoverConfigs defines the list of Pushover configurations.
    rocketchatConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0], default is Undefined, optional
        rocketchatConfigs defines the list of RocketChat configurations.
        It requires Alertmanager >= 0.28.0.
    slackConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0], default is Undefined, optional
        slackConfigs defines the list of Slack configurations.
    snsConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0], default is Undefined, optional
        snsConfigs defines the list of SNS configurations
    telegramConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0], default is Undefined, optional
        telegramConfigs defines the list of Telegram configurations.
    victoropsConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0], default is Undefined, optional
        victoropsConfigs defines the list of VictorOps configurations.
    webexConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0], default is Undefined, optional
        webexConfigs defines the list of Webex configurations.
    webhookConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0], default is Undefined, optional
        webhookConfigs defines the List of webhook configurations.
    wechatConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0], default is Undefined, optional
        wechatConfigs defines the list of WeChat configurations.
    """
    discordConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0]
    emailConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0]
    msteamsConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0]
    msteamsv2Configs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0]
    name: str

    opsgenieConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0]
    pagerdutyConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0]
    pushoverConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0]
    rocketchatConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0]
    slackConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0]
    snsConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0]
    telegramConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0]
    victoropsConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0]
    webexConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0]
    webhookConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0]
    wechatConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0]

    check:
        len(name) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0:
    r"""
    DiscordConfig configures notifications via Discord.
    See https://prometheus.io/docs/alerting/latest/configuration/#discord_config

    Attributes
    ----------
    apiURL : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0APIURL, default is Undefined, required
        api URL
    avatarURL : str, default is Undefined, optional
        avatarURL defines the avatar url of the message sender.
    content : str, default is Undefined, optional
        content defines the template of the content's body.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the template of the message's body.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    title : str, default is Undefined, optional
        title defines the template of the message's title.
    username : str, default is Undefined, optional
        username defines the username of the message sender.
    """
    apiURL: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0APIURL

    avatarURL?: str
    content?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfig
    message?: str
    sendResolved?: bool
    title?: str
    username?: str

    check:
        _regex_match(str(avatarURL), r"^https?://.+$") if avatarURL
        len(content) >= 1 if content
        len(username) >= 1 if username

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0APIURL:
    r"""
    apiURL defines the secret's key that contains the Discord webhook URL.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0DiscordConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0:
    r"""
    EmailConfig configures notifications via Email.

    Attributes
    ----------
    authIdentity : str, default is Undefined, optional
        authIdentity defines the identity to use for SMTP authentication.
        This is typically used with PLAIN authentication mechanism.
    authPassword : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthPassword, default is Undefined, optional
        auth password
    authSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthSecret, default is Undefined, optional
        auth secret
    authUsername : str, default is Undefined, optional
        authUsername defines the username to use for SMTP authentication.
        This is used for SMTP AUTH when the server requires authentication.
    from : str, default is Undefined, optional
        from defines the sender address for email notifications.
        This appears as the "From" field in the email header.
    headers : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0HeadersItems0], default is Undefined, optional
        headers defines additional email header key/value pairs.
        These override any headers previously set by the notification implementation.
    hello : str, default is Undefined, optional
        hello defines the hostname to identify to the SMTP server.
        This is used in the SMTP HELO/EHLO command during the connection handshake.
    html : str, default is Undefined, optional
        html defines the HTML body of the email notification.
        This allows for rich formatting in the email content.
    requireTLS : bool, default is Undefined, optional
        requireTLS defines the SMTP TLS requirement.
        Note that Go does not support unencrypted connections to remote SMTP endpoints.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    smarthost : str, default is Undefined, optional
        smarthost defines the SMTP host and port through which emails are sent.
        Format should be "hostname:port", e.g. "smtp.example.com:587".
    text : str, default is Undefined, optional
        text defines the plain text body of the email notification.
        This provides a fallback for email clients that don't support HTML.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    to : str, default is Undefined, optional
        to defines the email address to send notifications to.
        This is the recipient address for alert notifications.
    """
    authIdentity?: str
    authPassword?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthPassword
    authSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthSecret
    authUsername?: str
    from?: str
    headers?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0HeadersItems0]
    hello?: str
    html?: str
    requireTLS?: bool
    sendResolved?: bool
    smarthost?: str
    text?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfig
    to?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthPassword:
    r"""
    authPassword defines the secret's key that contains the password to use for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0AuthSecret:
    r"""
    authSecret defines the secret's key that contains the CRAM-MD5 secret.
    This is used for CRAM-MD5 authentication mechanism.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0HeadersItems0:
    r"""
    KeyValue defines a (key, value) tuple.

    Attributes
    ----------
    key : str, default is Undefined, required
        key defines the key of the tuple.
        This is the identifier or name part of the key-value pair.
    value : str, default is Undefined, required
        value defines the value of the tuple.
        This is the data or content associated with the key.
    """
    key: str

    value: str

    check:
        len(key) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfig:
    r"""
    tlsConfig defines the TLS configuration for SMTP connections.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0EmailConfigsItems0TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0:
    r"""
    MSTeamsConfig configures notifications via Microsoft Teams.
    It requires Alertmanager >= 0.26.0.

    Attributes
    ----------
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    summary : str, default is Undefined, optional
        summary defines the message summary template for Teams notifications.
        This provides a brief overview that appears in Teams notification previews.
        It requires Alertmanager >= 0.27.0.
    text : str, default is Undefined, optional
        text defines the message body template for Teams notifications.
        This contains the detailed content of the Teams message.
    title : str, default is Undefined, optional
        title defines the message title template for Teams notifications.
        This appears as the main heading of the Teams message card.
    webhookUrl : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0WebhookURL, default is Undefined, required
        webhook Url
    """
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfig
    sendResolved?: bool
    summary?: str
    text?: str
    title?: str
    webhookUrl: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0WebhookURL

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for Teams webhook requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0MsteamsConfigsItems0WebhookURL:
    r"""
    webhookUrl defines the MSTeams webhook URL for sending notifications.
    This is the incoming webhook URL configured in your Teams channel.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0:
    r"""
    MSTeamsV2Config configures notifications via Microsoft Teams using the new message format with adaptive cards as required by flows.
    See https://prometheus.io/docs/alerting/latest/configuration/#msteamsv2_config
    It requires Alertmanager >= 0.28.0.

    Attributes
    ----------
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    text : str, default is Undefined, optional
        text defines the message body template for adaptive card notifications.
        This contains the detailed content displayed in the Teams adaptive card format.
    title : str, default is Undefined, optional
        title defines the message title template for adaptive card notifications.
        This appears as the main heading in the Teams adaptive card.
    webhookURL : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0WebhookURL, default is Undefined, optional
        webhook URL
    """
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfig
    sendResolved?: bool
    text?: str
    title?: str
    webhookURL?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0WebhookURL

    check:
        len(text) >= 1 if text
        len(title) >= 1 if title

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for Teams webhook requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0Msteamsv2ConfigsItems0WebhookURL:
    r"""
    webhookURL defines the MSTeams incoming webhook URL for adaptive card notifications.
    This webhook must support the newer adaptive cards format required by Teams flows.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0:
    r"""
    OpsGenieConfig configures notifications via OpsGenie.
    See https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config

    Attributes
    ----------
    actions : str, default is Undefined, optional
        actions defines a comma separated list of actions that will be available for the alert.
        These appear as action buttons in the OpsGenie interface.
    apiKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0APIKey, default is Undefined, optional
        api key
    apiURL : str, default is Undefined, optional
        apiURL defines the URL to send OpsGenie API requests to.
        When not specified, defaults to the standard OpsGenie API endpoint.
    description : str, default is Undefined, optional
        description defines the detailed description of the incident.
        This provides additional context beyond the message field.
    details : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0DetailsItems0], default is Undefined, optional
        details defines a set of arbitrary key/value pairs that provide further detail about the incident.
        These appear as additional fields in the OpsGenie alert.
    entity : str, default is Undefined, optional
        entity defines an optional field that can be used to specify which domain alert is related to.
        This helps group related alerts together in OpsGenie.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the alert text limited to 130 characters.
        This appears as the main alert title in OpsGenie.
    note : str, default is Undefined, optional
        note defines an additional alert note.
        This provides supplementary information about the alert.
    priority : str, default is Undefined, optional
        priority defines the priority level of alert.
        Possible values are P1, P2, P3, P4, and P5, where P1 is highest priority.
    responders : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0RespondersItems0], default is Undefined, optional
        responders defines the list of responders responsible for notifications.
        These determine who gets notified when the alert is created.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    source : str, default is Undefined, optional
        source defines the backlink to the sender of the notification.
        This helps identify where the alert originated from.
    tags : str, default is Undefined, optional
        tags defines a comma separated list of tags attached to the notifications.
        These help categorize and filter alerts within OpsGenie.
    updateAlerts : bool, default is Undefined, optional
        updateAlerts defines Whether to update message and description of the alert in OpsGenie if it already exists
        By default, the alert is never updated in OpsGenie, the new message only appears in activity log.
    """
    actions?: str
    apiKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0APIKey
    apiURL?: str
    description?: str
    details?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0DetailsItems0]
    entity?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfig
    message?: str
    note?: str
    priority?: str
    responders?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0RespondersItems0]
    sendResolved?: bool
    source?: str
    tags?: str
    updateAlerts?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0APIKey:
    r"""
    apiKey defines the secret's key that contains the OpsGenie API key.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0DetailsItems0:
    r"""
    KeyValue defines a (key, value) tuple.

    Attributes
    ----------
    key : str, default is Undefined, required
        key defines the key of the tuple.
        This is the identifier or name part of the key-value pair.
    value : str, default is Undefined, required
        value defines the value of the tuple.
        This is the data or content associated with the key.
    """
    key: str

    value: str

    check:
        len(key) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for OpsGenie API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0OpsgenieConfigsItems0RespondersItems0:
    r"""
    OpsGenieConfigResponder defines a responder to an incident.
    One of `id`, `name` or `username` has to be defined.

    Attributes
    ----------
    id : str, default is Undefined, optional
        id defines the unique identifier of the responder.
        This corresponds to the responder's ID within OpsGenie.
    name : str, default is Undefined, optional
        name defines the display name of the responder.
        This is used when the responder is identified by name rather than ID.
    $type : str, default is Undefined, required
        type defines the type of responder.
        Valid values include "user", "team", "schedule", and "escalation".
        This determines how OpsGenie interprets the other identifier fields.
    username : str, default is Undefined, optional
        username defines the username of the responder.
        This is typically used for user-type responders when identifying by username.
    """
    id?: str
    name?: str
    $type: "team" | "teams" | "user" | "escalation" | "schedule"

    username?: str

    check:
        len($type) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0:
    r"""
    PagerDutyConfig configures notifications via PagerDuty.
    See https://prometheus.io/docs/alerting/latest/configuration/#pagerduty_config

    Attributes
    ----------
    class : str, default is Undefined, optional
        class defines the class/type of the event.
    client : str, default is Undefined, optional
        client defines the client identification.
    clientURL : str, default is Undefined, optional
        clientURL defines the backlink to the sender of notification.
    component : str, default is Undefined, optional
        component defines the part or component of the affected system that is broken.
    description : str, default is Undefined, optional
        description of the incident.
    details : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0DetailsItems0], default is Undefined, optional
        details defines the arbitrary key/value pairs that provide further detail about the incident.
    group : str, default is Undefined, optional
        group defines a cluster or grouping of sources.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    pagerDutyImageConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyImageConfigsItems0], default is Undefined, optional
        pagerDutyImageConfigs defines a list of image details to attach that provide further detail about an incident.
    pagerDutyLinkConfigs : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyLinkConfigsItems0], default is Undefined, optional
        pagerDutyLinkConfigs defines a list of link details to attach that provide further detail about an incident.
    routingKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0RoutingKey, default is Undefined, optional
        routing key
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    serviceKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0ServiceKey, default is Undefined, optional
        service key
    severity : str, default is Undefined, optional
        severity of the incident.
    source : str, default is Undefined, optional
        source defines the unique location of the affected system.
    url : str, default is Undefined, optional
        url defines the URL to send requests to.
    """
    class?: str
    client?: str
    clientURL?: str
    component?: str
    description?: str
    details?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0DetailsItems0]
    group?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfig
    pagerDutyImageConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyImageConfigsItems0]
    pagerDutyLinkConfigs?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyLinkConfigsItems0]
    routingKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0RoutingKey
    sendResolved?: bool
    serviceKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0ServiceKey
    severity?: str
    source?: str
    url?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0DetailsItems0:
    r"""
    KeyValue defines a (key, value) tuple.

    Attributes
    ----------
    key : str, default is Undefined, required
        key defines the key of the tuple.
        This is the identifier or name part of the key-value pair.
    value : str, default is Undefined, required
        value defines the value of the tuple.
        This is the data or content associated with the key.
    """
    key: str

    value: str

    check:
        len(key) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyImageConfigsItems0:
    r"""
    PagerDutyImageConfig attaches images to an incident

    Attributes
    ----------
    alt : str, default is Undefined, optional
        alt is the optional alternative text for the image.
    href : str, default is Undefined, optional
        href defines the optional URL; makes the image a clickable link.
    src : str, default is Undefined, optional
        src of the image being attached to the incident
    """
    alt?: str
    href?: str
    src?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0PagerDutyLinkConfigsItems0:
    r"""
    PagerDutyLinkConfig attaches text links to an incident

    Attributes
    ----------
    alt : str, default is Undefined, optional
        alt defines the text that describes the purpose of the link, and can be used as the link's text.
    href : str, default is Undefined, optional
        href defines the URL of the link to be attached
    """
    alt?: str
    href?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0RoutingKey:
    r"""
    routingKey defines the secret's key that contains the PagerDuty integration key (when using
    Events API v2). Either this field or `serviceKey` needs to be defined.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PagerdutyConfigsItems0ServiceKey:
    r"""
    serviceKey defines the secret's key that contains the PagerDuty service key (when using
    integration type "Prometheus"). Either this field or `routingKey` needs to
    be defined.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0:
    r"""
    PushoverConfig configures notifications via Pushover.
    See https://prometheus.io/docs/alerting/latest/configuration/#pushover_config

    Attributes
    ----------
    device : str, default is Undefined, optional
        device defines the name of a specific device to send the notification to.
        If not specified, the notification is sent to all user's devices.
    expire : str, default is Undefined, optional
        expire defines how long your notification will continue to be retried for,
        unless the user acknowledges the notification. Only applies to priority 2 notifications.
    html : bool, default is Undefined, optional
        html defines whether notification message is HTML or plain text.
        When true, the message can include HTML formatting tags.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the notification message content.
        This is the main body text of the Pushover notification.
    priority : str, default is Undefined, optional
        priority defines the notification priority level.
        See https://pushover.net/api#priority for valid values and behavior.
    retry : str, default is Undefined, optional
        retry defines how often the Pushover servers will send the same notification to the user.
        Must be at least 30 seconds. Only applies to priority 2 notifications.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    sound : str, default is Undefined, optional
        sound defines the name of one of the sounds supported by device clients.
        This overrides the user's default sound choice for this notification.
    title : str, default is Undefined, optional
        title defines the notification title displayed in the Pushover message.
        This appears as the bold header text in the notification.
    token : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0Token, default is Undefined, optional
        token
    tokenFile : str, default is Undefined, optional
        tokenFile defines the token file that contains the registered application's API token.
        See https://pushover.net/apps for application registration.
        Either `token` or `tokenFile` is required.
        It requires Alertmanager >= v0.26.0.
    ttl : str, default is Undefined, optional
        ttl defines the time to live for the alert notification.
        This determines how long the notification remains active before expiring.
    url : str, default is Undefined, optional
        url defines a supplementary URL shown alongside the message.
        This creates a clickable link within the Pushover notification.
    urlTitle : str, default is Undefined, optional
        urlTitle defines a title for the supplementary URL.
        If not specified, the raw URL is shown instead.
    userKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0UserKey, default is Undefined, optional
        user key
    userKeyFile : str, default is Undefined, optional
        userKeyFile defines the user key file that contains the recipient user's user key.
        Either `userKey` or `userKeyFile` is required.
        It requires Alertmanager >= v0.26.0.
    """
    device?: str
    expire?: str
    html?: bool
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfig
    message?: str
    priority?: str
    retry?: str
    sendResolved?: bool
    sound?: str
    title?: str
    token?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0Token
    tokenFile?: str
    ttl?: str
    url?: str
    urlTitle?: str
    userKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0UserKey
    userKeyFile?: str

    check:
        _regex_match(str(expire), r"^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$") if expire
        _regex_match(str(retry), r"^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$") if retry
        _regex_match(str(ttl), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if ttl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for Pushover API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0Token:
    r"""
    token defines the secret's key that contains the registered application's API token.
    See https://pushover.net/apps for application registration.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.
    Either `token` or `tokenFile` is required.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0PushoverConfigsItems0UserKey:
    r"""
    userKey defines the secret's key that contains the recipient user's user key.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.
    Either `userKey` or `userKeyFile` is required.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0:
    r"""
    RocketChatConfig configures notifications via RocketChat.
    It requires Alertmanager >= 0.28.0.

    Attributes
    ----------
    actions : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0ActionsItems0], default is Undefined, optional
        actions defines interactive actions to include in the message.
        These appear as buttons that users can click to trigger responses.
    apiURL : str, default is Undefined, optional
        apiURL defines the API URL for RocketChat.
        Defaults to https://open.rocket.chat/ if not specified.
    channel : str, default is Undefined, optional
        channel defines the channel to send alerts to.
        This can be a channel name (e.g., "#alerts") or a direct message recipient.
    color : str, default is Undefined, optional
        color defines the message color displayed in RocketChat.
        This appears as a colored bar alongside the message.
    emoji : str, default is Undefined, optional
        emoji defines the emoji to be displayed as an avatar.
        If provided, this emoji will be used instead of the default avatar or iconURL.
    fields : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0FieldsItems0], default is Undefined, optional
        fields defines additional fields for the message attachment.
        These appear as structured key-value pairs within the message.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    iconURL : str, default is Undefined, optional
        iconURL defines the icon URL for the message avatar.
        This displays a custom image as the message sender's avatar.
    imageURL : str, default is Undefined, optional
        imageURL defines the image URL to display within the message.
        This embeds an image directly in the message attachment.
    linkNames : bool, default is Undefined, optional
        linkNames defines whether to enable automatic linking of usernames and channels.
        When true, @username and #channel references become clickable links.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    shortFields : bool, default is Undefined, optional
        shortFields defines whether to use short fields in the message layout.
        When true, fields may be displayed side by side to save space.
    text : str, default is Undefined, optional
        text defines the message text to send.
        This is optional because attachments can be used instead of or alongside text.
    thumbURL : str, default is Undefined, optional
        thumbURL defines the thumbnail URL for the message.
        This displays a small thumbnail image alongside the message content.
    title : str, default is Undefined, optional
        title defines the message title displayed prominently in the message.
        This appears as bold text at the top of the message attachment.
    titleLink : str, default is Undefined, optional
        titleLink defines the URL that the title will link to when clicked.
        This makes the message title clickable in the RocketChat interface.
    token : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0Token, default is Undefined, required
        token
    tokenID : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0TokenID, default is Undefined, required
        token ID
    """
    actions?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0ActionsItems0]
    apiURL?: str
    channel?: str
    color?: str
    emoji?: str
    fields?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0FieldsItems0]
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfig
    iconURL?: str
    imageURL?: str
    linkNames?: bool
    sendResolved?: bool
    shortFields?: bool
    text?: str
    thumbURL?: str
    title?: str
    titleLink?: str
    token: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0Token

    tokenID: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0TokenID

    check:
        len(actions) >= 1 if actions
        _regex_match(str(apiURL), r"^https?://.+$") if apiURL
        len(channel) >= 1 if channel
        len(color) >= 1 if color
        len(emoji) >= 1 if emoji
        len(fields) >= 1 if fields
        _regex_match(str(iconURL), r"^https?://.+$") if iconURL
        _regex_match(str(imageURL), r"^https?://.+$") if imageURL
        len(text) >= 1 if text
        _regex_match(str(thumbURL), r"^https?://.+$") if thumbURL
        len(title) >= 1 if title
        len(titleLink) >= 1 if titleLink

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0ActionsItems0:
    r"""
    RocketChatActionConfig defines actions for RocketChat messages.

    Attributes
    ----------
    msg : str, default is Undefined, optional
        msg defines the message to send when the button is clicked.
        This allows the button to post a predefined message to the channel.
    text : str, default is Undefined, optional
        text defines the button text displayed to users.
        This is the label that appears on the interactive button.
    url : str, default is Undefined, optional
        url defines the URL the button links to when clicked.
        This creates a clickable button that opens the specified URL.
    """
    msg?: str
    text?: str
    url?: str

    check:
        len(msg) >= 1 if msg
        len(text) >= 1 if text
        _regex_match(str(url), r"^https?://.+$") if url

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0FieldsItems0:
    r"""
    RocketChatFieldConfig defines additional fields for RocketChat messages.

    Attributes
    ----------
    short : bool, default is Undefined, optional
        short defines whether this field should be a short field.
        When true, the field may be displayed inline with other short fields to save space.
    title : str, default is Undefined, optional
        title defines the title of this field.
        This appears as bold text labeling the field content.
    value : str, default is Undefined, optional
        value defines the value of this field, displayed underneath the title.
        This contains the actual data or content for the field.
    """
    short?: bool
    title?: str
    value?: str

    check:
        len(title) >= 1 if title
        len(value) >= 1 if value

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for RocketChat API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0Token:
    r"""
    token defines the sender token for RocketChat authentication.
    This is the personal access token or bot token used to authenticate API requests.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0RocketchatConfigsItems0TokenID:
    r"""
    tokenID defines the sender token ID for RocketChat authentication.
    This is the user ID associated with the token used for API requests.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0:
    r"""
    SlackConfig configures notifications via Slack.
    See https://prometheus.io/docs/alerting/latest/configuration/#slack_config

    Attributes
    ----------
    actions : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0], default is Undefined, optional
        actions defines a list of Slack actions that are sent with each notification.
    apiURL : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0APIURL, default is Undefined, optional
        api URL
    callbackId : str, default is Undefined, optional
        callbackId defines an identifier for the message used in interactive components.
    channel : str, default is Undefined, optional
        channel defines the channel or user to send notifications to.
    color : str, default is Undefined, optional
        color defines the color of the left border of the Slack message attachment.
        Can be a hex color code (e.g., "#ff0000") or a predefined color name.
    fallback : str, default is Undefined, optional
        fallback defines a plain-text summary of the attachment for clients that don't support attachments.
    fields : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0FieldsItems0], default is Undefined, optional
        fields defines a list of Slack fields that are sent with each notification.
    footer : str, default is Undefined, optional
        footer defines small text displayed at the bottom of the message attachment.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    iconEmoji : str, default is Undefined, optional
        iconEmoji defines the emoji to use as the bot's avatar (e.g., ":ghost:").
    iconURL : str, default is Undefined, optional
        iconURL defines the URL to an image to use as the bot's avatar.
    imageURL : str, default is Undefined, optional
        imageURL defines the URL to an image file that will be displayed inside the message attachment.
    linkNames : bool, default is Undefined, optional
        linkNames enables automatic linking of channel names and usernames in the message.
        When true, @channel and @username will be converted to clickable links.
    mrkdwnIn : [str], default is Undefined, optional
        mrkdwnIn defines which fields should be parsed as Slack markdown.
        Valid values include "pretext", "text", and "fields".
    pretext : str, default is Undefined, optional
        pretext defines optional text that appears above the message attachment block.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    shortFields : bool, default is Undefined, optional
        shortFields determines whether fields are displayed in a compact format.
        When true, fields are shown side by side when possible.
    text : str, default is Undefined, optional
        text defines the main text content of the Slack message attachment.
    thumbURL : str, default is Undefined, optional
        thumbURL defines the URL to an image file that will be displayed as a thumbnail
        on the right side of the message attachment.
    title : str, default is Undefined, optional
        title defines the title text displayed in the Slack message attachment.
    titleLink : str, default is Undefined, optional
        titleLink defines the URL that the title will link to when clicked.
    username : str, default is Undefined, optional
        username defines the slack bot user name.
    """
    actions?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0]
    apiURL?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0APIURL
    callbackId?: str
    channel?: str
    color?: str
    fallback?: str
    fields?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0FieldsItems0]
    footer?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfig
    iconEmoji?: str
    iconURL?: str
    imageURL?: str
    linkNames?: bool
    mrkdwnIn?: [str]
    pretext?: str
    sendResolved?: bool
    shortFields?: bool
    text?: str
    thumbURL?: str
    title?: str
    titleLink?: str
    username?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0APIURL:
    r"""
    apiURL defines the secret's key that contains the Slack webhook URL.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0:
    r"""
    SlackAction configures a single Slack action that is sent with each
    notification.
    See https://api.slack.com/docs/message-attachments#action_fields and
    https://api.slack.com/docs/message-buttons for more information.

    Attributes
    ----------
    confirm : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0Confirm, default is Undefined, optional
        confirm
    name : str, default is Undefined, optional
        name defines a unique identifier for the action within the message.
        This value is sent back to your application when the action is triggered.
    style : str, default is Undefined, optional
        style defines the visual appearance of the action element.
        Valid values include "default", "primary" (green), and "danger" (red).
    text : str, default is Undefined, required
        text defines the user-visible label displayed on the action element.
        For buttons, this is the button text. For select menus, this is the placeholder text.
    $type : str, default is Undefined, required
        type defines the type of interactive component.
        Common values include "button" for clickable buttons and "select" for dropdown menus.
    url : str, default is Undefined, optional
        url defines the URL to open when the action is triggered.
        Only applicable for button-type actions. When set, clicking the button opens this URL.
    value : str, default is Undefined, optional
        value defines the payload sent when the action is triggered.
        This data is included in the callback sent to your application.
    """
    confirm?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0Confirm
    name?: str
    style?: str
    text: str

    $type: str

    url?: str
    value?: str

    check:
        len(text) >= 1
        len($type) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0ActionsItems0Confirm:
    r"""
    confirm defines an optional confirmation dialog that appears before the action is executed.
    When set, users must confirm their intent before the action proceeds.

    Attributes
    ----------
    dismissText : str, default is Undefined, optional
        dismissText defines the label for the cancel button in the dialog.
        When not specified, defaults to "Cancel". This button cancels the action.
    okText : str, default is Undefined, optional
        okText defines the label for the confirmation button in the dialog.
        When not specified, defaults to "Okay". This button proceeds with the action.
    text : str, default is Undefined, required
        text defines the main message displayed in the confirmation dialog.
        This should be a clear question or statement asking the user to confirm their action.
    title : str, default is Undefined, optional
        title defines the title text displayed at the top of the confirmation dialog.
        When not specified, a default title will be used.
    """
    dismissText?: str
    okText?: str
    text: str

    title?: str

    check:
        len(text) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0FieldsItems0:
    r"""
    SlackField configures a single Slack field that is sent with each notification.
    Each field must contain a title, value, and optionally, a boolean value to indicate if the field
    is short enough to be displayed next to other fields designated as short.
    See https://api.slack.com/docs/message-attachments#fields for more information.

    Attributes
    ----------
    short : bool, default is Undefined, optional
        short determines whether this field can be displayed alongside other short fields.
        When true, Slack may display this field side by side with other short fields.
        When false or not specified, the field takes the full width of the message.
    title : str, default is Undefined, required
        title defines the label or header text displayed for this field.
        This appears as bold text above the field value in the Slack message.
    value : str, default is Undefined, required
        value defines the content or data displayed for this field.
        This appears below the title and can contain plain text or Slack markdown.
    """
    short?: bool
    title: str

    value: str

    check:
        len(title) >= 1
        len(value) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SlackConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0:
    r"""
    SNSConfig configures notifications via AWS SNS.
    See https://prometheus.io/docs/alerting/latest/configuration/#sns_configs

    Attributes
    ----------
    apiURL : str, default is Undefined, optional
        apiURL defines the SNS API URL, e.g. https://sns.us-east-2.amazonaws.com.
        If not specified, the SNS API URL from the SNS SDK will be used.
    attributes : {str:str}, default is Undefined, optional
        attributes defines SNS message attributes as key-value pairs.
        These provide additional metadata that can be used for message filtering and routing.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the message content of the SNS notification.
        This is the actual notification text that will be sent to subscribers.
    phoneNumber : str, default is Undefined, optional
        phoneNumber defines the phone number if message is delivered via SMS in E.164 format.
        If you don't specify this value, you must specify a value for the TopicARN or TargetARN.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    sigv4 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4, default is Undefined, optional
        sigv4
    subject : str, default is Undefined, optional
        subject defines the subject line when the message is delivered to email endpoints.
        This field is only used when sending to email subscribers of an SNS topic.
    targetARN : str, default is Undefined, optional
        targetARN defines the mobile platform endpoint ARN if message is delivered via mobile notifications.
        If you don't specify this value, you must specify a value for the TopicARN or PhoneNumber.
    topicARN : str, default is Undefined, optional
        topicARN defines the SNS topic ARN, e.g. arn:aws:sns:us-east-2:698519295917:My-Topic.
        If you don't specify this value, you must specify a value for the PhoneNumber or TargetARN.
    """
    apiURL?: str
    attributes?: {str:str}
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfig
    message?: str
    phoneNumber?: str
    sendResolved?: bool
    sigv4?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4
    subject?: str
    targetARN?: str
    topicARN?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for SNS API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4:
    r"""
    sigv4 configures AWS's Signature Verification 4 signing process to sign requests.
    This includes AWS credentials and region configuration for authentication.

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4AccessKey, default is Undefined, optional
        access key
    profile : str, default is Undefined, optional
        profile defines the named AWS profile used to authenticate.
    region : str, default is Undefined, optional
        region defines the AWS region. If blank, the region from the default credentials chain used.
    roleArn : str, default is Undefined, optional
        roleArn defines the named AWS profile used to authenticate.
    secretKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4SecretKey, default is Undefined, optional
        secret key
    useFIPSSTSEndpoint : bool, default is Undefined, optional
        useFIPSSTSEndpoint defines FIPS mode for AWS STS endpoint.
        It requires Prometheus >= v2.54.0.
    """
    accessKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4AccessKey
    profile?: str
    region?: str
    roleArn?: str
    secretKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4SecretKey
    useFIPSSTSEndpoint?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4AccessKey:
    r"""
    accessKey defines the AWS API key. If not specified, the environment variable
    `AWS_ACCESS_KEY_ID` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0SnsConfigsItems0Sigv4SecretKey:
    r"""
    secretKey defines the AWS API secret. If not specified, the environment
    variable `AWS_SECRET_ACCESS_KEY` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0:
    r"""
    TelegramConfig configures notifications via Telegram.
    See https://prometheus.io/docs/alerting/latest/configuration/#telegram_config

    Attributes
    ----------
    apiURL : str, default is Undefined, optional
        apiURL defines the Telegram API URL, e.g. https://api.telegram.org.
        If not specified, the default Telegram API URL will be used.
    botToken : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0BotToken, default is Undefined, optional
        bot token
    botTokenFile : str, default is Undefined, optional
        botTokenFile defines the file to read the Telegram bot token from.
        It is mutually exclusive with `botToken`.
        Either `botToken` or `botTokenFile` is required.
        It requires Alertmanager >= v0.26.0.
    chatID : int, default is Undefined, required
        chatID defines the Telegram chat ID where messages will be sent.
        This can be a user ID, group ID, or channel ID (with @ prefix for public channels).
    disableNotifications : bool, default is Undefined, optional
        disableNotifications controls whether Telegram notifications are sent silently.
        When true, users will receive the message without notification sounds.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the message template for the Telegram notification.
        This is the content that will be sent to the specified chat.
    messageThreadID : int, default is Undefined, optional
        messageThreadID defines the Telegram Group Topic ID for threaded messages.
        This allows sending messages to specific topics within Telegram groups.
        It requires Alertmanager >= 0.26.0.
    parseMode : str, default is Undefined, optional
        parseMode defines the parse mode for telegram message formatting.
        Valid values are "MarkdownV2", "Markdown", and "HTML".
        This determines how text formatting is interpreted in the message.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    """
    apiURL?: str
    botToken?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0BotToken
    botTokenFile?: str
    chatID: int

    disableNotifications?: bool
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfig
    message?: str
    messageThreadID?: int
    parseMode?: "MarkdownV2" | "Markdown" | "HTML"
    sendResolved?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0BotToken:
    r"""
    botToken defines the Telegram bot token. It is mutually exclusive with `botTokenFile`.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.
    Either `botToken` or `botTokenFile` is required.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for Telegram API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0TelegramConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0:
    r"""
    VictorOpsConfig configures notifications via VictorOps.
    See https://prometheus.io/docs/alerting/latest/configuration/#victorops_config

    Attributes
    ----------
    apiKey : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0APIKey, default is Undefined, optional
        api key
    apiUrl : str, default is Undefined, optional
        apiUrl defines the VictorOps API URL.
        When not specified, defaults to the standard VictorOps API endpoint.
    customFields : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0CustomFieldsItems0], default is Undefined, optional
        customFields defines additional custom fields for notification.
        These provide extra metadata that will be included with the VictorOps incident.
    entityDisplayName : str, default is Undefined, optional
        entityDisplayName contains a summary of the alerted problem.
        This appears as the main title or identifier for the incident.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    messageType : str, default is Undefined, optional
        messageType describes the behavior of the alert.
        Valid values are "CRITICAL", "WARNING", and "INFO".
    monitoringTool : str, default is Undefined, optional
        monitoringTool defines the monitoring tool the state message is from.
        This helps identify the source system that generated the alert.
    routingKey : str, default is Undefined, optional
        routingKey defines a key used to map the alert to a team.
        This determines which VictorOps team will receive the alert notification.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    stateMessage : str, default is Undefined, optional
        stateMessage contains a long explanation of the alerted problem.
        This provides detailed context about the incident.
    """
    apiKey?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0APIKey
    apiUrl?: str
    customFields?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0CustomFieldsItems0]
    entityDisplayName?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfig
    messageType?: str
    monitoringTool?: str
    routingKey?: str
    sendResolved?: bool
    stateMessage?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0APIKey:
    r"""
    apiKey defines the secret's key that contains the API key to use when talking to the VictorOps API.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0CustomFieldsItems0:
    r"""
    KeyValue defines a (key, value) tuple.

    Attributes
    ----------
    key : str, default is Undefined, required
        key defines the key of the tuple.
        This is the identifier or name part of the key-value pair.
    value : str, default is Undefined, required
        value defines the value of the tuple.
        This is the data or content associated with the key.
    """
    key: str

    value: str

    check:
        len(key) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client's configuration for VictorOps API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0VictoropsConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0:
    r"""
    WebexConfig configures notification via Cisco Webex
    See https://prometheus.io/docs/alerting/latest/configuration/#webex_config

    Attributes
    ----------
    apiURL : str, default is Undefined, optional
        apiURL defines the Webex Teams API URL i.e. https://webexapis.com/v1/messages
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the message template
    roomID : str, default is Undefined, required
        roomID defines the ID of the Webex Teams room where to send the messages.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    """
    apiURL?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfig
    message?: str
    roomID: str

    sendResolved?: bool

    check:
        _regex_match(str(apiURL), r"^https?://.+$") if apiURL
        len(roomID) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client's configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebexConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0:
    r"""
    WebhookConfig configures notifications via a generic receiver supporting the webhook payload.
    See https://prometheus.io/docs/alerting/latest/configuration/#webhook_config

    Attributes
    ----------
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    maxAlerts : int, default is Undefined, optional
        maxAlerts defines the maximum number of alerts to be sent per webhook message.
        When 0, all alerts are included in the webhook payload.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    timeout : str, default is Undefined, optional
        timeout defines the maximum time to wait for a webhook request to complete,
        before failing the request and allowing it to be retried.
        It requires Alertmanager >= v0.28.0.
    url : str, default is Undefined, optional
        url defines the URL to send HTTP POST requests to.
        urlSecret takes precedence over url. One of urlSecret and url should be defined.
    urlSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0URLSecret, default is Undefined, optional
        url secret
    """
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfig
    maxAlerts?: int
    sendResolved?: bool
    timeout?: str
    url?: str
    urlSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0URLSecret

    check:
        maxAlerts >= 0 if maxAlerts not in [None, Undefined]
        _regex_match(str(timeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if timeout

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for webhook requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WebhookConfigsItems0URLSecret:
    r"""
    urlSecret defines the secret's key that contains the webhook URL to send HTTP requests to.
    urlSecret takes precedence over url. One of urlSecret and url should be defined.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0:
    r"""
    WeChatConfig configures notifications via WeChat.
    See https://prometheus.io/docs/alerting/latest/configuration/#wechat_config

    Attributes
    ----------
    agentID : str, default is Undefined, optional
        agentID defines the application agent ID within WeChat Work.
        This identifies which WeChat Work application will send the notifications.
    apiSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0APISecret, default is Undefined, optional
        api secret
    apiURL : str, default is Undefined, optional
        apiURL defines the WeChat API URL.
        When not specified, defaults to the standard WeChat Work API endpoint.
    corpID : str, default is Undefined, optional
        corpID defines the corp id for authentication.
        This is the unique identifier for your WeChat Work organization.
    httpConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfig, default is Undefined, optional
        http config
    message : str, default is Undefined, optional
        message defines the API request data as defined by the WeChat API.
        This contains the actual notification content to be sent.
    messageType : str, default is Undefined, optional
        messageType defines the type of message to send.
        Valid values include "text", "markdown", and other WeChat Work supported message types.
    sendResolved : bool, default is Undefined, optional
        sendResolved defines whether or not to notify about resolved alerts.
    toParty : str, default is Undefined, optional
        toParty defines the target department(s) to receive the notification.
        Can be a single department ID or multiple department IDs separated by '|'.
    toTag : str, default is Undefined, optional
        toTag defines the target tag(s) to receive the notification.
        Can be a single tag ID or multiple tag IDs separated by '|'.
    toUser : str, default is Undefined, optional
        toUser defines the target user(s) to receive the notification.
        Can be a single user ID or multiple user IDs separated by '|'.
    """
    agentID?: str
    apiSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0APISecret
    apiURL?: str
    corpID?: str
    httpConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfig
    message?: str
    messageType?: str
    sendResolved?: bool
    toParty?: str
    toTag?: str
    toUser?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0APISecret:
    r"""
    apiSecret defines the secret's key that contains the WeChat API key.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfig:
    r"""
    httpConfig defines the HTTP client configuration for WeChat API requests.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2.
    followRedirects : bool, default is Undefined, optional
        followRedirects specifies whether the client should follow HTTP 3xx redirects.
        When true, the client will automatically follow redirect responses.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyURL : str, default is Undefined, optional
        proxyURL defines an optional proxy URL for HTTP requests.
        If defined, this field takes precedence over `proxyUrl`.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorization
    basicAuth?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuth
    bearerTokenSecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBearerTokenSecret
    enableHttp2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyURL?: str
    proxyUrl?: str
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorization:
    r"""
    authorization defines the authorization header configuration for the client.
    This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigAuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuth:
    r"""
    basicAuth defines the basic authentication credentials for the client.
    This is mutually exclusive with Authorization. If both are defined, BasicAuth takes precedence.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthUsername

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigBearerTokenSecret:
    r"""
    bearerTokenSecret defines the secret's key that contains the bearer token to be used by the client
    for authentication.
    The secret needs to be in the same namespace as the AlertmanagerConfig
    object and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2:
    r"""
    oauth2 defines the OAuth2 client credentials used to fetch a token for the targets.
    This enables OAuth2 authentication flow for HTTP requests.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigOauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfig:
    r"""
    tlsConfig defines the TLS configuration for the client.
    This includes settings for certificates, CA validation, and TLS protocol options.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecReceiversItems0WechatConfigsItems0HTTPConfigTLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRoute:
    r"""
    route defines the Alertmanager route definition for alerts matching the resource's
    namespace. If present, it will be added to the generated Alertmanager
    configuration as a first-level route.

    Attributes
    ----------
    activeTimeIntervals : [str], default is Undefined, optional
        activeTimeIntervals is a list of MuteTimeInterval names when this route should be active.
    continue : bool, default is Undefined, optional
        continue defines the boolean indicating whether an alert should continue matching subsequent
        sibling nodes. It will always be overridden to true for the first-level
        route by the Prometheus operator.
    groupBy : [str], default is Undefined, optional
        groupBy defines the list of labels to group by.
        Labels must not be repeated (unique list).
        Special label "..." (aggregate by all possible labels), if provided, must be the only element in the list.
    groupInterval : str, default is Undefined, optional
        groupInterval defines how long to wait before sending an updated notification.
        Must match the regular expression`^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$`
        Example: "5m"
    groupWait : str, default is Undefined, optional
        groupWait defines how long to wait before sending the initial notification.
        Must match the regular expression`^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$`
        Example: "30s"
    matchers : [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRouteMatchersItems0], default is Undefined, optional
        matchers defines the list of matchers that the alert's labels should match. For the first
        level route, the operator removes any existing equality and regexp
        matcher on the `namespace` label and adds a `namespace: <object
        namespace>` matcher.
    muteTimeIntervals : [str], default is Undefined, optional
        muteTimeIntervals is a list of MuteTimeInterval names that will mute this route when matched,
    receiver : str, default is Undefined, optional
        receiver defines the name of the receiver for this route. If not empty, it should be listed in
        the `receivers` field.
    repeatInterval : str, default is Undefined, optional
        repeatInterval defines how long to wait before repeating the last notification.
        Must match the regular expression`^(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?$`
        Example: "4h"
    routes : [any], default is Undefined, optional
        routes defines the child routes.
    """
    activeTimeIntervals?: [str]
    continue?: bool
    groupBy?: [str]
    groupInterval?: str
    groupWait?: str
    matchers?: [MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRouteMatchersItems0]
    muteTimeIntervals?: [str]
    receiver?: str
    repeatInterval?: str
    routes?: [any]

schema MonitoringCoreosComV1alpha1AlertmanagerConfigSpecRouteMatchersItems0:
    r"""
    Matcher defines how to match on alert's labels.

    Attributes
    ----------
    matchType : str, default is Undefined, optional
        matchType defines the match operation available with AlertManager >= v0.22.0.
        Takes precedence over Regex (deprecated) if non-empty.
        Valid values: "=" (equality), "!=" (inequality), "=~" (regex match), "!~" (regex non-match).
    name : str, default is Undefined, required
        name defines the label to match.
        This specifies which alert label should be evaluated.
    regex : bool, default is Undefined, optional
        regex defines whether to match on equality (false) or regular-expression (true).
        Deprecated: for AlertManager >= v0.22.0, `matchType` should be used instead.
    value : str, default is Undefined, optional
        value defines the label value to match.
        This is the expected value for the specified label.
    """
    matchType?: "!=" | "=" | "=~" | "!~"
    name: str

    regex?: bool
    value?: str

    check:
        len(name) >= 1

