"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ScrapeConfig:
    r"""
    ScrapeConfig defines a namespaced Prometheus scrape_config to be aggregated across
    multiple namespaces into the Prometheus configuration.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ScrapeConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1alpha1ScrapeConfigSpec, default is Undefined, required
        spec
    """
    apiVersion: "monitoring.coreos.com/v1alpha1" = "monitoring.coreos.com/v1alpha1"

    kind: "ScrapeConfig" = "ScrapeConfig"

    metadata?: v1.ObjectMeta
    spec: MonitoringCoreosComV1alpha1ScrapeConfigSpec

schema MonitoringCoreosComV1alpha1ScrapeConfigSpec:
    r"""
    ScrapeConfigSpec is a specification of the desired configuration for a scrape configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization, default is Undefined, optional
        authorization
    azureSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0], default is Undefined, optional
        AzureSDConfigs defines a list of Azure service discovery configurations.
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth, default is Undefined, optional
        basic auth
    consulSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0], default is Undefined, optional
        ConsulSDConfigs defines a list of Consul service discovery configurations.
    convertClassicHistogramsToNHCB : bool, default is Undefined, optional
        Whether to convert all scraped classic histograms into a native histogram with custom buckets.
        It requires Prometheus >= v3.0.0.
    digitalOceanSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0], default is Undefined, optional
        DigitalOceanSDConfigs defines a list of DigitalOcean service discovery configurations.
    dnsSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0], default is Undefined, optional
        DNSSDConfigs defines a list of DNS service discovery configurations.
    dockerSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0], default is Undefined, optional
        DockerSDConfigs defines a list of Docker service discovery configurations.
    dockerSwarmSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0], default is Undefined, optional
        DockerswarmSDConfigs defines a list of Dockerswarm service discovery configurations.
    ec2SDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0], default is Undefined, optional
        EC2SDConfigs defines a list of EC2 service discovery configurations.
    enableCompression : bool, default is Undefined, optional
        When false, Prometheus will request uncompressed response from the scraped target.

        It requires Prometheus >= v2.49.0.

        If unset, Prometheus uses true by default.
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    eurekaSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0], default is Undefined, optional
        EurekaSDConfigs defines a list of Eureka service discovery configurations.
    fallbackScrapeProtocol : str, default is Undefined, optional
        The protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.

        It requires Prometheus >= v3.0.0.
    fileSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0], default is Undefined, optional
        FileSDConfigs defines a list of file service discovery configurations.
    gceSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0], default is Undefined, optional
        GCESDConfigs defines a list of GCE service discovery configurations.
    hetznerSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0], default is Undefined, optional
        HetznerSDConfigs defines a list of Hetzner service discovery configurations.
    honorLabels : bool, default is Undefined, optional
        HonorLabels chooses the metric's labels on collisions with target labels.
    honorTimestamps : bool, default is Undefined, optional
        HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.
    httpSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0], default is Undefined, optional
        HTTPSDConfigs defines a list of HTTP service discovery configurations.
    ionosSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0], default is Undefined, optional
        IonosSDConfigs defines a list of IONOS service discovery configurations.
    jobName : str, default is Undefined, optional
        The value of the `job` label assigned to the scraped metrics by default.

        The `job_name` field in the rendered scrape configuration is always controlled by the
        operator to prevent duplicate job names, which Prometheus does not allow. Instead the
        `job` label is set by means of relabeling configs.
    keepDroppedTargets : int, default is Undefined, optional
        Per-scrape limit on the number of targets dropped by relabeling
        that will be kept in memory. 0 means no limit.

        It requires Prometheus >= v2.47.0.
    kubernetesSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0], default is Undefined, optional
        KubernetesSDConfigs defines a list of Kubernetes service discovery configurations.
    kumaSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0], default is Undefined, optional
        KumaSDConfigs defines a list of Kuma service discovery configurations.
    labelLimit : int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample.
        Only valid in Prometheus versions 2.27.0 and newer.
    labelNameLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample.
        Only valid in Prometheus versions 2.27.0 and newer.
    labelValueLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample.
        Only valid in Prometheus versions 2.27.0 and newer.
    lightSailSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0], default is Undefined, optional
        LightsailSDConfigs defines a list of Lightsail service discovery configurations.
    linodeSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0], default is Undefined, optional
        LinodeSDConfigs defines a list of Linode service discovery configurations.
    metricRelabelings : [MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0], default is Undefined, optional
        MetricRelabelConfigs to apply to samples before ingestion.
    metricsPath : str, default is Undefined, optional
        MetricsPath HTTP path to scrape for metrics. If empty, Prometheus uses the default value (e.g. /metrics).
    nameEscapingScheme : str, default is Undefined, optional
        Metric name escaping mode to request through content negotiation.

        It requires Prometheus >= v3.4.0.
    nameValidationScheme : str, default is Undefined, optional
        Specifies the validation scheme for metric and label names.

        It requires Prometheus >= v3.0.0.
    nativeHistogramBucketLimit : int, default is Undefined, optional
        If there are more than this many buckets in a native histogram,
        buckets will be merged to stay within the limit.
        It requires Prometheus >= v2.45.0.
    nativeHistogramMinBucketFactor : int | str, default is Undefined, optional
        If the growth factor of one bucket to the next is smaller than this,
        buckets will be merged to increase the factor sufficiently.
        It requires Prometheus >= v2.50.0.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    nomadSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0], default is Undefined, optional
        NomadSDConfigs defines a list of Nomad service discovery configurations.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2, default is Undefined, optional
        oauth2
    openstackSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0], default is Undefined, optional
        OpenStackSDConfigs defines a list of OpenStack service discovery configurations.
    ovhcloudSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0], default is Undefined, optional
        OVHCloudSDConfigs defines a list of OVHcloud service discovery configurations.
    params : {str:[str]}, default is Undefined, optional
        Optional HTTP URL parameters
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    puppetDBSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0], default is Undefined, optional
        PuppetDBSDConfigs defines a list of PuppetDB service discovery configurations.
    relabelings : [MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0], default is Undefined, optional
        RelabelConfigs defines how to rewrite the target's labels before scraping.
        Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields.
        The original scrape job's name is available via the `__tmp_prometheus_job_name` label.
        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    sampleLimit : int, default is Undefined, optional
        SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    scalewaySDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0], default is Undefined, optional
        ScalewaySDConfigs defines a list of Scaleway instances and baremetal service discovery configurations.
    scheme : str, default is Undefined, optional
        Configures the protocol scheme used for requests.
        If empty, Prometheus uses HTTP by default.
    scrapeClass : str, default is Undefined, optional
        The scrape class to apply.
    scrapeClassicHistograms : bool, default is Undefined, optional
        Whether to scrape a classic histogram that is also exposed as a native histogram.
        It requires Prometheus >= v2.45.0.

        Notice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.
    scrapeInterval : str, default is Undefined, optional
        ScrapeInterval is the interval between consecutive scrapes.
    scrapeProtocols : [str], default is Undefined, optional
        The protocols to negotiate during a scrape. It tells clients the
        protocols supported by Prometheus in order of preference (from most to least preferred).

        If unset, Prometheus uses its default value.

        It requires Prometheus >= v2.49.0.
    scrapeTimeout : str, default is Undefined, optional
        ScrapeTimeout is the number of seconds to wait until a scrape request times out.
        The value cannot be greater than the scrape interval otherwise the operator will reject the resource.
    staticConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0], default is Undefined, optional
        StaticConfigs defines a list of static targets with a common label set.
    targetLimit : int, default is Undefined, optional
        TargetLimit defines a limit on the number of scraped targets that will be accepted.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig, default is Undefined, optional
        tls config
    trackTimestampsStaleness : bool, default is Undefined, optional
        TrackTimestampsStaleness whether Prometheus tracks staleness of
        the metrics that have an explicit timestamp present in scraped data.
        Has no effect if `honorTimestamps` is false.
        It requires Prometheus >= v2.48.0.
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization
    azureSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0]
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth
    consulSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0]
    convertClassicHistogramsToNHCB?: bool
    digitalOceanSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0]
    dnsSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0]
    dockerSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0]
    dockerSwarmSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0]
    ec2SDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0]
    enableCompression?: bool
    enableHTTP2?: bool
    eurekaSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0]
    fallbackScrapeProtocol?: "PrometheusProto" | "OpenMetricsText0.0.1" | "OpenMetricsText1.0.0" | "PrometheusText0.0.4" | "PrometheusText1.0.0"
    fileSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0]
    gceSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0]
    hetznerSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0]
    honorLabels?: bool
    honorTimestamps?: bool
    httpSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0]
    ionosSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0]
    jobName?: str
    keepDroppedTargets?: int
    kubernetesSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0]
    kumaSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0]
    labelLimit?: int
    labelNameLengthLimit?: int
    labelValueLengthLimit?: int
    lightSailSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0]
    linodeSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0]
    metricRelabelings?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0]
    metricsPath?: str
    nameEscapingScheme?: "AllowUTF8" | "Underscores" | "Dots" | "Values"
    nameValidationScheme?: "UTF8" | "Legacy"
    nativeHistogramBucketLimit?: int
    nativeHistogramMinBucketFactor?: int | str
    noProxy?: str
    nomadSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0]
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2
    openstackSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0]
    ovhcloudSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0]
    params?: {str:[str]}
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    puppetDBSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0]
    relabelings?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0]
    sampleLimit?: int
    scalewaySDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0]
    scheme?: "HTTP" | "HTTPS"
    scrapeClass?: str
    scrapeClassicHistograms?: bool
    scrapeInterval?: str
    scrapeProtocols?: [str]
    scrapeTimeout?: str
    staticConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0]
    targetLimit?: int
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig
    trackTimestampsStaleness?: bool

    check:
        len(jobName) >= 1 if jobName
        len(metricRelabelings) >= 1 if metricRelabelings
        len(metricsPath) >= 1 if metricsPath
        _regex_match(str(nativeHistogramMinBucketFactor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if nativeHistogramMinBucketFactor
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(relabelings) >= 1 if relabelings
        len(scrapeClass) >= 1 if scrapeClass
        _regex_match(str(scrapeInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeInterval
        len(scrapeProtocols) >= 1 if scrapeProtocols
        _regex_match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization:
    r"""
    Authorization header to use on every scrape request.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0:
    r"""
    AzureSDConfig allow retrieving scrape targets from Azure VMs.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#azure_sd_config

    Attributes
    ----------
    authenticationMethod : str, default is Undefined, optional
        # The authentication method, either `OAuth` or `ManagedIdentity` or `SDK`.
        See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
        SDK authentication method uses environment variables by default.
        See https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    clientID : str, default is Undefined, optional
        Optional client ID. Only required with the OAuth authentication method.
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret, default is Undefined, optional
        client secret
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    environment : str, default is Undefined, optional
        The Azure environment.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must
        instead be specified in the relabeling rule.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    resourceGroup : str, default is Undefined, optional
        Optional resource group name. Limits discovery to this resource group.
        Requires  Prometheus v2.35.0 and above
    subscriptionID : str, default is Undefined, required
        The subscription ID. Always required.
    tenantID : str, default is Undefined, optional
        Optional tenant ID. Only required with the OAuth authentication method.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authenticationMethod?: "OAuth" | "ManagedIdentity" | "SDK"
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuth
    clientID?: str
    clientSecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret
    enableHTTP2?: bool
    environment?: str
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    resourceGroup?: str
    subscriptionID: str

    tenantID?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfig

    check:
        len(clientID) >= 1 if clientID
        len(environment) >= 1 if environment
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(resourceGroup) >= 1 if resourceGroup
        len(subscriptionID) >= 1
        len(tenantID) >= 1 if tenantID

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Authorization:
    r"""
    Authorization header configuration to authenticate against the target HTTP endpoint.
    Cannot be set at the same time as `oAuth2`, or `basicAuth`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to authenticate against the target HTTP endpoint.
    More info: https://prometheus.io/docs/operating/configuration/#endpoints
    Cannot be set at the same time as `authorization`, or `oAuth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret:
    r"""
    Optional client secret. Only required with the OAuth authentication method.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration to authenticate against the target HTTP endpoint.
    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth:
    r"""
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0:
    r"""
    ConsulSDConfig defines a Consul service discovery configuration
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#consul_sd_config

    Attributes
    ----------
    allowStale : bool, default is Undefined, optional
        Allow stale Consul results (see https://www.consul.io/api/features/consistency.html). Will reduce load on Consul.
        If unset, Prometheus uses its default value.
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    datacenter : str, default is Undefined, optional
        Consul Datacenter name, if not provided it will use the local Consul Agent Datacenter.
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
        If unset, Prometheus uses its default value.
    $filter : str, default is Undefined, optional
        Filter expression used to filter the catalog results.
        See https://www.consul.io/api-docs/catalog#list-services
        It requires Prometheus >= 3.0.0.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
        If unset, Prometheus uses its default value.
    namespace : str, default is Undefined, optional
        Namespaces are only supported in Consul Enterprise.

        It requires Prometheus >= 2.28.0.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    nodeMeta : {str:str}, default is Undefined, optional
        Node metadata key/value pairs to filter nodes for a given service.
        Starting with Consul 1.14, it is recommended to use `filter` with the `NodeMeta` selector instead.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    partition : str, default is Undefined, optional
        Admin Partitions are only supported in Consul Enterprise.
    pathPrefix : str, default is Undefined, optional
        Prefix for URIs for when consul is behind an API gateway (reverse proxy).

        It requires Prometheus >= 2.45.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        The time after which the provided names are refreshed.
        On large setup it might be a good idea to increase this value because the catalog will change all the time.
        If unset, Prometheus uses its default value.
    scheme : str, default is Undefined, optional
        HTTP Scheme default "http"
    server : str, default is Undefined, required
        Consul server address. A valid string consisting of a hostname or IP followed by an optional port number.
    services : [str], default is Undefined, optional
        A list of services for which targets are retrieved. If omitted, all services are scraped.
    tagSeparator : str, default is Undefined, optional
        The string by which Consul tags are joined into the tag label.
        If unset, Prometheus uses its default value.
    tags : [str], default is Undefined, optional
        An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.
        Starting with Consul 1.14, it is recommended to use `filter` with the `ServiceTags` selector instead.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    tokenRef : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef, default is Undefined, optional
        token ref
    """
    allowStale?: bool
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth
    datacenter?: str
    enableHTTP2?: bool
    $filter?: str
    followRedirects?: bool
    namespace?: str
    noProxy?: str
    nodeMeta?: {str:str}
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2
    partition?: str
    pathPrefix?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    scheme?: "HTTP" | "HTTPS"
    server: str

    services?: [str]
    tagSeparator?: str
    tags?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig
    tokenRef?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef

    check:
        len(datacenter) >= 1 if datacenter
        len($filter) >= 1 if $filter
        len(namespace) >= 1 if namespace
        len(partition) >= 1 if partition
        len(pathPrefix) >= 1 if pathPrefix
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(server) >= 1
        len(tagSeparator) >= 1 if tagSeparator

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization:
    r"""
    Optional Authorization header configuration to authenticate against the Consul Server.
    Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth:
    r"""
    Optional BasicAuth information to authenticate against the Consul Server.
    More info: https://prometheus.io/docs/operating/configuration/#endpoints
    Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2:
    r"""
    Optional OAuth2.0 configuration.
    Cannot be set at the same time as `basicAuth`, or `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to connect to the Consul API.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef:
    r"""
    Consul ACL TokenRef, if not provided it will use the ACL from the local Consul Agent.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0:
    r"""
    DNSSDConfig allows specifying a set of DNS domain names which are periodically queried to discover a list of targets.
    The DNS servers to be contacted are read from /etc/resolv.conf.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#dns_sd_config

    Attributes
    ----------
    names : [str], default is Undefined, required
        A list of DNS domain names to be queried.
    port : int, default is Undefined, optional
        The port number used if the query type is not SRV
        Ignored for SRV records
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the time after which the provided names are refreshed.
        If not set, Prometheus uses its default value.
    $type : str, default is Undefined, optional
        The type of DNS query to perform. One of SRV, A, AAAA, MX or NS.
        If not set, Prometheus uses its default value.

        When set to NS, it requires Prometheus >= v2.49.0.
        When set to MX, it requires Prometheus >= v2.38.0
    """
    names: [str]

    port?: int
    refreshInterval?: str
    $type?: "A" | "AAAA" | "MX" | "NS" | "SRV"

    check:
        len(names) >= 1
        all names in names {len(names) >= 1 if names not in [None, Undefined]} if names
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0:
    r"""
    DigitalOceanSDConfig allow retrieving scrape targets from DigitalOcean's Droplets API.
    This service discovery uses the public IPv4 address by default, by that can be changed with relabeling
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#digitalocean_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        The port to scrape metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the instance list.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Authorization
    enableHTTP2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfig

    check:
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Authorization:
    r"""
    Authorization header configuration to authenticate against the DigitalOcean API.
    Cannot be set at the same time as `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDigitalOceanSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0:
    r"""
    Docker SD configurations allow retrieving scrape targets from Docker Engine hosts.
    This SD discovers "containers" and will create a target for each network IP and
    port the container is configured to expose.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#docker_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    filters : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0FiltersItems0], default is Undefined, optional
        Optional filters to limit the discovery process to a subset of the available resources.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    host : str, default is Undefined, required
        Address of the docker daemon
    hostNetworkingHost : str, default is Undefined, optional
        The host to use if the container is in host networking mode.
    matchFirstNetwork : bool, default is Undefined, optional
        Configure whether to match the first network if the container has multiple networks defined.
        If unset, Prometheus uses true by default.
        It requires Prometheus >= v2.54.1.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        The port to scrape metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Time after which the container is refreshed.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    filters?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0FiltersItems0]
    followRedirects?: bool
    host: str

    hostNetworkingHost?: str
    matchFirstNetwork?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfig

    check:
        len(host) >= 1
        len(hostNetworkingHost) >= 1 if hostNetworkingHost
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Authorization:
    r"""
    Authorization header configuration to authenticate against the Docker API.
    Cannot be set at the same time as `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0FiltersItems0:
    r"""
    Filter name and value pairs to limit the discovery process to a subset of available resources.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the Filter.
    values : [str], default is Undefined, required
        Value to filter on.
    """
    name: str

    values: [str]

    check:
        len(values) >= 1
        all values in values {len(values) >= 1 if values not in [None, Undefined]} if values

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0:
    r"""
    DockerSwarmSDConfig configurations allow retrieving scrape targets from Docker Swarm engine.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#dockerswarm_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    filters : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0FiltersItems0], default is Undefined, optional
        Optional filters to limit the discovery process to a subset of available
        resources.
        The available filters are listed in the upstream documentation:
        Services: https://docs.docker.com/engine/api/v1.40/#operation/ServiceList
        Tasks: https://docs.docker.com/engine/api/v1.40/#operation/TaskList
        Nodes: https://docs.docker.com/engine/api/v1.40/#operation/NodeList
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    host : str, default is Undefined, required
        Address of the Docker daemon
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        The port to scrape metrics from, when `role` is nodes, and for discovered
        tasks and services that don't have published ports.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        The time after which the service discovery data is refreshed.
    role : str, default is Undefined, required
        Role of the targets to retrieve. Must be `Services`, `Tasks`, or `Nodes`.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    filters?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0FiltersItems0]
    followRedirects?: bool
    host: str

    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    role: "Services" | "Tasks" | "Nodes"

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfig

    check:
        _regex_match(str(host), r"^[a-zA-Z][a-zA-Z0-9+.-]*://.+$")
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Authorization:
    r"""
    Authorization header configuration to authenticate against the target HTTP endpoint.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuth:
    r"""
    Optional HTTP basic authentication information.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0FiltersItems0:
    r"""
    Filter name and value pairs to limit the discovery process to a subset of available resources.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the Filter.
    values : [str], default is Undefined, required
        Value to filter on.
    """
    name: str

    values: [str]

    check:
        len(values) >= 1
        all values in values {len(values) >= 1 if values not in [None, Undefined]} if values

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to use on every scrape request

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDockerSwarmSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0:
    r"""
    EC2SDConfig allow retrieving scrape targets from AWS EC2 instances.
    The private IP address is used by default, but may be changed to the public IP address with relabeling.
    The IAM credentials used must have the ec2:DescribeInstances permission to discover scrape targets
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config

    The EC2 service discovery requires AWS API keys or role ARN for authentication.
    BasicAuth, Authorization and OAuth2 fields are not present on purpose.

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey, default is Undefined, optional
        access key
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
        It requires Prometheus >= v2.41.0
    filters : [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0], default is Undefined, optional
        Filters can be used optionally to filter the instance list by other criteria.
        Available filter criteria can be found here:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html
        Filter API documentation: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html
        It requires Prometheus >= v2.3.0
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
        It requires Prometheus >= v2.41.0
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must
        instead be specified in the relabeling rule.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    region : str, default is Undefined, optional
        The AWS region.
    roleARN : str, default is Undefined, optional
        AWS Role ARN, an alternative to using AWS API keys.
    secretKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey, default is Undefined, optional
        secret key
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    accessKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey
    enableHTTP2?: bool
    filters?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0]
    followRedirects?: bool
    noProxy?: str
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    region?: str
    roleARN?: str
    secretKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfig

    check:
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(region) >= 1 if region
        len(roleARN) >= 1 if roleARN

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey:
    r"""
    AccessKey is the AWS API key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0:
    r"""
    Filter name and value pairs to limit the discovery process to a subset of available resources.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the Filter.
    values : [str], default is Undefined, required
        Value to filter on.
    """
    name: str

    values: [str]

    check:
        len(values) >= 1
        all values in values {len(values) >= 1 if values not in [None, Undefined]} if values

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey:
    r"""
    SecretKey is the AWS API secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfig:
    r"""
    TLS configuration to connect to the AWS EC2 API.
    It requires Prometheus >= v2.41.0

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0:
    r"""
    Eureka SD configurations allow retrieving scrape targets using the Eureka REST API.
    Prometheus will periodically check the REST endpoint and create a target for every app instance.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#eureka_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the instance list.
    server : str, default is Undefined, required
        The URL to connect to the Eureka server.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    server: str

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(server) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Authorization:
    r"""
    Authorization header to use on every scrape request.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization` or `basic_auth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEurekaSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0:
    r"""
    FileSDConfig defines a Prometheus file service discovery configuration
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config

    Attributes
    ----------
    files : [str], default is Undefined, required
        List of files to be used for file discovery. Recommendation: use absolute paths. While relative paths work, the
        prometheus-operator project makes no guarantees about the working directory where the configuration file is
        stored.
        Files must be mounted using Prometheus.ConfigMaps or Prometheus.Secrets.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will reload the content of the files.
    """
    files: [str]

    refreshInterval?: str

    check:
        len(files) >= 1
        all files in files {_regex_match(str(files), r"^[^*]*(\*[^/]*)?\.(json|yml|yaml|JSON|YML|YAML)$") if files} if files
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0:
    r"""
    GCESDConfig configures scrape targets from GCP GCE instances.
    The private IP address is used by default, but may be changed to
    the public IP address with relabeling.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#gce_sd_config

    The GCE service discovery will load the Google Cloud credentials
    from the file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable.
    See https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform

    A pre-requisite for using GCESDConfig is that a Secret containing valid
    Google Cloud credentials is mounted into the Prometheus or PrometheusAgent
    pod via the `.spec.secrets` field and that the GOOGLE_APPLICATION_CREDENTIALS
    environment variable is set to /etc/prometheus/secrets/<secret-name>/<credentials-filename.json>.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        Filter can be used optionally to filter the instance list by other criteria
        Syntax of this filter is described in the filter query parameter section:
        https://cloud.google.com/compute/docs/reference/latest/instances/list
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must
        instead be specified in the relabeling rule.
    project : str, default is Undefined, required
        The Google Cloud Project ID
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    tagSeparator : str, default is Undefined, optional
        The tag separator is used to separate the tags on concatenation
    zone : str, default is Undefined, required
        The zone of the scrape targets. If you need multiple zones use multiple GCESDConfigs.
    """
    $filter?: str
    port?: int
    project: str

    refreshInterval?: str
    tagSeparator?: str
    zone: str

    check:
        len($filter) >= 1 if $filter
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        len(project) >= 1
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(tagSeparator) >= 1 if tagSeparator
        len(zone) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0:
    r"""
    HTTPSDConfig defines a prometheus HTTP service discovery configuration
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-query the
        endpoint to update the target list.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL from which the targets are fetched.
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig
    url: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(url) >= 1
        _regex_match(str(url), r"^http(s)?://.+$")

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization:
    r"""
    Authorization header configuration to authenticate against the target HTTP endpoint.
    Cannot be set at the same time as `oAuth2`, or `basicAuth`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to authenticate against the target HTTP endpoint.
    More info: https://prometheus.io/docs/operating/configuration/#endpoints
    Cannot be set at the same time as `authorization`, or `oAuth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration to authenticate against the target HTTP endpoint.
    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0:
    r"""
    HetznerSDConfig allow retrieving scrape targets from Hetzner Cloud API and Robot API.
    This service discovery uses the public IPv4 address by default, but that can be changed with relabeling
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#hetzner_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    labelSelector : str, default is Undefined, optional
        Label selector used to filter the servers when fetching them from the API.
        It requires Prometheus >= v3.5.0.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        The port to scrape metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        The time after which the servers are refreshed.
    role : str, default is Undefined, required
        The Hetzner role of entities that should be discovered.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    labelSelector?: str
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    role: "hcloud" | "Hcloud" | "robot" | "Robot"

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfig

    check:
        len(labelSelector) >= 1 if labelSelector
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Authorization:
    r"""
    Authorization header configuration, required when role is hcloud.
    Role robot does not support bearer token authentication.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request, required when role is robot.
    Role hcloud does not support basic auth.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be used at the same time as `basic_auth` or `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to use on every scrape request.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHetznerSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0:
    r"""
    IonosSDConfig configurations allow retrieving scrape targets from IONOS resources.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ionos_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Authorization, default is Undefined, required
        authorization
    datacenterID : str, default is Undefined, required
        The unique ID of the IONOS data center.
    enableHTTP2 : bool, default is Undefined, optional
        Configure whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether the HTTP requests should follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        Port to scrape the metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the list of resources.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Authorization

    datacenterID: str

    enableHTTP2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfig

    check:
        len(datacenterID) >= 1
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Authorization:
    r"""
    Authorization` header configuration, required when using IONOS.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2:
    r"""
    Configure whether to enable OAuth2.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to use when connecting to the IONOS API.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecIonosSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0:
    r"""
    KubernetesSDConfig allows retrieving scrape targets from Kubernetes' REST API.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config

    Attributes
    ----------
    apiServer : str, default is Undefined, optional
        The API server address consisting of a hostname or IP address followed
        by an optional port number.
        If left empty, Prometheus is assumed to run inside
        of the cluster. It will discover API servers automatically and use the pod's
        CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
    attachMetadata : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AttachMetadata, default is Undefined, optional
        attach metadata
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    namespaces : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Namespaces, default is Undefined, optional
        namespaces
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    role : str, default is Undefined, required
        Role of the Kubernetes entities that should be discovered.
        Role `Endpointslice` requires Prometheus >= v2.21.0
    selectors : [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0], default is Undefined, optional
        Selector to select objects.
        It requires Prometheus >= v2.17.0
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    apiServer?: str
    attachMetadata?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AttachMetadata
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    namespaces?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Namespaces
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    role: "Pod" | "Endpoints" | "Ingress" | "Service" | "Node" | "EndpointSlice"

    selectors?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfig

    check:
        len(apiServer) >= 1 if apiServer
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AttachMetadata:
    r"""
    Optional metadata to attach to discovered targets.
    It requires Prometheus >= v2.35.0 when using the `Pod` role and
    Prometheus >= v2.37.0 for `Endpoints` and `Endpointslice` roles.

    Attributes
    ----------
    node : bool, default is Undefined, optional
        Attaches node metadata to discovered targets.
        When set to true, Prometheus must have the `get` permission on the
        `Nodes` objects.
        Only valid for Pod, Endpoint and Endpointslice roles.
    """
    node?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Authorization:
    r"""
    Authorization header to use on every scrape request.
    Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request.
    Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Namespaces:
    r"""
    Optional namespace discovery. If omitted, Prometheus discovers targets across all namespaces.

    Attributes
    ----------
    names : [str], default is Undefined, optional
        List of namespaces where to watch for resources.
        If empty and `ownNamespace` isn't true, Prometheus watches for resources in all namespaces.
    ownNamespace : bool, default is Undefined, optional
        Includes the namespace in which the Prometheus pod runs to the list of watched namespaces.
    """
    names?: [str]
    ownNamespace?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0:
    r"""
    K8SSelectorConfig is Kubernetes Selector Config

    Attributes
    ----------
    field : str, default is Undefined, optional
        An optional field selector to limit the service discovery to resources which have fields with specific values.
        e.g: `metadata.name=foobar`
    label : str, default is Undefined, optional
        An optional label selector to limit the service discovery to resources with specific labels and label values.
        e.g: `node.kubernetes.io/instance-type=master`
    role : str, default is Undefined, required
        Role specifies the type of Kubernetes resource to limit the service discovery to.
        Accepted values are: Node, Pod, Endpoints, EndpointSlice, Service, Ingress.
    """
    field?: str
    label?: str
    role: "Pod" | "Endpoints" | "Ingress" | "Service" | "Node" | "EndpointSlice"

    check:
        len(field) >= 1 if field
        len(label) >= 1 if label

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to connect to the Kubernetes API.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0:
    r"""
    KumaSDConfig allow retrieving scrape targets from Kuma's control plane.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kuma_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    clientID : str, default is Undefined, optional
        Client id is used by Kuma Control Plane to compute Monitoring Assignment for specific Prometheus backend.
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    fetchTimeout : str, default is Undefined, optional
        The time after which the monitoring assignments are refreshed.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        The time to wait between polling update requests.
    server : str, default is Undefined, required
        Address of the Kuma Control Plane's MADS xDS server.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuth
    clientID?: str
    enableHTTP2?: bool
    fetchTimeout?: str
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    server: str

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfig

    check:
        _regex_match(str(fetchTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if fetchTimeout
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(server) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Authorization:
    r"""
    Authorization header to use on every scrape request.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to use on every scrape request

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKumaSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0:
    r"""
    LightSailSDConfig configurations allow retrieving scrape targets from AWS Lightsail instances.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#lightsail_sd_config

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AccessKey, default is Undefined, optional
        access key
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Configure whether to enable HTTP2.
    endpoint : str, default is Undefined, optional
        Custom endpoint to be used.
    followRedirects : bool, default is Undefined, optional
        Configure whether the HTTP requests should follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        Port to scrape the metrics from.
        If using the public IP address, this must instead be specified in the relabeling rule.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the list of instances.
    region : str, default is Undefined, optional
        The AWS region.
    roleARN : str, default is Undefined, optional
        AWS Role ARN, an alternative to using AWS API keys.
    secretKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0SecretKey, default is Undefined, optional
        secret key
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    accessKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AccessKey
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    endpoint?: str
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    region?: str
    roleARN?: str
    secretKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0SecretKey
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfig

    check:
        len(endpoint) >= 1 if endpoint
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(region) >= 1 if region

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AccessKey:
    r"""
    AccessKey is the AWS API key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Authorization:
    r"""
    Optional `authorization` HTTP header configuration.
    Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuth:
    r"""
    Optional HTTP basic authentication information.
    Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2:
    r"""
    Optional OAuth2.0 configuration.
    Cannot be set at the same time as `basicAuth`, or `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0SecretKey:
    r"""
    SecretKey is the AWS API secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to connect to the Puppet DB.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLightSailSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0:
    r"""
    LinodeSDConfig configurations allow retrieving scrape targets from Linode's Linode APIv4.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#linode_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        Default port to scrape metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Time after which the linode instances are refreshed.
    region : str, default is Undefined, optional
        Optional region to filter on.
    tagSeparator : str, default is Undefined, optional
        The string by which Linode Instance tags are joined into the tag label.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Authorization
    enableHTTP2?: bool
    followRedirects?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    region?: str
    tagSeparator?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfig

    check:
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(region) >= 1 if region
        len(tagSeparator) >= 1 if tagSeparator

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Authorization:
    r"""
    Authorization header configuration.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be used at the same time as `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecLinodeSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

    check:
        all sourceLabels in sourceLabels {_regex_match(str(sourceLabels), r"^[a-zA-Z_][a-zA-Z0-9_]*$") if sourceLabels} if sourceLabels

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0:
    r"""
    NomadSDConfig configurations allow retrieving scrape targets from Nomad's Service API.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#nomad_sd_config

    Attributes
    ----------
    allowStale : bool, default is Undefined, optional
        The information to access the Nomad API. It is to be defined
        as the Nomad documentation requires.
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    namespace : str, default is Undefined, optional
        namespace
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Duration is a valid time duration that can be parsed by Prometheus model.ParseDuration() function.
        Supported units: y, w, d, h, m, s, ms
        Examples: `30s`, `1m`, `1h20m15s`, `15d`
    region : str, default is Undefined, optional
        region
    server : str, default is Undefined, required
        server
    tagSeparator : str, default is Undefined, optional
        tag separator
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    """
    allowStale?: bool
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    namespace?: str
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    region?: str
    server: str

    tagSeparator?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfig

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(server) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Authorization:
    r"""
    Authorization header to use on every scrape request.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuth:
    r"""
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2:
    r"""
    Optional OAuth 2.0 configuration.
    Cannot be set at the same time as `authorization` or `basic_auth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecNomadSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2:
    r"""
    OAuth2 configuration to use on every scrape request.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0:
    r"""
    OpenStackSDConfig allow retrieving scrape targets from OpenStack Nova instances.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#openstack_sd_config

    Attributes
    ----------
    allTenants : bool, default is Undefined, optional
        Whether the service discovery should list all instances for all projects.
        It is only relevant for the 'instance' role and usually requires admin permissions.
    applicationCredentialId : str, default is Undefined, optional
        ApplicationCredentialID
    applicationCredentialName : str, default is Undefined, optional
        The ApplicationCredentialID or ApplicationCredentialName fields are
        required if using an application credential to authenticate. Some providers
        allow you to create an application credential to authenticate rather than a
        password.
    applicationCredentialSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0ApplicationCredentialSecret, default is Undefined, optional
        application credential secret
    availability : str, default is Undefined, optional
        Availability of the endpoint to connect to.
    domainID : str, default is Undefined, optional
        DomainID
    domainName : str, default is Undefined, optional
        At most one of domainId and domainName must be provided if using username
        with Identity V3. Otherwise, either are optional.
    identityEndpoint : str, default is Undefined, optional
        IdentityEndpoint specifies the HTTP endpoint that is required to work with
        the Identity API of the appropriate version.
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0Password, default is Undefined, optional
        password
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must
        instead be specified in the relabeling rule.
    projectID : str, default is Undefined, optional
         ProjectID
    projectName : str, default is Undefined, optional
        The ProjectId and ProjectName fields are optional for the Identity V2 API.
        Some providers allow you to specify a ProjectName instead of the ProjectId.
        Some require both. Your provider's authentication policies will determine
        how these fields influence authentication.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the instance list.
    region : str, default is Undefined, required
        The OpenStack Region.
    role : str, default is Undefined, required
        The OpenStack role of entities that should be discovered.

        Note: The `LoadBalancer` role requires Prometheus >= v3.2.0.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    userid : str, default is Undefined, optional
        UserID
    username : str, default is Undefined, optional
        Username is required if using Identity V2 API. Consult with your provider's
        control panel to discover your account's username.
        In Identity V3, either userid or a combination of username
        and domainId or domainName are needed
    """
    allTenants?: bool
    applicationCredentialId?: str
    applicationCredentialName?: str
    applicationCredentialSecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0ApplicationCredentialSecret
    availability?: "Public" | "public" | "Admin" | "admin" | "Internal" | "internal"
    domainID?: str
    domainName?: str
    identityEndpoint?: str
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0Password
    port?: int
    projectID?: str
    projectName?: str
    refreshInterval?: str
    region: str

    role: "Instance" | "Hypervisor" | "LoadBalancer"

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfig
    userid?: str
    username?: str

    check:
        len(applicationCredentialName) >= 1 if applicationCredentialName
        len(domainID) >= 1 if domainID
        len(domainName) >= 1 if domainName
        _regex_match(str(identityEndpoint), r"^http(s)?:\/\/.+$") if identityEndpoint
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        len(projectID) >= 1 if projectID
        len(projectName) >= 1 if projectName
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(region) >= 1
        len(userid) >= 1 if userid
        len(username) >= 1 if username

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0ApplicationCredentialSecret:
    r"""
    The applicationCredentialSecret field is required if using an application
    credential to authenticate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0Password:
    r"""
    Password for the Identity V2 and V3 APIs. Consult with your provider's
    control panel to discover your account's preferred method of authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfig:
    r"""
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOpenstackSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0:
    r"""
    OVHCloudSDConfig configurations allow retrieving scrape targets from OVHcloud's dedicated servers and VPS using their API.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ovhcloud_sd_config

    Attributes
    ----------
    applicationKey : str, default is Undefined, required
        Access key to use. https://api.ovh.com.
    applicationSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ApplicationSecret, default is Undefined, required
        application secret
    consumerKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ConsumerKey, default is Undefined, required
        consumer key
    endpoint : str, default is Undefined, optional
        Custom endpoint to be used.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the resources list.
    service : str, default is Undefined, required
        Service of the targets to retrieve. Must be `VPS` or `DedicatedServer`.
    """
    applicationKey: str

    applicationSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ApplicationSecret

    consumerKey: MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ConsumerKey

    endpoint?: str
    refreshInterval?: str
    service: str

    check:
        len(applicationKey) >= 1
        len(endpoint) >= 1 if endpoint
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ApplicationSecret:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecOvhcloudSDConfigsItems0ConsumerKey:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0:
    r"""
    PuppetDBSDConfig configurations allow retrieving scrape targets from PuppetDB resources.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#puppetdb_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    enableHTTP2 : bool, default is Undefined, optional
        Configure whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether the HTTP requests should follow HTTP 3xx redirects.
    includeParameters : bool, default is Undefined, optional
        Whether to include the parameters as meta labels.
        Note: Enabling this exposes parameters in the Prometheus UI and API. Make sure
        that you don't have secrets exposed as parameters if you enable this.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    port : int, default is Undefined, optional
        Port to scrape the metrics from.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    query : str, default is Undefined, required
        Puppet Query Language (PQL) query. Only resources are supported.
        https://puppet.com/docs/puppetdb/latest/api/query/v4/pql.html
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the list of resources.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        The URL of the PuppetDB root query endpoint.
    """
    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Authorization
    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuth
    enableHTTP2?: bool
    followRedirects?: bool
    includeParameters?: bool
    noProxy?: str
    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2
    port?: int
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    query: str

    refreshInterval?: str
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfig
    url: str

    check:
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(query) >= 1
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(url) >= 1
        _regex_match(str(url), r"^http(s)?://.+$")

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Authorization:
    r"""
    Optional `authorization` HTTP header configuration.
    Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0AuthorizationCredentials:
    r"""
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuth:
    r"""
    Optional HTTP basic authentication information.
    Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthUsername

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthPassword:
    r"""
    `password` specifies a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0BasicAuthUsername:
    r"""
    `username` specifies a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2:
    r"""
    Optional OAuth2.0 configuration.
    Cannot be set at the same time as `basicAuth`, or `authorization`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientID:
    r"""
    `clientId` specifies a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientIDSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ClientSecret:
    r"""
    `clientSecret` specifies a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfig:
    r"""
    TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0Oauth2TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfig:
    r"""
    TLS configuration to connect to the Puppet DB.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecPuppetDBSDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

    check:
        all sourceLabels in sourceLabels {_regex_match(str(sourceLabels), r"^[a-zA-Z_][a-zA-Z0-9_]*$") if sourceLabels} if sourceLabels

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0:
    r"""
    ScalewaySDConfig configurations allow retrieving scrape targets from Scaleway instances and baremetal services.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scaleway_sd_config

    Attributes
    ----------
    accessKey : str, default is Undefined, required
        Access key to use. https://console.scaleway.com/project/credentials
    apiURL : str, default is Undefined, optional
        API URL to use when doing the server listing requests.
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects.
    nameFilter : str, default is Undefined, optional
        NameFilter specify a name filter (works as a LIKE) to apply on the server listing request.
    noProxy : str, default is Undefined, optional
        `noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    port : int, default is Undefined, optional
        The port to scrape metrics from.
    projectID : str, default is Undefined, required
        Project ID of the targets.
    proxyConnectHeader : {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        ProxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` defines the HTTP proxy server to use.
    refreshInterval : str, default is Undefined, optional
        Refresh interval to re-read the list of instances.
    role : str, default is Undefined, required
        Service of the targets to retrieve. Must be `Instance` or `Baremetal`.
    secretKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0SecretKey, default is Undefined, required
        secret key
    tagsFilter : [str], default is Undefined, optional
        TagsFilter specify a tag filter (a server needs to have all defined tags to be listed) to apply on the server listing request.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    zone : str, default is Undefined, optional
        Zone is the availability zone of your targets (e.g. fr-par-1).
    """
    accessKey: str

    apiURL?: str
    enableHTTP2?: bool
    followRedirects?: bool
    nameFilter?: str
    noProxy?: str
    port?: int
    projectID: str

    proxyConnectHeader?: {str:[MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    refreshInterval?: str
    role: "Instance" | "Baremetal"

    secretKey: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0SecretKey

    tagsFilter?: [str]
    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfig
    zone?: str

    check:
        len(accessKey) >= 1
        _regex_match(str(apiURL), r"^http(s)?://.+$") if apiURL
        len(nameFilter) >= 1 if nameFilter
        port <= 65535 if port not in [None, Undefined]
        port >= 0 if port not in [None, Undefined]
        len(projectID) >= 1
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(tagsFilter) >= 1 if tagsFilter
        all tagsFilter in tagsFilter {len(tagsFilter) >= 1 if tagsFilter not in [None, Undefined]} if tagsFilter
        len(zone) >= 1 if zone

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0SecretKey:
    r"""
    Secret key to use when listing targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfig:
    r"""
    TLS configuration to use on every scrape request

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecScalewaySDConfigsItems0TLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0:
    r"""
    StaticConfig defines a Prometheus static configuration.
    See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Labels assigned to all metrics scraped from the targets.
    targets : [str], default is Undefined, required
        List of targets for this static configuration.
    """
    labels?: {str:str}
    targets: [str]

    check:
        len(targets) >= 1

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig:
    r"""
    TLS configuration to use on every scrape request

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        Minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa
    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa:
    r"""
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert:
    r"""
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap:
    r"""
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret:
    r"""
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret:
    r"""
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

