"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema PrometheusRule:
    r"""
    The `PrometheusRule` custom resource definition (CRD) defines [alerting](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) and [recording](https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/) rules to be evaluated by `Prometheus` or `ThanosRuler` objects.

    `Prometheus` and `ThanosRuler` objects select `PrometheusRule` objects using label and namespace selectors.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PrometheusRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1PrometheusRuleSpec, default is Undefined, required
        spec
    status : MonitoringCoreosComV1PrometheusRuleStatus, default is Undefined, optional
        status
    """
    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "PrometheusRule" = "PrometheusRule"

    metadata?: v1.ObjectMeta
    spec: MonitoringCoreosComV1PrometheusRuleSpec

    status?: MonitoringCoreosComV1PrometheusRuleStatus

schema MonitoringCoreosComV1PrometheusRuleSpec:
    r"""
    spec defines the specification of desired alerting rule definitions for Prometheus.

    Attributes
    ----------
    groups : [MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0], default is Undefined, optional
        groups defines the content of Prometheus rule file
    """
    groups?: [MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0]

schema MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0:
    r"""
    RuleGroup is a list of sequentially evaluated recording and alerting rules.

    Attributes
    ----------
    interval : str, default is Undefined, optional
        interval defines how often rules in the group are evaluated.
    labels : {str:str}, default is Undefined, optional
        labels define the labels to add or overwrite before storing the result for its rules.
        The labels defined at the rule level take precedence.

        It requires Prometheus >= 3.0.0.
        The field is ignored for Thanos Ruler.
    limit : int, default is Undefined, optional
        limit defines the number of alerts an alerting rule and series a recording
        rule can produce.
        Limit is supported starting with Prometheus >= 2.31 and Thanos Ruler >= 0.24.
    name : str, default is Undefined, required
        name defines the name of the rule group.
    partial_response_strategy : str, default is Undefined, optional
        partial_response_strategy is only used by ThanosRuler and will
        be ignored by Prometheus instances.
        More info: https://github.com/thanos-io/thanos/blob/main/docs/components/rule.md#partial-response
    query_offset : str, default is Undefined, optional
        query_offset defines the offset the rule evaluation timestamp of this particular group by the specified duration into the past.

        It requires Prometheus >= v2.53.0.
        It is not supported for ThanosRuler.
    rules : [MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0RulesItems0], default is Undefined, optional
        rules defines the list of alerting and recording rules.
    """
    interval?: str
    labels?: {str:str}
    limit?: int
    name: str

    partial_response_strategy?: str
    query_offset?: str
    rules?: [MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0RulesItems0]

    check:
        _regex_match(str(interval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if interval
        len(name) >= 1
        _regex_match(str(partial_response_strategy), r"^(?i)(abort|warn)?$") if partial_response_strategy
        _regex_match(str(query_offset), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if query_offset

schema MonitoringCoreosComV1PrometheusRuleSpecGroupsItems0RulesItems0:
    r"""
    Rule describes an alerting or recording rule
    See Prometheus documentation: [alerting](https://www.prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) or [recording](https://www.prometheus.io/docs/prometheus/latest/configuration/recording_rules/#recording-rules) rule

    Attributes
    ----------
    alert : str, default is Undefined, optional
        alert defines the name of the alert. Must be a valid label value.
        Only one of `record` and `alert` must be set.
    annotations : {str:str}, default is Undefined, optional
        annotations defines annotations to add to each alert.
        Only valid for alerting rules.
    expr : int | str, default is Undefined, required
        expr defines the PromQL expression to evaluate.
    $for : str, default is Undefined, optional
        for defines how alerts are considered firing once they have been returned for this long.
    keep_firing_for : str, default is Undefined, optional
        keep_firing_for defines how long an alert will continue firing after the condition that triggered it has cleared.
    labels : {str:str}, default is Undefined, optional
        labels defines labels to add or overwrite.
    record : str, default is Undefined, optional
        record defines the name of the time series to output to. Must be a valid metric name.
        Only one of `record` and `alert` must be set.
    """
    alert?: str
    annotations?: {str:str}
    expr: int | str

    $for?: str
    keep_firing_for?: str
    labels?: {str:str}
    record?: str

    check:
        _regex_match(str($for), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if $for
        len(keep_firing_for) >= 1 if keep_firing_for
        _regex_match(str(keep_firing_for), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if keep_firing_for

schema MonitoringCoreosComV1PrometheusRuleStatus:
    r"""
    status defines the status subresource. It is under active development and is updated only when the
    "StatusForConfigurationResources" feature gate is enabled.

    Most recent observed status of the PrometheusRule. Read-only.
    More info:
    https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    bindings : [MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0], default is Undefined, optional
        bindings defines the list of workload resources (Prometheus, PrometheusAgent, ThanosRuler or Alertmanager) which select the configuration resource.
    """
    bindings?: [MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0]

schema MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0:
    r"""
    WorkloadBinding is a link between a configuration resource and a workload resource.

    Attributes
    ----------
    conditions : [MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0ConditionsItems0], default is Undefined, optional
        conditions defines the current state of the configuration resource when bound to the referenced Workload object.
    group : str, default is Undefined, required
        group defines the group of the referenced resource.
    name : str, default is Undefined, required
        name defines the name of the referenced object.
    namespace : str, default is Undefined, required
        namespace defines the namespace of the referenced object.
    resource : str, default is Undefined, required
        resource defines the type of resource being referenced (e.g. Prometheus, PrometheusAgent, ThanosRuler or Alertmanager).
    """
    conditions?: [MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0ConditionsItems0]
    group: "monitoring.coreos.com"

    name: str

    namespace: str

    resource: "prometheuses" | "prometheusagents" | "thanosrulers" | "alertmanagers"

    check:
        len(name) >= 1
        len(namespace) >= 1

schema MonitoringCoreosComV1PrometheusRuleStatusBindingsItems0ConditionsItems0:
    r"""
    ConfigResourceCondition describes the status of configuration resources linked to Prometheus, PrometheusAgent, Alertmanager or ThanosRuler.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime defines the time of the last update to the current status property.
    message : str, default is Undefined, optional
        message defines the human-readable message indicating details for the condition's last transition.
    observedGeneration : int, default is Undefined, optional
        observedGeneration defines the .metadata.generation that the
        condition was set based upon. For instance, if `.metadata.generation` is
        currently 12, but the `.status.conditions[].observedGeneration` is 9, the
        condition is out of date with respect to the current state of the object.
    reason : str, default is Undefined, optional
        reason for the condition's last transition.
    status : str, default is Undefined, required
        status of the condition.
    $type : str, default is Undefined, required
        type of the condition being reported.
        Currently, only "Accepted" is supported.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason?: str
    status: str

    $type: "Accepted"

    check:
        len(status) >= 1
        len($type) >= 1

