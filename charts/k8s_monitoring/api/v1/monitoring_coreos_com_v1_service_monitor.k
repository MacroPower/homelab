"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ServiceMonitor:
    r"""
    The `ServiceMonitor` custom resource definition (CRD) defines how `Prometheus` and `PrometheusAgent` can scrape metrics from a group of services.
    Among other things, it allows to specify:
    * The services to scrape via label selectors.
    * The container ports to scrape.
    * Authentication credentials to use.
    * Target and metric relabeling.

    `Prometheus` and `PrometheusAgent` objects select `ServiceMonitor` objects using label and namespace selectors.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServiceMonitor", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1ServiceMonitorSpec, default is Undefined, required
        spec
    status : MonitoringCoreosComV1ServiceMonitorStatus, default is Undefined, optional
        status
    """
    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "ServiceMonitor" = "ServiceMonitor"

    metadata?: v1.ObjectMeta
    spec: MonitoringCoreosComV1ServiceMonitorSpec

    status?: MonitoringCoreosComV1ServiceMonitorStatus

schema MonitoringCoreosComV1ServiceMonitorSpec:
    r"""
    spec defines the specification of desired Service selection for target discovery by
    Prometheus.

    Attributes
    ----------
    attachMetadata : MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata, default is Undefined, optional
        attach metadata
    bodySizeLimit : str, default is Undefined, optional
        bodySizeLimit when defined, bodySizeLimit specifies a job level limit on the size
        of uncompressed response body that will be accepted by Prometheus.

        It requires Prometheus >= v2.28.0.
    convertClassicHistogramsToNHCB : bool, default is Undefined, optional
        convertClassicHistogramsToNHCB defines whether to convert all scraped classic histograms into a native histogram with custom buckets.
        It requires Prometheus >= v3.0.0.
    endpoints : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0], default is Undefined, required
        endpoints defines the list of endpoints part of this ServiceMonitor.
        Defines how to scrape metrics from Kubernetes [Endpoints](https://kubernetes.io/docs/concepts/services-networking/service/#endpoints) objects.
        In most cases, an Endpoints object is backed by a Kubernetes [Service](https://kubernetes.io/docs/concepts/services-networking/service/) object with the same name and labels.
    fallbackScrapeProtocol : str, default is Undefined, optional
        fallbackScrapeProtocol defines the protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.

        It requires Prometheus >= v3.0.0.
    jobLabel : str, default is Undefined, optional
        jobLabel selects the label from the associated Kubernetes `Service`
        object which will be used as the `job` label for all metrics.

        For example if `jobLabel` is set to `foo` and the Kubernetes `Service`
        object is labeled with `foo: bar`, then Prometheus adds the `job="bar"`
        label to all ingested metrics.

        If the value of this field is empty or if the label doesn't exist for
        the given Service, the `job` label of the metrics defaults to the name
        of the associated Kubernetes `Service`.
    keepDroppedTargets : int, default is Undefined, optional
        keepDroppedTargets defines the per-scrape limit on the number of targets dropped by relabeling
        that will be kept in memory. 0 means no limit.

        It requires Prometheus >= v2.47.0.
    labelLimit : int, default is Undefined, optional
        labelLimit defines the per-scrape limit on number of labels that will be accepted for a sample.

        It requires Prometheus >= v2.27.0.
    labelNameLengthLimit : int, default is Undefined, optional
        labelNameLengthLimit defines the per-scrape limit on length of labels name that will be accepted for a sample.

        It requires Prometheus >= v2.27.0.
    labelValueLengthLimit : int, default is Undefined, optional
        labelValueLengthLimit defines the per-scrape limit on length of labels value that will be accepted for a sample.

        It requires Prometheus >= v2.27.0.
    namespaceSelector : MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector, default is Undefined, optional
        namespace selector
    nativeHistogramBucketLimit : int, default is Undefined, optional
        nativeHistogramBucketLimit defines ff there are more than this many buckets in a native histogram,
        buckets will be merged to stay within the limit.
        It requires Prometheus >= v2.45.0.
    nativeHistogramMinBucketFactor : int | str, default is Undefined, optional
        nativeHistogramMinBucketFactor defines if the growth factor of one bucket to the next is smaller than this,
        buckets will be merged to increase the factor sufficiently.
        It requires Prometheus >= v2.50.0.
    podTargetLabels : [str], default is Undefined, optional
        podTargetLabels defines the labels which are transferred from the
        associated Kubernetes `Pod` object onto the ingested metrics.
    sampleLimit : int, default is Undefined, optional
        sampleLimit defines a per-scrape limit on the number of scraped samples
        that will be accepted.
    scrapeClass : str, default is Undefined, optional
        scrapeClass defines the scrape class to apply.
    scrapeClassicHistograms : bool, default is Undefined, optional
        scrapeClassicHistograms defines whether to scrape a classic histogram that is also exposed as a native histogram.
        It requires Prometheus >= v2.45.0.

        Notice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.
    scrapeProtocols : [str], default is Undefined, optional
        scrapeProtocols defines the protocols to negotiate during a scrape. It tells clients the
        protocols supported by Prometheus in order of preference (from most to least preferred).

        If unset, Prometheus uses its default value.

        It requires Prometheus >= v2.49.0.
    selector : MonitoringCoreosComV1ServiceMonitorSpecSelector, default is Undefined, required
        selector
    selectorMechanism : str, default is Undefined, optional
        selectorMechanism defines the mechanism used to select the endpoints to scrape.
        By default, the selection process relies on relabel configurations to filter the discovered targets.
        Alternatively, you can opt in for role selectors, which may offer better efficiency in large clusters.
        Which strategy is best for your use case needs to be carefully evaluated.

        It requires Prometheus >= v2.17.0.
    serviceDiscoveryRole : str, default is Undefined, optional
        serviceDiscoveryRole defines the service discovery role used to discover targets.

        If set, the value should be either "Endpoints" or "EndpointSlice".
        Otherwise it defaults to the value defined in the
        Prometheus/PrometheusAgent resource.
    targetLabels : [str], default is Undefined, optional
        targetLabels defines the labels which are transferred from the
        associated Kubernetes `Service` object onto the ingested metrics.
    targetLimit : int, default is Undefined, optional
        targetLimit defines a limit on the number of scraped targets that will
        be accepted.
    """
    attachMetadata?: MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata
    bodySizeLimit?: str
    convertClassicHistogramsToNHCB?: bool
    endpoints: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0]

    fallbackScrapeProtocol?: "PrometheusProto" | "OpenMetricsText0.0.1" | "OpenMetricsText1.0.0" | "PrometheusText0.0.4" | "PrometheusText1.0.0"
    jobLabel?: str
    keepDroppedTargets?: int
    labelLimit?: int
    labelNameLengthLimit?: int
    labelValueLengthLimit?: int
    namespaceSelector?: MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector
    nativeHistogramBucketLimit?: int
    nativeHistogramMinBucketFactor?: int | str
    podTargetLabels?: [str]
    sampleLimit?: int
    scrapeClass?: str
    scrapeClassicHistograms?: bool
    scrapeProtocols?: [str]
    selector: MonitoringCoreosComV1ServiceMonitorSpecSelector

    selectorMechanism?: "RelabelConfig" | "RoleSelector"
    serviceDiscoveryRole?: "Endpoints" | "EndpointSlice"
    targetLabels?: [str]
    targetLimit?: int

    check:
        _regex_match(str(bodySizeLimit), r"(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$") if bodySizeLimit
        _regex_match(str(nativeHistogramMinBucketFactor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if nativeHistogramMinBucketFactor
        len(scrapeClass) >= 1 if scrapeClass

schema MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata:
    r"""
    attachMetadata defines additional metadata which is added to the
    discovered targets.

    It requires Prometheus >= v2.37.0.

    Attributes
    ----------
    node : bool, default is Undefined, optional
        node when set to true, Prometheus attaches node metadata to the discovered
        targets.

        The Prometheus service account must have the `list` and `watch`
        permissions on the `Nodes` objects.
    """
    node?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0:
    r"""
    Endpoint defines an endpoint serving Prometheus metrics to be scraped by
    Prometheus.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        bearerTokenFile defines the file to read bearer token for scraping the target.

        Deprecated: use `authorization` instead.
    bearerTokenSecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        enableHttp2 can be used to disable HTTP2 when scraping the target.
    filterRunning : bool, default is Undefined, optional
        filterRunning when true, the pods which are not running (e.g. either in Failed or
        Succeeded state) are dropped during the target discovery.

        If unset, the filtering is enabled.

        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase
    followRedirects : bool, default is Undefined, optional
        followRedirects defines whether the scrape requests should follow HTTP
        3xx redirects.
    honorLabels : bool, default is Undefined, optional
        honorLabels defines when true the metric's labels when they collide
        with the target's labels.
    honorTimestamps : bool, default is Undefined, optional
        honorTimestamps defines whether Prometheus preserves the timestamps
        when exposed by the target.
    interval : str, default is Undefined, optional
        interval at which Prometheus scrapes the metrics from the target.

        If empty, Prometheus uses the global scrape interval.
    metricRelabelings : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0], default is Undefined, optional
        metricRelabelings defines the relabeling rules to apply to the
        samples before ingestion.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    oauth2 : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2, default is Undefined, optional
        oauth2
    params : {str:[str]}, default is Undefined, optional
        params define optional HTTP URL parameters.
    path : str, default is Undefined, optional
        path defines the HTTP path from which to scrape for metrics.

        If empty, Prometheus uses the default value (e.g. `/metrics`).
    port : str, default is Undefined, optional
        port defines the name of the Service port which this endpoint refers to.

        It takes precedence over `targetPort`.
    proxyConnectHeader : {str:[MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    relabelings : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0], default is Undefined, optional
        relabelings defines the relabeling rules to apply the target's
        metadata labels.

        The Operator automatically adds relabelings for a few standard Kubernetes fields.

        The original scrape job's name is available via the `__tmp_prometheus_job_name` label.

        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    scheme : str, default is Undefined, optional
        scheme defines the HTTP scheme to use for scraping.

        `http` and `https` are the expected values unless you rewrite the
        `__scheme__` label via relabeling.

        If empty, Prometheus uses the default value `http`.
    scrapeTimeout : str, default is Undefined, optional
        scrapeTimeout defines the timeout after which Prometheus considers the scrape to be failed.

        If empty, Prometheus uses the global scrape timeout unless it is less
        than the target's scrape interval value in which the latter is used.
        The value cannot be greater than the scrape interval otherwise the operator will reject the resource.
    targetPort : int | str, default is Undefined, optional
        targetPort defines the name or number of the target port of the `Pod` object behind the
        Service. The port must be specified with the container's port property.
    tlsConfig : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig, default is Undefined, optional
        tls config
    trackTimestampsStaleness : bool, default is Undefined, optional
        trackTimestampsStaleness defines whether Prometheus tracks staleness of
        the metrics that have an explicit timestamp present in scraped data.
        Has no effect if `honorTimestamps` is false.

        It requires Prometheus >= v2.48.0.
    """
    authorization?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization
    basicAuth?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth
    bearerTokenFile?: str
    bearerTokenSecret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret
    enableHttp2?: bool
    filterRunning?: bool
    followRedirects?: bool
    honorLabels?: bool
    honorTimestamps?: bool
    interval?: str
    metricRelabelings?: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0]
    noProxy?: str
    oauth2?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2
    params?: {str:[str]}
    path?: str
    port?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    relabelings?: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0]
    scheme?: "http" | "https"
    scrapeTimeout?: str
    targetPort?: int | str
    tlsConfig?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig
    trackTimestampsStaleness?: bool

    check:
        _regex_match(str(interval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if interval
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        _regex_match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization:
    r"""
    authorization configures the Authorization header credentials to use when
    scraping the target.

    Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        type defines the authentication type. The value is case-insensitive.

        "Basic" is not a supported value.

        Default: "Bearer"
    """
    credentials?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials
    $type?: str

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials:
    r"""
    credentials defines a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth:
    r"""
    basicAuth defines the Basic Authentication credentials to use when
    scraping the target.

    Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername, default is Undefined, optional
        username
    """
    password?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword
    username?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword:
    r"""
    password defines a key of a Secret containing the password for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername:
    r"""
    username defines a key of a Secret containing the username for
    authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret:
    r"""
    bearerTokenSecret defines a key of a Secret containing the bearer
    token for scraping targets. The secret needs to be in the same namespace
    as the ServiceMonitor object and readable by the Prometheus Operator.

    Deprecated: use `authorization` instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        regex defines the regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        separator defines the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        sourceLabels defines the source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        targetLabel defines the label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2:
    r"""
    oauth2 defines the OAuth2 settings to use when scraping the target.

    It requires Prometheus >= 2.27.0.

    Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        endpointParams configures the HTTP parameters to append to the token
        URL.
    noProxy : str, default is Undefined, optional
        noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
        that should be excluded from proxying. IP and domain names can
        contain port numbers.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyConnectHeader : {str:[MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ProxyConnectHeaderItems0]}, default is Undefined, optional
        proxyConnectHeader optionally specifies headers to send to
        proxies during CONNECT requests.

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyFromEnvironment : bool, default is Undefined, optional
        proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

        It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
    proxyUrl : str, default is Undefined, optional
        proxyUrl defines the HTTP proxy server to use.
    scopes : [str], default is Undefined, optional
        scopes defines the OAuth2 scopes used for the token request.
    tlsConfig : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfig, default is Undefined, optional
        tls config
    tokenUrl : str, default is Undefined, required
        tokenUrl defines the URL to fetch the token from.
    """
    clientId: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret

    endpointParams?: {str:str}
    noProxy?: str
    proxyConnectHeader?: {str:[MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ProxyConnectHeaderItems0]}
    proxyFromEnvironment?: bool
    proxyUrl?: str
    scopes?: [str]
    tlsConfig?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfig
    tokenUrl: str

    check:
        _regex_match(str(proxyUrl), r"^(http|https|socks5)://.+$") if proxyUrl
        len(tokenUrl) >= 1

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID:
    r"""
    clientId defines a key of a Secret or ConfigMap containing the
    OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap
    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret:
    r"""
    clientSecret defines a key of a Secret containing the OAuth2
    client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
    It requires Prometheus >= v2.43.0.

    Attributes
    ----------
    ca : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keySecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCa
    cert?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCert
    insecureSkipVerify?: bool
    keySecret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaSecret

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertSecret

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0ProxyConnectHeaderItems0:
    r"""
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0:
    r"""
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
    scraped samples and remote write samples.

    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        action to perform based on the regex matching.

        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

        Default: "Replace"
    modulus : int, default is Undefined, optional
        modulus to take of the hash of the source label values.

        Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        regex defines the regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        replacement value against which a Replace action is performed if the
        regular expression matches.

        Regex capture groups are available.
    separator : str, default is Undefined, optional
        separator defines the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        sourceLabels defines the source labels select values from existing labels. Their content is
        concatenated using the configured Separator and matched against the
        configured regular expression.
    targetLabel : str, default is Undefined, optional
        targetLabel defines the label to which the resulting string is written in a replacement.

        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
        `KeepEqual` and `DropEqual` actions.

        Regex capture groups are available.
    """
    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"
    modulus?: int
    regex?: str
    replacement?: str
    separator?: str
    sourceLabels?: [str]
    targetLabel?: str

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig:
    r"""
    tlsConfig defines the TLS configuration to use when scraping the target.

    Attributes
    ----------
    ca : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        caFile defines the path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        certFile defines the path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        insecureSkipVerify defines how to disable target certificate validation.
    keyFile : str, default is Undefined, optional
        keyFile defines the path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    maxVersion : str, default is Undefined, optional
        maxVersion defines the maximum acceptable TLS version.

        It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
    minVersion : str, default is Undefined, optional
        minVersion defines the minimum acceptable TLS version.

        It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
    serverName : str, default is Undefined, optional
        serverName is used to verify the hostname for the targets.
    """
    ca?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa
    caFile?: str
    cert?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert
    certFile?: str
    insecureSkipVerify?: bool
    keyFile?: str
    keySecret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret
    maxVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    minVersion?: "TLS10" | "TLS11" | "TLS12" | "TLS13"
    serverName?: str

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa:
    r"""
    ca defines the Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap
    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert:
    r"""
    cert defines the Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """
    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap
    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap:
    r"""
    configMap defines the ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret:
    r"""
    secret defines the Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret:
    r"""
    keySecret defines the Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector:
    r"""
    namespaceSelector defines in which namespace(s) Prometheus should discover the services.
    By default, the services are discovered in the same namespace as the `ServiceMonitor` object but it is possible to select pods across different/all namespaces.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        any defines the boolean describing whether all namespaces are selected in contrast to a
        list restricting them.
    matchNames : [str], default is Undefined, optional
        matchNames defines the list of namespace names to select from.
    """
    any?: bool
    matchNames?: [str]

schema MonitoringCoreosComV1ServiceMonitorSpecSelector:
    r"""
    selector defines the label selector to select the Kubernetes `Endpoints` objects to scrape metrics from.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema MonitoringCoreosComV1ServiceMonitorStatus:
    r"""
    status defines the status subresource. It is under active development and is updated only when the
    "StatusForConfigurationResources" feature gate is enabled.

    Most recent observed status of the ServiceMonitor. Read-only.
    More info:
    https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    bindings : [MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0], default is Undefined, optional
        bindings defines the list of workload resources (Prometheus, PrometheusAgent, ThanosRuler or Alertmanager) which select the configuration resource.
    """
    bindings?: [MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0]

schema MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0:
    r"""
    WorkloadBinding is a link between a configuration resource and a workload resource.

    Attributes
    ----------
    conditions : [MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0ConditionsItems0], default is Undefined, optional
        conditions defines the current state of the configuration resource when bound to the referenced Workload object.
    group : str, default is Undefined, required
        group defines the group of the referenced resource.
    name : str, default is Undefined, required
        name defines the name of the referenced object.
    namespace : str, default is Undefined, required
        namespace defines the namespace of the referenced object.
    resource : str, default is Undefined, required
        resource defines the type of resource being referenced (e.g. Prometheus, PrometheusAgent, ThanosRuler or Alertmanager).
    """
    conditions?: [MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0ConditionsItems0]
    group: "monitoring.coreos.com"

    name: str

    namespace: str

    resource: "prometheuses" | "prometheusagents" | "thanosrulers" | "alertmanagers"

    check:
        len(name) >= 1
        len(namespace) >= 1

schema MonitoringCoreosComV1ServiceMonitorStatusBindingsItems0ConditionsItems0:
    r"""
    ConfigResourceCondition describes the status of configuration resources linked to Prometheus, PrometheusAgent, Alertmanager or ThanosRuler.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime defines the time of the last update to the current status property.
    message : str, default is Undefined, optional
        message defines the human-readable message indicating details for the condition's last transition.
    observedGeneration : int, default is Undefined, optional
        observedGeneration defines the .metadata.generation that the
        condition was set based upon. For instance, if `.metadata.generation` is
        currently 12, but the `.status.conditions[].observedGeneration` is 9, the
        condition is out of date with respect to the current state of the object.
    reason : str, default is Undefined, optional
        reason for the condition's last transition.
    status : str, default is Undefined, required
        status of the condition.
    $type : str, default is Undefined, required
        type of the condition being reported.
        Currently, only "Accepted" is supported.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason?: str
    status: str

    $type: "Accepted"

    check:
        len(status) >= 1
        len($type) >= 1

