{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "affinity": {
      "additionalProperties": true,
      "description": "# Assign a group of affinity scheduling rules\n#",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "alloy": {
      "additionalProperties": true,
      "description": "# Various Alloy settings. For backwards compatibility with the grafana-agent\n# chart, this field may also be called \"agent\". Naming this field \"agent\" is\n# deprecated and will be removed in a future release.",
      "properties": {
        "clustering": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "description": "Deploy Alloy in a cluster to allow for load distribution.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "name": {
              "description": "Name for the Alloy cluster. Used for differentiating between clusters.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "portName": {
              "description": "Name for the port used for clustering, useful if running inside an Istio Mesh",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "clustering",
          "type": "object"
        },
        "configMap": {
          "additionalProperties": true,
          "properties": {
            "content": {
              "description": "Content to assign to the new ConfigMap.  This is passed into `tpl` allowing for templating from values.",
              "required": [],
              "title": "content",
              "type": "string"
            },
            "create": {
              "description": "Create a new ConfigMap for the config file.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "key": {
              "description": "Key in ConfigMap to get config from.",
              "required": [],
              "title": "key",
              "type": "null"
            },
            "name": {
              "description": "Name of existing ConfigMap to use. Used when create is false.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "configMap",
          "type": "object"
        },
        "enableHttpServerPort": {
          "description": "Enables Grafana Alloy container's http server port.",
          "required": [],
          "title": "enableHttpServerPort",
          "type": "boolean"
        },
        "enableReporting": {
          "description": "Enables sending Grafana Labs anonymous usage stats to help improve Grafana\nAlloy.",
          "required": [],
          "title": "enableReporting",
          "type": "boolean"
        },
        "envFrom": {
          "description": "Maps all the keys on a ConfigMap or Secret as environment variables. https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#envfromsource-v1-core",
          "items": {
            "required": []
          },
          "required": [],
          "title": "envFrom",
          "type": "array"
        },
        "extraArgs": {
          "description": "Extra args to pass to `alloy run`: https://grafana.com/docs/alloy/latest/reference/cli/run/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Extra environment variables to pass to the Alloy container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraPorts": {
          "description": "Extra ports to expose on the Alloy container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPorts",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases to add to the Alloy container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initialDelaySeconds": {
          "description": "Initial delay for readiness probe.",
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Set lifecycle hooks for the Grafana Alloy container.",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "listenAddr": {
          "description": "Address to listen for traffic on. 0.0.0.0 exposes the UI to other\ncontainers.",
          "required": [],
          "title": "listenAddr",
          "type": "string"
        },
        "listenPort": {
          "description": "Port to listen for traffic on.",
          "required": [],
          "title": "listenPort",
          "type": "integer"
        },
        "listenScheme": {
          "description": "Scheme is needed for readiness probes. If enabling tls in your configs, set to \"HTTPS\"",
          "required": [],
          "title": "listenScheme",
          "type": "string"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Set livenessProbe for the Grafana Alloy container.",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "mounts": {
          "additionalProperties": true,
          "properties": {
            "dockercontainers": {
              "description": "Mount /var/lib/docker/containers from the host into the container for log\ncollection.",
              "required": [],
              "title": "dockercontainers",
              "type": "boolean"
            },
            "extra": {
              "description": "Extra volume mounts to add into the Grafana Alloy container. Does not\naffect the watch container.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extra",
              "type": "array"
            },
            "varlog": {
              "description": "Mount /var/log from the host into the container for log collection.",
              "required": [],
              "title": "varlog",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "mounts",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits to apply to the Grafana Alloy container.",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana Alloy container.",
          "properties": {
            "allowPrivilegeEscalation": {
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "add": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "add",
                  "type": "array"
                },
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "stabilityLevel": {
          "description": "Minimum stability level of components and behavior to enable. Must be\none of \"experimental\", \"public-preview\", or \"generally-available\".",
          "required": [],
          "title": "stabilityLevel",
          "type": "string"
        },
        "storagePath": {
          "description": "Path to where Grafana Alloy stores data (for example, the Write-Ahead Log).\nBy default, data is lost between reboots.",
          "required": [],
          "title": "storagePath",
          "type": "string"
        },
        "timeoutSeconds": {
          "description": "Timeout for readiness probe.",
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        },
        "uiPathPrefix": {
          "description": " Base path where the UI is exposed.",
          "required": [],
          "title": "uiPathPrefix",
          "type": "string"
        }
      },
      "required": [],
      "title": "alloy",
      "type": "object"
    },
    "alloy-logs": {
      "additionalProperties": true,
      "description": "An Alloy instance for collecting log data.\nTo see all valid settings, please see the [Alloy Collector documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/collectors/alloy.md).",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Deploy the Alloy instance for collecting log data.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alloy-logs",
      "type": "object"
    },
    "alloy-metrics": {
      "additionalProperties": true,
      "description": "An Alloy instance for collecting metrics.\nTo see all valid settings, please see the [Alloy Collector documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/collectors/alloy.md).",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Deploy the Alloy instance for collecting metrics.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alloy-metrics",
      "type": "object"
    },
    "alloy-operator": {
      "additionalProperties": true,
      "description": "The Alloy Operator is a Kubernetes Operator that manages Alloy instances and their lifecycle.\nTo see all valid settings, please see the [Alloy Operator documentation](https://github.com/grafana/alloy-operator/tree/main/charts/alloy-operator).",
      "properties": {
        "deploy": {
          "default": true,
          "description": "Deploy the Alloy Operator.",
          "required": [],
          "title": "deploy",
          "type": "boolean"
        },
        "waitForAlloyRemoval": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Utilize a Helm Hook to wait for all Alloy instances to be removed before uninstalling the Alloy Operator.\nThis ensures that all Alloy instances are properly cleaned up before the operator is removed.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "description": "The image to use for the Helm Hook that ensures that Alloy instances are removed during uninstall.",
              "properties": {
                "digest": {
                  "default": "",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "pullSecrets": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "ghcr.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "grafana/helm-chart-toolbox-kubectl",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "0.1.1",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node selector to use for the Helm Hook that ensures that Alloy instances are removed during uninstall.",
              "properties": {
                "kubernetes.io/os": {
                  "default": "linux",
                  "required": [],
                  "title": "kubernetes.io/os",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "Annotations to apply to the Pod for the Helm Hook to wait for all Alloy instances to be removed before\nuninstalling the Alloy Operator",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "description": "Labels to apply to the Pod for the Helm Hook to wait for all Alloy instances to be removed before uninstalling\nthe Alloy Operator",
              "properties": {
                "linkerd.io/inject": {
                  "default": "disabled",
                  "required": [],
                  "title": "linkerd.io/inject",
                  "type": "string"
                },
                "sidecar.istio.io/inject": {
                  "default": "false",
                  "required": [],
                  "title": "sidecar.istio.io/inject",
                  "type": "string"
                }
              },
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "tolerations": {
              "description": "Tolerations to apply to the Helm Hook that ensures that Alloy instances are removed during uninstall.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "waitForAlloyRemoval",
          "type": "object"
        }
      },
      "required": [],
      "title": "alloy-operator",
      "type": "object"
    },
    "alloy-profiles": {
      "additionalProperties": true,
      "description": "An Alloy instance for gathering profiles.\nTo see all valid settings, please see the [Alloy Collector documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/collectors/alloy.md).",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Deploy the Alloy instance for gathering profiles.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alloy-profiles",
      "type": "object"
    },
    "alloy-receiver": {
      "additionalProperties": true,
      "description": "An Alloy instance for opening receivers to collect application data.\nTo see all valid settings, please see the [Alloy Collector documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/collectors/alloy.md).",
      "properties": {
        "alloy": {
          "additionalProperties": true,
          "properties": {
            "extraPorts": {
              "description": "The ports to expose for the Alloy receiver.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraPorts",
              "type": "array"
            }
          },
          "required": [],
          "title": "alloy",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Deploy the Alloy instance for opening receivers to collect application data.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraService": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Create an extra service for the Alloy receiver. This service will mirror the alloy-receiver service, but its\nname can be customized to match existing application settings.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fullname": {
              "default": "",
              "description": "If set, the full name of the extra service to create. This will result in the format `\u003cfullname\u003e`.",
              "required": [],
              "title": "fullname",
              "type": "string"
            },
            "name": {
              "default": "alloy",
              "description": "The name of the extra service to create. This will result in the format `\u003crelease-name\u003e-\u003cname\u003e`.",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "extraService",
          "type": "object"
        }
      },
      "required": [],
      "title": "alloy-receiver",
      "type": "object"
    },
    "alloy-singleton": {
      "additionalProperties": true,
      "description": "An Alloy instance for data sources required to be deployed on a single replica.\nTo see all valid settings, please see the [Alloy Collector documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/collectors/alloy.md).",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Deploy the Alloy instance for data sources required to be deployed on a single replica.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alloy-singleton",
      "type": "object"
    },
    "annotationAutodiscovery": {
      "additionalProperties": true,
      "description": "Annotation Autodiscovery enables gathering metrics from Kubernetes Pods and Services discovered by special annotations.\nRequires a destination that supports metrics.\nTo see the valid options, please see the [Annotation Autodiscovery feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-annotation-autodiscovery).",
      "properties": {
        "collector": {
          "default": "alloy-metrics",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where cluster metrics will be sent. If empty, all metrics-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering metrics from Kubernetes Pods and Services discovered by special annotations.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "annotationAutodiscovery",
      "type": "object"
    },
    "annotations": {
      "additionalProperties": true,
      "description": "Annotations to add to the Alloy Custom Resource. These annotations are not added to the workload or Pod.",
      "items": {
        "required": []
      },
      "properties": {
        "instance": {
          "default": "k8s.grafana.com/instance",
          "description": "Annotation for overriding the instance label",
          "required": [],
          "title": "instance",
          "type": "string"
        },
        "job": {
          "default": "k8s.grafana.com/logs.job",
          "description": "Annotation for overriding the job label",
          "required": [],
          "title": "job",
          "type": "string"
        },
        "metricsContainer": {
          "default": "k8s.grafana.com/metrics.container",
          "description": "Annotation for selecting the specific container to scrape.",
          "required": [],
          "title": "metricsContainer",
          "type": "string"
        },
        "metricsParam": {
          "default": "k8s.grafana.com/metrics.param",
          "description": "Annotation for setting `__param_\u003ckey\u003e` parameters when scraping.\nExample: `k8s.grafana.com/metrics.param_key: \"value\"`.",
          "required": [],
          "title": "metricsParam",
          "type": "string"
        },
        "metricsPath": {
          "default": "k8s.grafana.com/metrics.path",
          "description": "Annotation for setting or overriding the metrics path. If not set, it defaults to /metrics",
          "required": [],
          "title": "metricsPath",
          "type": "string"
        },
        "metricsPortName": {
          "default": "k8s.grafana.com/metrics.portName",
          "description": "Annotation for setting the metrics port by name.",
          "required": [],
          "title": "metricsPortName",
          "type": "string"
        },
        "metricsPortNumber": {
          "default": "k8s.grafana.com/metrics.portNumber",
          "description": "Annotation for setting the metrics port by number.",
          "required": [],
          "title": "metricsPortNumber",
          "type": "string"
        },
        "metricsScheme": {
          "default": "k8s.grafana.com/metrics.scheme",
          "description": "Annotation for setting the metrics scheme, default: http.",
          "required": [],
          "title": "metricsScheme",
          "type": "string"
        },
        "metricsScrapeInterval": {
          "default": "k8s.grafana.com/metrics.scrapeInterval",
          "description": "Annotation for overriding the scrape interval for this service or pod. Value should be a duration like \"15s, 1m\".\nOverrides metrics.autoDiscover.scrapeInterval",
          "required": [],
          "title": "metricsScrapeInterval",
          "type": "string"
        },
        "metricsScrapeTimeout": {
          "default": "k8s.grafana.com/metrics.scrapeTimeout",
          "description": "Annotation for overriding the scrape timeout for this service or pod. Value should be a duration like \"15s, 1m\".\nOverrides metrics.autoDiscover.scrapeTimeout",
          "required": [],
          "title": "metricsScrapeTimeout",
          "type": "string"
        },
        "prefix": {
          "default": "profiles.grafana.com",
          "description": "The prefix for all annotations.",
          "required": [],
          "title": "prefix",
          "type": "string"
        },
        "scrape": {
          "default": "k8s.grafana.com/scrape",
          "description": "Annotation for enabling scraping for this service or pod. Value should be either \"true\" or \"false\"",
          "required": [],
          "title": "scrape",
          "type": "string"
        }
      },
      "required": [],
      "title": "annotations",
      "type": "array"
    },
    "apiServer": {
      "additionalProperties": true,
      "description": "API Server metrics gather information about the Kubernetes API Server.",
      "properties": {
        "enabled": {
          "default": "",
          "description": "(bool) Scrape metrics from the API Server.",
          "required": [],
          "title": "enabled",
          "type": "null"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for the API Server.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for the API Server.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/kube-apiserver",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the API Server prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions. An empty list means keep all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from the API Server\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping API Server metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "apiServer",
      "type": "object"
    },
    "applicationObservability": {
      "additionalProperties": true,
      "description": "Application Observability.\nRequires destinations that supports metrics, logs, and traces.\nTo see the valid options, please see the [Application Observability feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-application-observability).",
      "properties": {
        "collector": {
          "default": "alloy-receiver",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where application data will be sent. If empty, all capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable receiving Application Observability.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "receivers": {
          "additionalProperties": true,
          "description": "The receivers used for receiving application data.",
          "required": [],
          "title": "receivers",
          "type": "object"
        }
      },
      "required": [],
      "title": "applicationObservability",
      "type": "object"
    },
    "auth": {
      "additionalProperties": true,
      "properties": {
        "bearerToken": {
          "description": "The bearer token for bearer token authentication.",
          "required": [],
          "title": "bearerToken",
          "type": "string"
        },
        "bearerTokenFile": {
          "description": "Path to a file that containers the bearer token.",
          "required": [],
          "title": "bearerTokenFile",
          "type": "string"
        },
        "bearerTokenFrom": {
          "description": "Raw config for accessing the bearer token.",
          "required": [],
          "title": "bearerTokenFrom",
          "type": "string"
        },
        "bearerTokenKey": {
          "description": "The key for storing the bearer token in the secret.",
          "required": [],
          "title": "bearerTokenKey",
          "type": "string"
        },
        "oauth2": {
          "additionalProperties": true,
          "description": "Authenticate to Pyroscope using OAuth2",
          "properties": {
            "clientId": {
              "description": "OAuth2 client ID",
              "required": [],
              "title": "clientId",
              "type": "string"
            },
            "clientIdFrom": {
              "description": "Raw config for accessing the client ID",
              "required": [],
              "title": "clientIdFrom",
              "type": "string"
            },
            "clientIdKey": {
              "description": "The key for the client ID property in the secret",
              "required": [],
              "title": "clientIdKey",
              "type": "string"
            },
            "clientSecret": {
              "description": "OAuth2 client secret",
              "required": [],
              "title": "clientSecret",
              "type": "string"
            },
            "clientSecretFile": {
              "description": "File containing the OAuth2 client secret.",
              "required": [],
              "title": "clientSecretFile",
              "type": "string"
            },
            "clientSecretFrom": {
              "description": "Raw config for accessing the client secret",
              "required": [],
              "title": "clientSecretFrom",
              "type": "string"
            },
            "clientSecretKey": {
              "description": "The key for the client secret property in the secret",
              "required": [],
              "title": "clientSecretKey",
              "type": "string"
            },
            "endpointParams": {
              "additionalProperties": true,
              "description": "OAuth2 endpoint parameters",
              "required": [],
              "title": "endpointParams",
              "type": "object"
            },
            "noProxy": {
              "description": "Comma-separated list of IP addresses, CIDR notations, and domain names to exclude from proxying.",
              "required": [],
              "title": "noProxy",
              "type": "string"
            },
            "proxyConnectHeader": {
              "additionalProperties": true,
              "description": "Specifies headers to send to proxies during CONNECT requests.",
              "required": [],
              "title": "proxyConnectHeader",
              "type": "object"
            },
            "proxyFromEnvironment": {
              "description": "Use the proxy URL indicated by environment variables.",
              "required": [],
              "title": "proxyFromEnvironment",
              "type": "boolean"
            },
            "proxyURL": {
              "description": "HTTP proxy to send requests through.",
              "required": [],
              "title": "proxyURL",
              "type": "string"
            },
            "scopes": {
              "description": "List of scopes to authenticate with.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "scopes",
              "type": "array"
            },
            "tokenURL": {
              "description": "URL to fetch the token from.",
              "required": [],
              "title": "tokenURL",
              "type": "string"
            }
          },
          "required": [],
          "title": "oauth2",
          "type": "object"
        },
        "password": {
          "description": "The password for basic authentication.",
          "required": [],
          "title": "password",
          "type": "string"
        },
        "passwordFrom": {
          "description": "Raw config for accessing the password.",
          "required": [],
          "title": "passwordFrom",
          "type": "string"
        },
        "passwordKey": {
          "description": "The key for storing the password in the secret.",
          "required": [],
          "title": "passwordKey",
          "type": "string"
        },
        "sigv4": {
          "additionalProperties": true,
          "description": "Authentication using AWS Signature Version 4",
          "properties": {
            "accessKey": {
              "description": "The access key for sigv4 authentication.",
              "required": [],
              "title": "accessKey",
              "type": "string"
            },
            "accessKeyFrom": {
              "description": "Raw config for accessing the access key.",
              "required": [],
              "title": "accessKeyFrom",
              "type": "string"
            },
            "accessKeyKey": {
              "description": "The key for storing the access key in the secret.",
              "required": [],
              "title": "accessKeyKey",
              "type": "string"
            },
            "profile": {
              "description": "The named AWS profile for sigv4 authentication.",
              "required": [],
              "title": "profile",
              "type": "string"
            },
            "region": {
              "description": "The AWS region for sigv4 authentication.",
              "required": [],
              "title": "region",
              "type": "string"
            },
            "roleArn": {
              "description": "The Role ARN for sigv4 authentication.",
              "required": [],
              "title": "roleArn",
              "type": "string"
            },
            "secretKey": {
              "description": "The secret key for sigv4 authentication.",
              "required": [],
              "title": "secretKey",
              "type": "string"
            },
            "secretKeyFrom": {
              "description": "Raw config for accessing the secret key.",
              "required": [],
              "title": "secretKeyFrom",
              "type": "string"
            },
            "secretKeyKey": {
              "description": "The key for storing the secret key in the secret.",
              "required": [],
              "title": "secretKeyKey",
              "type": "string"
            }
          },
          "required": [],
          "title": "sigv4",
          "type": "object"
        },
        "type": {
          "description": "The type of authentication to do.\nOptions are \"none\" (default), \"basic\", \"bearerToken\".",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "username": {
          "description": "The username for basic authentication.",
          "required": [],
          "title": "username",
          "type": "string"
        },
        "usernameFrom": {
          "description": "Raw config for accessing the username.",
          "required": [],
          "title": "usernameFrom",
          "type": "string"
        },
        "usernameKey": {
          "description": "The key for storing the username in the secret.",
          "required": [],
          "title": "usernameKey",
          "type": "string"
        }
      },
      "required": [],
      "title": "auth",
      "type": "object"
    },
    "autoInstrumentation": {
      "additionalProperties": true,
      "description": "Auto-Instrumentation.\nRequires destinations that supports metrics, logs, and traces.\nTo see the valid options, please see the [Auto-Instrumentation feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-auto-instrumentation).",
      "properties": {
        "collector": {
          "default": "alloy-metrics",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where application data will be sent. If empty, all capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable automatic instrumentation for applications.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "autoInstrumentation",
      "type": "object"
    },
    "automountServiceAccountToken": {
      "default": true,
      "description": "If false then the user will opt out of automounting API credentials.",
      "required": [],
      "title": "automountServiceAccountToken",
      "type": "boolean"
    },
    "autosharding": {
      "additionalProperties": true,
      "description": "If set to true, this will deploy kube-state-metrics as a StatefulSet and the data\nwill be automatically sharded across \u003c.Values.replicas\u003e pods using the built-in\nautodiscovery feature: https://github.com/kubernetes/kube-state-metrics#automated-sharding\nThis is an experimental feature and there are no stability guarantees.",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "autosharding",
      "type": "object"
    },
    "batchSize": {
      "description": "Maximum batch size of logs to accumulate before sending.",
      "required": [],
      "title": "batchSize",
      "type": "string"
    },
    "batchWait": {
      "description": "Maximum amount of time to wait before sending a batch.",
      "required": [],
      "title": "batchWait",
      "type": "string"
    },
    "bearerToken": {
      "additionalProperties": true,
      "description": "Sets bearer_token_file line in the prometheus.scrape annotation_autodiscovery.",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "token": {
          "default": "/var/run/secrets/kubernetes.io/serviceaccount/token",
          "required": [],
          "title": "token",
          "type": "string"
        }
      },
      "required": [],
      "title": "bearerToken",
      "type": "object"
    },
    "beyla": {
      "additionalProperties": true,
      "properties": {
        "config": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": false,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "data": {
              "additionalProperties": true,
              "description": "The configuration for Grafana Beyla\nSome sections will be set automatically, such as the cluster name.\nOthers will be modified depending on the value of beyla.preset.",
              "properties": {
                "attributes": {
                  "additionalProperties": true,
                  "properties": {
                    "kubernetes": {
                      "additionalProperties": true,
                      "properties": {
                        "enable": {
                          "default": true,
                          "required": [],
                          "title": "enable",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "kubernetes",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "attributes",
                  "type": "object"
                },
                "internal_metrics": {
                  "additionalProperties": true,
                  "properties": {
                    "prometheus": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "default": "/internal/metrics",
                          "required": [],
                          "title": "path",
                          "type": "string"
                        },
                        "port": {
                          "default": 9090,
                          "required": [],
                          "title": "port",
                          "type": "integer"
                        }
                      },
                      "required": [],
                      "title": "prometheus",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "internal_metrics",
                  "type": "object"
                },
                "prometheus_export": {
                  "additionalProperties": true,
                  "properties": {
                    "features": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "features",
                      "type": "array"
                    },
                    "path": {
                      "default": "/metrics",
                      "required": [],
                      "title": "path",
                      "type": "string"
                    },
                    "port": {
                      "default": 9090,
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "prometheus_export",
                  "type": "object"
                }
              },
              "required": [],
              "title": "data",
              "type": "object"
            },
            "skipConfigMapCheck": {
              "default": true,
              "required": [],
              "title": "skipConfigMapCheck",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Beyla.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Beyla. ([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus.relabel/#rule-block))\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no __meta* labels are present.",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Label matchers used to select the Beyla pods for scraping metrics.",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "beyla",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the prometheus.relabel component for Beyla.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "properties": {
            "k8s.grafana.com/job": {
              "default": "default/beyla",
              "required": [],
              "title": "k8s.grafana.com/job",
              "type": "string"
            },
            "k8s.grafana.com/logs.job": {
              "default": "integrations/beyla",
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "preset": {
          "default": "application",
          "description": "The configuration preset to use. Valid options are \"application\" or \"network\".",
          "required": [],
          "title": "preset",
          "type": "string"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from Beyla.\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "description": "The port number for the Beyla service.",
          "properties": {
            "targetPort": {
              "default": 9090,
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "effect": {
                "default": "NoSchedule",
                "required": [],
                "title": "effect",
                "type": "string"
              },
              "operator": {
                "default": "Exists",
                "required": [],
                "title": "operator",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "beyla",
      "type": "object"
    },
    "cadvisor": {
      "additionalProperties": true,
      "description": "cAdvisor metrics gather information about containers on each node.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Scrape metrics from cAdvisor.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for cAdvisor.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for cAdvisor metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/cadvisor",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the cAdvisor prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "dropEmptyContainerLabels": {
              "default": true,
              "description": "Drop metrics that have an empty container label",
              "required": [],
              "title": "dropEmptyContainerLabels",
              "type": "boolean"
            },
            "dropEmptyImageLabels": {
              "default": true,
              "description": "Drop metrics that have an empty image label",
              "required": [],
              "title": "dropEmptyImageLabels",
              "type": "boolean"
            },
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "excludeNamespaces": {
              "description": "For metrics with a `namespace` label, drop those that are in this list.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeNamespaces",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "includeNamespaces": {
              "description": "For metrics with a `namespace` label, only keep those that are in this list.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeNamespaces",
              "type": "array"
            },
            "keepPhysicalFilesystemDevices": {
              "description": "Only keep filesystem metrics that use the following physical devices",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "keepPhysicalFilesystemDevices",
              "type": "array"
            },
            "keepPhysicalNetworkDevices": {
              "description": "Only keep network metrics that use the following physical devices",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "keepPhysicalNetworkDevices",
              "type": "array"
            },
            "normalizeUnnecessaryLabels": {
              "description": "Normalize labels to the same value for the given metric and label pairs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "labels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "labels",
                    "type": "array"
                  },
                  "metric": {
                    "default": "machine_memory_bytes",
                    "required": [],
                    "title": "metric",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "normalizeUnnecessaryLabels",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from cAdvisor to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeAddressFormat": {
          "default": "direct",
          "description": "How to access cAdvisor to get metrics, either \"direct\" (use node IP) or \"proxy\" (uses API Server)",
          "required": [],
          "title": "nodeAddressFormat",
          "type": "string"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape cAdvisor metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping cAdvisor metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "cadvisor",
      "type": "object"
    },
    "canMount": {
      "additionalProperties": true,
      "properties": {
        "usrSrc": {
          "default": true,
          "required": [],
          "title": "usrSrc",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "canMount",
      "type": "object"
    },
    "cert-manager": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from cert-manager",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "cert-manager",
      "type": "object"
    },
    "cluster": {
      "additionalProperties": true,
      "description": "yamllint disable rule:line-length rule:comments-indentation",
      "properties": {
        "name": {
          "default": "",
          "description": "The name for this cluster.",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "cluster",
      "type": "object"
    },
    "clusterEvents": {
      "additionalProperties": true,
      "description": "Cluster events.\nRequires a destination that supports logs.\nTo see the valid options, please see the [Cluster Events feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-cluster-events).",
      "properties": {
        "collector": {
          "default": "alloy-singleton",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where cluster events will be sent. If empty, all logs-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering Kubernetes Cluster events.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "clusterEvents",
      "type": "object"
    },
    "clusterLabels": {
      "description": "Labels to be set with the cluster name as the value.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "clusterLabels",
      "type": "array"
    },
    "clusterMetrics": {
      "additionalProperties": true,
      "description": "Cluster Monitoring enables observability and monitoring for your Kubernetes Cluster itself.\nRequires a destination that supports metrics.\nTo see the valid options, please see the [Cluster Monitoring feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-cluster-metrics).",
      "properties": {
        "collector": {
          "default": "alloy-metrics",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where cluster metrics will be sent. If empty, all metrics-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering Kubernetes Cluster metrics.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "clusterMetrics",
      "type": "object"
    },
    "clusterName": {
      "default": "cluster.local",
      "description": "Override the default name of cluster - Can be found in /etc/kubernetes/admin.conf: clusters -\u003e cluster -\u003e name",
      "required": [],
      "title": "clusterName",
      "type": "string"
    },
    "collectorCommon": {
      "additionalProperties": true,
      "properties": {
        "alloy": {
          "additionalProperties": true,
          "description": "Settings to apply to all Alloy instances created by this Helm chart. This includes Alloy instances created by\nenabling Tail Sampling or Service Graph Metrics.",
          "required": [],
          "title": "alloy",
          "type": "object"
        }
      },
      "required": [],
      "title": "collectorCommon",
      "type": "object"
    },
    "collectors": {
      "description": "Available collectors for kube-state-metrics.\nBy default, all available resources are enabled, comment out to disable.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "collectors",
      "type": "array"
    },
    "commonLabels": {
      "additionalProperties": true,
      "description": "# Extra labels to attach to all resources (can be templated)",
      "required": [],
      "title": "commonLabels",
      "type": "object"
    },
    "config": {
      "additionalProperties": true,
      "default": "collectors:\n  enabled: '[defaults],memory,container'",
      "description": "The configuration for this destination.\n@ section -- General",
      "properties": {
        "create": {
          "default": true,
          "description": "set to true, to use the below default configurations",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "data": {
          "additionalProperties": true,
          "description": "default value of beyla configuration",
          "properties": {
            "attributes": {
              "additionalProperties": true,
              "description": "profile_port: 6060\nopen_port: 8443\nroutes:\n  unmatched: heuristic\nlog_level: info\notel_traces_export:\n  endpoint: http://grafana-agent:4318\n# or alternatively use\ngrafana:\n  otlp:\n    cloud_zone: prod-eu-west-0\n    cloud_instance_id: 123456\n    cloud_api_key:",
              "properties": {
                "kubernetes": {
                  "additionalProperties": true,
                  "properties": {
                    "enable": {
                      "default": true,
                      "required": [],
                      "title": "enable",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "kubernetes",
                  "type": "object"
                }
              },
              "required": [],
              "title": "attributes",
              "type": "object"
            },
            "filter": {
              "additionalProperties": true,
              "properties": {
                "network": {
                  "additionalProperties": true,
                  "properties": {
                    "k8s_dst_owner_name": {
                      "additionalProperties": true,
                      "properties": {
                        "not_match": {
                          "default": "{kube*,*jaeger-agent*,*prometheus*,*promtail*,*grafana-agent*}",
                          "required": [],
                          "title": "not_match",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "k8s_dst_owner_name",
                      "type": "object"
                    },
                    "k8s_src_owner_name": {
                      "additionalProperties": true,
                      "properties": {
                        "not_match": {
                          "default": "{kube*,*jaeger-agent*,*prometheus*,*promtail*,*grafana-agent*}",
                          "required": [],
                          "title": "not_match",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "k8s_src_owner_name",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "network",
                  "type": "object"
                }
              },
              "required": [],
              "title": "filter",
              "type": "object"
            },
            "prometheus_export": {
              "additionalProperties": true,
              "description": "# to enable network metrics\nnetwork:\n  enable: true",
              "properties": {
                "path": {
                  "default": "/metrics",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": 9090,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "prometheus_export",
              "type": "object"
            }
          },
          "required": [],
          "title": "data",
          "type": "object"
        },
        "name": {
          "default": "",
          "description": "# -- Provide the name of the external configmap containing the beyla configuration.\n# To create configmap from configuration file, user can use the below command. Note: The name 'beyla-config.yaml' is important.\n# `kubectl create cm --from-file=beyla-config.yaml=\u003cname-of-config-file\u003e -n \u003cnamespace\u003e`\n# If empty, default configuration below is used.",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "skipConfigMapCheck": {
          "default": false,
          "description": "set to true, to skip the check around the ConfigMap creation",
          "required": [],
          "title": "skipConfigMapCheck",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "config",
      "type": "string"
    },
    "configReloader": {
      "additionalProperties": true,
      "description": "Options for the extra controller used for config reloading.",
      "properties": {
        "customArgs": {
          "description": "Override the args passed to the container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "customArgs",
          "type": "array"
        },
        "enabled": {
          "description": "Enables automatically reloading when the Alloy config changes.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "description": "SHA256 digest of image to use for config reloading (either in format \"sha256:XYZ\" or \"XYZ\"). When set, will override `configReloader.image.tag`",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "registry": {
              "description": "Config reloader image registry (defaults to docker.io)",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "description": "Repository to get config reloader image from.",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "description": "Tag of image to use for config reloading.",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits to apply to the config reloader container.",
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana configReloader container.",
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "configReloader",
      "type": "object"
    },
    "configmaps": {
      "description": "# Additional configmaps to be mounted.\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "configmaps",
      "type": "array"
    },
    "connectors": {
      "additionalProperties": true,
      "description": "Connectors are components that create new telemetry data from existing telemetry data.",
      "properties": {
        "grafanaCloudMetrics": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Generate host info metrics from telemetry data. These metrics are required for using Application Observability\nin Grafana Cloud. Note: Enabling this may incur additional costs.\nSee [Application Observability Pricing](https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/pricing/)",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "grafanaCloudMetrics",
          "type": "object"
        },
        "spanLogs": {
          "additionalProperties": true,
          "description": "Span Logs connector settings.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Use a span logs connector which creates logs from spans.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "description": "A list of keys that will be logged as labels.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "labels",
              "type": "array"
            },
            "process": {
              "default": false,
              "description": "Log one line for every process.",
              "required": [],
              "title": "process",
              "type": "boolean"
            },
            "processAttributes": {
              "description": "Additional process attributes to log.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "processAttributes",
              "type": "array"
            },
            "roots": {
              "default": false,
              "description": "Log one line for every root span of a trace.",
              "required": [],
              "title": "roots",
              "type": "boolean"
            },
            "spanAttributes": {
              "description": "Additional span attributes to log.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "spanAttributes",
              "type": "array"
            },
            "spans": {
              "default": false,
              "description": "Create a log line for each span. This can lead to a large number of logs.",
              "required": [],
              "title": "spans",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "spanLogs",
          "type": "object"
        },
        "spanMetrics": {
          "additionalProperties": true,
          "description": "Span Metrics connector settings.",
          "properties": {
            "aggregationCardinalityLimit": {
              "default": 1000,
              "description": "How many unique combinations of dimensions that will be tracked for metrics aggregation",
              "required": [],
              "title": "aggregationCardinalityLimit",
              "type": "integer"
            },
            "dimensions": {
              "description": "Define dimensions to be added.\nSome are set internally by default: [service.name, span.name, span.kind, status.code]\nExample:\n- name: \"http.status_code\"\n- name: \"http.method\"\n  default: \"GET\"",
              "items": {
                "required": []
              },
              "required": [],
              "title": "dimensions",
              "type": "array"
            },
            "dimensionsCacheSize": {
              "default": 1000,
              "description": "How many dimensions to cache. DEPRECATED, please use aggregationCardinalityLimit instead.",
              "required": [],
              "title": "dimensionsCacheSize",
              "type": "integer"
            },
            "enabled": {
              "default": false,
              "description": "Use a span metrics connector which creates metrics from spans.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "events": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Capture events metrics, which track span events.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "events",
              "type": "object"
            },
            "excludeDimensions": {
              "description": "List of dimensions to be excluded from the default set of dimensions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeDimensions",
              "type": "array"
            },
            "exemplars": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Attach exemplars to histograms.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxPerDataPoint": {
                  "default": "",
                  "description": "(number) Limits the number of exemplars that can be added to a unique dimension set.",
                  "required": [],
                  "title": "maxPerDataPoint",
                  "type": "null"
                }
              },
              "required": [],
              "title": "exemplars",
              "type": "object"
            },
            "histogram": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Capture histogram metrics, derived from spans’ durations.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "explicit": {
                  "additionalProperties": true,
                  "description": "Settings for explicit histograms.",
                  "properties": {
                    "buckets": {
                      "description": "The histogram buckets to use.",
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "buckets",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "explicit",
                  "type": "object"
                },
                "exponential": {
                  "additionalProperties": true,
                  "description": "Settings for exponential histograms.",
                  "properties": {
                    "maxSize": {
                      "default": 160,
                      "description": "Maximum number of buckets per positive or negative number range.",
                      "required": [],
                      "title": "maxSize",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "exponential",
                  "type": "object"
                },
                "type": {
                  "default": "explicit",
                  "description": "Type of histograms to create. Must be either \"explicit\" or \"exponential\".",
                  "required": [],
                  "title": "type",
                  "type": "string"
                },
                "unit": {
                  "default": "s",
                  "description": "The histogram unit.",
                  "required": [],
                  "title": "unit",
                  "type": "string"
                }
              },
              "required": [],
              "title": "histogram",
              "type": "object"
            },
            "namespace": {
              "default": "traces.span.metrics",
              "description": "The Metric namespace.",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "skipBeyla": {
              "default": true,
              "description": "Skip Beyla traces when `span.metrics.skip` resource attribute is present.",
              "required": [],
              "title": "skipBeyla",
              "type": "boolean"
            },
            "skipInternal": {
              "default": true,
              "description": "Skip span if span kind is internal.",
              "required": [],
              "title": "skipInternal",
              "type": "boolean"
            },
            "transforms": {
              "additionalProperties": true,
              "description": "Apply transformations to span metrics after they are generated.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.transform/))",
              "properties": {
                "datapoint": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "datapoint",
                  "type": "array"
                },
                "metric": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metric",
                  "type": "array"
                },
                "resource": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resource",
                  "type": "array"
                }
              },
              "required": [],
              "title": "transforms",
              "type": "object"
            }
          },
          "required": [],
          "title": "spanMetrics",
          "type": "object"
        }
      },
      "required": [],
      "title": "connectors",
      "type": "object"
    },
    "containerSecurityContext": {
      "additionalProperties": true,
      "description": "# Specify security settings for a Container\n# Allows overrides and additional options compared to (Pod) securityContext\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "additionalProperties": true,
          "properties": {
            "drop": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [],
          "title": "capabilities",
          "type": "object"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "containerSecurityContext",
      "type": "object"
    },
    "containers": {
      "description": "# Containers allows injecting additional containers.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "containers",
      "type": "array"
    },
    "contextPropagation": {
      "additionalProperties": true,
      "description": "Enables context propagation support.",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "contextPropagation",
      "type": "object"
    },
    "controlPlane": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "enable all Kubernetes Control Plane metrics sources. This includes api-server, kube-scheduler,\nkube-controller-manager, and KubeDNS.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "controlPlane",
      "type": "object"
    },
    "controller": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity configuration for pods.",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "description": "Creates a HorizontalPodAutoscaler for controller type deployment.\nDeprecated: Please use controller.autoscaling.horizontal instead",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "horizontal": {
              "additionalProperties": true,
              "description": "Configures the Horizontal Pod Autoscaler for the controller.",
              "properties": {
                "enabled": {
                  "description": "Enables the Horizontal Pod Autoscaler for the controller.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxReplicas": {
                  "description": "The upper limit for the number of replicas to which the autoscaler can scale up.",
                  "required": [],
                  "title": "maxReplicas",
                  "type": "integer"
                },
                "minReplicas": {
                  "description": "The lower limit for the number of replicas to which the autoscaler can scale down.",
                  "required": [],
                  "title": "minReplicas",
                  "type": "integer"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "properties": {
                    "policies": {
                      "description": "List of policies to determine the scale-down behavior.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    },
                    "selectPolicy": {
                      "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-down policies to apply if multiple are specified.",
                      "required": [],
                      "title": "selectPolicy",
                      "type": "string"
                    },
                    "stabilizationWindowSeconds": {
                      "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling down.",
                      "required": [],
                      "title": "stabilizationWindowSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "properties": {
                    "policies": {
                      "description": "List of policies to determine the scale-up behavior.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    },
                    "selectPolicy": {
                      "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-up policies to apply if multiple are specified.",
                      "required": [],
                      "title": "selectPolicy",
                      "type": "string"
                    },
                    "stabilizationWindowSeconds": {
                      "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling up.",
                      "required": [],
                      "title": "stabilizationWindowSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                },
                "targetCPUUtilizationPercentage": {
                  "description": "Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.",
                  "required": [],
                  "title": "targetCPUUtilizationPercentage",
                  "type": "integer"
                },
                "targetMemoryUtilizationPercentage": {
                  "description": "Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.",
                  "required": [],
                  "title": "targetMemoryUtilizationPercentage",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "horizontal",
              "type": "object"
            },
            "maxReplicas": {
              "description": "The upper limit for the number of replicas to which the autoscaler can scale up.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "description": "The lower limit for the number of replicas to which the autoscaler can scale down.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "scaleDown": {
              "additionalProperties": true,
              "properties": {
                "policies": {
                  "description": "List of policies to determine the scale-down behavior.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "policies",
                  "type": "array"
                },
                "selectPolicy": {
                  "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-down policies to apply if multiple are specified.",
                  "required": [],
                  "title": "selectPolicy",
                  "type": "string"
                },
                "stabilizationWindowSeconds": {
                  "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling down.",
                  "required": [],
                  "title": "stabilizationWindowSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "scaleDown",
              "type": "object"
            },
            "scaleUp": {
              "additionalProperties": true,
              "properties": {
                "policies": {
                  "description": "List of policies to determine the scale-up behavior.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "policies",
                  "type": "array"
                },
                "selectPolicy": {
                  "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-up policies to apply if multiple are specified.",
                  "required": [],
                  "title": "selectPolicy",
                  "type": "string"
                },
                "stabilizationWindowSeconds": {
                  "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling up.",
                  "required": [],
                  "title": "stabilizationWindowSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "scaleUp",
              "type": "object"
            },
            "targetCPUUtilizationPercentage": {
              "description": "Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "description": "Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "integer"
            },
            "vertical": {
              "additionalProperties": true,
              "description": "Configures the Vertical Pod Autoscaler for the controller.",
              "properties": {
                "enabled": {
                  "description": "Enables the Vertical Pod Autoscaler for the controller.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "recommenders": {
                  "description": "List of recommenders to use for the Vertical Pod Autoscaler.\nRecommenders are responsible for generating recommendation for the object.\nList should be empty (then the default recommender will generate the recommendation)\nor contain exactly one recommender.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "recommenders",
                  "type": "array"
                },
                "resourcePolicy": {
                  "additionalProperties": true,
                  "description": "Configures the resource policy for the Vertical Pod Autoscaler.",
                  "properties": {
                    "containerPolicies": {
                      "description": "Configures the container policies for the Vertical Pod Autoscaler.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "containerName": {
                            "required": [],
                            "title": "containerName",
                            "type": "string"
                          },
                          "controlledResources": {
                            "description": "The controlled resources for the Vertical Pod Autoscaler.",
                            "items": {
                              "required": [],
                              "type": "string"
                            },
                            "required": [],
                            "title": "controlledResources",
                            "type": "array"
                          },
                          "controlledValues": {
                            "description": "The controlled values for the Vertical Pod Autoscaler. Needs to be either RequestsOnly or RequestsAndLimits.",
                            "required": [],
                            "title": "controlledValues",
                            "type": "string"
                          },
                          "maxAllowed": {
                            "additionalProperties": true,
                            "description": "The maximum allowed values for the pods.",
                            "required": [],
                            "title": "maxAllowed",
                            "type": "object"
                          },
                          "minAllowed": {
                            "additionalProperties": true,
                            "description": "cpu: 200m\nmemory: 100Mi\nDefines the min allowed resources for the pod",
                            "required": [],
                            "title": "minAllowed",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "containerPolicies",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "resourcePolicy",
                  "type": "object"
                },
                "updatePolicy": {
                  "description": "Configures the update policy for the Vertical Pod Autoscaler.",
                  "required": [],
                  "title": "updatePolicy",
                  "type": "null"
                }
              },
              "required": [],
              "title": "vertical",
              "type": "object"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsPolicy": {
          "description": "Configures the DNS policy for the pod. https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "required": [],
          "title": "dnsPolicy",
          "type": "string"
        },
        "enableStatefulSetAutoDeletePVC": {
          "description": "Whether to enable automatic deletion of stale PVCs due to a scale down operation, when controller.type is 'statefulset'.",
          "required": [],
          "title": "enableStatefulSetAutoDeletePVC",
          "type": "boolean"
        },
        "extraAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to add to controller.",
          "required": [],
          "title": "extraAnnotations",
          "type": "object"
        },
        "extraContainers": {
          "description": "Additional containers to run alongside the Alloy container and initContainers.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraLabels": {
          "additionalProperties": true,
          "description": "Extra labels to add to the controller.",
          "required": [],
          "title": "extraLabels",
          "type": "object"
        },
        "hostNetwork": {
          "description": "Configures Pods to use the host network. When set to true, the ports that will be used must be specified.",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "hostPID": {
          "description": "Configures Pods to use the host PID namespace.",
          "required": [],
          "title": "hostPID",
          "type": "boolean"
        },
        "initContainers": {
          "description": "# -- Additional init containers to run.\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "minReadySeconds": {
          "description": "How many additional seconds to wait before considering a pod ready.",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "nodeSelector to apply to Grafana Alloy pods.",
          "properties": {
            "kubernetes.io/os": {
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "parallelRollout": {
          "description": "Whether to deploy pods in parallel. Only used when controller.type is\n'statefulset'.",
          "required": [],
          "title": "parallelRollout",
          "type": "boolean"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Extra pod annotations to add.",
          "properties": {
            "k8s.grafana.com/logs.job": {
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "PodDisruptionBudget configuration.",
          "properties": {
            "enabled": {
              "description": "Whether to create a PodDisruptionBudget for the controller.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "description": "Maximum number of pods that can be unavailable during a disruption.\nNote: Only one of minAvailable or maxUnavailable should be set.",
              "required": [],
              "title": "maxUnavailable",
              "type": "null"
            },
            "minAvailable": {
              "description": "Minimum number of pods that must be available during a disruption.\nNote: Only one of minAvailable or maxUnavailable should be set.",
              "required": [],
              "title": "minAvailable",
              "type": "null"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Extra pod labels to add.",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "description": "priorityClassName to apply to Grafana Alloy pods.",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "replicas": {
          "description": "Number of pods to deploy. Ignored when controller.type is 'daemonset'.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "terminationGracePeriodSeconds": {
          "description": "Termination grace period in seconds for the Grafana Alloy pods.\nThe default value used by Kubernetes if unspecifed is 30 seconds.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "null"
        },
        "tolerations": {
          "description": "Tolerations to apply to Grafana Alloy pods.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints to apply to Grafana Alloy pods.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "type": {
          "description": "Type of controller to use for deploying Grafana Alloy in the cluster.\nMust be one of 'daemonset', 'deployment', or 'statefulset'.",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "Update strategy for updating deployed Pods.",
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        },
        "volumeClaimTemplates": {
          "description": "volumeClaimTemplates to add when controller.type is 'statefulset'.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeClaimTemplates",
          "type": "array"
        },
        "volumes": {
          "additionalProperties": true,
          "properties": {
            "extra": {
              "description": "Extra volumes to add to the Grafana Alloy pod.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extra",
              "type": "array"
            }
          },
          "required": [],
          "title": "volumes",
          "type": "object"
        }
      },
      "required": [],
      "title": "controller",
      "type": "object"
    },
    "crds": {
      "additionalProperties": true,
      "description": "Skip installation of the Grafana Alloy CRDs, since we don't use them in this chart",
      "properties": {
        "alertmanagerconfigs": {
          "additionalProperties": true,
          "description": "# alertmanagerconfigs configures the AlertManagerConfig CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "alertmanagerconfigs",
          "type": "object"
        },
        "alertmanagers": {
          "additionalProperties": true,
          "description": "# alertmanagers configures the AlertManager CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "alertmanagers",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "# annotations add additional annotations to all CRDs",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "deploy": {
          "default": false,
          "description": "Deploy the Prometheus Operator CRDs.",
          "required": [],
          "title": "deploy",
          "type": "boolean"
        },
        "deployAlloyCRD": {
          "default": true,
          "description": "Should this chart deploy the Alloy CRD?",
          "required": [],
          "title": "deployAlloyCRD",
          "type": "boolean"
        },
        "deployPodLogsCRD": {
          "default": false,
          "description": "Should this chart deploy the PodLogs CRD?",
          "required": [],
          "title": "deployPodLogsCRD",
          "type": "boolean"
        },
        "podmonitors": {
          "additionalProperties": true,
          "description": "# podmonitors configures the PodMonitor CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "podmonitors",
          "type": "object"
        },
        "probes": {
          "additionalProperties": true,
          "description": "# probes configures the Probe CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "probes",
          "type": "object"
        },
        "prometheusagents": {
          "additionalProperties": true,
          "description": "# prometheusagents configures the PrometheusAgent CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "prometheusagents",
          "type": "object"
        },
        "prometheuses": {
          "additionalProperties": true,
          "description": "# prometheuses configures the Prometheus CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "prometheuses",
          "type": "object"
        },
        "prometheusrules": {
          "additionalProperties": true,
          "description": "# prometheusrules configures the PrometheusRule CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "prometheusrules",
          "type": "object"
        },
        "scrapeconfigs": {
          "additionalProperties": true,
          "description": "# prometheusrules configures the PrometheusRule CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "scrapeconfigs",
          "type": "object"
        },
        "servicemonitors": {
          "additionalProperties": true,
          "description": "# servicemonitors configures the ServiceMonitor CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "servicemonitors",
          "type": "object"
        },
        "thanosrulers": {
          "additionalProperties": true,
          "description": "# thanosrulers configures the ThanosRuler CRD",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# enabled defines if the CRD should be installed",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "thanosrulers",
          "type": "object"
        }
      },
      "required": [],
      "title": "crds",
      "type": "object"
    },
    "customLabels": {
      "additionalProperties": true,
      "description": "# Additional labels to add to all resources",
      "required": [],
      "title": "customLabels",
      "type": "object"
    },
    "customResourceState": {
      "additionalProperties": true,
      "description": "Enabling support for customResourceState, will create a configMap including your config that will be read from kube-state-metrics",
      "properties": {
        "config": {
          "additionalProperties": true,
          "description": "Definition of the CustomResourceStateMetrics. Add (Cluster)Role permissions to list/watch the resources defined in the config to rbac.extraRules.",
          "required": [],
          "title": "config",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Whether to create the ConfigMap that holds the config.",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "description": "Whether to enable support for CustomResourceStateMetrics.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "key": {
          "default": "config.yaml",
          "description": "ConfigMap key that holds the config.",
          "required": [],
          "title": "key",
          "type": "string"
        },
        "name": {
          "default": "",
          "description": "Name of the ConfigMap that holds the config. If empty, name will be generated based on the release name.",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "customResourceState",
      "type": "object"
    },
    "daemonsetAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to windows exporter daemonset",
      "required": [],
      "title": "daemonsetAnnotations",
      "type": "object"
    },
    "dcgm-exporter": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from DCGM Exporter",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "dcgm-exporter",
      "type": "object"
    },
    "deployAsConfigMap": {
      "default": false,
      "required": [],
      "title": "deployAsConfigMap",
      "type": "boolean"
    },
    "destinations": {
      "description": "The list of destinations where telemetry data will be sent.\nSee the [destinations documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/destinations/README.md) for more information.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "destinations",
      "type": "array"
    },
    "destinationsMap": {
      "additionalProperties": true,
      "description": "A map of destinations where telemetry data will be sent. Keys will be used as the destination name.\nSee the [destinations documentation](https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/docs/destinations/README.md) for more information.",
      "required": [],
      "title": "destinationsMap",
      "type": "object"
    },
    "dnsConfig": {
      "additionalProperties": true,
      "description": "Custom DNS configuration to be added to prometheus-windows-exporter pods",
      "required": [],
      "title": "dnsConfig",
      "type": "object"
    },
    "dnsPolicy": {
      "default": "ClusterFirst",
      "description": "# dnsPolicy allows to change the default DNS configuration for the pod\n# Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
      "required": [],
      "title": "dnsPolicy",
      "type": "string"
    },
    "ebpf": {
      "additionalProperties": true,
      "description": "Settings for gathering profiles using eBPF",
      "properties": {
        "annotationSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod annotations.\nExample: `color: \"green\"` will select pods with the annotation `color=\"green\"`.\nExample with multiple values: `color: [\"blue\", \"green\"]` will select pods with the annotation `color=\"blue\"` or\n`color=\"green\"`.",
          "required": [],
          "title": "annotationSelectors",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Configure the annotations that will control how the targets are discovered and how profiles are collected.\nAll annotations will be `\u003cprefix\u003e/cpu.ebpf.\u003caction\u003e`, for example, to \"enable\" collecting profiles using eBPF, set\nthe annotation `profiles.grafana.com/cpu.ebpf.scrape: \"true\"` on the pod.",
          "properties": {
            "enable": {
              "default": "enabled",
              "description": "The annotation action for enabling or disabling collecting of profiles with eBPF.",
              "required": [],
              "title": "enable",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "demangle": {
          "default": "none",
          "description": "C++ demangle mode. Available options are: none, simplified, templates, full",
          "required": [],
          "title": "demangle",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Gather profiles using eBPF",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to exclude looking for pods.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for eBPF profile sources.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod labels.\nExample: `app.kubernetes.io/name: myapp` will select pods with the label `app.kubernetes.io/name=myapp`.\nExample with multiple values: `app.kubernetes.io/name: [myapp, myapp2]` will select pods with the label\n`app.kubernetes.io/name=myapp` or `app.kubernetes.io/name=myapp2`.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "namespaces": {
          "description": "Select pods to profile based on their namespaces.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "targetingScheme": {
          "default": "annotation",
          "description": "How to target pods for collecting profiles with eBPF. Options are `all` and `annotation`. If using `all`, all\nKubernetes pods will be targeted for collecting profiles, and you can exclude certain pods by setting the\n`profiles.grafana.com/cpu.ebpf.enabled=\"false\"` annotation on that pod. If using `annotation`, only pods with the\n`profiles.grafana.com/cpu.ebpf.enabled=\"true\"` annotation will have profiles collected with eBPF.",
          "required": [],
          "title": "targetingScheme",
          "type": "string"
        }
      },
      "required": [],
      "title": "ebpf",
      "type": "object"
    },
    "ecosystem": {
      "description": "The ecosystem for this destination. By setting this ecosystem, matching telemetry data sources might be\nauto-assigned to this destination. Options: `loki`, `otlp`, `prometheus`, `pyroscope`\n@ section -- General",
      "required": [],
      "title": "ecosystem",
      "type": "string"
    },
    "enabled": {
      "description": "Enable this Alloy instance.",
      "required": [],
      "title": "enabled",
      "type": "boolean"
    },
    "endpoints": {
      "description": "for deployments that have node_exporter deployed outside of the cluster, list\ntheir addresses here",
      "items": {
        "required": []
      },
      "required": [],
      "title": "endpoints",
      "type": "array"
    },
    "env": {
      "additionalProperties": true,
      "description": "Additional environment variables that will be passed to the daemonset",
      "items": {
        "required": []
      },
      "required": [],
      "title": "env",
      "type": "object"
    },
    "envValueFrom": {
      "additionalProperties": true,
      "description": "extra environment variables to be set from resources such as k8s configMaps/secrets",
      "required": [],
      "title": "envValueFrom",
      "type": "object"
    },
    "etcd": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from etcd",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "etcd",
      "type": "object"
    },
    "excludeLevels": {
      "description": "List of event levels to ignore. e.g. `[\"Normal\", \"Warning\"]`",
      "items": {
        "required": []
      },
      "required": [],
      "title": "excludeLevels",
      "type": "array"
    },
    "excludeNamespaces": {
      "description": "Do not capture logs from any pods in these namespaces.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "excludeNamespaces",
      "type": "array"
    },
    "excludeReasons": {
      "description": "List of event reasons to ignore. e.g. `[\"Pulling\", \"Started\"]`",
      "items": {
        "required": []
      },
      "required": [],
      "title": "excludeReasons",
      "type": "array"
    },
    "exporter": {
      "additionalProperties": true,
      "description": "Settings for the Alloy embedded MySQL Exporter",
      "properties": {
        "collectors": {
          "description": "The list of collectors to enable for the MySQL Exporter ([Documentation](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.exporter.mysql/#supported-collectors)).",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "collectors",
          "type": "array"
        },
        "dataSource": {
          "additionalProperties": true,
          "description": "The data source to use for the MySQL Exporter.",
          "properties": {
            "auth": {
              "additionalProperties": true,
              "properties": {
                "password": {
                  "description": "The password to use for the MySQL connection.",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "passwordFrom": {
                  "description": "Raw config for accessing the password.",
                  "required": [],
                  "title": "passwordFrom",
                  "type": "string"
                },
                "passwordKey": {
                  "description": "The key for storing the password in the secret.",
                  "required": [],
                  "title": "passwordKey",
                  "type": "string"
                },
                "username": {
                  "description": "The username to use for the MySQL connection.",
                  "required": [],
                  "title": "username",
                  "type": "string"
                },
                "usernameFrom": {
                  "description": "Raw config for accessing the username.",
                  "required": [],
                  "title": "usernameFrom",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "The key for storing the username in the secret.",
                  "required": [],
                  "title": "usernameKey",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auth",
              "type": "object"
            },
            "host": {
              "description": "The MySQL host to connect to.",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "port": {
              "description": "The MySQL port to connect to.",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "protocol": {
              "description": "The MySQL protocol type.",
              "required": [],
              "title": "protocol",
              "type": "string"
            }
          },
          "required": [],
          "title": "dataSource",
          "type": "object"
        },
        "dataSourceName": {
          "description": "The data source string to use for the MySQL Exporter.",
          "required": [],
          "title": "dataSourceName",
          "type": "string"
        }
      },
      "required": [],
      "title": "exporter",
      "type": "object"
    },
    "extraArgs": {
      "description": "# Additional container arguments\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraArgs",
      "type": "array"
    },
    "extraCapabilities": {
      "description": "Extra capabilities for unprivileged / less privileged setup.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraCapabilities",
      "type": "array"
    },
    "extraConfig": {
      "description": "Extra Alloy configuration to be added to the configuration file.",
      "required": [],
      "title": "extraConfig",
      "type": "string"
    },
    "extraDiscoveryRules": {
      "default": "",
      "description": "Rules to filter pods for log gathering. Only used for \"volumes\" or \"kubernetesApi\" gather methods.",
      "required": [],
      "title": "extraDiscoveryRules",
      "type": "string"
    },
    "extraEnvVars": {
      "additionalProperties": true,
      "description": "Extra environment variables",
      "properties": {
        "CGROUP_METRICS": {
          "default": "*",
          "required": [],
          "title": "CGROUP_METRICS",
          "type": "string"
        },
        "CPU_ARCH_OVERRIDE": {
          "default": "",
          "required": [],
          "title": "CPU_ARCH_OVERRIDE",
          "type": "string"
        },
        "ENABLE_EBPF_CGROUPID": {
          "default": "true",
          "required": [],
          "title": "ENABLE_EBPF_CGROUPID",
          "type": "string"
        },
        "ENABLE_GPU": {
          "default": "true",
          "description": "METRIC_PATH: \"/metrics\"\nBIND_ADDRESS: \"0.0.0.0:9102\"",
          "required": [],
          "title": "ENABLE_GPU",
          "type": "string"
        },
        "ENABLE_PROCESS_METRICS": {
          "default": "false",
          "required": [],
          "title": "ENABLE_PROCESS_METRICS",
          "type": "string"
        },
        "ENABLE_QAT": {
          "default": "false",
          "required": [],
          "title": "ENABLE_QAT",
          "type": "string"
        },
        "EXPOSE_CGROUP_METRICS": {
          "default": "false",
          "required": [],
          "title": "EXPOSE_CGROUP_METRICS",
          "type": "string"
        },
        "EXPOSE_HW_COUNTER_METRICS": {
          "default": "true",
          "required": [],
          "title": "EXPOSE_HW_COUNTER_METRICS",
          "type": "string"
        },
        "EXPOSE_IRQ_COUNTER_METRICS": {
          "default": "true",
          "required": [],
          "title": "EXPOSE_IRQ_COUNTER_METRICS",
          "type": "string"
        },
        "KEPLER_LOG_LEVEL": {
          "default": "1",
          "required": [],
          "title": "KEPLER_LOG_LEVEL",
          "type": "string"
        }
      },
      "required": [],
      "title": "extraEnvVars",
      "type": "object"
    },
    "extraHeaders": {
      "additionalProperties": true,
      "description": "Extra headers to be set when sending data.\nAll values are treated as strings and automatically quoted.",
      "required": [],
      "title": "extraHeaders",
      "type": "object"
    },
    "extraHeadersFrom": {
      "additionalProperties": true,
      "description": "Extra headers to be set when sending data through a dynamic reference.\nAll values are treated as raw strings and not quoted.",
      "required": [],
      "title": "extraHeadersFrom",
      "type": "object"
    },
    "extraHostVolumeMounts": {
      "description": "# Additional mounts from the host to windows-exporter container\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraHostVolumeMounts",
      "type": "array"
    },
    "extraInitContainers": {
      "description": "# Additional InitContainers to initialize the pod\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraInitContainers",
      "type": "array"
    },
    "extraLabels": {
      "additionalProperties": true,
      "description": "Extra labels to be added to all profiles before delivering to the destination.\nAll values are treated as strings and automatically quoted.",
      "required": [],
      "title": "extraLabels",
      "type": "object"
    },
    "extraLabelsFrom": {
      "additionalProperties": true,
      "description": "Extra labels to be added to all profiles using a dynamic reference before delivering to the destination.\nAll values are treated as raw strings and not quoted.",
      "required": [],
      "title": "extraLabelsFrom",
      "type": "object"
    },
    "extraLogProcessingStages": {
      "default": "",
      "description": "Stage blocks to be added to the loki.process component for pod logs.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/loki/loki.process/#blocks))\nThis value is templated so that you can refer to other values from this file.",
      "required": [],
      "title": "extraLogProcessingStages",
      "type": "string"
    },
    "extraManifests": {
      "description": "Extra manifests to deploy as an array",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraManifests",
      "type": "array"
    },
    "extraMetricProcessingRules": {
      "default": "",
      "description": "Rule blocks to be added to the prometheus.relabel component for discovered pods and services.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
      "required": [],
      "title": "extraMetricProcessingRules",
      "type": "string"
    },
    "extraObjects": {
      "description": "Deploy additional manifest objects",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraObjects",
      "type": "array"
    },
    "extraVolumeMounts": {
      "description": "# Extra volume mounts in the node-exporter container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "description": "# Extra volumes to become available in the pod",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "fieldSelectors": {
      "description": "Discover Tempo instances based on field selectors.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "fieldSelectors",
      "type": "array"
    },
    "filelogGatherSettings": {
      "additionalProperties": true,
      "properties": {
        "onlyGatherNewLogLines": {
          "default": false,
          "description": "Only gather new log lines since this was deployed. Do not gather historical log lines.",
          "required": [],
          "title": "onlyGatherNewLogLines",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "filelogGatherSettings",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "Overrides the chart's computed fullname. Used to change the full prefix of\nresource names.",
      "required": [],
      "title": "fullnameOverride",
      "type": "null"
    },
    "gatherMethod": {
      "default": "volumes",
      "description": "The method to gather pod logs. Options are \"volumes\", \"filelog\" (experimental), \"kubernetesApi\", \"OpenShiftClusterLogForwarder\" (experimental).\nDEPRECATION WARNING: The \"kubernetesApi\" gather method is deprecated and will be removed in a future release.\nPlease use the podLogsViaKubernetesApi feature instead.",
      "required": [],
      "title": "gatherMethod",
      "type": "string"
    },
    "global": {
      "additionalProperties": true,
      "description": "\nGlobal settings\n",
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional set of global image pull secrets.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "",
              "description": "Global image registry to use if it needs to be overridden for some specific use cases (e.g local registries, custom images, ...)",
              "required": [],
              "title": "registry",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "To help compatibility with other charts which use global.imagePullSecrets.\nAllow either an array of {name: pullSecret} maps (k8s-style), or an array of strings (more common helm-style).\nglobal:\n  imagePullSecrets:\n  - name: pullSecret1\n  - name: pullSecret2\nor\nglobal:\n  imagePullSecrets:\n  - pullSecret1\n  - pullSecret2",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "imageRegistry": {
          "default": "",
          "description": "\nAllow parent charts to override registry hostname",
          "required": [],
          "title": "imageRegistry",
          "type": "string"
        },
        "kubernetesAPIService": {
          "default": "",
          "description": "The Kubernetes service. Change this if your cluster DNS is configured differently than the default.",
          "required": [],
          "title": "kubernetesAPIService",
          "type": "string"
        },
        "maxCacheSize": {
          "default": 100000,
          "description": "Sets the max_cache_size for every prometheus.relabel component. ([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nThis should be at least 2x-5x your largest scrape target or samples appended rate.",
          "required": [],
          "title": "maxCacheSize",
          "type": "integer"
        },
        "platform": {
          "default": "",
          "description": "The specific platform for this cluster. Will enable compatibility for some platforms. Supported options: (empty) or \"openshift\".",
          "required": [],
          "title": "platform",
          "type": "string"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana Alloy pod.",
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "scrapeClassicHistograms": {
          "default": false,
          "description": "Whether to scrape a classic histogram that’s also exposed as a native histogram.",
          "required": [],
          "title": "scrapeClassicHistograms",
          "type": "boolean"
        },
        "scrapeInterval": {
          "default": "60s",
          "description": "How frequently to scrape metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeProtocols": {
          "description": "The protocols to negotiate during a Prometheus metrics scrape, in order of preference.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "scrapeProtocols",
          "type": "array"
        },
        "scrapeTimeout": {
          "default": "10s",
          "description": "The timeout for scraping metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "global",
      "type": "object"
    },
    "grafana": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from Grafana",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "grafana",
      "type": "object"
    },
    "hostIPC": {
      "default": false,
      "description": "Share the host ipc namespace",
      "required": [],
      "title": "hostIPC",
      "type": "boolean"
    },
    "hostNetwork": {
      "default": true,
      "description": "Expose the service to the host network",
      "required": [],
      "title": "hostNetwork",
      "type": "boolean"
    },
    "hostPID": {
      "default": true,
      "description": "Share the host process ID namespace",
      "required": [],
      "title": "hostPID",
      "type": "boolean"
    },
    "hostProcFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's proc file system (/proc) at /host/proc in the container",
      "properties": {
        "mountPropagation": {
          "default": "",
          "description": "Possible values are None, HostToContainer, and Bidirectional",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostProcFsMount",
      "type": "object"
    },
    "hostRootFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's root file system (/) at /host/root in the container",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "mountPropagation": {
          "default": "HostToContainer",
          "description": "Defines how new mounts in existing mounts on the node or in the container\nare propagated to the container or node, respectively. Possible values are\nNone, HostToContainer, and Bidirectional. If this field is omitted, then\nNone is used. More information on:\nhttps://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostRootFsMount",
      "type": "object"
    },
    "hostSysFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's sys file system (/sys) at /host/sys in the container",
      "properties": {
        "mountPropagation": {
          "default": "",
          "description": "Possible values are None, HostToContainer, and Bidirectional",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostSysFsMount",
      "type": "object"
    },
    "image": {
      "additionalProperties": true,
      "description": "Default values for prometheus-node-exporter.\nThis is a YAML-formatted file.\nDeclare variables to be passed into your templates.",
      "properties": {
        "digest": {
          "default": "",
          "description": "Grafana Alloy image's SHA256 digest (either in format \"sha256:XYZ\" or \"XYZ\"). When set, will override `image.tag`.",
          "required": [],
          "title": "digest",
          "type": "null"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Grafana Alloy image pull policy.",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "pullSecrets": {
          "description": "Optional set of image pull secrets.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "pullSecrets",
          "type": "array"
        },
        "registry": {
          "default": "ghcr.io",
          "description": "Grafana Alloy image registry (defaults to docker.io)",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "prometheus-community/windows-exporter",
          "description": "Grafana Alloy image repository.",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "sha": {
          "default": "",
          "required": [],
          "title": "sha",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "(string) Grafana Alloy image tag. When empty, the Chart's appVersion is\nused.",
          "required": [],
          "title": "tag",
          "type": "null"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "List of secret names to use for pulling the images",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "includeDestinations": {
      "description": "Include the configuration components for these destinations. Configuration is already added for destinations used\nBy enabled features on this collector. This is useful when referencing destinations in the extraConfig.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "includeDestinations",
      "type": "array"
    },
    "includeLevels": {
      "description": "List of event levels to include (`[]` means allow all event levels). e.g. `[\"Normal\", \"Warning\"]`",
      "items": {
        "required": []
      },
      "required": [],
      "title": "includeLevels",
      "type": "array"
    },
    "includeReasons": {
      "description": "List of event reasons to include (`[]` means allow all event reasons). e.g. `[\"Failed\"]`",
      "items": {
        "required": []
      },
      "required": [],
      "title": "includeReasons",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx\nValues can be templated",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "description": "Enables ingress for Alloy (Faro port)",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraPaths": {
          "description": "# Extra paths to prepend to every host configuration. This is useful when working with annotation based services.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPaths",
          "type": "array"
        },
        "faroPort": {
          "required": [],
          "title": "faroPort",
          "type": "integer"
        },
        "hosts": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "required": [],
          "title": "path",
          "type": "string"
        },
        "pathType": {
          "description": "pathType is only for k8s \u003e= 1.1=",
          "required": [],
          "title": "pathType",
          "type": "string"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "initContainers": {
      "description": "# InitContainers allows injecting additional initContainers.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "initContainers",
      "type": "array"
    },
    "integrations": {
      "additionalProperties": true,
      "description": "Service Integrations enables gathering telemetry data for common services and applications deployed to Kubernetes.\nTo see the valid options, please see the [Service Integrations documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-integrations).",
      "properties": {
        "collector": {
          "default": "alloy-metrics",
          "description": "Which collectors to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where integration metrics will be sent. If empty, all metrics-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        }
      },
      "required": [],
      "title": "integrations",
      "type": "object"
    },
    "java": {
      "additionalProperties": true,
      "properties": {
        "annotationSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod annotations.\nExample: `color: \"green\"` will select pods with the annotation `color=\"green\"`.\nExample with multiple values: `color: [\"blue\", \"green\"]` will select pods with the annotation `color=\"blue\"` or\n`color=\"green\"`.",
          "required": [],
          "title": "annotationSelectors",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Configure the annotations that will control how the Java targets are discovered and how profiles are collected.\nAll annotations will be `\u003cprefix\u003e/java.\u003caction\u003e`, for example, to \"enable\" scraping of Java profiles, set the\nannotation `profiles.grafana.com/java.enabled: \"true\"` on the pod.",
          "properties": {
            "enable": {
              "default": "enabled",
              "description": "The annotation action for enabling or disabling of Java profile collection.",
              "required": [],
              "title": "enable",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "Gather profiles by attaching async-profiler to the Java runtime.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to exclude looking for pods.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Java profile sources.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod labels.\nExample: `app.kubernetes.io/name: myapp` will select pods with the label `app.kubernetes.io/name=myapp`.\nExample with multiple values: `app.kubernetes.io/name: [myapp, myapp2]` will select pods with the label\n`app.kubernetes.io/name=myapp` or `app.kubernetes.io/name=myapp2`.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "namespaces": {
          "description": "Select pods to profile based on their namespaces.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "profilingConfig": {
          "additionalProperties": true,
          "description": "Configuration for the async-profiler",
          "properties": {
            "alloc": {
              "default": "512k",
              "required": [],
              "title": "alloc",
              "type": "string"
            },
            "cpu": {
              "default": true,
              "required": [],
              "title": "cpu",
              "type": "boolean"
            },
            "interval": {
              "default": "60s",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "lock": {
              "default": "10ms",
              "required": [],
              "title": "lock",
              "type": "string"
            },
            "sampleRate": {
              "default": 100,
              "required": [],
              "title": "sampleRate",
              "type": "integer"
            }
          },
          "required": [],
          "title": "profilingConfig",
          "type": "object"
        },
        "targetingScheme": {
          "default": "annotation",
          "description": "How to target pods for finding Java profiles. Options are `all` and `annotation`. If using `all`, all Kubernetes\npods will be targeted for Java profiles, and you can exclude certain pods by setting the\n`profiles.grafana.com/java.enabled=\"false\"` annotation on that pod. If using `annotation`, only pods with the\n`profiles.grafana.com/java.enabled=\"true\"` annotation will collecting Java profiles.",
          "required": [],
          "title": "targetingScheme",
          "type": "string"
        }
      },
      "required": [],
      "title": "java",
      "type": "object"
    },
    "jobLabel": {
      "default": "integrations/kubernetes/eventhandler",
      "description": "The value of the job label for scraped metrics and logs",
      "required": [],
      "title": "jobLabel",
      "type": "string"
    },
    "journal": {
      "additionalProperties": true,
      "properties": {
        "formatAsJson": {
          "default": false,
          "description": "Whether to forward the original journal entry as JSON.",
          "required": [],
          "title": "formatAsJson",
          "type": "boolean"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/journal",
          "description": "The value for the job label for journal logs.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxAge": {
          "default": "8h",
          "description": "The path to the journal logs on the worker node.",
          "required": [],
          "title": "maxAge",
          "type": "string"
        },
        "path": {
          "default": "/var/log/journal",
          "description": "The path to the journal logs on the worker node.",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "units": {
          "description": "The list of systemd units to keep scraped logs from, this can be a valid RE2 regular expression. If empty, all\nunits are scraped.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "units",
          "type": "array"
        }
      },
      "required": [],
      "title": "journal",
      "type": "object"
    },
    "k8sCache": {
      "additionalProperties": true,
      "description": "Options to deploy the Kubernetes metadata cache as a separate service",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Deployment annotations.",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "env": {
          "additionalProperties": true,
          "description": "# Env variables that will override configmap values\n# For example:\n#   BEYLA_K8S_CACHE_LOG_LEVEL: \"debug\"\nextra environment variables",
          "required": [],
          "title": "env",
          "type": "object"
        },
        "envValueFrom": {
          "additionalProperties": true,
          "description": "extra environment variables to be set from resources such as k8s configMaps/secrets",
          "required": [],
          "title": "envValueFrom",
          "type": "object"
        },
        "image": {
          "additionalProperties": true,
          "description": "We usually recommend not to specify default resources and to leave this as a conscious\nchoice for the user. This also increases chances charts run on environments with little\nresources, such as Minikube. If you do want to specify resources, uncomment the following\nlines, adjust them as necessary, and remove the curly braces after 'resources:'.\nlimits:\n  cpu: 100m\n  memory: 128Mi\nrequests:\n  cpu: 100m\n  memory: 128Mi",
          "properties": {
            "digest": {
              "default": "null",
              "description": "K8s Cache image's SHA256 digest (either in format \"sha256:XYZ\" or \"XYZ\"). When set, will override `image.tag`.",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "K8s Cache image pull policy.",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "Optional set of image pull secrets.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "description": "K8s Cache image registry (defaults to docker.io)",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/beyla-k8s-cache",
              "description": "K8s Cache image repository.",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "null",
              "description": "(string) K8s Cache image tag. When empty, the Chart's appVersion is used.",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "internalMetrics": {
          "additionalProperties": true,
          "properties": {
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": 0,
              "description": "0: disabled by default",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "metrics",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "internalMetrics",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Adds custom annotations to the Beyla Kube Cache Pods.",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Adds custom labels to the Beyla Kube Cache Pods.",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "profilePort": {
          "default": 0,
          "description": "Enables the profile port for the Beyla cache",
          "required": [],
          "title": "profilePort",
          "type": "integer"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the Kubernetes metadata cache service. 0 disables the service.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": " ENV_NAME:\n   secretKeyRef:\n     name: secret-name\n     key: value_key",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Service annotations.",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Service labels.",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "name": {
              "default": "beyla-k8s-cache",
              "description": "Name of both the Service and Deployment",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "port": {
              "default": 50055,
              "description": "Port of the Kubernetes metadata cache service.",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "k8sCache",
      "type": "object"
    },
    "kepler": {
      "additionalProperties": true,
      "description": "Kepler gathers energy metrics for the Kubernetes Cluster and the objects running inside.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "properties": {
            "nodeAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "additionalProperties": true,
                  "properties": {
                    "nodeSelectorTerms": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "key": {
                                  "default": "eks.amazonaws.com/compute-type",
                                  "required": [],
                                  "title": "key",
                                  "type": "string"
                                },
                                "operator": {
                                  "default": "NotIn",
                                  "required": [],
                                  "title": "operator",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "required": [],
                                    "type": "string"
                                  },
                                  "required": [],
                                  "title": "values",
                                  "type": "array"
                                }
                              },
                              "required": [],
                              "type": "object"
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "nodeSelectorTerms",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nodeAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "canMount": {
          "additionalProperties": true,
          "properties": {
            "usrSrc": {
              "default": false,
              "required": [],
              "title": "usrSrc",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "canMount",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Deploy and scrape Kepler metrics.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Kepler.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraEnvVars": {
          "additionalProperties": true,
          "properties": {
            "EXPOSE_ESTIMATED_IDLE_POWER_METRICS": {
              "default": "true",
              "required": [],
              "title": "EXPOSE_ESTIMATED_IDLE_POWER_METRICS",
              "type": "string"
            }
          },
          "required": [],
          "title": "extraEnvVars",
          "type": "object"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Kepler. ([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no __meta* labels are present.",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kepler",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Label matchers used to select the Kepler pods",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "kepler",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the prometheus.relabel component for Kepler.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from Kepler to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "properties": {
            "k8s.grafana.com/logs.job": {
              "default": "integrations/kepler",
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from Kepler.\nOverrides global.scrapeInterval.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kepler metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "kepler",
      "type": "object"
    },
    "kube-state-metrics": {
      "additionalProperties": true,
      "description": "kube-state-metrics metrics gather information about Kubernetes resources.",
      "properties": {
        "autosharding": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "autosharding",
          "type": "object"
        },
        "bearerTokenFile": {
          "default": "",
          "description": "The bearer token file to use when scraping metrics from kube-state-metrics.",
          "required": [],
          "title": "bearerTokenFile",
          "type": "string"
        },
        "deploy": {
          "default": true,
          "description": "Deploy kube-state-metrics. Set to false if your cluster already has kube-state-metrics deployed.",
          "required": [],
          "title": "deploy",
          "type": "boolean"
        },
        "discoveryType": {
          "default": "endpoints",
          "description": "How to discover the kube-state-metrics service. Either `endpoints`, `pod`, or `service`.\nUse `service` if you know there is a single kube-state-metrics replica, or are using HA. Use `endpoints` or `pod` if\nyou have multiple replicas with auto-sharding.",
          "required": [],
          "title": "discoveryType",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Scrape metrics from kube-state-metrics.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for kube-state-metrics.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for kube-state-metrics metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/kube-state-metrics",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Labels used to select the kube-state-metrics service.",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "kube-state-metrics",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the kube-state-metrics prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricLabelsAllowlist": {
          "description": "`kube_\u003cresource\u003e_labels` metrics to generate.\nThe default is to include a useful set for Node labels.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "metricLabelsAllowlist",
          "type": "array"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from Kube State Metrics to a useful, minimal set.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespace": {
          "default": "",
          "description": "Namespace to locate kube-state-metrics pods. If `deploy` is set to `true`, this will automatically be set to the\nnamespace where this Helm chart is deployed.",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "namespaces": {
          "description": "List (or comma-separated string) of namespaces to be enabled for collecting resources. By default, all namespaces\nare collected. Requires kube-state-metrics to be deployed by this chart.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "namespacesDenylist": {
          "description": "List (or comma-separated string) of namespaces to be excluded from collecting resources. If namespaces and\nnamespaces denylist are both set, only namespaces that are excluded in namespaces denylist will be used.\nRequires kube-state-metrics to be deployed by this chart.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespacesDenylist",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "properties": {
            "k8s.grafana.com/logs.job": {
              "default": "integrations/kubernetes/kube-state-metrics",
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "prometheusScrape": {
          "default": false,
          "required": [],
          "title": "prometheusScrape",
          "type": "boolean"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape kube-state-metrics metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping kube-state-metrics metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "description": "kube-state-metrics service settings",
          "properties": {
            "portName": {
              "default": "http",
              "description": "The port name used by kube-state-metrics.",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "scheme": {
              "default": "http",
              "description": "The scrape scheme used by kube-state-metrics.",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "updateStrategy": {
          "default": "Recreate",
          "required": [],
          "title": "updateStrategy",
          "type": "string"
        }
      },
      "required": [],
      "title": "kube-state-metrics",
      "type": "object"
    },
    "kubeControllerManager": {
      "additionalProperties": true,
      "description": "Metrics from the Kube Controller Manager",
      "properties": {
        "enabled": {
          "default": "",
          "description": "(bool) Scrape metrics from the Kube Controller Manager",
          "required": [],
          "title": "enabled",
          "type": "null"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for the Kube Controller Manager.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for the Kube Controller Manager.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "kube-controller-manager",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Kube Controller Manager prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions. An empty list means keep all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "port": {
          "default": 10257,
          "description": "Port number used by the Kube Controller Manager, set by `--secure-port.`",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from the Kube Controller Manager\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "selectorLabel": {
          "default": "component=kube-controller-manager",
          "description": "Selector label.",
          "required": [],
          "title": "selectorLabel",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeControllerManager",
      "type": "object"
    },
    "kubeDNS": {
      "additionalProperties": true,
      "description": "Metrics from the KubeDNS",
      "properties": {
        "enabled": {
          "default": "",
          "description": "(bool) Scrape metrics from KubeDNS",
          "required": [],
          "title": "enabled",
          "type": "null"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for KubeDNS.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for KubeDNS.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/kube-dns",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the KubeDNS prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions. An empty list means keep all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from KubeDNS\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping KubeDNS metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeDNS",
      "type": "object"
    },
    "kubeProxy": {
      "additionalProperties": true,
      "description": "Metrics from the Kube Proxy",
      "properties": {
        "enabled": {
          "default": "",
          "description": "(bool) Scrape metrics from the Kube Proxy",
          "required": [],
          "title": "enabled",
          "type": "null"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for the Kube Proxy.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for the Kube Proxy.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/kube-proxy",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Kube Proxy prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions. An empty list means keep all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "port": {
          "default": 10249,
          "description": "Port number used by the Kube Proxy, set in `--metrics-bind-address`.",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from the Kube Proxy\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kube Proxy metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "selectorLabel": {
          "default": "k8s-app=kube-proxy",
          "description": "Selector label.",
          "required": [],
          "title": "selectorLabel",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeProxy",
      "type": "object"
    },
    "kubeRBACProxy": {
      "additionalProperties": true,
      "description": "Configure kube-rbac-proxy. When enabled, creates a kube-rbac-proxy to protect the node-exporter http endpoint.\nThe requests are served through the same service but requests are HTTPS.",
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "# Specify security settings for a Container\n# Allows overrides and additional options compared to (Pod) securityContext\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enableHostPort": {
          "default": false,
          "description": "Configure a hostPort. If true, hostPort will be enabled in the container and set to service.port.",
          "required": [],
          "title": "enableHostPort",
          "type": "boolean"
        },
        "enableProxyEndpointsHostPort": {
          "default": false,
          "description": "Configure a hostPort. If true, hostPort will be enabled in the container and set to proxyEndpointsPort.",
          "required": [],
          "title": "enableProxyEndpointsHostPort",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": true,
          "description": "# Set environment variables as name/value pairs",
          "required": [],
          "title": "env",
          "type": "object"
        },
        "extraArgs": {
          "description": "List of additional cli arguments to configure kube-rbac-proxy\nfor example: --tls-cipher-suites, --log-file, etc.\nall the possible args can be found here: https://github.com/brancz/kube-rbac-proxy#usage",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "# Additional volume mounts in the kube-rbac-proxy container\n# See extraVolumes below",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "ignoreProbePaths": {
          "default": true,
          "description": "This set --ignore-paths=/livez,/readyz to kubeRBACProxy container args\nto allow the pod probes working properly with kubeRBACProxy enabled.",
          "required": [],
          "title": "ignoreProbePaths",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "VARIABLE: value",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "quay.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "brancz/kube-rbac-proxy",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "v0.20.0",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "port": {
          "default": 8100,
          "description": "Specify the port used for the Node exporter container (upstream port)",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "portName": {
          "default": "http",
          "description": "Specify the name of the container port",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "proxyEndpointsPort": {
          "default": 8888,
          "description": "Configure Proxy Endpoints Port\nThis is the port being probed for readiness",
          "required": [],
          "title": "proxyEndpointsPort",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "tls": {
          "additionalProperties": true,
          "description": "# tls enables using TLS resources from a volume on secret referred to in tlsSecret below.\n# When enabling tlsClientAuth, client CA certificate must be set in tlsSecret.caItem.\n# Ref. https://github.com/brancz/kube-rbac-proxy/issues/187",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "tlsClientAuth": {
              "default": false,
              "required": [],
              "title": "tlsClientAuth",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "volumeMounts": {
          "description": "# volumeMounts enables mounting custom volumes in rbac-proxy containers\n# Useful for TLS certificates and keys",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": "array"
        }
      },
      "required": [],
      "title": "kubeRBACProxy",
      "type": "object"
    },
    "kubeScheduler": {
      "additionalProperties": true,
      "description": "Metrics from the Kube Scheduler",
      "properties": {
        "enabled": {
          "default": "",
          "description": "(bool) Scrape metrics from the Kube Scheduler",
          "required": [],
          "title": "enabled",
          "type": "null"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for the Kube Scheduler.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for the Kube Scheduler.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "kube-scheduler",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Kube Scheduler prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides metrics.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions. An empty list means keep all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "port": {
          "default": 10259,
          "description": "Port number used by the Kube Scheduler, set by `--secure-port`.",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from the Kube Scheduler\nOverrides metrics.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kube Scheduler metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "selectorLabel": {
          "default": "component=kube-scheduler",
          "description": "Selector label.",
          "required": [],
          "title": "selectorLabel",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeScheduler",
      "type": "object"
    },
    "kubeconfig": {
      "additionalProperties": true,
      "description": "Enabling kubeconfig will pass the --kubeconfig argument to the container",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "secret": {
          "default": "",
          "description": "base64 encoded kube-config file",
          "required": [],
          "title": "secret",
          "type": "null"
        }
      },
      "required": [],
      "title": "kubeconfig",
      "type": "object"
    },
    "kubelet": {
      "additionalProperties": true,
      "description": "Kubelet metrics gather information about Kubernetes information on each node.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Scrape metrics from kubelet.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for the Kubelet.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Kubelet metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/kubelet",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Kubelet prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from the Kubelet to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeAddressFormat": {
          "default": "direct",
          "description": "How to access the Kubelet to get metrics, either \"direct\" (use node IP) or \"proxy\" (uses API Server)",
          "required": [],
          "title": "nodeAddressFormat",
          "type": "string"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape Kubelet metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kubelet metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubelet",
      "type": "object"
    },
    "kubeletProbes": {
      "additionalProperties": true,
      "description": "Kubelet Probe metrics gather information about liveness and readiness probe information.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Scrape probe metrics from the Kubelet.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Kubelet probes.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Kubelet probe metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/probes",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for prometheus.relabel components.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of probe metrics from the Kubelet to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeAddressFormat": {
          "default": "direct",
          "description": "How to access the Kubelet to get probe metrics, either \"direct\" (use node IP) or \"proxy\" (uses API Server)",
          "required": [],
          "title": "nodeAddressFormat",
          "type": "string"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape Kubelet probe metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kubelet probe metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeletProbes",
      "type": "object"
    },
    "kubeletResource": {
      "additionalProperties": true,
      "description": "Kubelet Resource metrics gather information about resource information on each node.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Scrape resource metrics from the Kubelet.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Kubelet resources.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Kubelet resource metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/kubernetes/resources",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for prometheus.relabel components.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of resource metrics from the Kubelet to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeAddressFormat": {
          "default": "direct",
          "description": "How to access the Kubelet to get resource metrics, either \"direct\" (use node IP) or \"proxy\" (uses API Server)",
          "required": [],
          "title": "nodeAddressFormat",
          "type": "string"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape Kubelet resource metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Kubelet resource metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeletResource",
      "type": "object"
    },
    "labelSelectors": {
      "additionalProperties": true,
      "description": "Filter the list of discovered pods and services by labels. Only for the \"volumes\" gather method.\nExample: `labelSelectors: { 'app': 'myapp' }` will only discover pods with the label `app=myapp`.\nExample: `labelSelectors: { 'app': ['myapp', 'myotherapp'] }` will only discover pods with the label `app=myapp` or `app=myotherapp`.",
      "properties": {
        "app.kubernetes.io/name": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "app.kubernetes.io/name",
          "type": "array"
        }
      },
      "required": [],
      "title": "labelSelectors",
      "type": "object"
    },
    "labels": {
      "additionalProperties": true,
      "description": "Labels to add to the Alloy Custom Resource. These labels are not added to the workload or Pod.",
      "items": {
        "required": []
      },
      "properties": {
        "app_kubernetes_io_name": {
          "default": "app.kubernetes.io/name",
          "required": [],
          "title": "app_kubernetes_io_name",
          "type": "string"
        }
      },
      "required": [],
      "title": "labels",
      "type": "array"
    },
    "labelsToKeep": {
      "description": "The list of labels to keep on the logs, all other pipeline labels will be dropped.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "labelsToKeep",
      "type": "array"
    },
    "leaderElection": {
      "additionalProperties": true,
      "description": "Leader election settings.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to enable leader election for the Alloy Operator. This is important when using multiple replicas or\nwhen rolling updates. If set to false, you risk having split-brain scenarios where multiple instances of the\nAlloy Operator try to manage the same Alloy instances.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "leaderElection",
      "type": "object"
    },
    "liveDebugging": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "description": "Enable live debugging for the Alloy instance.\nRequires stability level to be set to \"experimental\".",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "liveDebugging",
      "type": "object"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "description": "# Liveness probe\n#",
      "properties": {
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 1,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "livenessProbe",
      "type": "object"
    },
    "logFormat": {
      "default": "logfmt",
      "description": "Log format used to forward cluster events. Allowed values: `logfmt` (default), `json`.",
      "required": [],
      "title": "logFormat",
      "type": "string"
    },
    "logProcessingRules": {
      "description": "Rule blocks to be evaluated before printing the log messages to the standard output. See\n([docs](https://grafana.com/docs/alloy/latest/reference/components/loki/loki.relabel/#rule)) for more information.",
      "required": [],
      "title": "logProcessingRules",
      "type": "string"
    },
    "logProcessingStages": {
      "description": "Stage blocks to be evaluated before delivering to the Loki destination. See\n([docs](https://grafana.com/docs/alloy/latest/reference/components/loki/loki.process/#blocks)) for more information.",
      "required": [],
      "title": "logProcessingStages",
      "type": "string"
    },
    "logging": {
      "additionalProperties": true,
      "properties": {
        "format": {
          "description": "Format to use for writing Alloy log lines.",
          "required": [],
          "title": "format",
          "type": "string"
        },
        "level": {
          "description": "Level at which Alloy log lines should be written.",
          "required": [],
          "title": "level",
          "type": "string"
        }
      },
      "required": [],
      "title": "logging",
      "type": "object"
    },
    "loglevel": {
      "default": "info",
      "required": [],
      "title": "loglevel",
      "type": "string"
    },
    "logs": {
      "additionalProperties": true,
      "description": "Settings for log gathering using the Pod Logs feature",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to send logs to the OTLP destination.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "filters": {
          "additionalProperties": true,
          "description": "Apply a filter to logs received via receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.filter/))",
          "properties": {
            "log_record": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "log_record",
              "type": "array"
            }
          },
          "required": [],
          "title": "filters",
          "type": "object"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Discover MySQL instances based on label selectors. At least one is required.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "namespaces": {
          "description": "The namespaces to look for MySQL instances in.\nWill automatically look for MySQL instances in all namespaces unless specified here",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "target": {
          "description": "The Alloy component reference for sending logs.\n@ section -- Logs",
          "required": [],
          "title": "target",
          "type": "string"
        },
        "transforms": {
          "additionalProperties": true,
          "description": "Apply a transformation to logs received via the OTLP or OTLP HTTP receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.transform/))",
          "properties": {
            "labels": {
              "description": "The list of labels to set in the log stream.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "labels",
              "type": "array"
            },
            "log": {
              "description": "Log transformation rules.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "log",
              "type": "array"
            },
            "resource": {
              "description": "Resource transformation rules.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "resource",
              "type": "array"
            }
          },
          "required": [],
          "title": "transforms",
          "type": "object"
        },
        "tuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped logs to filter the amount of data sent to storage.",
          "properties": {
            "dropLogLevels": {
              "description": "The log levels to drop.\nWill automatically keep all log levels unless specified here.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "dropLogLevels",
              "type": "array"
            },
            "excludeLines": {
              "description": "Line patterns (valid RE2 regular expression)to exclude from the logs.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeLines",
              "type": "array"
            },
            "scrubTimestamp": {
              "description": "Whether the timestamp should be scrubbed from the log line",
              "required": [],
              "title": "scrubTimestamp",
              "type": "boolean"
            },
            "structuredMetadata": {
              "additionalProperties": true,
              "description": "The structured metadata mappings to set.\nTo not set any structured metadata, set this to an empty object (e.g. `{}`)",
              "required": [],
              "title": "structuredMetadata",
              "type": "object"
            },
            "timestampFormat": {
              "description": "The timestamp format to use for the log line, if not set the default timestamp which is the collection\nwill be used for the log line",
              "required": [],
              "title": "timestampFormat",
              "type": "string"
            }
          },
          "required": [],
          "title": "tuning",
          "type": "object"
        }
      },
      "required": [],
      "title": "logs",
      "type": "object"
    },
    "loki": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from Loki",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "loki",
      "type": "object"
    },
    "maxBackoffPeriod": {
      "description": "The maximum backoff period for the Pyroscope destination.",
      "required": [],
      "title": "maxBackoffPeriod",
      "type": "string"
    },
    "maxBackoffRetries": {
      "description": "The maximum number of backoff retries for the Pyroscope destination.",
      "required": [],
      "title": "maxBackoffRetries",
      "type": "integer"
    },
    "maxCacheSize": {
      "default": "",
      "description": "Sets the max_cache_size for cadvisor prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
      "required": [],
      "title": "maxCacheSize",
      "type": "null"
    },
    "metricAllowlist": {
      "description": "Comma-separated list of metrics to be exposed.\nThis list comprises of exact metric names and/or regex patterns.\nThe allowlist and denylist are mutually exclusive.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricAllowlist",
      "type": "array"
    },
    "metricAnnotationsAllowList": {
      "description": "Comma-separated list of Kubernetes annotations keys that will be used in the resource'\nlabels metric. By default the metric contains only name and namespace labels.\nTo include additional annotations provide a list of resource names in their plural form and Kubernetes\nannotation keys you would like to allow for them (Example: '=namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...)'.\nA single '*' can be provided per resource instead to allow any annotations, but that has\nsevere performance implications (Example: '=pods=[*]').",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricAnnotationsAllowList",
      "type": "array"
    },
    "metricDenylist": {
      "description": "Comma-separated list of metrics not to be enabled.\nThis list comprises of exact metric names and/or regex patterns.\nThe allowlist and denylist are mutually exclusive.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricDenylist",
      "type": "array"
    },
    "metricLabelsAllowlist": {
      "description": "Comma-separated list of additional Kubernetes label keys that will be used in the resource's\nlabels metric. By default the metric contains only name and namespace labels.\nTo include additional labels, provide a list of resource names in their plural form and Kubernetes\nlabel keys you would like to allow for them (Example: '=namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...)'.\nA single '*' can be provided per resource instead to allow any labels, but that has\nsevere performance implications (Example: '=pods=[*]').",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricLabelsAllowlist",
      "type": "array"
    },
    "metricProcessingRules": {
      "description": "Rule blocks to apply to all metrics. Uses the [write_relabel_config block](https://grafana.com/docs/alloy/latest/reference/components/prometheus.remote_write/#write_relabel_config-block)\nof the prometheus.remote_write component. Format:\nwrite_relabel_config {\n  source_labels = [\"...\"]\n  action = \"...\"\n  ...\n}",
      "required": [],
      "title": "metricProcessingRules",
      "type": "string"
    },
    "metrics": {
      "additionalProperties": true,
      "description": "Settings for metrics collection",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to send metrics to the OTLP destination.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraMetricProcessingRules": {
          "description": "Rule blocks to be added to the prometheus.relabel component for MySQL metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "filters": {
          "additionalProperties": true,
          "description": "Apply a filter to metrics received via the OTLP or OTLP HTTP receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.filter/))",
          "properties": {
            "datapoint": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "datapoint",
              "type": "array"
            },
            "metric": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metric",
              "type": "array"
            }
          },
          "required": [],
          "title": "filters",
          "type": "object"
        },
        "maxCacheSize": {
          "description": "Sets the max_cache_size for prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "port": {
          "description": "The etcd metrics port number to scrape metrics from. Defined on the etcd pod with:\n`--listen-metrics-urls=http://127.0.0.1:2381`",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "portName": {
          "description": "Name of the port to scrape metrics from.",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "scrapeInterval": {
          "description": "How frequently to scrape metrics from Tempo.",
          "required": [],
          "title": "scrapeInterval",
          "type": "null"
        },
        "scrapeTimeout": {
          "description": "The timeout for scraping metrics from Tempo.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "target": {
          "description": "The Alloy component reference for sending metrics.\n@ section -- Metrics",
          "required": [],
          "title": "target",
          "type": "string"
        },
        "transforms": {
          "additionalProperties": true,
          "description": "Apply a transformation to metrics received via the OTLP or OTLP HTTP receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.transform/))",
          "properties": {
            "datapoint": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "datapoint",
              "type": "array"
            },
            "metric": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metric",
              "type": "array"
            },
            "resource": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "resource",
              "type": "array"
            }
          },
          "required": [],
          "title": "transforms",
          "type": "object"
        },
        "tuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "description": "Filter the list of metrics from Grafana Tempo to the minimal set required for the Grafana Tempo integration.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "tuning",
          "type": "object"
        }
      },
      "required": [],
      "title": "metrics",
      "type": "object"
    },
    "metricsTuning": {
      "additionalProperties": true,
      "description": "Adjustments to the scraped metrics to filter the amount of metrics sent to storage.",
      "properties": {
        "excludeMetrics": {
          "description": "Metrics to drop. Can use regular expressions.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeMetrics",
          "type": "array"
        },
        "includeMetrics": {
          "description": "Metrics to keep. Can use regular expressions.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "includeMetrics",
          "type": "array"
        }
      },
      "required": [],
      "title": "metricsTuning",
      "type": "object"
    },
    "mimir": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from Mimir",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "mimir",
      "type": "object"
    },
    "minBackoffPeriod": {
      "description": "The minimum backoff period for the Pyroscope destination.",
      "required": [],
      "title": "minBackoffPeriod",
      "type": "string"
    },
    "modelServer": {
      "additionalProperties": true,
      "description": "Configure kepler [model-server](https://sustainable-computing.io/kepler_model_server/get_started/)",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "additional annotions for the model server Deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "whether model-server and estimator sidecar should be deployed",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fullNameOverride": {
          "default": "",
          "required": [],
          "title": "fullNameOverride",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "",
              "description": "if empty, it will use the tag",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "pullPolicy": {
              "default": "Always",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/sustainable_computing_io/kepler_model_server",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.7.12",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "modelConfig": {
          "default": "NODE_COMPONENTS_ESTIMATOR=true\n",
          "required": [],
          "title": "modelConfig",
          "type": "string"
        },
        "nameOverride": {
          "default": "",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "additional annotions for the model server Pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "additional labels for the model server Pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "replicas of the model-server Deployment",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "resources for the model-server containers in the model-server Deployment",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "security context for the model-server container in the model-server Deployment",
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "port": {
              "default": 8100,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "sidecarResources": {
          "additionalProperties": true,
          "description": "resources for the estimator sidecar deployed in the kepler DaemonSet",
          "required": [],
          "title": "sidecarResources",
          "type": "object"
        }
      },
      "required": [],
      "title": "modelServer",
      "type": "object"
    },
    "mysql": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from MySQL",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "mysql",
      "type": "object"
    },
    "name": {
      "description": "The name for this Pyroscope destination.",
      "required": [],
      "title": "name",
      "type": "string"
    },
    "nameOverride": {
      "default": "",
      "description": "Overrides the chart's name. Used to change the infix in the resource names.",
      "required": [],
      "title": "nameOverride",
      "type": "null"
    },
    "namespaceAnnotations": {
      "additionalProperties": true,
      "description": "Log labels to set with values copied from the Kubernetes Namespace annotations.\nOnly used for \"filelog\" gather method.\nFormat: `\u003clog_label\u003e: \u003ckubernetes_namespace_annotation\u003e`.",
      "required": [],
      "title": "namespaceAnnotations",
      "type": "object"
    },
    "namespaceLabels": {
      "additionalProperties": true,
      "description": "Log labels to set with values copied from the Kubernetes Namespace labels.\nOnly used for \"filelog\" gather method.\nFormat: `\u003clog_label\u003e: \u003ckubernetes_namespace_label\u003e`.",
      "required": [],
      "title": "namespaceLabels",
      "type": "object"
    },
    "namespaceOverride": {
      "default": "",
      "description": "Overrides the chart's namespace.",
      "required": [],
      "title": "namespaceOverride",
      "type": "null"
    },
    "namespaces": {
      "description": "Only capture logs from pods in these namespaces (`[]` means all namespaces).",
      "items": {
        "required": []
      },
      "required": [],
      "title": "namespaces",
      "type": "array"
    },
    "namespacesDenylist": {
      "default": "",
      "description": "Comma-separated list of namespaces not to be enabled. If namespaces and namespaces-denylist are both set,\nonly namespaces that are excluded in namespaces-denylist will be used.",
      "required": [],
      "title": "namespacesDenylist",
      "type": "string"
    },
    "networkPolicies": {
      "additionalProperties": true,
      "description": "NetworkPolicies for ingress",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Specifies whether networkpolicies should be created",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraEgress": {
          "description": "Extra egress rule",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEgress",
          "type": "array"
        },
        "prometheus": {
          "additionalProperties": true,
          "description": "Internal Prometheus settings related to NetworkPolicies",
          "properties": {
            "labels": {
              "additionalProperties": true,
              "description": "Labels applied to the Prometheus server pod(s)",
              "properties": {
                "app.kubernetes.io/name": {
                  "default": "prometheus",
                  "required": [],
                  "title": "app.kubernetes.io/name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "namespace": {
              "default": "prometheus-system",
              "description": "Namespace where internal Prometheus is installed",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "port": {
              "default": 9090,
              "description": "Pod port of in-cluster Prometheus",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        }
      },
      "required": [],
      "title": "networkPolicies",
      "type": "object"
    },
    "networkPolicy": {
      "additionalProperties": true,
      "description": "Set a NetworkPolicy with:\ningress only on service.port or custom policy\nno egress permitted",
      "properties": {
        "egress": {
          "additionalProperties": true,
          "description": "If you enable a networkPolicy, you must add any redfish IP/Ports you list\negress:\n  - to:\n    - ipBlock:\n        cidr: 10.0.0.0/24\n    ports:\n      - protocol: TCP\n        port: 443",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "egress",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "flavor": {
          "default": "kubernetes",
          "description": "networkPolicy.flavor -- Flavor of the network policy to use.\nCan be:\n* kubernetes for networking.k8s.io/v1/NetworkPolicy\n* cilium     for cilium.io/v2/CiliumNetworkPolicy",
          "required": [],
          "title": "flavor",
          "type": "string"
        },
        "ingress": {
          "description": "Default allow all traffic because Alloy is so configurable\nIt is recommended to change this before deploying to production\nTo disable each policyType, set value to `null`",
          "items": {
            "additionalProperties": true,
            "properties": {
              "ports": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "port": {
                      "default": 9102,
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "required": [],
                      "title": "protocol",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "ports",
                "type": "array"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "ingress",
          "type": "array"
        },
        "policyTypes": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "policyTypes",
          "type": "array"
        }
      },
      "required": [],
      "title": "networkPolicy",
      "type": "object"
    },
    "noProxy": {
      "description": "Comma-separated list of IP addresses, CIDR notations, and domain names to exclude from proxying.",
      "required": [],
      "title": "noProxy",
      "type": "string"
    },
    "node-exporter": {
      "additionalProperties": true,
      "description": "Node Exporter metrics gathers hardware information about Linux nodes.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "properties": {
            "nodeAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "additionalProperties": true,
                  "properties": {
                    "nodeSelectorTerms": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "key": {
                                  "default": "eks.amazonaws.com/compute-type",
                                  "required": [],
                                  "title": "key",
                                  "type": "string"
                                },
                                "operator": {
                                  "default": "NotIn",
                                  "required": [],
                                  "title": "operator",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "required": [],
                                    "type": "string"
                                  },
                                  "required": [],
                                  "title": "values",
                                  "type": "array"
                                }
                              },
                              "required": [],
                              "type": "object"
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "nodeSelectorTerms",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nodeAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "bearerTokenFile": {
          "default": "",
          "description": "The bearer token file to use when scraping metrics from Node Exporter.",
          "required": [],
          "title": "bearerTokenFile",
          "type": "string"
        },
        "deploy": {
          "default": true,
          "description": "Deploy Node Exporter. Set to false if your cluster already has Node Exporter deployed.",
          "required": [],
          "title": "deploy",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "description": "Scrape metrics from Node Exporter.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Node Exporter.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Node Exporter metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/node_exporter",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Labels used to select the Node Exporter pods.",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "node-exporter",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Node Exporter prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "dropMetricsForFilesystem": {
              "description": "Drop metrics for the given filesystem types",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "dropMetricsForFilesystem",
              "type": "array"
            },
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from Node Exporter to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            },
            "useIntegrationAllowList": {
              "default": false,
              "description": "Filter the list of metrics from Node Exporter to the minimal set required for Kubernetes Monitoring as well as the Node Exporter integration.",
              "required": [],
              "title": "useIntegrationAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespace": {
          "default": "",
          "description": "Namespace to locate Node Exporter pods. If `deploy` is set to `true`, this will automatically be set to the\nnamespace where this Helm chart is deployed.",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "properties": {
            "k8s.grafana.com/logs.job": {
              "default": "integrations/node_exporter",
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape Node Exporter metrics.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Node Exporter metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "description": "Node Exporter service settings",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Disable the prometheus.io/scrape annotation",
              "properties": {
                "prometheus.io/scrape": {
                  "default": "false",
                  "required": [],
                  "title": "prometheus.io/scrape",
                  "type": "string"
                }
              },
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "portName": {
              "default": "metrics",
              "description": "The port name used by Node Exporter.",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "scheme": {
              "default": "http",
              "description": "The scrape scheme used by Node Exporter.",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "node-exporter",
      "type": "object"
    },
    "nodeAnnotations": {
      "additionalProperties": true,
      "description": "Log labels to set with values copied from the Kubernetes Node annotations.\nOnly used for \"filelog\" gather method.\nFormat: `\u003clog_label\u003e: \u003ckubernetes_node_annotation\u003e`.",
      "required": [],
      "title": "nodeAnnotations",
      "type": "object"
    },
    "nodeLabels": {
      "additionalProperties": true,
      "description": "Log labels to set with values copied from the Kubernetes Node labels.\nOnly used for \"filelog\" gather method.\nFormat: `\u003clog_label\u003e: \u003ckubernetes_node_label\u003e`.",
      "properties": {
        "availabilityZone": {
          "default": false,
          "description": "Whether or not to add the availability\\_zone label",
          "required": [],
          "title": "availabilityZone",
          "type": "boolean"
        },
        "instanceType": {
          "default": false,
          "description": "Whether or not to add the instance\\_type label",
          "required": [],
          "title": "instanceType",
          "type": "boolean"
        },
        "nodeArchitecture": {
          "default": false,
          "description": "Whether or not to add the node architecture label",
          "required": [],
          "title": "nodeArchitecture",
          "type": "boolean"
        },
        "nodeOS": {
          "default": false,
          "description": "Whether or not to add the os label",
          "required": [],
          "title": "nodeOS",
          "type": "boolean"
        },
        "nodePool": {
          "default": false,
          "description": "Whether or not to attach the nodepool label",
          "required": [],
          "title": "nodePool",
          "type": "boolean"
        },
        "nodeRole": {
          "default": false,
          "description": "Whether or not to add the node\\_role label",
          "required": [],
          "title": "nodeRole",
          "type": "boolean"
        },
        "region": {
          "default": false,
          "description": "Whether or not to add the region label",
          "required": [],
          "title": "region",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nodeLabels",
      "type": "object"
    },
    "nodeLogs": {
      "additionalProperties": true,
      "description": "Node logs.\nRequires a destination that supports logs.\nTo see the valid options, please see the [Node Logs feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-node-logs).",
      "properties": {
        "collector": {
          "default": "alloy-logs",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where logs will be sent. If empty, all logs-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering Kubernetes Cluster Node logs.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nodeLogs",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "# Assign a nodeSelector if operating a hybrid cluster\n#",
      "properties": {
        "kubernetes.io/os": {
          "default": "windows",
          "required": [],
          "title": "kubernetes.io/os",
          "type": "string"
        }
      },
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "nodeSelectors": {
      "additionalProperties": true,
      "description": "Filter the list of discovered nodes by labels. Only for the \"volumes\" gather method.\nExample: `nodeSelectors: { 'kubernetes.io/os': 'linux' }`",
      "required": [],
      "title": "nodeSelectors",
      "type": "object"
    },
    "openTelemetryConversion": {
      "additionalProperties": true,
      "description": "Settings for converting OpenTelemetry ecosystem metrics to Prometheus ecosystem metrics.",
      "properties": {
        "addMetricSuffixes": {
          "description": "Whether to add type and unit suffixes to metrics names.",
          "required": [],
          "title": "addMetricSuffixes",
          "type": "boolean"
        },
        "resourceToTelemetryConversion": {
          "description": "Whether to convert OTel resource attributes to Prometheus labels.",
          "required": [],
          "title": "resourceToTelemetryConversion",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "openTelemetryConversion",
      "type": "object"
    },
    "opencost": {
      "additionalProperties": true,
      "description": "OpenCost gathers cost metrics for the Kubernetes Cluster and the objects running inside.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity settings for pod assignment",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "carbonCost": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable carbon cost exposed in the API",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "carbonCost",
          "type": "object"
        },
        "cloudCost": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable cloud cost ingestion and querying, dependant on valid integration credentials",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "monthToDateInterval": {
              "default": 6,
              "description": "The number of standard runs before a Month-to-Date run occurs",
              "required": [],
              "title": "monthToDateInterval",
              "type": "integer"
            },
            "queryWindowDays": {
              "default": 7,
              "description": "The max number of days that any single query will be made to construct Cloud Costs",
              "required": [],
              "title": "queryWindowDays",
              "type": "integer"
            },
            "refreshRateHours": {
              "default": 6,
              "description": "Number of hours between each run of the Cloud Cost pipeline",
              "required": [],
              "title": "refreshRateHours",
              "type": "integer"
            },
            "runWindowDays": {
              "default": 3,
              "description": "Number of days into the past that a Cloud Cost standard run will query for",
              "required": [],
              "title": "runWindowDays",
              "type": "integer"
            }
          },
          "required": [],
          "title": "cloudCost",
          "type": "object"
        },
        "cloudIntegrationSecret": {
          "default": "",
          "description": "\u003cSECRET_NAME\u003e for the secret containing the Cloud Costs cloud-integration.json https://www.opencost.io/docs/configuration/#cloud-costs\nkubectl create secret generic \u003cSECRET_NAME\u003e --from-file=cloud-integration.json -n opencost",
          "required": [],
          "title": "cloudIntegrationSecret",
          "type": "string"
        },
        "customPricing": {
          "additionalProperties": true,
          "properties": {
            "configPath": {
              "default": "/tmp/custom-config",
              "description": "Path for the pricing configuration.",
              "required": [],
              "title": "configPath",
              "type": "string"
            },
            "configmapName": {
              "default": "custom-pricing-model",
              "description": "Customize the configmap name used for custom pricing",
              "required": [],
              "title": "configmapName",
              "type": "string"
            },
            "costModel": {
              "additionalProperties": true,
              "description": "More information about these values here: https://www.opencost.io/docs/configuration/on-prem#custom-pricing-using-the-opencost-helm-chart",
              "properties": {
                "CPU": {
                  "default": 1.25,
                  "required": [],
                  "title": "CPU",
                  "type": "number"
                },
                "GPU": {
                  "default": 0.95,
                  "required": [],
                  "title": "GPU",
                  "type": "number"
                },
                "RAM": {
                  "default": 0.5,
                  "required": [],
                  "title": "RAM",
                  "type": "number"
                },
                "description": {
                  "default": "Modified pricing configuration.",
                  "required": [],
                  "title": "description",
                  "type": "string"
                },
                "internetNetworkEgress": {
                  "default": 0.12,
                  "required": [],
                  "title": "internetNetworkEgress",
                  "type": "number"
                },
                "regionNetworkEgress": {
                  "default": 0.01,
                  "required": [],
                  "title": "regionNetworkEgress",
                  "type": "number"
                },
                "spotCPU": {
                  "default": 0.006655,
                  "required": [],
                  "title": "spotCPU",
                  "type": "number"
                },
                "spotRAM": {
                  "default": 0.000892,
                  "required": [],
                  "title": "spotRAM",
                  "type": "number"
                },
                "storage": {
                  "default": 0.25,
                  "required": [],
                  "title": "storage",
                  "type": "number"
                },
                "zoneNetworkEgress": {
                  "default": 0.01,
                  "required": [],
                  "title": "zoneNetworkEgress",
                  "type": "number"
                }
              },
              "required": [],
              "title": "costModel",
              "type": "object"
            },
            "createConfigmap": {
              "default": true,
              "description": "Configures the pricing model provided in the values file.",
              "required": [],
              "title": "createConfigmap",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enables custom pricing configuration",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "provider": {
              "default": "custom",
              "description": "Sets the provider type for the custom pricing file.",
              "required": [],
              "title": "provider",
              "type": "string"
            }
          },
          "required": [],
          "title": "customPricing",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Deploy and scrape OpenCost.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "exporter": {
          "additionalProperties": true,
          "properties": {
            "apiIngress": {
              "additionalProperties": true,
              "description": "FOO: BAR\nFor example, if accessing mimir directly and getting 401 Unauthorized\nPROMETHEUS_HEADER_X_SCOPE_ORGID: anonymous",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations for Ingress resource",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Ingress for OpenCost API",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hosts": {
                  "description": "kubernetes.io/tls-acme: \"true\"\nA list of host rules used to configure the Ingress",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "host": {
                        "default": "example.local",
                        "required": [],
                        "title": "host",
                        "type": "string"
                      },
                      "paths": {
                        "items": {
                          "additionalProperties": true,
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "Prefix",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "type": "object"
                        },
                        "required": [],
                        "title": "paths",
                        "type": "array"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "hosts",
                  "type": "array"
                },
                "ingressClassName": {
                  "default": "",
                  "description": "Ingress controller which implements the resource",
                  "required": [],
                  "title": "ingressClassName",
                  "type": "string"
                },
                "servicePort": {
                  "default": "http",
                  "description": "Redirect ingress to an extraPort defined on the service such as oauth-proxy",
                  "required": [],
                  "title": "servicePort",
                  "type": "string"
                },
                "tls": {
                  "description": "servicePort: oauth-proxy\nIngress TLS configuration",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "apiIngress",
              "type": "object"
            },
            "apiPort": {
              "default": 9003,
              "description": "API_PORT for the cost-model to listen on",
              "required": [],
              "title": "apiPort",
              "type": "integer"
            },
            "aws": {
              "additionalProperties": true,
              "properties": {
                "access_key_id": {
                  "default": "",
                  "description": "AWS secret key id",
                  "required": [],
                  "title": "access_key_id",
                  "type": "string"
                },
                "secret_access_key": {
                  "default": "",
                  "description": "AWS secret access key",
                  "required": [],
                  "title": "secret_access_key",
                  "type": "string"
                }
              },
              "required": [],
              "title": "aws",
              "type": "object"
            },
            "cloudProviderApiKey": {
              "default": "",
              "description": "debugPort: 40000 # for development purposes (debugging with delve) and not for production.\nThe GCP Pricing API requires a key. This is supplied just for evaluation.",
              "required": [],
              "title": "cloudProviderApiKey",
              "type": "string"
            },
            "collectorDataSource": {
              "additionalProperties": true,
              "description": "Collector DataSource collects cluster data without a dependency on Prometheus\nIt is recommended that persistence is enabled alongside it to preserve the state\nbetween pod restarts",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "networkPort": {
                  "default": 3001,
                  "description": "The port at which network pods are open to egress",
                  "required": [],
                  "title": "networkPort",
                  "type": "integer"
                },
                "retention10m": {
                  "default": 36,
                  "description": "The number of 10m intervals the Collector DataSource should maintain",
                  "required": [],
                  "title": "retention10m",
                  "type": "integer"
                },
                "retention1d": {
                  "default": 15,
                  "description": "The number of 1d intervals the Collector DataSource should maintain",
                  "required": [],
                  "title": "retention1d",
                  "type": "integer"
                },
                "retention1h": {
                  "default": 49,
                  "description": "The number of 1h intervals the Collector DataSource should maintain",
                  "required": [],
                  "title": "retention1h",
                  "type": "integer"
                },
                "scrapeInterval": {
                  "default": "30s",
                  "description": "define the interval at which the collector scrapes for data points (10s, 15s, 1m)",
                  "required": [],
                  "title": "scrapeInterval",
                  "type": "string"
                }
              },
              "required": [],
              "title": "collectorDataSource",
              "type": "object"
            },
            "command": {
              "description": "Optional command to override the default container command",
              "items": {
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "csv_path": {
              "default": "",
              "description": "Path of CSV file",
              "required": [],
              "title": "csv_path",
              "type": "string"
            },
            "defaultClusterId": {
              "default": "default-cluster",
              "description": "Default cluster ID to use if cluster_id is not set in Prometheus metrics.",
              "required": [],
              "title": "defaultClusterId",
              "type": "string"
            },
            "env": {
              "description": "List of additional environment variables to set in the container",
              "items": {
                "required": []
              },
              "required": [],
              "title": "env",
              "type": "array"
            },
            "extraArgs": {
              "description": "List of extra arguments for the command, e.g.: log-format=json",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "extraEnv": {
              "additionalProperties": true,
              "description": "Any extra environment variables you would like to pass on to the pod",
              "required": [],
              "title": "extraEnv",
              "type": "object"
            },
            "extraVolumeMounts": {
              "description": "A list of volume mounts to be added to the pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "description": "If clusterIdConfigmap is defined, use user-generated ConfigMap with key CLUSTER_ID as default cluster ID.\nThis overrides the above defaultClusterId. Ensure the ConfigMap exists and contains the required CLUSTER_ID key.\nclusterIdConfigmap: cluster-id-configmap",
              "properties": {
                "fullImageName": {
                  "default": "null",
                  "description": "Override the full image name for development purposes",
                  "required": [],
                  "title": "fullImageName",
                  "type": "null"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "Exporter container image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "ghcr.io",
                  "description": "Exporter container image registry",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "opencost/opencost",
                  "description": "Exporter container image name",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "1.117.6@sha256:6f1a0e6fe21559a77051e7b7f9e4ac6bc80277131492ae084e8365ada805af91",
                  "description": "Exporter container image tag",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": true,
              "description": "Liveness probe configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Whether probe is enabled",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "description": "Number of failures for probe to be considered failed",
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "description": "Number of seconds before probe is initiated",
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "description": "Probe path",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 20,
                  "description": "Probe frequency in seconds",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": true,
              "description": "Persistent volume claim for storing the data. eg: csv file",
              "properties": {
                "accessMode": {
                  "default": "",
                  "description": "Access mode for persistent volume",
                  "required": [],
                  "title": "accessMode",
                  "type": "string"
                },
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations for persistent volume",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "mountPath": {
                  "default": "/mnt/export",
                  "description": "The path that the PV will be mounted to the exporter at",
                  "required": [],
                  "title": "mountPath",
                  "type": "string"
                },
                "size": {
                  "default": "",
                  "description": "Size for persistent volume",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClass": {
                  "default": "",
                  "description": "Storage class for persistent volume",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "prometheusDataSource": {
              "additionalProperties": true,
              "properties": {
                "queryResolutionSeconds": {
                  "default": 300,
                  "description": "Set the resolution in second that prometheus queries will be performed at",
                  "required": [],
                  "title": "queryResolutionSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "prometheusDataSource",
              "type": "object"
            },
            "readinessProbe": {
              "additionalProperties": true,
              "description": "Readiness probe configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Whether probe is enabled",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "description": "Number of failures for probe to be considered failed",
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "description": "Number of seconds before probe is initiated",
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "description": "Probe path",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 10,
                  "description": "Probe frequency in seconds",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "replicas": {
              "default": 1,
              "description": "Number of OpenCost replicas to run",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "description": "CPU/Memory resource limits",
                  "properties": {
                    "memory": {
                      "default": "1Gi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "description": "CPU/Memory resource requests",
                  "properties": {
                    "cpu": {
                      "default": "10m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "55Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "The security options the container should be run with",
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "startupProbe": {
              "additionalProperties": true,
              "description": "Startup probe configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Whether probe is enabled",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 30,
                  "description": "Number of failures for probe to be considered failed",
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "description": "Number of seconds before probe is initiated",
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "description": "Probe path",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 5,
                  "description": "Probe frequency in seconds",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startupProbe",
              "type": "object"
            }
          },
          "required": [],
          "title": "exporter",
          "type": "object"
        },
        "extraContainers": {
          "description": "extra sidecars to add to the pod.  Useful for things like oauth-proxy for the UI",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for OpenCost.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for OpenCost. ([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no __meta* labels are present.",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/opencost",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Label matchers used to select the OpenCost service",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "opencost",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the prometheus.relabel component for OpenCost.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metrics": {
          "additionalProperties": true,
          "properties": {
            "config": {
              "additionalProperties": true,
              "properties": {
                "configmapName": {
                  "default": "custom-metrics",
                  "description": "Customize the configmap name used for metrics",
                  "required": [],
                  "title": "configmapName",
                  "type": "string"
                },
                "disabledMetrics": {
                  "description": "List of metrics to be disabled",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "disabledMetrics",
                  "type": "array"
                },
                "enabled": {
                  "default": false,
                  "description": "Enables creating the metrics.json configuration as a ConfigMap",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "config",
              "type": "object"
            },
            "kubeStateMetrics": {
              "additionalProperties": true,
              "properties": {
                "emitKsmV1Metrics": {
                  "default": "~",
                  "description": "(bool) Enable emission of KSM v1 metrics",
                  "required": [],
                  "title": "emitKsmV1Metrics",
                  "type": "null"
                },
                "emitKsmV1MetricsOnly": {
                  "default": "~",
                  "description": "(bool) Enable only emission of KSM v1 metrics that do not exist in KSM 2 by default",
                  "required": [],
                  "title": "emitKsmV1MetricsOnly",
                  "type": "null"
                },
                "emitNamespaceAnnotations": {
                  "default": "~",
                  "description": "(bool) Enable emission of namespace annotations",
                  "required": [],
                  "title": "emitNamespaceAnnotations",
                  "type": "null"
                },
                "emitPodAnnotations": {
                  "default": "~",
                  "description": "(bool) Enable emission of pod annotations",
                  "required": [],
                  "title": "emitPodAnnotations",
                  "type": "null"
                }
              },
              "required": [],
              "title": "kubeStateMetrics",
              "type": "object"
            },
            "serviceMonitor": {
              "additionalProperties": true,
              "properties": {
                "additionalLabels": {
                  "additionalProperties": true,
                  "description": "Additional labels to add to the ServiceMonitor",
                  "required": [],
                  "title": "additionalLabels",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Create ServiceMonitor resource for scraping metrics using PrometheusOperator",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "extraEndpoints": {
                  "description": "extra Endpoints to add to the ServiceMonitor.  Useful for scraping sidecars",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraEndpoints",
                  "type": "array"
                },
                "honorLabels": {
                  "default": true,
                  "description": "HonorLabels chooses the metric's labels on collisions with target labels",
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "metricRelabelings": {
                  "description": "MetricRelabelConfigs to apply to samples before ingestion",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "namespace": {
                  "default": "",
                  "description": "Specify if the ServiceMonitor will be deployed into a different namespace (blank deploys into same namespace as chart)",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "relabelings": {
                  "description": "RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scheme": {
                  "default": "http",
                  "description": "- port: oauth-metrics\n  path: /metrics\nHTTP scheme used for scraping. Defaults to `http`",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "scrapeInterval": {
                  "default": "30s",
                  "description": "Interval at which metrics should be scraped",
                  "required": [],
                  "title": "scrapeInterval",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "default": "10s",
                  "description": "Timeout after which the scrape is ended",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "TLS configuration for scraping metrics",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "metricsSource": {
          "default": "",
          "description": "The name of the metric destination where OpenCost will query for required metrics. Setting this will enable\nguided setup for required OpenCost parameters. To skip guided setup, set this to \"custom\".",
          "required": [],
          "title": "metricsSource",
          "type": "string"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from OpenCost to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for pod assignment",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "opencost": {
          "additionalProperties": true,
          "properties": {
            "carbonCost": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "carbonCost",
              "type": "object"
            },
            "cloudCost": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "cloudCost",
              "type": "object"
            },
            "exporter": {
              "additionalProperties": true,
              "properties": {
                "defaultClusterId": {
                  "default": "default-cluster",
                  "description": "Default cluster ID to use if cluster is not set in Prometheus metrics. It should match cluster.name.",
                  "required": [],
                  "title": "defaultClusterId",
                  "type": "string"
                },
                "extraEnv": {
                  "additionalProperties": true,
                  "properties": {
                    "CLOUD_PROVIDER_API_KEY": {
                      "default": "AIzaSyD29bGxmHAVEOBYtgd8sYM2gM2ekfxQX4U",
                      "description": "Trial API Key used only with GCP.\nSee https://www.opencost.io/docs/configuration/gcp-opencost for how to set for your environment",
                      "required": [],
                      "title": "CLOUD_PROVIDER_API_KEY",
                      "type": "string"
                    },
                    "CURRENT_CLUSTER_ID_FILTER_ENABLED": {
                      "default": "true",
                      "required": [],
                      "title": "CURRENT_CLUSTER_ID_FILTER_ENABLED",
                      "type": "string"
                    },
                    "PROM_CLUSTER_ID_LABEL": {
                      "default": "cluster",
                      "required": [],
                      "title": "PROM_CLUSTER_ID_LABEL",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "extraEnv",
                  "type": "object"
                }
              },
              "required": [],
              "title": "exporter",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": true,
              "properties": {
                "kubeStateMetrics": {
                  "additionalProperties": true,
                  "properties": {
                    "emitKsmV1Metrics": {
                      "default": false,
                      "required": [],
                      "title": "emitKsmV1Metrics",
                      "type": "boolean"
                    },
                    "emitKsmV1MetricsOnly": {
                      "default": true,
                      "required": [],
                      "title": "emitKsmV1MetricsOnly",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "kubeStateMetrics",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "properties": {
                "kubernetes.io/os": {
                  "default": "linux",
                  "required": [],
                  "title": "kubernetes.io/os",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "prometheus": {
              "additionalProperties": true,
              "properties": {
                "existingSecretName": {
                  "default": "",
                  "description": "The name of the secret containing the username and password for the metrics service. This must be in the same namespace as the OpenCost deployment.",
                  "required": [],
                  "title": "existingSecretName",
                  "type": "string"
                },
                "external": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "url": {
                      "default": "",
                      "description": "The URL for Prometheus queries. It should match externalServices.prometheus.host + \"/api/prom\"",
                      "required": [],
                      "title": "url",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "external",
                  "type": "object"
                },
                "internal": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "internal",
                  "type": "object"
                },
                "password_key": {
                  "default": "password",
                  "description": "The key for the password property in the secret.",
                  "required": [],
                  "title": "password_key",
                  "type": "string"
                },
                "username_key": {
                  "default": "username",
                  "description": "The key for the username property in the secret.",
                  "required": [],
                  "title": "username_key",
                  "type": "string"
                }
              },
              "required": [],
              "title": "prometheus",
              "type": "object"
            },
            "tolerations": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "effect": {
                    "default": "NoSchedule",
                    "required": [],
                    "title": "effect",
                    "type": "string"
                  },
                  "key": {
                    "default": "kubernetes.io/arch",
                    "required": [],
                    "title": "key",
                    "type": "string"
                  },
                  "operator": {
                    "default": "Equal",
                    "required": [],
                    "title": "operator",
                    "type": "string"
                  },
                  "value": {
                    "default": "arm64",
                    "required": [],
                    "title": "value",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "ui": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "ui",
              "type": "object"
            }
          },
          "required": [],
          "title": "opencost",
          "type": "object"
        },
        "platforms": {
          "additionalProperties": true,
          "properties": {
            "openshift": {
              "additionalProperties": true,
              "properties": {
                "createMonitoringClusterRoleBinding": {
                  "default": false,
                  "description": "OPTIONAL. The following configs only to be enabled when using a Prometheus instance already installed in the cluster.\nIf true, the helm chart will create a ClusterRoleBinding to grant the OpenCost ServiceAccount access to query Prometheus.",
                  "required": [],
                  "title": "createMonitoringClusterRoleBinding",
                  "type": "boolean"
                },
                "createMonitoringResourceReaderRoleBinding": {
                  "default": false,
                  "description": "If true, create a Role and RoleBinding to allow Prometheus to list and watch OpenCost resources.",
                  "required": [],
                  "title": "createMonitoringResourceReaderRoleBinding",
                  "type": "boolean"
                },
                "enablePromAccess": {
                  "default": false,
                  "description": "If true, enable internal prom access",
                  "required": [],
                  "title": "enablePromAccess",
                  "type": "boolean"
                },
                "enableSCC": {
                  "default": false,
                  "description": "If true, set Security Context Constraints on serviceaccount for read/write premissions",
                  "required": [],
                  "title": "enableSCC",
                  "type": "boolean"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable OpenShift specific configurations",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "monitoringServiceAccountName": {
                  "default": "prometheus-k8s",
                  "description": "Name of the Prometheus serviceaccount to bind to the Resource Reader Role Binding.",
                  "required": [],
                  "title": "monitoringServiceAccountName",
                  "type": "string"
                },
                "monitoringServiceAccountNamespace": {
                  "default": "openshift-monitoring",
                  "description": "Namespace of the Prometheus serviceaccount to bind to the Resource Reader Role Binding.",
                  "required": [],
                  "title": "monitoringServiceAccountNamespace",
                  "type": "string"
                }
              },
              "required": [],
              "title": "openshift",
              "type": "object"
            }
          },
          "required": [],
          "title": "platforms",
          "type": "object"
        },
        "prometheus": {
          "additionalProperties": true,
          "properties": {
            "amp": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Use Amazon Managed Service for Prometheus (AMP)",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "workspaceId": {
                  "default": "",
                  "description": "Workspace ID for AMP",
                  "required": [],
                  "title": "workspaceId",
                  "type": "string"
                }
              },
              "required": [],
              "title": "amp",
              "type": "object"
            },
            "bearer_token": {
              "default": "",
              "description": "Prometheus Bearer token",
              "required": [],
              "title": "bearer_token",
              "type": "string"
            },
            "bearer_token_key": {
              "default": "DB_BEARER_TOKEN",
              "required": [],
              "title": "bearer_token_key",
              "type": "string"
            },
            "existingSecretName": {
              "default": "~",
              "description": "Existing secret name that contains credentials for Prometheus",
              "required": [],
              "title": "existingSecretName",
              "type": "null"
            },
            "external": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Use external Prometheus (eg. Grafana Cloud)",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "url": {
                  "default": "https://prometheus.example.com/prometheus",
                  "description": "External Prometheus url",
                  "required": [],
                  "title": "url",
                  "type": "string"
                }
              },
              "required": [],
              "title": "external",
              "type": "object"
            },
            "insecureSkipVerify": {
              "default": false,
              "description": "Whether to disable SSL certificate verification",
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            },
            "internal": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Use in-cluster Prometheus",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "namespaceName": {
                  "default": "prometheus-system",
                  "description": "Namespace of in-cluster Prometheus",
                  "required": [],
                  "title": "namespaceName",
                  "type": "string"
                },
                "path": {
                  "default": "",
                  "description": "Path to access the Prometheus API, this is neccesary if the Prometheus server is behind a reverse proxy(mimir) or has a different path.",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": 80,
                  "description": "Service port of in-cluster Prometheus",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "scheme": {
                  "default": "http",
                  "description": "Scheme to use for in-cluster Prometheus",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "serviceName": {
                  "default": "prometheus-server",
                  "description": "Service name of in-cluster Prometheus",
                  "required": [],
                  "title": "serviceName",
                  "type": "string"
                }
              },
              "required": [],
              "title": "internal",
              "type": "object"
            },
            "kubeRBACProxy": {
              "default": false,
              "description": "If true, opencost will use kube-rbac-proxy to authenticate with in cluster Prometheus for openshift",
              "required": [],
              "title": "kubeRBACProxy",
              "type": "boolean"
            },
            "password": {
              "default": "",
              "description": "Prometheus Basic auth password",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "password_key": {
              "default": "DB_BASIC_AUTH_PW",
              "description": "Key in the secret that references the password",
              "required": [],
              "title": "password_key",
              "type": "string"
            },
            "secret_name": {
              "default": "~",
              "description": "Secret name that contains credentials for Prometheus",
              "required": [],
              "title": "secret_name",
              "type": "null"
            },
            "thanos": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "external": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "url": {
                      "default": "https://thanos-query.example.com/thanos",
                      "required": [],
                      "title": "url",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "external",
                  "type": "object"
                },
                "internal": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "namespaceName": {
                      "default": "opencost",
                      "required": [],
                      "title": "namespaceName",
                      "type": "string"
                    },
                    "port": {
                      "default": 10901,
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "scheme": {
                      "default": "http",
                      "required": [],
                      "title": "scheme",
                      "type": "string"
                    },
                    "serviceName": {
                      "default": "my-thanos-query",
                      "required": [],
                      "title": "serviceName",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "internal",
                  "type": "object"
                },
                "maxSourceResolution": {
                  "default": "",
                  "required": [],
                  "title": "maxSourceResolution",
                  "type": "string"
                },
                "queryOffset": {
                  "default": "",
                  "required": [],
                  "title": "queryOffset",
                  "type": "string"
                }
              },
              "required": [],
              "title": "thanos",
              "type": "object"
            },
            "username": {
              "default": "",
              "description": "Prometheus Basic auth username",
              "required": [],
              "title": "username",
              "type": "string"
            },
            "username_key": {
              "default": "DB_BASIC_AUTH_USERNAME",
              "description": "Key in the secret that references the username",
              "required": [],
              "title": "username_key",
              "type": "string"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "retention1d": {
          "default": 15,
          "required": [],
          "title": "retention1d",
          "type": "integer"
        },
        "retention1h": {
          "default": 49,
          "required": [],
          "title": "retention1h",
          "type": "integer"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from Kepler.\nOverrides global.scrapeInterval.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping OpenCost metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "sigV4Proxy": {
          "additionalProperties": true,
          "properties": {
            "extraEnv": {
              "default": "",
              "description": "role_arn: arn:aws:iam::\u003caccount\u003e:role/role-name # The AWS IAM role to assume.",
              "required": [],
              "title": "extraEnv",
              "type": "null"
            },
            "host": {
              "default": "aps-workspaces.us-west-2.amazonaws.com",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "image": {
              "default": "public.ecr.aws/aws-observability/aws-sigv4-proxy:latest",
              "required": [],
              "title": "image",
              "type": "string"
            },
            "imagePullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "imagePullPolicy",
              "type": "string"
            },
            "name": {
              "default": "aps",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "port": {
              "default": 8005,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "region": {
              "default": "us-west-2",
              "required": [],
              "title": "region",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "description": "- name: AWS_ACCESS_KEY_ID\n  value: \u003caccess_key\u003e\n- name: AWS_SECRET_ACCESS_KEY\n  value: \u003csecret_key\u003e",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "limits:\n  cpu: 200m\n  memory: 500Mi\nrequests:\n  cpu: 20m\n  memory: 32Mi",
              "required": [],
              "title": "securityContext",
              "type": "object"
            }
          },
          "required": [],
          "title": "sigV4Proxy",
          "type": "object"
        },
        "tolerations": {
          "description": "Toleration labels for pod assignment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Assign custom TopologySpreadConstraints rules",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "ui": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable OpenCost UI",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraEnv": {
              "description": "A list of environment variables to be added to the pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnv",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "A list of volume mounts to be added to the pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "fullImageName": {
                  "default": "null",
                  "description": "Override the full image name for development purposes",
                  "required": [],
                  "title": "fullImageName",
                  "type": "null"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "UI container image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "ghcr.io",
                  "description": "UI container image registry",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "opencost/opencost-ui",
                  "description": "UI container image name",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "1.117.6@sha256:fd26f004b2b2565e22240fc2a9f6adb078fdb4de3fc1a1b16c611a3c3b80683e",
                  "description": "UI container image tag",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "ingress": {
              "additionalProperties": true,
              "description": "Set the model fqdn to use for the upstream\nmodelFqdn: opencost.opencost.svc.cluster.local:9003",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations for Ingress resource",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Ingress for OpenCost UI",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hosts": {
                  "description": "kubernetes.io/tls-acme: \"true\"\nA list of host rules used to configure the Ingress",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "host": {
                        "default": "example.local",
                        "required": [],
                        "title": "host",
                        "type": "string"
                      },
                      "paths": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "paths",
                        "type": "array"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "hosts",
                  "type": "array"
                },
                "ingressClassName": {
                  "default": "",
                  "description": "Ingress controller which implements the resource",
                  "required": [],
                  "title": "ingressClassName",
                  "type": "string"
                },
                "servicePort": {
                  "default": "http-ui",
                  "description": "Redirect ingress to an extraPort defined on the service such as oauth-proxy",
                  "required": [],
                  "title": "servicePort",
                  "type": "string"
                },
                "tls": {
                  "description": "servicePort: oauth-proxy\nIngress TLS configuration",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "ingress",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": true,
              "description": "Liveness probe configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Whether probe is enabled",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "description": "Number of failures for probe to be considered failed",
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 30,
                  "description": "Number of seconds before probe is initiated",
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "description": "Probe path",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 10,
                  "description": "Probe frequency in seconds",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "readinessProbe": {
              "additionalProperties": true,
              "description": "Readiness probe configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Whether probe is enabled",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "description": "Number of failures for probe to be considered failed",
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 30,
                  "description": "Number of seconds before probe is initiated",
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "path": {
                  "default": "/healthz",
                  "description": "Probe path",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "periodSeconds": {
                  "default": 10,
                  "description": "Probe frequency in seconds",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "description": "CPU/Memory resource limits",
                  "properties": {
                    "memory": {
                      "default": "1Gi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "description": "CPU/Memory resource requests",
                  "properties": {
                    "cpu": {
                      "default": "10m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "55Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "route": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations for Ingress resource",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "OpenShift route for OpenCost UI",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "host": {
                  "default": "example.local",
                  "description": "haproxy.router.openshift.io/timeout: 1m",
                  "required": [],
                  "title": "host",
                  "type": "string"
                },
                "path": {
                  "default": "",
                  "required": [],
                  "title": "path",
                  "type": "null"
                },
                "targetPort": {
                  "default": "http-ui",
                  "description": "Redirect ingress to an extraPort defined on the service such as oauth-proxy",
                  "required": [],
                  "title": "targetPort",
                  "type": "string"
                },
                "tls": {
                  "description": "targetPort: oauth-proxy\nIngress TLS configuration",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "route",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "The security options the container should be run with",
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "uiPath": {
              "default": "/",
              "description": "Base path for serving the UI.\nRequires building a custom image using the build argument \"ui_path\".",
              "required": [],
              "title": "uiPath",
              "type": "string"
            },
            "uiPort": {
              "default": 9090,
              "description": "used in the default.nginx.conf if you want to switch for using with Docker\napiServer: 0.0.0.0",
              "required": [],
              "title": "uiPort",
              "type": "integer"
            },
            "useDefaultFqdn": {
              "default": false,
              "description": "set to true to set upstream to use \u003cservice\u003e.\u003cnamespace\u003e.svc.cluster.local instead of just \u003cservice\u003e.\u003cnamespace\u003e",
              "required": [],
              "title": "useDefaultFqdn",
              "type": "boolean"
            },
            "useIPv6": {
              "default": true,
              "description": "Set to true to use IPv6",
              "required": [],
              "title": "useIPv6",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "ui",
          "type": "object"
        },
        "updateCaTrust": {
          "additionalProperties": true,
          "properties": {
            "caCertsSecret": {
              "default": "ca-certs-secret",
              "required": [],
              "title": "caCertsSecret",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "resources": {
              "additionalProperties": true,
              "description": "caCertsConfig: ca-certs-config  # The name of the ConfigMap containing the CA trust configuration.",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "# Security context settings for the init container.",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 0,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": false,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 0,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            }
          },
          "required": [],
          "title": "updateCaTrust",
          "type": "object"
        }
      },
      "required": [],
      "title": "opencost",
      "type": "object"
    },
    "ownNamespaceOnly": {
      "default": false,
      "description": "Restrict the Alloy Operator to its own namespace only. Overrides the `namespaces` setting.",
      "required": [],
      "title": "ownNamespaceOnly",
      "type": "boolean"
    },
    "pdb": {
      "additionalProperties": true,
      "description": "PodDisruptionBudget for high availability",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": "~",
          "description": "Maximum number of pods that can be unavailable after the eviction",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "minAvailable": {
          "default": "~",
          "description": "Minimum number of pods that must be available after the eviction",
          "required": [],
          "title": "minAvailable",
          "type": "null"
        }
      },
      "required": [],
      "title": "pdb",
      "type": "object"
    },
    "plugins": {
      "additionalProperties": true,
      "properties": {
        "configs": {
          "default": "",
          "description": "leave this commented to always download most recent version of plugins\nversion: \u003cINSERT_SPECIFIC_PLUGINS_VERSION\u003e",
          "required": [],
          "title": "configs",
          "type": "null"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "folder": {
          "default": "/opt/opencost/plugin",
          "required": [],
          "title": "folder",
          "type": "string"
        },
        "install": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fullImageName": {
              "default": "curlimages/curl:latest",
              "required": [],
              "title": "fullImageName",
              "type": "string"
            },
            "securityContext": {
              "additionalProperties": true,
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "properties": {
                    "drop": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1000,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            }
          },
          "required": [],
          "title": "install",
          "type": "object"
        }
      },
      "required": [],
      "title": "plugins",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to windows exporter pods",
      "properties": {
        "cluster-autoscaler.kubernetes.io/safe-to-evict": {
          "default": "true",
          "description": "Fix for very slow GKE cluster upgrades",
          "required": [],
          "title": "cluster-autoscaler.kubernetes.io/safe-to-evict",
          "type": "string"
        }
      },
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podAutomountServiceAccountToken": {
      "default": true,
      "description": " Enable automounting of service account token at the pod level",
      "required": [],
      "title": "podAutomountServiceAccountToken",
      "type": "boolean"
    },
    "podDisruptionBudget": {
      "additionalProperties": true,
      "description": "Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
      "required": [],
      "title": "podDisruptionBudget",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "Extra labels to be added to windows exporter pods",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podLogs": {
      "additionalProperties": true,
      "description": "Pod logs.\nRequires a destination that supports logs.\nTo see the valid options, please see the [Pod Logs feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-pod-logs).",
      "properties": {
        "collector": {
          "default": "alloy-logs",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where logs will be sent. If empty, all logs-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering Kubernetes Pod logs.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "podLogs",
      "type": "object"
    },
    "podLogsViaKubernetesApi": {
      "additionalProperties": true,
      "description": "Pod logs via Kubernetes API.\nRequires a destination that supports logs.\nTo see the valid options, please see the [Pod Logs via Kubernetes API feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-pod-logs-via-kubernetes-api).",
      "properties": {
        "collector": {
          "default": "alloy-logs",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where logs will be sent. If empty, all logs-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering Kubernetes Pod logs.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "podLogsViaKubernetesApi",
      "type": "object"
    },
    "podMonitors": {
      "additionalProperties": true,
      "description": "Prometheus Operator PodMonitors",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable discovery of Prometheus Operator PodMonitor objects.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to not look for PodMonitor objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.operator.podmonitors component for PodMonitors.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nThe relabelings defined in the PodMonitor object are applied first, then these relabelings are applied.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for PodMonitor objects.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "labelExpressions": {
          "description": "Complex label selectors to filter which PodMonitor objects to use.\nExample: `[{key: \"app.kubernetes.io/name\", operator: \"NotIn\", values: [\"secret-app\", \"admin-app\"]}]`",
          "items": {
            "required": []
          },
          "required": [],
          "title": "labelExpressions",
          "type": "array"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Label selectors to filter which PodMonitor objects to use.\nExample: `app.kubernetes.io/name: my-app`",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for cadvisor prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespaces": {
          "description": "Which namespaces to look for PodMonitor objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "scrapeInterval": {
          "default": "",
          "description": "The default interval between scraping targets. Used as the default if the target resource doesn’t provide a\nscrape interval.\nOverrides global.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The default timeout for scrape requests. Used as the default if the target resource doesn’t provide a scrape\ntimeout.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "podMonitors",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": true,
      "description": "Holds pod-level security attributes and common container settings",
      "properties": {
        "fsGroup": {
          "default": 1000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        },
        "seccompProfile": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seccompProfile",
          "type": "object"
        }
      },
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "pods": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable discovering Pods with annotations.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Filter the list of discovered Pods by labels.\nExample: `labelSelectors: { 'app': 'myapp' }` will only discover Pods with the label `app=myapp`.\nExample: `labelSelectors: { 'app': ['myapp', 'myotherapp'] }` will only discover Pods with the label `app=myapp` or `app=myotherapp`.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Add labels to metrics from discovered Pods. Runs during discovery, so __meta_ labels are available. See the\n[documentation](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.kubernetes/#pod-role)\nfor the full list of meta labels.",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "staticLabels": {
          "additionalProperties": true,
          "description": "Metric labels to set with static data for discovered Pods.",
          "required": [],
          "title": "staticLabels",
          "type": "object"
        },
        "staticLabelsFrom": {
          "additionalProperties": true,
          "description": "Static labels to set on metrics from discovered Pods, not quoted so it can reference config components.",
          "required": [],
          "title": "staticLabelsFrom",
          "type": "object"
        }
      },
      "required": [],
      "title": "pods",
      "type": "object"
    },
    "port": {
      "default": 4040,
      "description": "Port number on which the server listens for new connections.",
      "required": [],
      "title": "port",
      "type": "integer"
    },
    "pprof": {
      "additionalProperties": true,
      "properties": {
        "annotationSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod annotations.\nExample: `color: \"green\"` will select pods with the annotation `color=\"green\"`.\nExample with multiple values: `color: [\"blue\", \"green\"]` will select pods with the annotation `color=\"blue\"` or\n`color=\"green\"`.",
          "required": [],
          "title": "annotationSelectors",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Configure the annotations that will control how the pprof targets are discovered and how profiles are scraped.\nAll annotations will be `\u003cprefix\u003e/\u003ctype\u003e.\u003caction\u003e`, for example, to \"enable\" scraping of CPU profiles, set the\nannotation `profiles.grafana.com/cpu.scrape: \"true\"` on the pod. To set the path for memory profiles, set the\nannotation `profiles.grafana.com/memory.path: \"/debug/pprof/mem\"` on the pod.",
          "properties": {
            "container": {
              "default": "container",
              "description": "The annotation action for choosing the container for scraping profiles of a given type.",
              "required": [],
              "title": "container",
              "type": "string"
            },
            "enable": {
              "default": "scrape",
              "description": "The annotation action for enabling or disabling scraping of profiles of a given type.",
              "required": [],
              "title": "enable",
              "type": "string"
            },
            "path": {
              "default": "path",
              "description": "The annotation action for choosing the path for scraping profiles of a given type.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "portName": {
              "default": "port_name",
              "description": "The annotation action for choosing the port name for scraping profiles of a given type.",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "portNumber": {
              "default": "port",
              "description": "The annotation action for choosing the port number for scraping profiles of a given type.",
              "required": [],
              "title": "portNumber",
              "type": "string"
            },
            "scheme": {
              "default": "scheme",
              "description": "The annotation action for choosing the scheme for scraping profiles of a given type.",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "bearerTokenFile": {
          "default": "/var/run/secrets/kubernetes.io/serviceaccount/token",
          "description": "The bearer token file to use when scraping profiles.",
          "required": [],
          "title": "bearerTokenFile",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Gather profiles by scraping pprof HTTP endpoints",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to exclude looking for pods.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for eBPF profile sources.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Select pods to profile based on pod labels.\nExample: `app.kubernetes.io/name: myapp` will select pods with the label `app.kubernetes.io/name=myapp`.\nExample with multiple values: `app.kubernetes.io/name: [myapp, myapp2]` will select pods with the label\n`app.kubernetes.io/name=myapp` or `app.kubernetes.io/name=myapp2`.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "namespaces": {
          "description": "Select pods to profile based on their namespaces.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "scrapeInterval": {
          "default": "15s",
          "description": "How frequently to collect profiles.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "18s",
          "description": "Timeout for collecting profiles.\nMust be larger than the scrape interval.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "types": {
          "additionalProperties": true,
          "description": "Profile types to gather",
          "properties": {
            "block": {
              "default": true,
              "required": [],
              "title": "block",
              "type": "boolean"
            },
            "cpu": {
              "default": true,
              "required": [],
              "title": "cpu",
              "type": "boolean"
            },
            "fgprof": {
              "default": true,
              "required": [],
              "title": "fgprof",
              "type": "boolean"
            },
            "godeltaprof_block": {
              "default": false,
              "required": [],
              "title": "godeltaprof_block",
              "type": "boolean"
            },
            "godeltaprof_memory": {
              "default": false,
              "required": [],
              "title": "godeltaprof_memory",
              "type": "boolean"
            },
            "godeltaprof_mutex": {
              "default": false,
              "required": [],
              "title": "godeltaprof_mutex",
              "type": "boolean"
            },
            "goroutine": {
              "default": true,
              "required": [],
              "title": "goroutine",
              "type": "boolean"
            },
            "memory": {
              "default": true,
              "required": [],
              "title": "memory",
              "type": "boolean"
            },
            "mutex": {
              "default": true,
              "required": [],
              "title": "mutex",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "types",
          "type": "object"
        }
      },
      "required": [],
      "title": "pprof",
      "type": "object"
    },
    "preset": {
      "default": "application",
      "description": "Preconfigures some default properties for network or application observability.\nAccepted values are \"network\" or \"application\".",
      "required": [],
      "title": "preset",
      "type": "string"
    },
    "priorityClassName": {
      "default": "~",
      "description": " Pod priority",
      "required": [],
      "title": "priorityClassName",
      "type": "null"
    },
    "privileged": {
      "default": true,
      "description": "If set to false, deploys an unprivileged / less privileged setup.",
      "required": [],
      "title": "privileged",
      "type": "boolean"
    },
    "probes": {
      "additionalProperties": true,
      "description": "Prometheus Operator Probes",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable discovery of Prometheus Operator Probe objects.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to not look for Probe objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.operator.probes component for Probes.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nThe relabelings defined in the PodMonitor object are applied first, then these relabelings are applied.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Probe objects.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "labelExpressions": {
          "description": "Complex label selectors to filter which Probe objects to use.\nExample: `[{key: \"app.kubernetes.io/name\", operator: \"NotIn\", values: [\"secret-app\", \"admin-app\"]}]`",
          "items": {
            "required": []
          },
          "required": [],
          "title": "labelExpressions",
          "type": "array"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Label selectors to filter which Probe objects to use.\nExample: `app.kubernetes.io/name: my-app`",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for cadvisor prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespaces": {
          "description": "Which namespaces to look for Probe objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "scrapeInterval": {
          "default": "",
          "description": "The default interval between scraping targets. Used as the default if the target resource doesn’t provide a\nscrape interval.\nOverrides global.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The default timeout for scrape requests. Used as the default if the target resource doesn’t provide a scrape\ntimeout.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "probes",
      "type": "object"
    },
    "processors": {
      "additionalProperties": true,
      "description": "Processors to apply to the data before delivering it to its destination.",
      "properties": {
        "attributes": {
          "additionalProperties": true,
          "properties": {
            "actions": {
              "description": "Attribute processor actions\nFormat: { key: \"\", value: \"\", action: \"\", pattern: \"\", fromAttribute: \"\", fromContext: \"\", convertedType: \"\" }\nCan also use `valueFrom` instead of value to use a raw reference.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "actions",
              "type": "array"
            }
          },
          "required": [],
          "title": "attributes",
          "type": "object"
        },
        "batch": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "description": "Whether to use a batch processor.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxSize": {
              "default": 0,
              "description": "Maximum number of spans, metric data points, or log records to send in a single batch. This number must be\ngreater than or equal to the `size` setting. If set to 0, the batch processor will not enforce a maximum size.",
              "required": [],
              "title": "maxSize",
              "type": "integer"
            },
            "size": {
              "default": 8192,
              "description": "Number of spans, metric data points, or log records after which a batch will be sent regardless of the timeout.\nThis setting acts as a trigger and does not affect the size of the batch. If you need to enforce batch size limit,\nuse `maxSize`.",
              "required": [],
              "title": "size",
              "type": "integer"
            },
            "timeout": {
              "default": "2s",
              "description": "How long to wait before flushing the batch.",
              "required": [],
              "title": "timeout",
              "type": "string"
            }
          },
          "required": [],
          "title": "batch",
          "type": "object"
        },
        "filter": {
          "additionalProperties": true,
          "description": "Filter processor settings.\nTo set individual filters, use `metrics.filters`, `logs.filters`, or `traces.filters`.",
          "properties": {
            "errorMode": {
              "default": "ignore",
              "description": "How to react to errors if they occur while processing a statement. Valid options are \"ignore\", \"silent\", and\n\"propagate\".",
              "required": [],
              "title": "errorMode",
              "type": "string"
            }
          },
          "required": [],
          "title": "filter",
          "type": "object"
        },
        "filters": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "description": "Enable the filter processor. Any rules that evaluate to true will drop the matching telemetry data.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "errorMode": {
              "description": "How to react to errors if they occur while processing a statement. Valid options are \"ignore\", \"silent\", and\n\"propagate\".",
              "required": [],
              "title": "errorMode",
              "type": "string"
            },
            "logs": {
              "additionalProperties": true,
              "description": "Log filters",
              "properties": {
                "logRecord": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "logRecord",
                  "type": "array"
                }
              },
              "required": [],
              "title": "logs",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": true,
              "description": "Metric filters",
              "properties": {
                "datapoint": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "datapoint",
                  "type": "array"
                },
                "metric": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metric",
                  "type": "array"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "traces": {
              "additionalProperties": true,
              "description": "Trace filters",
              "properties": {
                "span": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "span",
                  "type": "array"
                },
                "spanevent": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "spanevent",
                  "type": "array"
                }
              },
              "required": [],
              "title": "traces",
              "type": "object"
            }
          },
          "required": [],
          "title": "filters",
          "type": "object"
        },
        "interval": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Utilize an interval processor to aggregate metrics and periodically forward the latest values to the next\ncomponent in the pipeline.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "60s",
              "description": "The interval at which to emit aggregated metrics.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "passthrough": {
              "additionalProperties": true,
              "properties": {
                "gauge": {
                  "default": false,
                  "description": "Determines whether gauge metrics should be passed through as they are or aggregated.",
                  "required": [],
                  "title": "gauge",
                  "type": "boolean"
                },
                "summary": {
                  "default": false,
                  "description": "Determines whether summary metrics should be passed through as they are or aggregated.",
                  "required": [],
                  "title": "summary",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "passthrough",
              "type": "object"
            }
          },
          "required": [],
          "title": "interval",
          "type": "object"
        },
        "k8sattributes": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "description": "Kubernetes annotations to extract and add to the attributes of the received telemetry data in the form of a\nlist of otelcol.processor.k8sattributes extract \u003e annotation blocks. See the\n[Alloy documentation](https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.k8sattributes/#annotation-block)\nfor details on how to configure annotation blocks.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "annotations",
              "type": "array"
            },
            "labels": {
              "description": "Kubernetes labels to extract and add to the attributes of the received telemetry data in the form of a list of\notelcol.processor.k8sattributes extract \u003e label blocks. See the\n[Alloy documentation](https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.k8sattributes/#extract-label-block)\nfor details on how to configure label blocks.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "labels",
              "type": "array"
            },
            "metadata": {
              "description": "Kubernetes metadata to extract and add to the attributes of the received telemetry data.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "metadata",
              "type": "array"
            },
            "passthrough": {
              "default": false,
              "description": "Pass through signals as-is, only adding a `k8s.pod.ip` resource attribute.",
              "required": [],
              "title": "passthrough",
              "type": "boolean"
            },
            "podAssociation": {
              "description": "Defines the rules on how to associate logs/traces/metrics to Pods.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "from": {
                    "default": "connection",
                    "required": [],
                    "title": "from",
                    "type": "string"
                  },
                  "name": {
                    "default": "k8s.pod.uid",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "podAssociation",
              "type": "array"
            }
          },
          "required": [],
          "title": "k8sattributes",
          "type": "object"
        },
        "memoryLimiter": {
          "additionalProperties": true,
          "properties": {
            "checkInterval": {
              "default": "1s",
              "description": "How often to check memory usage.",
              "required": [],
              "title": "checkInterval",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Whether to use a memory limiter.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "limit": {
              "default": "0MiB",
              "description": "Maximum amount of memory targeted to be allocated by the process heap.",
              "required": [],
              "title": "limit",
              "type": "string"
            }
          },
          "required": [],
          "title": "memoryLimiter",
          "type": "object"
        },
        "resourceAttributes": {
          "additionalProperties": true,
          "properties": {
            "removeList": {
              "description": "List of additional resource attribute names to remove from OTEL signals\nThese attributes will be deleted from the resource context for all signal types (metrics, logs, traces)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "removeList",
              "type": "array"
            },
            "useDefaultRemoveList": {
              "description": "Whether to use the default remove list for resource attributes",
              "required": [],
              "title": "useDefaultRemoveList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "resourceAttributes",
          "type": "object"
        },
        "resourceDetection": {
          "additionalProperties": true,
          "description": "Capture Resource attributes from various sources. You can add more than is listed here. For example:\nresourceDetection:\n  sourceType:\n    enabled: true\n    resourceAttributes:\n      host.name:\n        enabled: true",
          "properties": {
            "env": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable getting resource attributes from the OTEL_RESOURCE_ATTRIBUTES environment variable.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "env",
              "type": "object"
            },
            "kubernetesNode": {
              "additionalProperties": true,
              "properties": {
                "authType": {
                  "default": "serviceAccount",
                  "description": "The authentication method. This should not be changed.",
                  "required": [],
                  "title": "authType",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable getting resource attributes about the Kubernetes node from the API server.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "nodeFromEnvVar": {
                  "default": "K8S_NODE_NAME",
                  "description": "The name of an environment variable from which to retrieve the node name.",
                  "required": [],
                  "title": "nodeFromEnvVar",
                  "type": "string"
                }
              },
              "required": [],
              "title": "kubernetesNode",
              "type": "object"
            },
            "override": {
              "default": true,
              "description": "Configures whether existing resource attributes should be overridden or preserved.",
              "required": [],
              "title": "override",
              "type": "boolean"
            },
            "system": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable getting resource attributes from the host machine.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hostnameSources": {
                  "description": "The priority list of sources from which the hostname will be determined.\nOptions: [\"dns\", \"os\", \"cname\", \"lookup\"].",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "hostnameSources",
                  "type": "array"
                },
                "resourceAttributes": {
                  "additionalProperties": true,
                  "description": "The list of resource attributes to add for system resource detection. See the\n[Alloy documentation](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.resourcedetection/#system--resource_attributes)\nfor a list of available attributes.",
                  "required": [],
                  "title": "resourceAttributes",
                  "type": "object"
                }
              },
              "required": [],
              "title": "system",
              "type": "object"
            }
          },
          "required": [],
          "title": "resourceDetection",
          "type": "object"
        },
        "serviceGraphMetrics": {
          "additionalProperties": true,
          "properties": {
            "cacheLoop": {
              "description": "Configures how often to delete series which haven’t been updated.",
              "required": [],
              "title": "cacheLoop",
              "type": "string"
            },
            "collector": {
              "additionalProperties": true,
              "description": "Settings for the Alloy instance that will handle service graph metrics.",
              "properties": {
                "alloy": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "alloy",
                  "type": "object"
                },
                "controller": {
                  "additionalProperties": true,
                  "properties": {
                    "replicas": {
                      "required": [],
                      "title": "replicas",
                      "type": "integer"
                    },
                    "type": {
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "controller",
                  "type": "object"
                }
              },
              "required": [],
              "title": "collector",
              "type": "object"
            },
            "databaseNameAttribute": {
              "description": "The attribute name used to identify the database name from span attributes.\nDEPRECATED: Please use databaseNameAttributes instead. If this is provided, it will override\ndatabaseNameAttributes as the only attribute to used.",
              "required": [],
              "title": "databaseNameAttribute",
              "type": "string"
            },
            "databaseNameAttributes": {
              "description": "The attribute names used to identify the database name from span attributes.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "databaseNameAttributes",
              "type": "array"
            },
            "destinations": {
              "description": "The destinations where service graph metrics will be sent. If empty, all metrics-capable destinations will be used.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "destinations",
              "type": "array"
            },
            "dimensions": {
              "description": "A list of dimensions to add with the default dimensions.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "dimensions",
              "type": "array"
            },
            "enabled": {
              "description": "Generate service graph metrics from traces. This will deploy an additional Alloy\ninstance to handle service graph metrics generation. Traces sent to this destination will\nbe aumatically forwarded, using a load balancer component, to this Alloy instance.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "latencyHistogramBuckets": {
              "description": "Buckets for latency histogram metrics.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "latencyHistogramBuckets",
              "type": "array"
            },
            "metricsFlushInterval": {
              "description": "The interval at which metrics are flushed to downstream components.",
              "required": [],
              "title": "metricsFlushInterval",
              "type": "string"
            },
            "receiver": {
              "additionalProperties": true,
              "description": "The service graph otlp receiver configuration.",
              "properties": {
                "otlp": {
                  "additionalProperties": true,
                  "properties": {
                    "grpc": {
                      "additionalProperties": true,
                      "properties": {
                        "maxReceivedMessageSize": {
                          "required": [],
                          "title": "maxReceivedMessageSize",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "grpc",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "otlp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "receiver",
              "type": "object"
            },
            "storeExpirationLoop": {
              "description": "The time to expire old entries from the store periodically.",
              "required": [],
              "title": "storeExpirationLoop",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceGraphMetrics",
          "type": "object"
        },
        "tailSampling": {
          "additionalProperties": true,
          "properties": {
            "collector": {
              "additionalProperties": true,
              "description": "Settings for the Alloy instance that will handle tail sampling.",
              "properties": {
                "alloy": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "alloy",
                  "type": "object"
                },
                "controller": {
                  "additionalProperties": true,
                  "properties": {
                    "replicas": {
                      "required": [],
                      "title": "replicas",
                      "type": "integer"
                    },
                    "type": {
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "controller",
                  "type": "object"
                }
              },
              "required": [],
              "title": "collector",
              "type": "object"
            },
            "decisionCache": {
              "additionalProperties": true,
              "description": "The decision cache for the tail sampling. When you use decision_cache, configure it with a much higher value\nthan num_traces so decisions for trace IDs are kept longer than the span data for the trace.",
              "properties": {
                "nonSampledCacheSize": {
                  "description": "Configures amount of trace IDs to be kept in an LRU cache, persisting the \"drop\" decisions for traces that\nmay have already been released from memory. By default, the size is 0 and the cache is inactive.",
                  "required": [],
                  "title": "nonSampledCacheSize",
                  "type": "integer"
                },
                "sampledCacheSize": {
                  "description": "Configures amount of trace IDs to be kept in an LRU cache, persisting the \"keep\" decisions for traces that\nmay have already been released from memory. By default, the size is 0 and the cache is inactive.",
                  "required": [],
                  "title": "sampledCacheSize",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "decisionCache",
              "type": "object"
            },
            "decisionWait": {
              "description": "Wait time since the first span of a trace before making a sampling decision.",
              "required": [],
              "title": "decisionWait",
              "type": "string"
            },
            "enabled": {
              "description": "Apply tail sampling policies to the traces before delivering them to this destination. This will create an\nadditional Alloy instance to handle the tail sampling, and traces sent to this destination will be automatically\nforwarded, using a load balancer component, to the new sampling Alloy instance.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "expectedNewTracesPerSec": {
              "description": "Expected number of new traces (helps in allocating data structures).",
              "required": [],
              "title": "expectedNewTracesPerSec",
              "type": "integer"
            },
            "numTraces": {
              "description": " Determines the buffer size of the trace delete channel which is composed of trace IDs that are being deleted.\nDefault is 0, which means no buffer is used.",
              "required": [],
              "title": "numTraces",
              "type": "integer"
            },
            "policies": {
              "description": "Tail sampling policies to apply.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "policies",
              "type": "array"
            },
            "receiver": {
              "additionalProperties": true,
              "description": "The tail sampling otlp receiver configuration.",
              "properties": {
                "otlp": {
                  "additionalProperties": true,
                  "properties": {
                    "grpc": {
                      "additionalProperties": true,
                      "properties": {
                        "maxReceivedMessageSize": {
                          "required": [],
                          "title": "maxReceivedMessageSize",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "grpc",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "otlp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "receiver",
              "type": "object"
            }
          },
          "required": [],
          "title": "tailSampling",
          "type": "object"
        },
        "transform": {
          "additionalProperties": true,
          "description": "Transform processor settings.\nTo set individual transforms, use `metrics.transforms`, `logs.transforms`, or `traces.transforms`.",
          "properties": {
            "errorMode": {
              "default": "ignore",
              "description": "How to react to errors if they occur while processing a statement. Valid options are \"ignore\", \"silent\", and\n\"propagate\".",
              "required": [],
              "title": "errorMode",
              "type": "string"
            },
            "logs": {
              "additionalProperties": true,
              "description": "Log transforms",
              "properties": {
                "log": {
                  "description": "Log transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "log",
                  "type": "array"
                },
                "logFrom": {
                  "description": "Raw log transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "logFrom",
                  "type": "array"
                },
                "logToResource": {
                  "additionalProperties": true,
                  "description": "Promote certain log attributes to resource attributes. This is helpful for translating log data from Loki\nsources to OTLP format.\nFormat: `{ \u003clog attribute name\u003e: \u003cresource attribute name\u003e }`.\nWill not copy if the resource attribute already exists.",
                  "properties": {
                    "container": {
                      "required": [],
                      "title": "container",
                      "type": "string"
                    },
                    "cronjob": {
                      "required": [],
                      "title": "cronjob",
                      "type": "string"
                    },
                    "daemonset": {
                      "required": [],
                      "title": "daemonset",
                      "type": "string"
                    },
                    "deployment": {
                      "required": [],
                      "title": "deployment",
                      "type": "string"
                    },
                    "deployment_environment": {
                      "required": [],
                      "title": "deployment_environment",
                      "type": "string"
                    },
                    "deployment_environment_name": {
                      "required": [],
                      "title": "deployment_environment_name",
                      "type": "string"
                    },
                    "job_name": {
                      "required": [],
                      "title": "job_name",
                      "type": "string"
                    },
                    "namespace": {
                      "required": [],
                      "title": "namespace",
                      "type": "string"
                    },
                    "pod": {
                      "required": [],
                      "title": "pod",
                      "type": "string"
                    },
                    "replicaset": {
                      "required": [],
                      "title": "replicaset",
                      "type": "string"
                    },
                    "service_name": {
                      "required": [],
                      "title": "service_name",
                      "type": "string"
                    },
                    "service_namespace": {
                      "required": [],
                      "title": "service_namespace",
                      "type": "string"
                    },
                    "statefulset": {
                      "required": [],
                      "title": "statefulset",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "logToResource",
                  "type": "object"
                },
                "resource": {
                  "description": "Log resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resource",
                  "type": "array"
                },
                "resourceFrom": {
                  "description": "Raw log resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resourceFrom",
                  "type": "array"
                }
              },
              "required": [],
              "title": "logs",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": true,
              "description": "Metric transforms",
              "properties": {
                "datapoint": {
                  "description": "Metric datapoint transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "datapoint",
                  "type": "array"
                },
                "datapointFrom": {
                  "description": "Raw metric datapoint transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "datapointFrom",
                  "type": "array"
                },
                "datapointToResource": {
                  "additionalProperties": true,
                  "description": "Promote certain metric datapoint attributes to resource attributes. This is helpful for translating metric\ndata from Prometheus sources to OTLP format.\nFormat: `{ \u003cdatapoint attribute name\u003e: \u003cresource attribute name\u003e }`.\nWill not copy if the resource attribute already exists.",
                  "properties": {
                    "deployment_environment": {
                      "required": [],
                      "title": "deployment_environment",
                      "type": "string"
                    },
                    "deployment_environment_name": {
                      "required": [],
                      "title": "deployment_environment_name",
                      "type": "string"
                    },
                    "service_name": {
                      "required": [],
                      "title": "service_name",
                      "type": "string"
                    },
                    "service_namespace": {
                      "required": [],
                      "title": "service_namespace",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "datapointToResource",
                  "type": "object"
                },
                "metric": {
                  "description": "Metric transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metric",
                  "type": "array"
                },
                "metricFrom": {
                  "description": "Raw metric transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricFrom",
                  "type": "array"
                },
                "resource": {
                  "description": "Metric resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resource",
                  "type": "array"
                },
                "resourceFrom": {
                  "description": "Raw metric resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resourceFrom",
                  "type": "array"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "traces": {
              "additionalProperties": true,
              "description": "Trace transforms",
              "properties": {
                "resource": {
                  "description": "Trace resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resource",
                  "type": "array"
                },
                "resourceFrom": {
                  "description": "Raw trace resource transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "resourceFrom",
                  "type": "array"
                },
                "span": {
                  "description": "Trace span transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "span",
                  "type": "array"
                },
                "spanFrom": {
                  "description": "Raw trace span transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "spanFrom",
                  "type": "array"
                },
                "spanevent": {
                  "description": "Trace spanevent transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "spanevent",
                  "type": "array"
                },
                "spaneventFrom": {
                  "description": "Raw trace spanevent transforms",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "spaneventFrom",
                  "type": "array"
                }
              },
              "required": [],
              "title": "traces",
              "type": "object"
            }
          },
          "required": [],
          "title": "transform",
          "type": "object"
        }
      },
      "required": [],
      "title": "processors",
      "type": "object"
    },
    "profileProcessingRules": {
      "default": "",
      "description": "Rule blocks to be added to the pyroscope.relabel component for received profiles.\nThese relabeling rules are applied to profiles received by this feature.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/pyroscope/pyroscope.relabel/#rule))",
      "required": [],
      "title": "profileProcessingRules",
      "type": "string"
    },
    "profiles": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "description": "Enable sending profiles to this destination.\n@ section -- Profiles",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "target": {
          "description": "The Alloy component reference for sending profiles.\n@ section -- Profiles",
          "required": [],
          "title": "target",
          "type": "string"
        }
      },
      "required": [],
      "title": "profiles",
      "type": "object"
    },
    "profilesReceiver": {
      "additionalProperties": true,
      "description": "Profiles Receiver enables receiving profiles from applications.\nRequires a destination that supports profiles.\nTo see the valid options, please see the [Profiles Receiver feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-profiles-receiver).",
      "properties": {
        "collector": {
          "default": "alloy-receiver",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where profiles will be sent. If empty, all profiles-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering profiles from applications.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "profilesReceiver",
      "type": "object"
    },
    "profiling": {
      "additionalProperties": true,
      "description": "Profiling enables gathering profiles from applications.\nRequires a destination that supports profiles.\nTo see the valid options, please see the [Profiling feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-profiling).",
      "properties": {
        "collector": {
          "default": "alloy-profiles",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where profiles will be sent. If empty, all profiles-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering profiles from applications.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "profiling",
      "type": "object"
    },
    "prometheus": {
      "additionalProperties": true,
      "properties": {
        "monitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "apiVersion": {
              "default": "",
              "description": "# prometheus.monitor.apiVersion ApiVersion for the serviceMonitor Resource(defaults to \"monitoring.coreos.com/v1\")",
              "required": [],
              "title": "apiVersion",
              "type": "string"
            },
            "attachMetadata": {
              "additionalProperties": true,
              "description": "# Attach node metadata to discovered targets. Requires Prometheus v2.35.0 and above.\n#",
              "properties": {
                "node": {
                  "default": false,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "attachMetadata",
              "type": "object"
            },
            "basicAuth": {
              "additionalProperties": true,
              "required": [],
              "title": "basicAuth",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "http": {
              "additionalProperties": true,
              "description": "# kube-state-metrics endpoint",
              "properties": {
                "bearerTokenFile": {
                  "default": "",
                  "description": "# File to read bearer token for scraping targets",
                  "required": [],
                  "title": "bearerTokenFile",
                  "type": "string"
                },
                "bearerTokenSecret": {
                  "additionalProperties": true,
                  "description": "# Secret to mount to read bearer token for scraping targets. The secret needs\n# to be in the same namespace as the service monitor and accessible by the\n# Prometheus Operator",
                  "required": [],
                  "title": "bearerTokenSecret",
                  "type": "object"
                },
                "enableHttp2": {
                  "default": false,
                  "description": "# Whether to enable HTTP2 for servicemonitor",
                  "required": [],
                  "title": "enableHttp2",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scheme": {
                  "default": "",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "default": "",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "name: secret-name\nkey:  key-name",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "http",
              "type": "object"
            },
            "interval": {
              "default": "",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "metrics": {
              "additionalProperties": true,
              "description": "# selfMonitor endpoint",
              "properties": {
                "bearerTokenFile": {
                  "default": "",
                  "description": "# File to read bearer token for scraping targets",
                  "required": [],
                  "title": "bearerTokenFile",
                  "type": "string"
                },
                "bearerTokenSecret": {
                  "additionalProperties": true,
                  "description": "# Secret to mount to read bearer token for scraping targets. The secret needs\n# to be in the same namespace as the service monitor and accessible by the\n# Prometheus Operator",
                  "required": [],
                  "title": "bearerTokenSecret",
                  "type": "object"
                },
                "enableHttp2": {
                  "default": false,
                  "description": "# Whether to enable HTTP2 for servicemonitor",
                  "required": [],
                  "title": "enableHttp2",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scheme": {
                  "default": "",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "default": "",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "name: secret-name\nkey:  key-name",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "namespace": {
              "default": "",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "namespaceSelector": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "namespaceSelector",
              "type": "array"
            },
            "podTargetLabels": {
              "description": "List of pod labels to add to windows exporter metrics\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "podTargetLabels",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "10s",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "selectorOverride": {
              "additionalProperties": true,
              "description": "# Override serviceMonitor selector\n#",
              "required": [],
              "title": "selectorOverride",
              "type": "object"
            },
            "targetLabels": {
              "description": "List of target labels to add to node exporter metrics\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "monitor",
          "type": "object"
        },
        "podMonitor": {
          "additionalProperties": true,
          "description": "PodMonitor defines monitoring for a set of pods.\nref. https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#podmonitor\nUsing a PodMonitor may be preferred in some environments where there is very large number\nof Windows Exporter endpoints (1000+) behind a single service.\nThe PodMonitor is disabled by default. When switching from ServiceMonitor to PodMonitor,\nthe time series resulting from the configuration through PodMonitor may have different labels.\nFor instance, there will not be the service label any longer which might\naffect PromQL queries selecting that label.",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "Additional labels, e.g. setting a label for pod monitor selector as set in prometheus",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "apiVersion": {
              "default": "",
              "description": "apiVersion defaults to monitoring.coreos.com/v1.",
              "required": [],
              "title": "apiVersion",
              "type": "string"
            },
            "attachMetadata": {
              "additionalProperties": true,
              "description": "Attach node metadata to discovered targets. Requires Prometheus v2.35.0 and above.",
              "properties": {
                "node": {
                  "default": false,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "attachMetadata",
              "type": "object"
            },
            "authorization": {
              "additionalProperties": true,
              "description": "Authorization section for this endpoint.\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#safeauthorization",
              "required": [],
              "title": "authorization",
              "type": "object"
            },
            "basicAuth": {
              "additionalProperties": true,
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication.\nMore info: https://prometheus.io/docs/operating/configuration/#endpoint",
              "required": [],
              "title": "basicAuth",
              "type": "object"
            },
            "bearerTokenSecret": {
              "additionalProperties": true,
              "description": "Secret to mount to read bearer token for scraping targets.\nThe secret needs to be in the same namespace as the pod monitor and accessible by the Prometheus Operator.\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#secretkeyselector-v1-core",
              "required": [],
              "title": "bearerTokenSecret",
              "type": "object"
            },
            "enableHttp2": {
              "default": "",
              "description": "Whether to enable HTTP2. Default false.",
              "required": [],
              "title": "enableHttp2",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "filterRunning": {
              "default": "",
              "description": "Drop pods that are not running. (Failed, Succeeded).\nEnabled by default. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase",
              "required": [],
              "title": "filterRunning",
              "type": "string"
            },
            "followRedirects": {
              "default": "",
              "description": "FollowRedirects configures whether scrape requests follow HTTP 3xx redirects. Default false.",
              "required": [],
              "title": "followRedirects",
              "type": "string"
            },
            "honorLabels": {
              "default": true,
              "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
              "required": [],
              "title": "honorLabels",
              "type": "boolean"
            },
            "honorTimestamps": {
              "default": true,
              "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
              "required": [],
              "title": "honorTimestamps",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "Interval at which endpoints should be scraped. If not specified Prometheus' global scrape interval is used.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "",
              "description": "The label to use to retrieve the job name from. Defaults to label app.kubernetes.io/name.",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "Per-scrape limit on number of labels that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "Per-scrape limit on length of labels name that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "Per-scrape limit on length of labels value that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "MetricRelabelConfigs to apply to samples before ingestion.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "namespace": {
              "default": "",
              "description": "Namespace in which to deploy the pod monitor. Defaults to the release namespace.",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "oauth2": {
              "additionalProperties": true,
              "description": "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#oauth2",
              "required": [],
              "title": "oauth2",
              "type": "object"
            },
            "params": {
              "additionalProperties": true,
              "description": "Optional HTTP URL parameters",
              "required": [],
              "title": "params",
              "type": "object"
            },
            "path": {
              "default": "/metrics",
              "description": "Path to scrape metrics at.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "podTargetLabels": {
              "description": " release: kube-prometheus-stack\nPodTargetLabels transfers labels of the Kubernetes Pod onto the target.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "podTargetLabels",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "ProxyURL eg http://proxyserver:2195. Directs scrapes through proxy to this endpoint.",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds\nrelabelings for a few standard Kubernetes fields. The original scrape job's name\nis available via the __tmp_prometheus_job_name label.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "description": "Scheme/protocol to use for scraping.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "",
              "description": "Timeout after which the scrape is ended. If not specified, the Prometheus global scrape interval is used.",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "selectorOverride": {
              "additionalProperties": true,
              "description": "Override pod selector to select pod objects.",
              "required": [],
              "title": "selectorOverride",
              "type": "object"
            },
            "targetLimit": {
              "default": 0,
              "description": "TargetLimit defines a limit on the number of scraped targets that will be accepted.",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "TLS configuration to use when scraping the endpoint.",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "podMonitor",
          "type": "object"
        },
        "scrapeconfig": {
          "additionalProperties": true,
          "description": "# Create a scrapeConfig resource for scraping the kube-state-metrics service. Use this instead of serviceMonitor\n# to have more instances of kube-state-metrics safety.",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enableHttp2": {
              "default": false,
              "description": "# Whether to enable HTTP2 for scrapeconfig",
              "required": [],
              "title": "enableHttp2",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "# To avoid duplicate metrics, first disable the serviceMonitor creation via prometheus.monitor.enabled=false",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "honorLabels": {
              "default": true,
              "required": [],
              "title": "honorLabels",
              "type": "boolean"
            },
            "jobName": {
              "default": "kube-state-metrics",
              "required": [],
              "title": "jobName",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeInterval": {
              "default": "",
              "required": [],
              "title": "scrapeInterval",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "staticConfigLabels": {
              "additionalProperties": true,
              "description": "# StaticConfigLabels defines the labels to be used in the Prometheus static configuration for scraping.",
              "required": [],
              "title": "staticConfigLabels",
              "type": "object"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "scrapeconfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "prometheus",
      "type": "object"
    },
    "prometheusOperatorObjects": {
      "additionalProperties": true,
      "description": "Prometheus Operator Objects enables the gathering of metrics from objects like Probes, PodMonitors, and\nServiceMonitors. Requires a destination that supports metrics.\nTo see the valid options, please see the [Prometheus Operator Objects feature documentation](https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring/charts/feature-prometheus-operator-objects).",
      "properties": {
        "collector": {
          "default": "alloy-metrics",
          "description": "Which collector to assign this feature to. Do not change this unless you are sure of what you are doing.",
          "required": [],
          "title": "collector",
          "type": "string"
        },
        "destinations": {
          "description": "The destinations where metrics will be sent. If empty, all metrics-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable gathering metrics from Prometheus Operator Objects.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "prometheusOperatorObjects",
      "type": "object"
    },
    "prometheusScrape": {
      "default": true,
      "description": "Default values for kube-state-metrics.",
      "required": [],
      "title": "prometheusScrape",
      "type": "boolean"
    },
    "protocol": {
      "description": "The protocol for the OTLP destination.\nOptions are \"grpc\" (default), \"http\".",
      "required": [],
      "title": "protocol",
      "type": "string"
    },
    "proxyConnectHeader": {
      "additionalProperties": true,
      "description": "Specifies headers to send to proxies during CONNECT requests.",
      "required": [],
      "title": "proxyConnectHeader",
      "type": "object"
    },
    "proxyFromEnvironment": {
      "description": "Use the proxy URL indicated by environment variables.",
      "required": [],
      "title": "proxyFromEnvironment",
      "type": "boolean"
    },
    "proxyURL": {
      "description": "HTTP proxy to send requests through.",
      "required": [],
      "title": "proxyURL",
      "type": "string"
    },
    "queueConfig": {
      "additionalProperties": true,
      "properties": {
        "batchSendDeadline": {
          "description": "Maximum time samples will wait in the buffer before sending.",
          "required": [],
          "title": "batchSendDeadline",
          "type": "string"
        },
        "capacity": {
          "description": "Number of samples to buffer per shard.",
          "required": [],
          "title": "capacity",
          "type": "integer"
        },
        "maxBackoff": {
          "description": "Maximum retry delay.",
          "required": [],
          "title": "maxBackoff",
          "type": "string"
        },
        "maxSamplesPerSend": {
          "description": "Maximum number of samples per send.",
          "required": [],
          "title": "maxSamplesPerSend",
          "type": "integer"
        },
        "maxShards": {
          "description": "Maximum amount of concurrent shards sending samples to the endpoint.",
          "required": [],
          "title": "maxShards",
          "type": "integer"
        },
        "minBackoff": {
          "description": "Initial retry delay. The backoff time gets doubled for each retry.",
          "required": [],
          "title": "minBackoff",
          "type": "string"
        },
        "minShards": {
          "description": "Minimum amount of concurrent shards sending samples to the endpoint.",
          "required": [],
          "title": "minShards",
          "type": "integer"
        },
        "retryOnHttp429": {
          "description": "Retry when an HTTP 429 status code is received.",
          "required": [],
          "title": "retryOnHttp429",
          "type": "boolean"
        },
        "sampleAgeLimit": {
          "description": "Maximum age of samples to send.",
          "required": [],
          "title": "sampleAgeLimit",
          "type": "string"
        }
      },
      "required": [],
      "title": "queueConfig",
      "type": "object"
    },
    "rbac": {
      "additionalProperties": true,
      "description": "Create cluster role policies",
      "properties": {
        "create": {
          "default": true,
          "description": "Whether to create RBAC resources for Alloy.",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "createClusterRoles": {
          "default": true,
          "description": "Create ClusterRoles for the Alloy Operator. If set to false, only Roles and RoleBindings will be created. This\nsetting requires the use of `namespaces` or `ownNamespaceOnly` to be set.",
          "required": [],
          "title": "createClusterRoles",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraClusterRoleRules": {
          "description": "Extra custer roles to be created for Belya",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraClusterRoleRules",
          "type": "array"
        },
        "extraRules": {
          "description": "Add permissions for CustomResources' apiGroups in Role/ClusterRole. Should be used in conjunction with Custom Resource State Metrics configuration\nExample:\n- apiGroups: [\"monitoring.coreos.com\"]\n  resources: [\"prometheuses\"]\n  verbs: [\"list\", \"watch\"]",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraRules",
          "type": "array"
        },
        "useClusterRole": {
          "default": true,
          "description": "If set to false - Run without Cluteradmin privs needed - ONLY works if namespace is also set (if useExistingRole is set this name is used as ClusterRole or Role to bind to)",
          "required": [],
          "title": "useClusterRole",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "rbac",
      "type": "object"
    },
    "readBufferSize": {
      "description": "Size of the read buffer the gRPC client to use for reading server responses.",
      "required": [],
      "title": "readBufferSize",
      "type": "string"
    },
    "readinessProbe": {
      "additionalProperties": true,
      "description": "# Readiness probe\n#",
      "properties": {
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 1,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "readinessProbe",
      "type": "object"
    },
    "receivers": {
      "additionalProperties": true,
      "properties": {
        "jaeger": {
          "additionalProperties": true,
          "properties": {
            "grpc": {
              "additionalProperties": true,
              "description": "Configuration for the Jaeger receiver using the gRPC protocol.",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 14250,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "grpc",
              "type": "object"
            },
            "includeDebugMetrics": {
              "default": false,
              "description": "Whether to include high-cardinality debug metrics.",
              "required": [],
              "title": "includeDebugMetrics",
              "type": "boolean"
            },
            "thriftBinary": {
              "additionalProperties": true,
              "description": "Configuration for the Jaeger receiver using the Thrift binary protocol.",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 6832,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "thriftBinary",
              "type": "object"
            },
            "thriftCompact": {
              "additionalProperties": true,
              "description": "Configuration for the Jaeger receiver using the Thrift compact protocol.",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 6831,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "thriftCompact",
              "type": "object"
            },
            "thriftHttp": {
              "additionalProperties": true,
              "description": "Configuration for the Jaeger receiver using the Thrift HTTP protocol.",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 14268,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "thriftHttp",
              "type": "object"
            }
          },
          "required": [],
          "title": "jaeger",
          "type": "object"
        },
        "otlp": {
          "additionalProperties": true,
          "properties": {
            "grpc": {
              "additionalProperties": true,
              "description": "The OTLP gRPC receiver configuration.",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Accept application data over OTLP gRPC.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "includeMetadata": {
                  "default": false,
                  "description": "Propagate incoming connection metadata to downstream consumers.",
                  "required": [],
                  "title": "includeMetadata",
                  "type": "boolean"
                },
                "keepalive": {
                  "additionalProperties": true,
                  "properties": {
                    "enforcementPolicy": {
                      "additionalProperties": true,
                      "properties": {
                        "minTime": {
                          "default": "",
                          "description": "Minimum time clients should wait before sending a keepalive ping. Default is 5 minutes.",
                          "required": [],
                          "title": "minTime",
                          "type": "string"
                        },
                        "permitWithoutStream": {
                          "default": false,
                          "description": "Allow clients to send keepalive pings when there are no active streams.",
                          "required": [],
                          "title": "permitWithoutStream",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "enforcementPolicy",
                      "type": "object"
                    },
                    "serverParameters": {
                      "additionalProperties": true,
                      "properties": {
                        "maxConnectionAge": {
                          "default": "",
                          "description": "Maximum age for non-idle connections. Default is infinity.",
                          "required": [],
                          "title": "maxConnectionAge",
                          "type": "string"
                        },
                        "maxConnectionAgeGrace": {
                          "default": "",
                          "description": "Time to wait before forcibly closing connections. Default is infinity.",
                          "required": [],
                          "title": "maxConnectionAgeGrace",
                          "type": "string"
                        },
                        "maxConnectionIdle": {
                          "default": "",
                          "description": "Maximum age for idle connections. Default is infinity.",
                          "required": [],
                          "title": "maxConnectionIdle",
                          "type": "string"
                        },
                        "time": {
                          "default": "",
                          "description": "How often to ping inactive clients to check for liveness. Default is 2 hours.",
                          "required": [],
                          "title": "time",
                          "type": "string"
                        },
                        "timeout": {
                          "default": "",
                          "description": "Time to wait before closing inactive clients that don’t respond to liveness checks.\nDefault is 20 seconds.",
                          "required": [],
                          "title": "timeout",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "serverParameters",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "keepalive",
                  "type": "object"
                },
                "maxConcurrentStreams": {
                  "default": 0,
                  "description": "Limit the number of concurrent streaming gRPC calls. 0 means no limit.",
                  "required": [],
                  "title": "maxConcurrentStreams",
                  "type": "integer"
                },
                "maxReceivedMessageSize": {
                  "default": "4MiB",
                  "description": "Maximum size of messages the gRPC server will accept.",
                  "required": [],
                  "title": "maxReceivedMessageSize",
                  "type": "string"
                },
                "port": {
                  "default": 4317,
                  "description": "The port to listen on for OTLP gRPC requests.",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "readBufferSize": {
                  "default": "512KiB",
                  "description": "Size of the read buffer the gRPC server will use for reading from clients.",
                  "required": [],
                  "title": "readBufferSize",
                  "type": "string"
                },
                "writeBufferSize": {
                  "default": "32KiB",
                  "description": "Size of the write buffer the gRPC server will use for writing to clients.",
                  "required": [],
                  "title": "writeBufferSize",
                  "type": "string"
                }
              },
              "required": [],
              "title": "grpc",
              "type": "object"
            },
            "http": {
              "additionalProperties": true,
              "description": "The OTLP HTTP receiver configuration.",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Accept application data over OTLP HTTP.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "includeMetadata": {
                  "default": false,
                  "description": "Propagate incoming connection metadata to downstream consumers.",
                  "required": [],
                  "title": "includeMetadata",
                  "type": "boolean"
                },
                "maxRequestBodySize": {
                  "default": "20MiB",
                  "description": "Maximum request body size the server will allow.",
                  "required": [],
                  "title": "maxRequestBodySize",
                  "type": "string"
                },
                "port": {
                  "default": 4318,
                  "description": "The port to listen on for OTLP HTTP requests.",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "http",
              "type": "object"
            },
            "includeDebugMetrics": {
              "default": false,
              "description": "Whether to include high-cardinality debug metrics.",
              "required": [],
              "title": "includeDebugMetrics",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "otlp",
          "type": "object"
        },
        "zipkin": {
          "additionalProperties": true,
          "description": "The Zipkin receiver configuration.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "includeDebugMetrics": {
              "default": false,
              "description": "Whether to include high-cardinality debug metrics.",
              "required": [],
              "title": "includeDebugMetrics",
              "type": "boolean"
            },
            "port": {
              "default": 9411,
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "zipkin",
          "type": "object"
        }
      },
      "required": [],
      "title": "receivers",
      "type": "object"
    },
    "redfish": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fileContent": {
          "default": "your_kubelet_node1_name,redfish_username,redfish_password,https://node1_redfish_ip_or_hostname\nyour_kubelet_node2_name,redfish_username,redfish_password,https://node2_redfish_ip_or_hostname",
          "required": [],
          "title": "fileContent",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "name": {
          "default": "redfish",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "redfish",
      "type": "object"
    },
    "releaseLabel": {
      "default": false,
      "description": "# set to true to add the release label so scraping of the servicemonitor with kube-prometheus-stack works out of the box",
      "required": [],
      "title": "releaseLabel",
      "type": "boolean"
    },
    "releaseNamespace": {
      "default": false,
      "description": "Enable only the release namespace for collecting resources. By default all namespaces are collected.\nIf releaseNamespace and namespaces are both set a merged list will be collected.",
      "required": [],
      "title": "releaseNamespace",
      "type": "boolean"
    },
    "remoteConfig": {
      "additionalProperties": true,
      "description": "Remote configuration from a remote config server.",
      "properties": {
        "auth": {
          "additionalProperties": true,
          "properties": {
            "password": {
              "description": "The password to use for the remote config server.",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "passwordFrom": {
              "description": "Raw config for accessing the password.",
              "required": [],
              "title": "passwordFrom",
              "type": "string"
            },
            "passwordKey": {
              "description": "The key for storing the password in the secret.",
              "required": [],
              "title": "passwordKey",
              "type": "string"
            },
            "type": {
              "description": "The type of authentication to use for the remote config server.",
              "required": [],
              "title": "type",
              "type": "string"
            },
            "username": {
              "description": "The username to use for the remote config server.",
              "required": [],
              "title": "username",
              "type": "string"
            },
            "usernameFrom": {
              "description": "Raw config for accessing the password.",
              "required": [],
              "title": "usernameFrom",
              "type": "string"
            },
            "usernameKey": {
              "description": "The key for storing the username in the secret.",
              "required": [],
              "title": "usernameKey",
              "type": "string"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "description": "Enable fetching configuration from a remote config server.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraAttributes": {
          "additionalProperties": true,
          "description": "Attributes to be added to this collector when requesting configuration.",
          "required": [],
          "title": "extraAttributes",
          "type": "object"
        },
        "noProxy": {
          "description": "Comma-separated list of IP addresses, CIDR notations, and domain names to exclude from proxying.",
          "required": [],
          "title": "noProxy",
          "type": "string"
        },
        "pollFrequency": {
          "description": "The frequency at which to poll the remote config server for updates.",
          "required": [],
          "title": "pollFrequency",
          "type": "string"
        },
        "proxyConnectHeader": {
          "additionalProperties": true,
          "description": "Specifies headers to send to proxies during CONNECT requests.",
          "required": [],
          "title": "proxyConnectHeader",
          "type": "object"
        },
        "proxyFromEnvironment": {
          "description": "Use the proxy URL indicated by environment variables.",
          "required": [],
          "title": "proxyFromEnvironment",
          "type": "boolean"
        },
        "proxyURL": {
          "description": "The proxy URL to use of the remote config server.",
          "required": [],
          "title": "proxyURL",
          "type": "string"
        },
        "secret": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "description": "Whether to create a secret for the remote config server.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "embed": {
              "description": "If true, skip secret creation and embed the credentials directly into the configuration.",
              "required": [],
              "title": "embed",
              "type": "boolean"
            },
            "name": {
              "description": "The name of the secret to create.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace for the secret.",
              "required": [],
              "title": "namespace",
              "type": "string"
            }
          },
          "required": [],
          "title": "secret",
          "type": "object"
        },
        "tls": {
          "additionalProperties": true,
          "properties": {
            "ca": {
              "description": "The CA certificate for the server (as a string).",
              "required": [],
              "title": "ca",
              "type": "string"
            },
            "caFile": {
              "description": "The CA certificate for the server (as a path to a file).",
              "required": [],
              "title": "caFile",
              "type": "string"
            },
            "caFrom": {
              "description": "Raw config for accessing the server CA certificate.",
              "required": [],
              "title": "caFrom",
              "type": "string"
            },
            "cert": {
              "description": "The client certificate for the server (as a string).",
              "required": [],
              "title": "cert",
              "type": "string"
            },
            "certFile": {
              "description": "The client certificate for the server (as a path to a file).",
              "required": [],
              "title": "certFile",
              "type": "string"
            },
            "certFrom": {
              "description": "Raw config for accessing the client certificate.",
              "required": [],
              "title": "certFrom",
              "type": "string"
            },
            "insecureSkipVerify": {
              "description": "Disables validation of the server certificate.",
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            },
            "key": {
              "description": "The client key for the server (as a string).",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "keyFile": {
              "description": "The client key for the server (as a path to a file).",
              "required": [],
              "title": "keyFile",
              "type": "string"
            },
            "keyFrom": {
              "description": "Raw config for accessing the client key.",
              "required": [],
              "title": "keyFrom",
              "type": "string"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "url": {
          "description": "The URL of the remote config server.",
          "required": [],
          "title": "url",
          "type": "string"
        },
        "urlFrom": {
          "description": "Raw config for accessing the URL. Lets you insert raw Alloy references so you can load the URL from any number of\nplaces, such as loading values from environment variables or config maps. For example: `urlFrom: sys.env(\"ALLOY_REMOTE_CONFIG_URL\")`",
          "required": [],
          "title": "urlFrom",
          "type": "string"
        }
      },
      "required": [],
      "title": "remoteConfig",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "How many replicas to use for the Alloy Operator Deployment.",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "replicas": {
      "default": 1,
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": true,
      "description": "CPU/MEM resources",
      "properties": {
        "limits": {
          "additionalProperties": true,
          "description": "Set the resource limits for the Alloy Operator pods.",
          "required": [],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "additionalProperties": true,
          "description": "Set the resource requests for the Alloy Operator pods.",
          "required": [],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "restartPolicy": {
      "default": "null",
      "description": "Specify the container restart policy passed to the Node Export container\nPossible Values: Always (default)|OnFailure|Never",
      "required": [],
      "title": "restartPolicy",
      "type": "null"
    },
    "retryOnFailure": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "description": "Should failed requests be retried?",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "initialInterval": {
          "description": "The initial time to wait before retrying a failed request to the OTLP destination.",
          "required": [],
          "title": "initialInterval",
          "type": "string"
        },
        "maxElapsedTime": {
          "description": "The maximum amount of time to wait before discarding a failed batch.",
          "required": [],
          "title": "maxElapsedTime",
          "type": "string"
        },
        "maxInterval": {
          "description": "The maximum time to wait before retrying a failed request to the OTLP destination.",
          "required": [],
          "title": "maxInterval",
          "type": "string"
        }
      },
      "required": [],
      "title": "retryOnFailure",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "Number of old history to retain to allow rollback\nDefault Kubernetes value is set to 10",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "scrapeInterval": {
      "default": "",
      "description": "How frequently to scrape metrics from discovered pods and services. Only used if the `k8s.grafana.com/metrics.scrapeInterval` annotation is not set.\nOverrides global.scrapeInterval",
      "required": [],
      "title": "scrapeInterval",
      "type": "string"
    },
    "scrapeTimeout": {
      "default": "",
      "description": "The scrape timeout for discovered pods and services. Only used if the `k8s.grafana.com/metrics.scrapeTimeout` annotation is not set.\nOverrides global.scrapeTimeout",
      "required": [],
      "title": "scrapeTimeout",
      "type": "string"
    },
    "secret": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "description": "Whether to create a secret for this Pyroscope destination.",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "embed": {
          "description": "If true, skip secret creation and embed the credentials directly into the configuration.",
          "required": [],
          "title": "embed",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the secret to create.",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace for the secret.",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "sigv4": {
          "additionalProperties": true,
          "description": "Authentication using AWS Signature Version 4",
          "properties": {
            "assumeRole": {
              "additionalProperties": true,
              "properties": {
                "arn": {
                  "description": "The Amazon Resource Name (ARN) of a role to assume.",
                  "required": [],
                  "title": "arn",
                  "type": "string"
                },
                "sessionName": {
                  "description": "The name of a role session.",
                  "required": [],
                  "title": "sessionName",
                  "type": "string"
                },
                "stsRegion": {
                  "description": "The AWS region where STS is used to assume the configured role.",
                  "required": [],
                  "title": "stsRegion",
                  "type": "string"
                }
              },
              "required": [],
              "title": "assumeRole",
              "type": "object"
            },
            "region": {
              "description": "The AWS region for sigv4 authentication.",
              "required": [],
              "title": "region",
              "type": "string"
            },
            "service": {
              "description": "The AWS service for sigv4 authentication.",
              "required": [],
              "title": "service",
              "type": "string"
            }
          },
          "required": [],
          "title": "sigv4",
          "type": "object"
        }
      },
      "required": [],
      "title": "secret",
      "type": "object"
    },
    "secretAnnotations": {
      "additionalProperties": true,
      "description": " Annotations to add to the Secret",
      "required": [],
      "title": "secretAnnotations",
      "type": "object"
    },
    "secretFilter": {
      "additionalProperties": true,
      "description": "Check logs for secrets and mask them.",
      "properties": {
        "allowlist": {
          "description": "List of regular expressions to allowlist matching secrets.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "allowlist",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "Enable secret filtering.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "includeGeneric": {
          "default": false,
          "description": "Include the generic API key rule.",
          "required": [],
          "title": "includeGeneric",
          "type": "boolean"
        },
        "partialMask": {
          "default": 0,
          "description": "Show the first N characters of the secret.",
          "required": [],
          "title": "partialMask",
          "type": "integer"
        }
      },
      "required": [],
      "title": "secretFilter",
      "type": "object"
    },
    "secrets": {
      "description": "- name: \u003cconfigMapName\u003e\n  mountPath: \u003cmountPath\u003e",
      "items": {
        "required": []
      },
      "required": [],
      "title": "secrets",
      "type": "array"
    },
    "securityContext": {
      "additionalProperties": true,
      "description": "Privileges and access control settings for a container",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "additionalProperties": true,
          "properties": {
            "drop": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [],
          "title": "capabilities",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fsGroup": {
          "default": 65534,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "privileged": {
          "default": true,
          "required": [],
          "title": "privileged",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "runAsGroup": {
          "default": 65534,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 65534,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        },
        "seccompProfile": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seccompProfile",
          "type": "object"
        },
        "windowsOptions": {
          "additionalProperties": true,
          "properties": {
            "hostProcess": {
              "default": true,
              "required": [],
              "title": "hostProcess",
              "type": "boolean"
            },
            "runAsUserName": {
              "default": "NT AUTHORITY\\system",
              "required": [],
              "title": "runAsUserName",
              "type": "string"
            }
          },
          "required": [],
          "title": "windowsOptions",
          "type": "object"
        }
      },
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "selectorOverride": {
      "additionalProperties": true,
      "description": "# Override selector labels",
      "required": [],
      "title": "selectorOverride",
      "type": "object"
    },
    "selfMonitor": {
      "additionalProperties": true,
      "description": "Enable self metrics configuration for service and Service Monitor\nDefault values for telemetry configuration can be overridden\nIf you set telemetryNodePort, you must also set service.type to NodePort",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "selfMonitor",
      "type": "object"
    },
    "selfReporting": {
      "additionalProperties": true,
      "description": "Self-reporting creates a single metric and log that reports anonymized information about how this Helm chart was\nconfigured. It reports features enabled, destinations types used, and alloy instances enabled. It does not report any\nactual telemetry data, credentials or configuration, or send any data to any destination other than the ones\nconfigured above.",
      "properties": {
        "destinations": {
          "description": "The destinations where self-report metrics will be sent. If empty, all metrics-capable destinations will be used.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "destinations",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "description": "Enable Self-reporting.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to generate self-report metrics. This does utilize the global scrapeInterval setting.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        }
      },
      "required": [],
      "title": "selfReporting",
      "type": "object"
    },
    "sendNativeHistograms": {
      "description": "Whether native histograms should be sent.",
      "required": [],
      "title": "sendNativeHistograms",
      "type": "boolean"
    },
    "service": {
      "additionalProperties": true,
      "description": "# Service configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "# Additional annotations and labels for the service.",
          "properties": {
            "prometheus.io/scrape": {
              "default": "true",
              "required": [],
              "title": "prometheus.io/scrape",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "default": "",
          "description": "Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: \"http\" or \"tcp\"",
          "required": [],
          "title": "appProtocol",
          "type": "string"
        },
        "clusterIP": {
          "default": "",
          "description": "Cluster IP, can be set to None, empty \"\" or an IP address",
          "required": [],
          "title": "clusterIP",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Creates a Service for the controller's pods.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalTrafficPolicy": {
          "default": "",
          "description": "# External/Internal traffic policy setting (Cluster, Local)\n# https://kubernetes.io/docs/reference/networking/virtual-ips/#traffic-policies",
          "required": [],
          "title": "externalTrafficPolicy",
          "type": "string"
        },
        "extraPorts": {
          "description": "extra ports.  Useful for sidecar pods such as oauth-proxy",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPorts",
          "type": "array"
        },
        "health": {
          "additionalProperties": true,
          "properties": {
            "port": {
              "default": 8081,
              "description": "The port number for the health probes.",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "health",
          "type": "object"
        },
        "internalMetrics": {
          "additionalProperties": true,
          "properties": {
            "appProtocol": {
              "default": "",
              "description": "Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: \"http\" or \"tcp\"",
              "required": [],
              "title": "appProtocol",
              "type": "string"
            },
            "port": {
              "default": 8080,
              "description": "internal metrics service port",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "int-metrics",
              "description": "name of the port for internal metrics.",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "targetPort": {
              "default": "null",
              "description": "targetPort overrides the internal metrics port. It defaults to the value of `internal_metrics.prometheus.port`\nfrom the Beyla configuration file.",
              "required": [],
              "title": "targetPort",
              "type": "null"
            }
          },
          "required": [],
          "title": "internalMetrics",
          "type": "object"
        },
        "internalTrafficPolicy": {
          "default": "",
          "description": "Value for internal traffic policy. 'Cluster' or 'Local'",
          "required": [],
          "title": "internalTrafficPolicy",
          "type": "string"
        },
        "ipDualStack": {
          "additionalProperties": true,
          "description": "# Dual stack settings for the service\n# https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipFamilies": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "ipFamilies",
              "type": "array"
            },
            "ipFamilyPolicy": {
              "default": "PreferDualStack",
              "required": [],
              "title": "ipFamilyPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "ipDualStack",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": " Labels to add to the service account",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "listenOnAllInterfaces": {
          "default": true,
          "description": "# If true, node exporter will listen on all interfaces",
          "required": [],
          "title": "listenOnAllInterfaces",
          "type": "boolean"
        },
        "loadBalancerClass": {
          "default": "",
          "description": "loadbalancer class name",
          "required": [],
          "title": "loadBalancerClass",
          "type": "string"
        },
        "loadBalancerIP": {
          "default": "",
          "description": "loadbalancer IP",
          "required": [],
          "title": "loadBalancerIP",
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "description": "- name: oauth-proxy\n  port: 8081\n  targetPort: 8081\n- name: oauth-metrics\n  port: 8082\n  targetPort: 8082\nLoadBalancer Source IP CIDR if service type is LoadBalancer and cloud provider supports this",
          "items": {
            "required": []
          },
          "required": [],
          "title": "loadBalancerSourceRanges",
          "type": "array"
        },
        "metrics": {
          "additionalProperties": true,
          "properties": {
            "port": {
              "default": 8082,
              "description": "The port number for the metrics service.",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "nodePort": {
          "additionalProperties": true,
          "default": "",
          "description": "NodePort port. Only takes effect when `service.type: NodePort`",
          "required": [],
          "title": "nodePort",
          "type": "integer"
        },
        "port": {
          "default": 9182,
          "description": "# Default service port. Sets the port of the exposed container as well (windows-exporter).",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "portName": {
          "default": "metrics",
          "description": "# Name of the service port. Sets the port name of the main container (windows-exporter) as well.",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "servicePort": {
          "default": "",
          "description": "# Service port. Use this field if you wish to set a different service port\n# without changing the container port (\"port\" above).",
          "required": [],
          "title": "servicePort",
          "type": "string"
        },
        "targetPort": {
          "default": 9100,
          "description": "# Targeted port in the pod. Must refer to an open container port (\"port\" or \"portName\").\n# (IntOrString)",
          "required": [],
          "title": "targetPort",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": true,
      "description": "Service Account settings",
      "properties": {
        "additionalLabels": {
          "additionalProperties": true,
          "description": "Additional labels to add to the created service account.",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to add to the created service account.",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": true,
          "description": "Automatically mount a ServiceAccount's API credentials?",
          "required": [],
          "title": "automount",
          "type": "boolean"
        },
        "automountServiceAccountToken": {
          "default": false,
          "description": "Whether the Alloy pod should automatically mount the service account token.",
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Whether to create a service account for the Grafana Alloy deployment.",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "Reference to one or more secrets to be used when pulling images\nref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "ServiceAccount labels.",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "name": {
          "default": "",
          "description": "The name of the existing service account to use when\nserviceAccount.create is false.",
          "required": [],
          "title": "name",
          "type": "null"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": true,
      "description": "Enable creation of ServiceMonitor for scraping of prometheus HTTP endpoint",
      "properties": {
        "additionalLabels": {
          "additionalProperties": true,
          "description": "Additional labels for the service monitor.",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "ServiceMonitor annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "attachMetadata": {
          "additionalProperties": true,
          "properties": {
            "node": {
              "default": false,
              "required": [],
              "title": "node",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "attachMetadata",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Whether to create a ServiceMonitor",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "internalMetrics": {
          "additionalProperties": true,
          "properties": {
            "endpoint": {
              "additionalProperties": true,
              "description": "ServiceMonitor internal metrics scraping endpoint.\nTarget port and path is set based on service and `internal_metrics` values.\nFor additional values, see the ServiceMonitor spec",
              "properties": {
                "interval": {
                  "default": "15s",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                }
              },
              "required": [],
              "title": "endpoint",
              "type": "object"
            }
          },
          "required": [],
          "title": "internalMetrics",
          "type": "object"
        },
        "interval": {
          "default": "30s",
          "description": "Scrape interval. If not set, the Prometheus default scrape interval is used.",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "jobLabel": {
          "default": "",
          "description": "Prometheus job label.\nIf empty, chart release name is used",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\nref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "metrics": {
          "additionalProperties": true,
          "properties": {
            "endpoint": {
              "additionalProperties": true,
              "description": "ServiceMonitor Prometheus scraping endpoint.\nTarget port and path is set based on service and `prometheus_export` values.\nFor additional values, see the ServiceMonitor spec",
              "properties": {
                "interval": {
                  "default": "15s",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                }
              },
              "required": [],
              "title": "endpoint",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "namespace": {
          "default": "",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "relabelings": {
          "description": "RelabelConfigs to apply to samples before scraping\nref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig",
          "items": {
            "additionalProperties": true,
            "properties": {
              "action": {
                "default": "replace",
                "required": [],
                "title": "action",
                "type": "string"
              },
              "regex": {
                "default": "(.*)",
                "required": [],
                "title": "regex",
                "type": "string"
              },
              "replacement": {
                "default": "$1",
                "required": [],
                "title": "replacement",
                "type": "string"
              },
              "sourceLabels": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "title": "sourceLabels",
                "type": "array"
              },
              "targetLabel": {
                "default": "instance",
                "required": [],
                "title": "targetLabel",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scrapeTimeout": {
          "default": "5s",
          "description": "Set timeout for scrape",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "targetLabels": {
          "description": "Set of labels to transfer from the Kubernetes Service onto the target",
          "items": {
            "required": []
          },
          "required": [],
          "title": "targetLabels",
          "type": "array"
        },
        "telemetryPath": {
          "default": "/metrics",
          "description": "Set path to metrics path",
          "required": [],
          "title": "telemetryPath",
          "type": "string"
        },
        "tlsConfig": {
          "additionalProperties": true,
          "description": "Customize tls parameters for the service monitor",
          "required": [],
          "title": "tlsConfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "serviceMonitor",
      "type": "object"
    },
    "serviceMonitors": {
      "additionalProperties": true,
      "description": "Prometheus Operator ServiceMonitors",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable discovery of Prometheus Operator ServiceMonitor objects.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "excludeNamespaces": {
          "description": "Which namespaces to not look for ServiceMonitor objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "excludeNamespaces",
          "type": "array"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.operator.probes component for Probes.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nThe relabelings defined in the PodMonitor object are applied first, then these relabelings are applied.\nBefore the scrape, any remaining target labels that start with `__` (i.e. `__meta_kubernetes*`) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for ServiceMonitor objects.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "labelExpressions": {
          "description": "Complex label selectors to filter which ServiceMonitor objects to use.\nExample: `[{key: \"app.kubernetes.io/name\", operator: \"NotIn\", values: [\"secret-app\", \"admin-app\"]}]`",
          "items": {
            "required": []
          },
          "required": [],
          "title": "labelExpressions",
          "type": "array"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Label selectors to filter which ServiceMonitor objects to use.\nExample: `app.kubernetes.io/name: my-app`",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for cadvisor prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespaces": {
          "description": "Which namespaces to look for ServiceMonitor objects.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "namespaces",
          "type": "array"
        },
        "scrapeInterval": {
          "default": "",
          "description": "The default interval between scraping targets. Used as the default if the target resource doesn’t provide a\nscrape interval.\nOverrides global.scrapeInterval",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The default timeout for scrape requests. Used as the default if the target resource doesn’t provide a scrape\ntimeout.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "serviceMonitors",
      "type": "object"
    },
    "services": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable discovering Services with annotations.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "labelSelectors": {
          "additionalProperties": true,
          "description": "Filter the list of discovered Services by labels.\nExample: `labelSelectors: { 'app': 'myapp' }` will only discover Services with the label `app=myapp`.\nExample: `labelSelectors: { 'app': ['myapp', 'myotherapp'] }` will only discover Services with the label `app=myapp` or `app=myotherapp`.",
          "required": [],
          "title": "labelSelectors",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Add labels to metrics from discovered Services. Run during discovery, so __meta_ labels are available. See the\n[documentation](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.kubernetes/#service-role)\nfor the full list of meta labels.",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "staticLabels": {
          "additionalProperties": true,
          "description": "Metric labels to set with static data for discovered Services.",
          "required": [],
          "title": "staticLabels",
          "type": "object"
        },
        "staticLabelsFrom": {
          "additionalProperties": true,
          "description": "Static labels to set on metrics from discovered Services, not quoted so it can reference config components.",
          "required": [],
          "title": "staticLabelsFrom",
          "type": "object"
        }
      },
      "required": [],
      "title": "services",
      "type": "object"
    },
    "sidecarHostVolumeMounts": {
      "description": "# Additional mounts from the host to sidecar containers\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecarHostVolumeMounts",
      "type": "array"
    },
    "sidecarVolumeMount": {
      "description": "# Volume for sidecar containers\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecarVolumeMount",
      "type": "array"
    },
    "sidecars": {
      "description": "# Additional containers for export metrics to text file\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecars",
      "type": "array"
    },
    "startupProbe": {
      "additionalProperties": true,
      "description": "# Startup probe can optionally be enabled.\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "startupProbe",
      "type": "object"
    },
    "staticLabels": {
      "additionalProperties": true,
      "description": "Log labels to set with static values.",
      "required": [],
      "title": "staticLabels",
      "type": "object"
    },
    "staticLabelsFrom": {
      "additionalProperties": true,
      "description": "Log labels to set with static values, not quoted so it can reference config components.",
      "required": [],
      "title": "staticLabelsFrom",
      "type": "object"
    },
    "structuredMetadata": {
      "additionalProperties": true,
      "description": "The structured metadata mappings to set.\nFormat: `\u003ckey\u003e: \u003cextracted_key\u003e`.\nExample:\nstructuredMetadata:\n  component: component\n  kind: kind\n  name: name",
      "properties": {
        "k8s.pod.name": {
          "default": "k8s.pod.name",
          "required": [],
          "title": "k8s.pod.name",
          "type": "string"
        },
        "name": {
          "default": "name",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "pod": {
          "default": "pod",
          "required": [],
          "title": "pod",
          "type": "string"
        },
        "service.instance.id": {
          "default": "service.instance.id",
          "required": [],
          "title": "service.instance.id",
          "type": "string"
        }
      },
      "required": [],
      "title": "structuredMetadata",
      "type": "object"
    },
    "tempo": {
      "additionalProperties": true,
      "description": "Scrape metrics/logs from Tempo",
      "properties": {
        "instances": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "instances",
          "type": "array"
        }
      },
      "required": [],
      "title": "tempo",
      "type": "object"
    },
    "tenantId": {
      "description": "The tenant ID for the Pyroscope destination.",
      "required": [],
      "title": "tenantId",
      "type": "string"
    },
    "tenantIdFrom": {
      "description": "Raw config for accessing the tenant ID.",
      "required": [],
      "title": "tenantIdFrom",
      "type": "string"
    },
    "tenantIdKey": {
      "description": "The key for storing the tenant ID in the secret.",
      "required": [],
      "title": "tenantIdKey",
      "type": "string"
    },
    "terminationGracePeriodSeconds": {
      "default": "null",
      "description": "Specify grace period for graceful termination of pods. Defaults to 30 if null or not specified",
      "required": [],
      "title": "terminationGracePeriodSeconds",
      "type": "null"
    },
    "terminationMessageParams": {
      "additionalProperties": true,
      "description": "Enable or disable container termination message settings\nhttps://kubernetes.io/docs/tasks/debug/debug-application/determine-reason-pod-failure/",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "default": "/dev/termination-log",
          "description": "If enabled, specify the path for termination messages",
          "required": [],
          "title": "terminationMessagePath",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "default": "File",
          "description": "If enabled, specify the policy for termination messages",
          "required": [],
          "title": "terminationMessagePolicy",
          "type": "string"
        }
      },
      "required": [],
      "title": "terminationMessageParams",
      "type": "object"
    },
    "tls": {
      "additionalProperties": true,
      "properties": {
        "ca": {
          "description": "The CA certificate for the server (as a string).",
          "required": [],
          "title": "ca",
          "type": "string"
        },
        "caFile": {
          "description": "The CA certificate for the server (as a path to a file).",
          "required": [],
          "title": "caFile",
          "type": "string"
        },
        "caFrom": {
          "description": "Raw config for accessing the server CA certificate.",
          "required": [],
          "title": "caFrom",
          "type": "string"
        },
        "cert": {
          "description": "The client certificate for the server (as a string).",
          "required": [],
          "title": "cert",
          "type": "string"
        },
        "certFile": {
          "description": "The client certificate for the server (as a path to a file).",
          "required": [],
          "title": "certFile",
          "type": "string"
        },
        "certFrom": {
          "description": "Raw config for accessing the client certificate.",
          "required": [],
          "title": "certFrom",
          "type": "string"
        },
        "insecure": {
          "description": "Whether to use TLS for the OTLP destination.",
          "required": [],
          "title": "insecure",
          "type": "boolean"
        },
        "insecureSkipVerify": {
          "description": "Disables validation of the server certificate.",
          "required": [],
          "title": "insecureSkipVerify",
          "type": "boolean"
        },
        "key": {
          "description": "The client key for the server (as a string).",
          "required": [],
          "title": "key",
          "type": "string"
        },
        "keyFile": {
          "description": "The client key for the server (as a path to a file).",
          "required": [],
          "title": "keyFile",
          "type": "string"
        },
        "keyFrom": {
          "description": "Raw config for accessing the client key.",
          "required": [],
          "title": "keyFrom",
          "type": "string"
        }
      },
      "required": [],
      "title": "tls",
      "type": "object"
    },
    "tlsSecret": {
      "additionalProperties": true,
      "description": "# tlsSecret refers to an existing secret holding TLS items: client CA certificate, private key and certificate.\n# secretName and volumeName can be templated.\n# If enabled, volume volumeName gets created on secret secretName.\n# The volume's resources will be used by kube-rbac-proxy if kubeRBACProxy.tls.enabled is set.",
      "properties": {
        "caItem": {
          "default": "",
          "description": "# Key with client CA certificate (optional)",
          "required": [],
          "title": "caItem",
          "type": "string"
        },
        "certItem": {
          "default": "tls.crt",
          "description": "# Key with certificate",
          "required": [],
          "title": "certItem",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "keyItem": {
          "default": "tls.key",
          "description": "# Key with private key",
          "required": [],
          "title": "keyItem",
          "type": "string"
        },
        "secretName": {
          "default": "prometheus-node-exporter-tls",
          "description": "# Name of an existing secret",
          "required": [],
          "title": "secretName",
          "type": "string"
        },
        "volumeName": {
          "default": "prometheus-node-exporter-tls",
          "description": "# Name of the volume to be created",
          "required": [],
          "title": "volumeName",
          "type": "string"
        }
      },
      "required": [],
      "title": "tlsSecret",
      "type": "object"
    },
    "tolerations": {
      "description": "# Tolerations for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
      "items": {
        "additionalProperties": true,
        "properties": {
          "effect": {
            "default": "NoSchedule",
            "required": [],
            "title": "effect",
            "type": "string"
          },
          "key": {
            "default": "node-role.kubernetes.io/control-plane",
            "required": [],
            "title": "key",
            "type": "string"
          },
          "operator": {
            "default": "Exists",
            "required": [],
            "title": "operator",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "topologySpreadConstraints": {
      "description": "# Topology spread constraints for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "topologySpreadConstraints",
      "type": "array"
    },
    "traces": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to send traces to the OTLP destination.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "filters": {
          "additionalProperties": true,
          "description": "Apply a filter to traces received via the OTLP or OTLP HTTP receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.filter/))",
          "properties": {
            "span": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "span",
              "type": "array"
            },
            "spanevent": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "spanevent",
              "type": "array"
            }
          },
          "required": [],
          "title": "filters",
          "type": "object"
        },
        "target": {
          "description": "The Alloy component reference for sending traces.\n@ section -- Traces",
          "required": [],
          "title": "target",
          "type": "string"
        },
        "transforms": {
          "additionalProperties": true,
          "description": "Apply a transformation to traces received via the OTLP or OTLP HTTP receivers.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/otelcol/otelcol.processor.transform/))",
          "properties": {
            "resource": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "resource",
              "type": "array"
            },
            "span": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "span",
              "type": "array"
            },
            "spanevent": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "spanevent",
              "type": "array"
            }
          },
          "required": [],
          "title": "transforms",
          "type": "object"
        }
      },
      "required": [],
      "title": "traces",
      "type": "object"
    },
    "updateStrategy": {
      "additionalProperties": true,
      "description": "# Customize the updateStrategy if set",
      "properties": {
        "rollingUpdate": {
          "additionalProperties": true,
          "properties": {
            "maxSurge": {
              "default": 1,
              "required": [],
              "title": "maxSurge",
              "type": "integer"
            },
            "maxUnavailable": {
              "default": 1,
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            }
          },
          "required": [],
          "title": "rollingUpdate",
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "description": "update strategy type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "updateStrategy",
      "type": "object"
    },
    "url": {
      "description": "The URL for the Pyroscope destination.",
      "required": [],
      "title": "url",
      "type": "string"
    },
    "urlFrom": {
      "description": "Raw config for accessing the URL.",
      "required": [],
      "title": "urlFrom",
      "type": "string"
    },
    "version": {
      "default": "",
      "description": "Override version of app, required if image.tag is defined and does not follow semver",
      "required": [],
      "title": "version",
      "type": "string"
    },
    "verticalPodAutoscaler": {
      "additionalProperties": true,
      "description": "Enable vertical pod autoscaler support for prometheus-node-exporter",
      "properties": {
        "controlledResources": {
          "description": "List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
          "items": {
            "required": []
          },
          "required": [],
          "title": "controlledResources",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxAllowed": {
          "additionalProperties": true,
          "description": "Define the max allowed resources for the pod",
          "required": [],
          "title": "maxAllowed",
          "type": "object"
        },
        "minAllowed": {
          "additionalProperties": true,
          "description": "cpu: 200m\nmemory: 100Mi\nDefine the min allowed resources for the pod",
          "required": [],
          "title": "minAllowed",
          "type": "object"
        }
      },
      "required": [],
      "title": "verticalPodAutoscaler",
      "type": "object"
    },
    "volumeGatherSettings": {
      "additionalProperties": true,
      "description": "Settings specific for gathering Pod logs using the \"volumes\" gather method.",
      "properties": {
        "onlyGatherNewLogLines": {
          "default": false,
          "description": "Only gather new log lines since this was deployed. Do not gather historical log lines.",
          "required": [],
          "title": "onlyGatherNewLogLines",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "volumeGatherSettings",
      "type": "object"
    },
    "volumeMounts": {
      "description": "volumeMounts are used to add custom volume mounts to deployment.\nSee example below",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumeMounts",
      "type": "array"
    },
    "volumes": {
      "description": "volumes are used to add custom volumes to deployment\nSee example below",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumes",
      "type": "array"
    },
    "windows-exporter": {
      "additionalProperties": true,
      "description": "Windows Exporter metrics gathers hardware information about Windows nodes.",
      "properties": {
        "config": {
          "default": "collectors:\n  enabled: cpu,container,logical_disk,memory,net,os\ncollector:\n  service:\n    include: \"containerd|kubelet\"",
          "description": "Windows Exporter configuration",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "deploy": {
          "default": true,
          "description": "Deploy Windows Exporter. Set to false if your cluster already has Windows Exporter deployed.",
          "required": [],
          "title": "deploy",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "description": "Scrape node metrics",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraDiscoveryRules": {
          "default": "",
          "description": "Rule blocks to be added to the discovery.relabel component for Windows Exporter.\nThese relabeling rules are applied pre-scrape against the targets from service discovery.\nBefore the scrape, any remaining target labels that start with __ (i.e. __meta_kubernetes*) are dropped.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/discovery/discovery.relabel/#rule-block))",
          "required": [],
          "title": "extraDiscoveryRules",
          "type": "string"
        },
        "extraMetricProcessingRules": {
          "default": "",
          "description": "Rule blocks to be added to the prometheus.relabel component for Windows Exporter metrics.\nThese relabeling rules are applied post-scrape against the metrics returned from the scraped target, no `__meta*` labels are present.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#rule-block))",
          "required": [],
          "title": "extraMetricProcessingRules",
          "type": "string"
        },
        "jobLabel": {
          "default": "integrations/windows-exporter",
          "description": "The value for the job label.",
          "required": [],
          "title": "jobLabel",
          "type": "string"
        },
        "labelMatchers": {
          "additionalProperties": true,
          "description": "Labels used to select the Windows Exporter pods.",
          "properties": {
            "app.kubernetes.io/name": {
              "default": "windows-exporter",
              "required": [],
              "title": "app.kubernetes.io/name",
              "type": "string"
            }
          },
          "required": [],
          "title": "labelMatchers",
          "type": "object"
        },
        "maxCacheSize": {
          "default": "",
          "description": "Sets the max_cache_size for the Windows Exporter prometheus.relabel component.\nThis should be at least 2x-5x your largest scrape target or samples appended rate.\n([docs](https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.relabel/#arguments))\nOverrides global.maxCacheSize",
          "required": [],
          "title": "maxCacheSize",
          "type": "null"
        },
        "metricsTuning": {
          "additionalProperties": true,
          "description": "Adjustments to the scraped metrics to filter the amount of data sent to storage.",
          "properties": {
            "excludeMetrics": {
              "description": "Metrics to drop. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludeMetrics",
              "type": "array"
            },
            "includeMetrics": {
              "description": "Metrics to keep. Can use regular expressions.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "includeMetrics",
              "type": "array"
            },
            "useDefaultAllowList": {
              "default": true,
              "description": "Filter the list of metrics from Windows Exporter to the minimal set required for Kubernetes Monitoring.",
              "required": [],
              "title": "useDefaultAllowList",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metricsTuning",
          "type": "object"
        },
        "namespace": {
          "default": "",
          "description": "Namespace to locate Windows Exporter pods. If `deploy` is set to `true`, this will automatically be set to the\nnamespace where this Helm chart is deployed.",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "properties": {
            "k8s.grafana.com/logs.job": {
              "default": "integrations/windows_exporter",
              "required": [],
              "title": "k8s.grafana.com/logs.job",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        },
        "scrapeInterval": {
          "default": "",
          "description": "How frequently to scrape metrics from Windows Exporter.",
          "required": [],
          "title": "scrapeInterval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "The timeout for scraping Windows Exporter metrics.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "description": "Windows Exporter service settings",
          "properties": {
            "portName": {
              "default": "metrics",
              "description": "The port name used by Windows Exporter.",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "windows-exporter",
      "type": "object"
    },
    "writeAheadLog": {
      "additionalProperties": true,
      "description": "Write-Ahead Log (WAL) settings. Only applies when protocol is \"remote_write\"",
      "properties": {
        "maxKeepaliveTime": {
          "description": "Maximum time to keep data in the write-ahead log before removing it.",
          "required": [],
          "title": "maxKeepaliveTime",
          "type": "string"
        },
        "minKeepaliveTime": {
          "description": "Minimum time to keep data in the write-ahead log before it can be removed.",
          "required": [],
          "title": "minKeepaliveTime",
          "type": "string"
        },
        "truncateFrequency": {
          "description": "How frequently to clean up the write-ahead log.",
          "required": [],
          "title": "truncateFrequency",
          "type": "string"
        }
      },
      "required": [],
      "title": "writeAheadLog",
      "type": "object"
    },
    "writeBufferSize": {
      "description": "Size of the write buffer the gRPC client to use for writing requests.",
      "required": [],
      "title": "writeBufferSize",
      "type": "string"
    }
  },
  "required": [],
  "type": "object"
}