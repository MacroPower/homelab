"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema STSSessionToken:
    r"""
    STSSessionToken uses the GetSessionToken API to retrieve an authorization token.
    The authorization token is valid for 12 hours.
    The authorizationToken returned is a base64 encoded string that can be decoded.
    For more information, see GetSessionToken (https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html).

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "STSSessionToken", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpec, default is Undefined, optional
        spec
    """
    apiVersion: "generators.external-secrets.io/v1alpha1" = "generators.external-secrets.io/v1alpha1"

    kind: "STSSessionToken" = "STSSessionToken"

    metadata?: v1.ObjectMeta
    spec?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpec

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpec:
    r"""
    generators external secrets io v1alpha1 s t s session token spec

    Attributes
    ----------
    auth : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuth, default is Undefined, optional
        auth
    region : str, default is Undefined, required
        Region specifies the region to operate in.
    requestParameters : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecRequestParameters, default is Undefined, optional
        request parameters
    role : str, default is Undefined, optional
        You can assume a role before making calls to the
        desired AWS service.
    """
    auth?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuth
    region: str

    requestParameters?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecRequestParameters
    role?: str

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuth:
    r"""
    Auth defines how to authenticate with AWS

    Attributes
    ----------
    jwt : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwt, default is Undefined, optional
        jwt
    secretRef : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRef, default is Undefined, optional
        secret ref
    """
    jwt?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwt
    secretRef?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRef

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwt:
    r"""
    Authenticate against AWS using service account tokens.

    Attributes
    ----------
    serviceAccountRef : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """
    serviceAccountRef?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwtServiceAccountRef

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthJwtServiceAccountRef:
    r"""
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """
    audiences?: [str]
    name: str

    namespace?: str

    check:
        len(name) <= 253
        len(name) >= 1
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRef:
    r"""
    AWSAuthSecretRef holds secret references for AWS credentials
    both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.

    Attributes
    ----------
    accessKeyIDSecretRef : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """
    accessKeyIDSecretRef?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefAccessKeyIDSecretRef
    secretAccessKeySecretRef?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSecretAccessKeySecretRef
    sessionTokenSecretRef?: GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSessionTokenSecretRef

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefAccessKeyIDSecretRef:
    r"""
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """
    key?: str
    name?: str
    namespace?: str

    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSecretAccessKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """
    key?: str
    name?: str
    namespace?: str

    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecAuthSecretRefSessionTokenSecretRef:
    r"""
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """
    key?: str
    name?: str
    namespace?: str

    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GeneratorsExternalSecretsIoV1alpha1STSSessionTokenSpecRequestParameters:
    r"""
    RequestParameters contains parameters that can be passed to the STS service.

    Attributes
    ----------
    serialNumber : str, default is Undefined, optional
        SerialNumber is the identification number of the MFA device that is associated with the IAM user who is making
        the GetSessionToken call.
        Possible values: hardware device (such as GAHT12345678) or an Amazon Resource Name (ARN) for a virtual device
        (such as arn:aws:iam::123456789012:mfa/user)
    sessionDuration : int, default is Undefined, optional
        session duration
    tokenCode : str, default is Undefined, optional
        TokenCode is the value provided by the MFA device, if MFA is required.
    """
    serialNumber?: str
    sessionDuration?: int
    tokenCode?: str

