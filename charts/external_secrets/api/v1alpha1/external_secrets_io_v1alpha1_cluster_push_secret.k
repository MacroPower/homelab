"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ClusterPushSecret:
    r"""
    external secrets io v1alpha1 cluster push secret

    Attributes
    ----------
    apiVersion : str, default is "external-secrets.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterPushSecret", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ExternalSecretsIoV1alpha1ClusterPushSecretSpec, default is Undefined, optional
        spec
    status : ExternalSecretsIoV1alpha1ClusterPushSecretStatus, default is Undefined, optional
        status
    """
    apiVersion: "external-secrets.io/v1alpha1" = "external-secrets.io/v1alpha1"

    kind: "ClusterPushSecret" = "ClusterPushSecret"

    metadata?: v1.ObjectMeta
    spec?: ExternalSecretsIoV1alpha1ClusterPushSecretSpec
    status?: ExternalSecretsIoV1alpha1ClusterPushSecretStatus

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpec:
    r"""
    external secrets io v1alpha1 cluster push secret spec

    Attributes
    ----------
    namespaceSelectors : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0], default is Undefined, optional
        A list of labels to select by to find the Namespaces to create the ExternalSecrets in. The selectors are ORed.
    pushSecretMetadata : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretMetadata, default is Undefined, optional
        push secret metadata
    pushSecretName : str, default is Undefined, optional
        The name of the push secrets to be created.
        Defaults to the name of the ClusterPushSecret
    pushSecretSpec : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpec, default is Undefined, required
        push secret spec
    refreshTime : str, default is Undefined, optional
        The time in which the controller should reconcile its objects and recheck namespaces for labels.
    """
    namespaceSelectors?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0]
    pushSecretMetadata?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretMetadata
    pushSecretName?: str
    pushSecretSpec: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpec

    refreshTime?: str

    check:
        len(pushSecretName) <= 253 if pushSecretName
        len(pushSecretName) >= 1 if pushSecretName
        _regex_match(str(pushSecretName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if pushSecretName

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0MatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecNamespaceSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretMetadata:
    r"""
    The metadata of the external secrets to be created

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    labels : {str:str}, default is Undefined, optional
        labels
    """
    annotations?: {str:str}
    labels?: {str:str}

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpec:
    r"""
    PushSecretSpec defines what to do with the secrets.

    Attributes
    ----------
    data : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0], default is Undefined, optional
        Secret Data that should be pushed to providers
    deletionPolicy : str, default is "None", optional
        Deletion Policy to handle Secrets in the provider.
    refreshInterval : str, default is "1h", optional
        The Interval to which External Secrets will try to push a secret definition
    secretStoreRefs : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0], default is Undefined, required
        secret store refs
    selector : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelector, default is Undefined, required
        selector
    template : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplate, default is Undefined, optional
        template
    updatePolicy : str, default is "Replace", optional
        UpdatePolicy to handle Secrets in the provider.
    """
    data?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0]
    deletionPolicy?: "Delete" | "None" = "None"
    refreshInterval?: str = "1h"
    secretStoreRefs: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0]

    selector: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelector

    template?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplate
    updatePolicy?: "Replace" | "IfNotExists" = "Replace"

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec data items0

    Attributes
    ----------
    conversionStrategy : str, default is "None", optional
        Used to define a conversion Strategy for the secret keys
    match : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0Match, default is Undefined, required
        match
    metadata : any, default is Undefined, optional
        Metadata is metadata attached to the secret.
        The structure of metadata is provider specific, please look it up in the provider documentation.
    """
    conversionStrategy?: "None" | "ReverseUnicode" = "None"
    match: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0Match

    metadata?: any

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0Match:
    r"""
    Match a given Secret Key to be pushed to the provider.

    Attributes
    ----------
    remoteRef : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0MatchRemoteRef, default is Undefined, required
        remote ref
    secretKey : str, default is Undefined, optional
        Secret Key to be pushed
    """
    remoteRef: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0MatchRemoteRef

    secretKey?: str

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecDataItems0MatchRemoteRef:
    r"""
    Remote Refs to push to providers.

    Attributes
    ----------
    property : str, default is Undefined, optional
        Name of the property in the resulting secret
    remoteKey : str, default is Undefined, required
        Name of the resulting provider secret.
    """
    property?: str
    remoteKey: str

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec secret store refs items0

    Attributes
    ----------
    kind : str, default is "SecretStore", optional
        Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
    labelSelector : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Optionally, sync to the SecretStore of the given name
    """
    kind?: "SecretStore" | "ClusterSecretStore" = "SecretStore"
    labelSelector?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelector
    name?: str

    check:
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelector:
    r"""
    Optionally, sync to secret stores with label selector

    Attributes
    ----------
    matchExpressions : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSecretStoreRefsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelector:
    r"""
    The Secret Selector (k8s source) for the Push Secret

    Attributes
    ----------
    generatorRef : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorGeneratorRef, default is Undefined, optional
        generator ref
    secret : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecret, default is Undefined, optional
        secret
    """
    generatorRef?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorGeneratorRef
    secret?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecret

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorGeneratorRef:
    r"""
    Point to a generator to create a Secret.

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", optional
        Specify the apiVersion of the generator resource
    kind : str, default is Undefined, required
        Specify the Kind of the generator resource
    name : str, default is Undefined, required
        Specify the name of the generator resource
    """
    apiVersion?: str = "generators.external-secrets.io/v1alpha1"
    kind: "ACRAccessToken" | "ClusterGenerator" | "CloudsmithAccessToken" | "ECRAuthorizationToken" | "Fake" | "GCRAccessToken" | "GithubAccessToken" | "QuayAccessToken" | "Password" | "SSHKey" | "STSSessionToken" | "UUID" | "VaultDynamicSecret" | "Webhook" | "Grafana" | "MFA"

    name: str

    check:
        len(name) <= 253
        len(name) >= 1
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecret:
    r"""
    Select a Secret to Push.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the Secret.
        The Secret must exist in the same namespace as the PushSecret manifest.
    selector : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelector, default is Undefined, optional
        selector
    """
    name?: str
    selector?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelector

    check:
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelector:
    r"""
    Selector chooses secrets using a labelSelector.

    Attributes
    ----------
    matchExpressions : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecSelectorSecretSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplate:
    r"""
    Template defines a blueprint for the created Secret resource.

    Attributes
    ----------
    data : {str:str}, default is Undefined, optional
        data
    engineVersion : str, default is "v2", optional
        EngineVersion specifies the template engine version
        that should be used to compile/execute the
        template specified in .data and .templateFrom[].
    mergePolicy : str, default is "Replace", optional
        merge policy
    metadata : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateMetadata, default is Undefined, optional
        metadata
    templateFrom : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0], default is Undefined, optional
        template from
    $type : str, default is Undefined, optional
        type
    """
    data?: {str:str}
    engineVersion?: "v2" = "v2"
    mergePolicy?: "Replace" | "Merge" = "Replace"
    metadata?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateMetadata
    templateFrom?: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0]
    $type?: str

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateMetadata:
    r"""
    ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    """
    annotations?: {str:str}
    finalizers?: [str]
    labels?: {str:str}

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec template template from items0

    Attributes
    ----------
    configMap : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMap, default is Undefined, optional
        config map
    literal : str, default is Undefined, optional
        literal
    secret : ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0Secret, default is Undefined, optional
        secret
    target : str, default is "Data", optional
        target
    """
    configMap?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMap
    literal?: str
    secret?: ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0Secret
    target?: "Data" | "Annotations" | "Labels" = "Data"

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMap:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec template template from items0 config map

    Attributes
    ----------
    items : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMapItemsItems0], default is Undefined, required
        A list of keys in the ConfigMap/Secret to use as templates for Secret data
    name : str, default is Undefined, required
        The name of the ConfigMap/Secret resource
    """
    items: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMapItemsItems0]

    name: str

    check:
        len(name) <= 253
        len(name) >= 1
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0ConfigMapItemsItems0:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec template template from items0 config map items items0

    Attributes
    ----------
    key : str, default is Undefined, required
        A key in the ConfigMap/Secret
    templateAs : str, default is "Values", optional
        template as
    """
    key: str

    templateAs?: "Values" | "KeysAndValues" = "Values"

    check:
        len(key) <= 253
        len(key) >= 1
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$")

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0Secret:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec template template from items0 secret

    Attributes
    ----------
    items : [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0SecretItemsItems0], default is Undefined, required
        A list of keys in the ConfigMap/Secret to use as templates for Secret data
    name : str, default is Undefined, required
        The name of the ConfigMap/Secret resource
    """
    items: [ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0SecretItemsItems0]

    name: str

    check:
        len(name) <= 253
        len(name) >= 1
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")

schema ExternalSecretsIoV1alpha1ClusterPushSecretSpecPushSecretSpecTemplateTemplateFromItems0SecretItemsItems0:
    r"""
    external secrets io v1alpha1 cluster push secret spec push secret spec template template from items0 secret items items0

    Attributes
    ----------
    key : str, default is Undefined, required
        A key in the ConfigMap/Secret
    templateAs : str, default is "Values", optional
        template as
    """
    key: str

    templateAs?: "Values" | "KeysAndValues" = "Values"

    check:
        len(key) <= 253
        len(key) >= 1
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$")

schema ExternalSecretsIoV1alpha1ClusterPushSecretStatus:
    r"""
    external secrets io v1alpha1 cluster push secret status

    Attributes
    ----------
    conditions : [ExternalSecretsIoV1alpha1ClusterPushSecretStatusConditionsItems0], default is Undefined, optional
        conditions
    failedNamespaces : [ExternalSecretsIoV1alpha1ClusterPushSecretStatusFailedNamespacesItems0], default is Undefined, optional
        Failed namespaces are the namespaces that failed to apply an PushSecret
    provisionedNamespaces : [str], default is Undefined, optional
        ProvisionedNamespaces are the namespaces where the ClusterPushSecret has secrets
    pushSecretName : str, default is Undefined, optional
        push secret name
    """
    conditions?: [ExternalSecretsIoV1alpha1ClusterPushSecretStatusConditionsItems0]
    failedNamespaces?: [ExternalSecretsIoV1alpha1ClusterPushSecretStatusFailedNamespacesItems0]
    provisionedNamespaces?: [str]
    pushSecretName?: str

schema ExternalSecretsIoV1alpha1ClusterPushSecretStatusConditionsItems0:
    r"""
    PushSecretStatusCondition indicates the status of the PushSecret.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PushSecretConditionType indicates the condition of the PushSecret.
    """
    lastTransitionTime?: str
    message?: str
    reason?: str
    status: str

    $type: str

schema ExternalSecretsIoV1alpha1ClusterPushSecretStatusFailedNamespacesItems0:
    r"""
    ClusterPushSecretNamespaceFailure represents a failed namespace deployment and it's reason.

    Attributes
    ----------
    namespace : str, default is Undefined, required
        Namespace is the namespace that failed when trying to apply an PushSecret
    reason : str, default is Undefined, optional
        Reason is why the PushSecret failed to apply to the namespace
    """
    namespace: str

    reason?: str

