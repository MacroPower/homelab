"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ECRAuthorizationToken:
    r"""
    ECRAuthorizationTokenSpec uses the GetAuthorizationToken API to retrieve an
    authorization token.
    The authorization token is valid for 12 hours.
    The authorizationToken returned is a base64 encoded string that can be decoded
    and used in a docker login command to authenticate to a registry.
    For more information, see Registry authentication (https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth) in the Amazon Elastic Container Registry User Guide.

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ECRAuthorizationToken", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpec, default is Undefined, optional
        spec
    """


    apiVersion: "generators.external-secrets.io/v1alpha1" = "generators.external-secrets.io/v1alpha1"

    kind: "ECRAuthorizationToken" = "ECRAuthorizationToken"

    metadata?: v1.ObjectMeta

    spec?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpec


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpec:
    r"""
    generators external secrets io v1alpha1 e c r authorization token spec

    Attributes
    ----------
    auth : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuth, default is Undefined, optional
        auth
    region : str, default is Undefined, required
        Region specifies the region to operate in.
    role : str, default is Undefined, optional
        You can assume a role before making calls to the
        desired AWS service.
    scope : str, default is Undefined, optional
        Scope specifies the ECR service scope.
        Valid options are private and public.
    """


    auth?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuth

    region: str

    role?: str

    scope?: str


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuth:
    r"""
    Auth defines how to authenticate with AWS

    Attributes
    ----------
    jwt : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwt, default is Undefined, optional
        jwt
    secretRef : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRef, default is Undefined, optional
        secret ref
    """


    jwt?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwt

    secretRef?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRef


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwt:
    r"""
    Authenticate against AWS using service account tokens.

    Attributes
    ----------
    serviceAccountRef : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwtServiceAccountRef


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthJwtServiceAccountRef:
    r"""
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


    check:
        len(name) <= 253
        len(name) >= 1
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRef:
    r"""
    AWSAuthSecretRef holds secret references for AWS credentials
    both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.

    Attributes
    ----------
    accessKeyIDSecretRef : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """


    accessKeyIDSecretRef?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSecretAccessKeySecretRef

    sessionTokenSecretRef?: GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSessionTokenSecretRef


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefAccessKeyIDSecretRef:
    r"""
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSecretAccessKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace


schema GeneratorsExternalSecretsIoV1alpha1ECRAuthorizationTokenSpecAuthSecretRefSessionTokenSecretRef:
    r"""
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        A key in the referenced Secret.
        Some instances of this field may be defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        The namespace of the Secret resource being referred to.
        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


    check:
        len(key) <= 253 if key
        len(key) >= 1 if key
        _regex_match(str(key), r"^[-._a-zA-Z0-9]+$") if key
        len(name) <= 253 if name
        len(name) >= 1 if name
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if name
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace


