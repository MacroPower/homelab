"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    affinity : ValuesAffinity, optional
        Add `affinities` to the Crossplane pod deployment.
    args : [any], optional
        Add custom arguments to the Crossplane pod.
    configuration : ValuesConfiguration, optional
    customAnnotations : ValuesCustomAnnotations, optional
        Add custom `annotations` to the Crossplane pod deployment.
    customLabels : ValuesCustomLabels, optional
        Add custom `labels` to the Crossplane pod deployment.
    deploymentStrategy : str, optional, default is "RollingUpdate"
        The deployment strategy for the Crossplane and RBAC Manager pods.
    dnsPolicy : str, optional, default is ""
        Specify the `dnsPolicy` to be used by the Crossplane pod.
    extraEnvVarsCrossplane : ValuesExtraEnvVarsCrossplane, optional
        Add custom environmental variables to the Crossplane pod deployment application container.
        Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    extraEnvVarsCrossplaneInit : ValuesExtraEnvVarsCrossplaneInit, optional
        Add custom environmental variables to the Crossplane pod deployment init container.
        Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    extraEnvVarsRBACManager : ValuesExtraEnvVarsRbacmanager, optional
        Add custom environmental variables to the RBAC Manager pod deployment.
        Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    extraObjects : [any], optional
        To add arbitrary Kubernetes Objects during a Helm Install
    extraVolumeMountsCrossplane : ValuesExtraVolumeMountsCrossplane, optional
        Add custom `volumeMounts` to the Crossplane pod.
    extraVolumesCrossplane : ValuesExtraVolumesCrossplane, optional
        Add custom `volumes` to the Crossplane pod.
    function : ValuesFunction, optional
    functionCache : ValuesFunctionCache, optional
    global : ValuesGlobal, optional
        Global values are values that can be accessed from any chart or subchart by exactly the same name.
    hostNetwork : bool, optional, default is False
        Enable `hostNetwork` for the Crossplane deployment. Caution: enabling `hostNetwork` grants the Crossplane Pod access to the host network namespace. Consider setting `dnsPolicy` to `ClusterFirstWithHostNet`.
    image : ValuesImage, optional
    imagePullSecrets : [any], optional
        The imagePullSecret names to add to the Crossplane ServiceAccount.
    leaderElection : bool, optional, default is True
        Enable [leader election](https://docs.crossplane.io/latest/concepts/pods/#leader-election) for the Crossplane pod.
    metrics : ValuesMetrics, optional
    nodeSelector : ValuesNodeSelector, optional
        Add `nodeSelectors` to the Crossplane pod deployment.
    packageCache : ValuesPackageCache, optional
    podSecurityContextCrossplane : ValuesPodSecurityContextCrossplane, optional
        Add a custom `securityContext` to the Crossplane pod.
    podSecurityContextRBACManager : ValuesPodSecurityContextRbacmanager, optional
        Add a custom `securityContext` to the RBAC Manager pod.
    priorityClassName : str, optional, default is ""
        The PriorityClass name to apply to the Crossplane and RBAC Manager pods.
    provider : ValuesProvider, optional
    rbacManager : ValuesRbacManager, optional
    readiness : ValuesReadiness, optional
    registryCaBundleConfig : ValuesRegistryCaBundleConfig, optional
    replicas : int, optional, default is 1
        helm-docs renders these comments into markdown. Use markdown formatting where
        appropiate.

        The number of Crossplane pod `replicas` to deploy.
    resourcesCrossplane : ValuesResourcesCrossplane, optional
    resourcesRBACManager : ValuesResourcesRbacmanager, optional
    revisionHistoryLimit : any, optional, default is "null"
        The number of Crossplane ReplicaSets to retain.
    runtimeClassName : str, optional, default is ""
        The runtimeClassName name to apply to the Crossplane and RBAC Manager pods.
    securityContextCrossplane : ValuesSecurityContextCrossplane, optional
    securityContextRBACManager : ValuesSecurityContextRbacmanager, optional
    service : ValuesService, optional
    serviceAccount : ValuesServiceAccount, optional
    tolerations : [any], optional
        Add `tolerations` to the Crossplane pod deployment.
    topologySpreadConstraints : [any], optional
        Add `topologySpreadConstraints` to the Crossplane pod deployment.
    webhooks : ValuesWebhooks, optional
    """
    [...str]: any
    affinity?: ValuesAffinity
    args?: [any]
    configuration?: ValuesConfiguration
    customAnnotations?: ValuesCustomAnnotations
    customLabels?: ValuesCustomLabels
    deploymentStrategy?: str
    dnsPolicy?: str
    extraEnvVarsCrossplane?: ValuesExtraEnvVarsCrossplane
    extraEnvVarsCrossplaneInit?: ValuesExtraEnvVarsCrossplaneInit
    extraEnvVarsRBACManager?: ValuesExtraEnvVarsRbacmanager
    extraObjects?: [any]
    extraVolumeMountsCrossplane?: ValuesExtraVolumeMountsCrossplane
    extraVolumesCrossplane?: ValuesExtraVolumesCrossplane
    function?: ValuesFunction
    functionCache?: ValuesFunctionCache
    global?: ValuesGlobal
    hostNetwork?: bool
    image?: ValuesImage
    imagePullSecrets?: [any]
    leaderElection?: bool
    metrics?: ValuesMetrics
    nodeSelector?: ValuesNodeSelector
    packageCache?: ValuesPackageCache
    podSecurityContextCrossplane?: ValuesPodSecurityContextCrossplane
    podSecurityContextRBACManager?: ValuesPodSecurityContextRbacmanager
    priorityClassName?: str
    provider?: ValuesProvider
    rbacManager?: ValuesRbacManager
    readiness?: ValuesReadiness
    registryCaBundleConfig?: ValuesRegistryCaBundleConfig
    replicas?: int
    resourcesCrossplane?: ValuesResourcesCrossplane
    resourcesRBACManager?: ValuesResourcesRbacmanager
    revisionHistoryLimit?: any
    runtimeClassName?: str
    securityContextCrossplane?: ValuesSecurityContextCrossplane
    securityContextRBACManager?: ValuesSecurityContextRbacmanager
    service?: ValuesService
    serviceAccount?: ValuesServiceAccount
    tolerations?: [any]
    topologySpreadConstraints?: [any]
    webhooks?: ValuesWebhooks

schema ValuesAffinity:
    r"""
    Add `affinities` to the Crossplane pod deployment.
    """
    [...str]: any

schema ValuesConfiguration:
    r"""
    ValuesConfiguration

    Attributes
    ----------
    packages : [any], optional
        A list of Configuration packages to install.
    """
    [...str]: any
    packages?: [any]

schema ValuesCustomAnnotations:
    r"""
    Add custom `annotations` to the Crossplane pod deployment.
    """
    [...str]: any

schema ValuesCustomLabels:
    r"""
    Add custom `labels` to the Crossplane pod deployment.
    """
    [...str]: any

schema ValuesExtraEnvVarsCrossplane:
    r"""
    Add custom environmental variables to the Crossplane pod deployment application container.
    Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    """
    [...str]: any

schema ValuesExtraEnvVarsCrossplaneInit:
    r"""
    Add custom environmental variables to the Crossplane pod deployment init container.
    Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    """
    [...str]: any

schema ValuesExtraEnvVarsRbacmanager:
    r"""
    Add custom environmental variables to the RBAC Manager pod deployment.
    Replaces any `.` in a variable name with `_`. For example, `SAMPLE.KEY=value1` becomes `SAMPLE_KEY=value1`.
    """
    [...str]: any

schema ValuesExtraVolumeMountsCrossplane:
    r"""
    Add custom `volumeMounts` to the Crossplane pod.
    """
    [...str]: any

schema ValuesExtraVolumesCrossplane:
    r"""
    Add custom `volumes` to the Crossplane pod.
    """
    [...str]: any

schema ValuesFunction:
    r"""
    ValuesFunction

    Attributes
    ----------
    packages : [any], optional
        A list of Function packages to install
    """
    [...str]: any
    packages?: [any]

schema ValuesFunctionCache:
    r"""
    ValuesFunctionCache

    Attributes
    ----------
    medium : str, optional, default is ""
        Set to `Memory` to hold the function cache in a RAM backed file system. Useful for Crossplane development.
    pvc : str, optional, default is ""
        The name of a PersistentVolumeClaim to use as the function cache. Disables the default function cache `emptyDir` Volume.
    sizeLimit : str, optional, default is "512Mi"
        The size limit for the function cache. If medium is `Memory` the `sizeLimit` can't exceed Node memory.
    """
    [...str]: any
    medium?: str
    pvc?: str
    sizeLimit?: str

schema ValuesGlobal:
    r"""
    Global values are values that can be accessed from any chart or subchart by exactly the same name.
    """
    [...str]: any

schema ValuesImage:
    r"""
    ValuesImage

    Attributes
    ----------
    ignoreTag : bool, optional, default is False
        Do not use the {{ .image.tag }} value to compute the image uri.
    pullPolicy : str, optional, default is "IfNotPresent"
        The image pull policy used for Crossplane and RBAC Manager pods.
    repository : str, optional, default is "xpkg.crossplane.io/crossplane/crossplane"
        Repository for the Crossplane pod image.
    tag : str, optional, default is ""
        The Crossplane image tag. Defaults to the value of `appVersion` in `Chart.yaml`.
    """
    [...str]: any
    ignoreTag?: bool
    pullPolicy?: str
    repository?: str
    tag?: str

schema ValuesMetrics:
    r"""
    ValuesMetrics

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enable Prometheus path, port and scrape annotations and expose port 8080 for both the Crossplane and RBAC Manager pods.
    port : str, optional, default is ""
        The port the metrics server listens on.
    """
    [...str]: any
    enabled?: bool
    port?: str

schema ValuesNodeSelector:
    r"""
    Add `nodeSelectors` to the Crossplane pod deployment.
    """
    [...str]: any

schema ValuesPackageCache:
    r"""
    ValuesPackageCache

    Attributes
    ----------
    configMap : str, optional, default is ""
        The name of a ConfigMap to use as the package cache. Disables the default package cache `emptyDir` Volume.
    medium : str, optional, default is ""
        Set to `Memory` to hold the package cache in a RAM backed file system. Useful for Crossplane development.
    pvc : str, optional, default is ""
        The name of a PersistentVolumeClaim to use as the package cache. Disables the default package cache `emptyDir` Volume.
    sizeLimit : str, optional, default is "20Mi"
        The size limit for the package cache. If medium is `Memory` the `sizeLimit` can't exceed Node memory.
    """
    [...str]: any
    configMap?: str
    medium?: str
    pvc?: str
    sizeLimit?: str

schema ValuesPodSecurityContextCrossplane:
    r"""
    Add a custom `securityContext` to the Crossplane pod.
    """
    [...str]: any

schema ValuesPodSecurityContextRbacmanager:
    r"""
    Add a custom `securityContext` to the RBAC Manager pod.
    """
    [...str]: any

schema ValuesProvider:
    r"""
    ValuesProvider

    Attributes
    ----------
    defaultActivations : [str], optional
        Define entries for the default managed resource activation policy. If defined, a default MRAP will contain these activations.
    packages : [any], optional
        A list of Provider packages to install.
    """
    [...str]: any
    defaultActivations?: [str]
    packages?: [any]

schema ValuesRbacManager:
    r"""
    ValuesRbacManager

    Attributes
    ----------
    affinity : ValuesRbacManagerAffinity, optional
        Add `affinities` to the RBAC Manager pod deployment.
    args : [any], optional
        Add custom arguments to the RBAC Manager pod.
    deploy : bool, optional, default is True
        Deploy the RBAC Manager pod and its required roles.
    leaderElection : bool, optional, default is True
        Enable [leader election](https://docs.crossplane.io/latest/concepts/pods/#leader-election) for the RBAC Manager pod.
    nodeSelector : ValuesRbacManagerNodeSelector, optional
        Add `nodeSelectors` to the RBAC Manager pod deployment.
    replicas : int, optional, default is 1
        The number of RBAC Manager pod `replicas` to deploy.
    revisionHistoryLimit : any, optional, default is "null"
        The number of RBAC Manager ReplicaSets to retain.
    skipAggregatedClusterRoles : bool, optional, default is False
        Don't install aggregated Crossplane ClusterRoles.
    tolerations : [any], optional
        Add `tolerations` to the RBAC Manager pod deployment.
    topologySpreadConstraints : [any], optional
        Add `topologySpreadConstraints` to the RBAC Manager pod deployment.
    """
    [...str]: any
    affinity?: ValuesRbacManagerAffinity
    args?: [any]
    deploy?: bool
    leaderElection?: bool
    nodeSelector?: ValuesRbacManagerNodeSelector
    replicas?: int
    revisionHistoryLimit?: any
    skipAggregatedClusterRoles?: bool
    tolerations?: [any]
    topologySpreadConstraints?: [any]

schema ValuesRbacManagerAffinity:
    r"""
    Add `affinities` to the RBAC Manager pod deployment.
    """
    [...str]: any

schema ValuesRbacManagerNodeSelector:
    r"""
    Add `nodeSelectors` to the RBAC Manager pod deployment.
    """
    [...str]: any

schema ValuesReadiness:
    r"""
    ValuesReadiness

    Attributes
    ----------
    port : str, optional, default is ""
        The port the readyz server listens on.
    """
    [...str]: any
    port?: str

schema ValuesRegistryCaBundleConfig:
    r"""
    ValuesRegistryCaBundleConfig

    Attributes
    ----------
    key : str, optional, default is ""
        The ConfigMap key containing a custom CA bundle to enable fetching packages from registries with unknown or untrusted certificates.
    name : str, optional, default is ""
        The ConfigMap name containing a custom CA bundle to enable fetching packages from registries with unknown or untrusted certificates.
    """
    [...str]: any
    key?: str
    name?: str

schema ValuesResourcesCrossplane:
    r"""
    ValuesResourcesCrossplane

    Attributes
    ----------
    limits : ValuesResourcesCrossplaneLimits, optional
    requests : ValuesResourcesCrossplaneRequests, optional
    """
    [...str]: any
    limits?: ValuesResourcesCrossplaneLimits
    requests?: ValuesResourcesCrossplaneRequests

schema ValuesResourcesCrossplaneLimits:
    r"""
    ValuesResourcesCrossplaneLimits

    Attributes
    ----------
    cpu : str, optional, default is "500m"
        CPU resource limits for the Crossplane pod.
    memory : str, optional, default is "1024Mi"
        Memory resource limits for the Crossplane pod.
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesResourcesCrossplaneRequests:
    r"""
    ValuesResourcesCrossplaneRequests

    Attributes
    ----------
    cpu : str, optional, default is "100m"
        CPU resource requests for the Crossplane pod.
    memory : str, optional, default is "256Mi"
        Memory resource requests for the Crossplane pod.
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesResourcesRbacmanager:
    r"""
    ValuesResourcesRbacmanager

    Attributes
    ----------
    limits : ValuesResourcesRbacmanagerLimits, optional
    requests : ValuesResourcesRbacmanagerRequests, optional
    """
    [...str]: any
    limits?: ValuesResourcesRbacmanagerLimits
    requests?: ValuesResourcesRbacmanagerRequests

schema ValuesResourcesRbacmanagerLimits:
    r"""
    ValuesResourcesRbacmanagerLimits

    Attributes
    ----------
    cpu : str, optional, default is "100m"
        CPU resource limits for the RBAC Manager pod.
    memory : str, optional, default is "512Mi"
        Memory resource limits for the RBAC Manager pod.
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesResourcesRbacmanagerRequests:
    r"""
    ValuesResourcesRbacmanagerRequests

    Attributes
    ----------
    cpu : str, optional, default is "100m"
        CPU resource requests for the RBAC Manager pod.
    memory : str, optional, default is "256Mi"
        Memory resource requests for the RBAC Manager pod.
    """
    [...str]: any
    cpu?: str
    memory?: str

schema ValuesSecurityContextCrossplane:
    r"""
    ValuesSecurityContextCrossplane

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
        Enable `allowPrivilegeEscalation` for the Crossplane pod.
    readOnlyRootFilesystem : bool, optional, default is True
        Set the Crossplane pod root file system as read-only.
    runAsGroup : int, optional, default is 65532
        The group ID used by the Crossplane pod.
    runAsUser : int, optional, default is 65532
        The user ID used by the Crossplane pod.
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    readOnlyRootFilesystem?: bool
    runAsGroup?: int
    runAsUser?: int

schema ValuesSecurityContextRbacmanager:
    r"""
    ValuesSecurityContextRbacmanager

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
        Enable `allowPrivilegeEscalation` for the RBAC Manager pod.
    readOnlyRootFilesystem : bool, optional, default is True
        Set the RBAC Manager pod root file system as read-only.
    runAsGroup : int, optional, default is 65532
        The group ID used by the RBAC Manager pod.
    runAsUser : int, optional, default is 65532
        The user ID used by the RBAC Manager pod.
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    readOnlyRootFilesystem?: bool
    runAsGroup?: int
    runAsUser?: int

schema ValuesService:
    r"""
    ValuesService

    Attributes
    ----------
    customAnnotations : ValuesServiceCustomAnnotations, optional
        Configure annotations on the service object. Only enabled when webhooks.enabled = true
    """
    [...str]: any
    customAnnotations?: ValuesServiceCustomAnnotations

schema ValuesServiceAccount:
    r"""
    ValuesServiceAccount

    Attributes
    ----------
    create : bool, optional, default is True
        Specifies whether Crossplane ServiceAccount should be created
    customAnnotations : ValuesServiceAccountCustomAnnotations, optional
        Add custom `annotations` to the Crossplane ServiceAccount.
    name : str, optional, default is ""
        Provide the name of an already created Crossplane ServiceAccount. Required when `serviceAccount.create` is `false`
    """
    [...str]: any
    create?: bool
    customAnnotations?: ValuesServiceAccountCustomAnnotations
    name?: str

schema ValuesServiceAccountCustomAnnotations:
    r"""
    Add custom `annotations` to the Crossplane ServiceAccount.
    """
    [...str]: any

schema ValuesServiceCustomAnnotations:
    r"""
    Configure annotations on the service object. Only enabled when webhooks.enabled = true
    """
    [...str]: any

schema ValuesWebhooks:
    r"""
    ValuesWebhooks

    Attributes
    ----------
    enabled : bool, optional, default is True
        Enable webhooks for Crossplane and installed Provider packages.
    port : str, optional, default is ""
        The port the webhook server listens on.
    """
    [...str]: any
    enabled?: bool
    port?: str

