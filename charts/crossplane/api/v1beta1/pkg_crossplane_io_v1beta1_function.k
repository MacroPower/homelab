"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema Function:
    r"""
    A Function installs an OCI compatible Crossplane package, extending
    Crossplane with support for a new kind of composition function.

    Read the Crossplane documentation for
    [more information about Functions](https://docs.crossplane.io/latest/concepts/composition-functions).

    Attributes
    ----------
    apiVersion : str, default is "pkg.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PkgCrossplaneIoV1beta1FunctionSpec, default is Undefined, optional
        spec
    status : PkgCrossplaneIoV1beta1FunctionStatus, default is Undefined, optional
        status
    """
    apiVersion: "pkg.crossplane.io/v1beta1" = "pkg.crossplane.io/v1beta1"

    kind: "Function" = "Function"

    metadata?: v1.ObjectMeta
    spec?: PkgCrossplaneIoV1beta1FunctionSpec
    status?: PkgCrossplaneIoV1beta1FunctionStatus

schema PkgCrossplaneIoV1beta1FunctionSpec:
    r"""
    FunctionSpec specifies the configuration of a Function.

    Attributes
    ----------
    commonLabels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ignoreCrossplaneConstraints : bool, default is Undefined, optional
        IgnoreCrossplaneConstraints indicates to the package manager whether to
        honor Crossplane version constrains specified by the package.
        Default is false.
    package : str, default is Undefined, required
        Package is the name of the package that is being requested.
        must be a fully qualified image name, including the registry,
        repository, and tag. for example, "registry.example.com/repo/package:tag".
    packagePullPolicy : str, default is "IfNotPresent", optional
        PackagePullPolicy defines the pull policy for the package.
        Default is IfNotPresent.
    packagePullSecrets : [PkgCrossplaneIoV1beta1FunctionSpecPackagePullSecretsItems0], default is Undefined, optional
        PackagePullSecrets are named secrets in the same namespace that can be used
        to fetch packages from private registries.
    revisionActivationPolicy : str, default is "Automatic", optional
        RevisionActivationPolicy specifies how the package controller should
        update from one revision to the next. Options are Automatic or Manual.
        Default is Automatic.
    revisionHistoryLimit : int, default is 1, optional
        RevisionHistoryLimit dictates how the package controller cleans up old
        inactive package revisions.
        Defaults to 1. Can be disabled by explicitly setting to 0.
    runtimeConfigRef : PkgCrossplaneIoV1beta1FunctionSpecRuntimeConfigRef, default is Undefined, optional
        runtime config ref
    skipDependencyResolution : bool, default is Undefined, optional
        SkipDependencyResolution indicates to the package manager whether to skip
        resolving dependencies for a package. Setting this value to true may have
        unintended consequences.
        Default is false.
    """
    commonLabels?: {str:str}
    ignoreCrossplaneConstraints?: bool = False
    package: str

    packagePullPolicy?: str = "IfNotPresent"
    packagePullSecrets?: [PkgCrossplaneIoV1beta1FunctionSpecPackagePullSecretsItems0]
    revisionActivationPolicy?: str = "Automatic"
    revisionHistoryLimit?: int = 1
    runtimeConfigRef?: PkgCrossplaneIoV1beta1FunctionSpecRuntimeConfigRef
    skipDependencyResolution?: bool = False

schema PkgCrossplaneIoV1beta1FunctionSpecPackagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    """
    name?: str = ""

schema PkgCrossplaneIoV1beta1FunctionSpecRuntimeConfigRef:
    r"""
    RuntimeConfigRef references a RuntimeConfig resource that will be used
    to configure the package runtime.

    Attributes
    ----------
    apiVersion : str, default is "pkg.crossplane.io/v1beta1", optional
        API version of the referent.
    kind : str, default is "DeploymentRuntimeConfig", optional
        Kind of the referent.
    name : str, default is Undefined, required
        Name of the RuntimeConfig.
    """
    apiVersion?: str = "pkg.crossplane.io/v1beta1"
    kind?: str = "DeploymentRuntimeConfig"
    name: str

schema PkgCrossplaneIoV1beta1FunctionStatus:
    r"""
    FunctionStatus represents the observed state of a Function.

    Attributes
    ----------
    appliedImageConfigRefs : [PkgCrossplaneIoV1beta1FunctionStatusAppliedImageConfigRefsItems0], default is Undefined, optional
        AppliedImageConfigRefs records any image configs that were applied in
        reconciling this package, and what they were used for.
    conditions : [PkgCrossplaneIoV1beta1FunctionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    currentIdentifier : str, default is Undefined, optional
        CurrentIdentifier is the most recent package source that was used to
        produce a revision. The package manager uses this field to determine
        whether to check for package updates for a given source when
        packagePullPolicy is set to IfNotPresent. Manually removing this field
        will cause the package manager to check that the current revision is
        correct for the given package source.
    currentRevision : str, default is Undefined, optional
        CurrentRevision is the name of the current package revision. It will
        reflect the most up to date revision, whether it has been activated or
        not.
    resolvedPackage : str, default is Undefined, optional
        ResolvedPackage is the name of the package that was used for version
        resolution. It may be different from spec.package if the package path was
        rewritten using an image config.
    """
    appliedImageConfigRefs?: [PkgCrossplaneIoV1beta1FunctionStatusAppliedImageConfigRefsItems0]
    conditions?: [PkgCrossplaneIoV1beta1FunctionStatusConditionsItems0]
    currentIdentifier?: str
    currentRevision?: str
    resolvedPackage?: str

schema PkgCrossplaneIoV1beta1FunctionStatusAppliedImageConfigRefsItems0:
    r"""
    ImageConfigRef is a reference to an image config that indicates how the
    referenced image config was used by the package manager.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the image config.
    reason : str, default is Undefined, required
        Reason indicates what the image config was used for.
    """
    name: str

    reason: str

schema PkgCrossplaneIoV1beta1FunctionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

