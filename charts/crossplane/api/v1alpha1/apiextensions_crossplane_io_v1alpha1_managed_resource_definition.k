"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema ManagedResourceDefinition:
    r"""
    A ManagedResourceDefinition defines the schema for a new custom Kubernetes API.

    Attributes
    ----------
    apiVersion : str, default is "apiextensions.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedResourceDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpec, default is Undefined, optional
        spec
    status : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatus, default is Undefined, optional
        status
    """
    apiVersion: "apiextensions.crossplane.io/v1alpha1" = "apiextensions.crossplane.io/v1alpha1"

    kind: "ManagedResourceDefinition" = "ManagedResourceDefinition"

    metadata?: v1.ObjectMeta
    spec?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpec
    status?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatus

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpec:
    r"""
    ManagedResourceDefinitionSpec specifies the desired state of the resource definition.

    Attributes
    ----------
    connectionDetails : [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConnectionDetailsItems0], default is Undefined, optional
        ConnectionDetails is an array of connection detail keys and descriptions.
    conversion : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversion, default is Undefined, optional
        conversion
    group : str, default is Undefined, required
        Group is the API group of the defined custom resource.
        The custom resources are served under `/apis/<group>/...`.
        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
    names : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecNames, default is Undefined, required
        names
    preserveUnknownFields : bool, default is Undefined, optional
        PreserveUnknownFields indicates that object fields which are not specified
        in the OpenAPI schema should be preserved when persisting to storage.
        apiVersion, kind, metadata and known fields inside metadata are always preserved.
        This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`.
        See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.
    scope : str, default is "Namespaced", required
        Scope indicates whether the defined custom resource is cluster- or namespace-scoped.
        Allowed values are `Cluster` and `Namespaced`.
    state : str, default is "Inactive", optional
        State toggles whether the underlying CRD is created or not.
    versions : [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0], default is Undefined, required
        Versions is the list of all API versions of the defined custom resource.
        Version names are used to compute the order in which served versions are listed in API discovery.
        If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered
        lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version),
        then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first
        by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing
        major version, then minor version. An example sorted list of versions:
        v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
    """
    connectionDetails?: [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConnectionDetailsItems0]
    conversion?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversion
    group: str

    names: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecNames

    preserveUnknownFields?: bool
    scope: "Namespaced" | "Cluster" = "Namespaced"

    state?: "Active" | "Inactive" = "Inactive"
    versions: [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0]

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConnectionDetailsItems0:
    r"""
    ConnectionDetail holds keys and descriptions of connection secrets.

    Attributes
    ----------
    description : str, default is Undefined, required
        Description of how the key is used.
    name : str, default is Undefined, required
        Name of the key.
    """
    description: str

    name: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversion:
    r"""
    Conversion defines conversion settings for the CRD.

    Attributes
    ----------
    strategy : str, default is Undefined, required
        strategy specifies how custom resources are converted between versions. Allowed values are:
        - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
        - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
          is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
    webhook : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhook, default is Undefined, optional
        webhook
    """
    strategy: str

    webhook?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhook

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhook:
    r"""
    webhook describes how to call the conversion webhook. Required when `strategy` is set to `"Webhook"`.

    Attributes
    ----------
    clientConfig : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfig, default is Undefined, optional
        client config
    conversionReviewVersions : [str], default is Undefined, required
        conversionReviewVersions is an ordered list of preferred `ConversionReview`
        versions the Webhook expects. The API server will use the first version in
        the list which it supports. If none of the versions specified in this list
        are supported by API server, conversion will fail for the custom resource.
        If a persisted Webhook configuration specifies allowed versions and does not
        include any versions known to the API Server, calls to the webhook will fail.
    """
    clientConfig?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfig
    conversionReviewVersions: [str]

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfig:
    r"""
    clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
        If unspecified, system trust roots on the apiserver are used.
    service : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfigService, default is Undefined, optional
        service
    url : str, default is Undefined, optional
        url gives the location of the webhook, in standard URL form
        (`scheme://host:port/path`). Exactly one of `url` or `service`
        must be specified.

        The `host` should not refer to a service running in the cluster; use
        the `service` field instead. The host might be resolved via external
        DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
        in-cluster DNS as that would be a layering violation). `host` may
        also be an IP address.

        Please note that using `localhost` or `127.0.0.1` as a `host` is
        risky unless you take great care to run this webhook on all hosts
        which run an apiserver which might need to make calls to this
        webhook. Such installs are likely to be non-portable, i.e., not easy
        to turn up in a new cluster.

        The scheme must be "https"; the URL must begin with "https://".

        A path is optional, and if present may be any string permissible in
        a URL. You may use the path to pass an arbitrary string to the
        webhook, for example, a cluster identifier.

        Attempting to use a user or basic auth e.g. "user:password@" is not
        allowed. Fragments ("#...") and query parameters ("?...") are not
        allowed, either.
    """
    caBundle?: str
    service?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfigService
    url?: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecConversionWebhookClientConfigService:
    r"""
    service is a reference to the service for this webhook. Either
    service or url must be specified.

    If the webhook is running within the cluster, then you should use `service`.

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the name of the service.
        Required
    namespace : str, default is Undefined, required
        namespace is the namespace of the service.
        Required
    path : str, default is Undefined, optional
        path is an optional URL path at which the webhook will be contacted.
    port : int, default is Undefined, optional
        port is an optional service port at which the webhook will be contacted.
        `port` should be a valid port number (1-65535, inclusive).
        Defaults to 443 for backward compatibility.
    """
    name: str

    namespace: str

    path?: str
    port?: int

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecNames:
    r"""
    Names specify the resource and kind names for the custom resource.

    Attributes
    ----------
    categories : [str], default is Undefined, optional
        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
        This is published in API discovery documents, and used by clients to support invocations like
        `kubectl get all`.
    kind : str, default is Undefined, required
        kind is the serialized kind of the resource. It is normally CamelCase and singular.
        Custom resource instances will use this value as the `kind` attribute in API calls.
    listKind : str, default is Undefined, optional
        listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
    plural : str, default is Undefined, required
        plural is the plural name of the resource to serve.
        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
        Must be all lowercase.
    shortNames : [str], default is Undefined, optional
        shortNames are short names for the resource, exposed in API discovery documents,
        and used by clients to support invocations like `kubectl get <shortname>`.
        It must be all lowercase.
    singular : str, default is Undefined, optional
        singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
    """
    categories?: [str]
    kind: str

    listKind?: str
    plural: str

    shortNames?: [str]
    singular?: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0:
    r"""
    CustomResourceDefinitionVersion describes a version for CRD.

    Attributes
    ----------
    additionalPrinterColumns : [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0AdditionalPrinterColumnsItems0], default is Undefined, optional
        AdditionalPrinterColumns specifies additional columns returned in Table output.
        See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
        If no columns are specified, a single column displaying the age of the custom resource is used.
    deprecated : bool, default is Undefined, optional
        Deprecated indicates this version of the custom resource API is deprecated.
        When set to true, API requests to this version receive a warning header in the server response.
        Defaults to false.
    deprecationWarning : str, default is Undefined, optional
        DeprecationWarning overrides the default warning returned to API clients.
        May only be set when `deprecated` is true.
        The default warning indicates this version is deprecated and recommends use
        of the newest served version of equal or greater stability, if one exists.
    name : str, default is Undefined, required
        Name is the version name, e.g. “v1”, “v2beta1”, etc.
        The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
    $schema : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Schema, default is Undefined, optional
        schema
    selectableFields : [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SelectableFieldsItems0], default is Undefined, optional
        SelectableFields specifies paths to fields that may be used as field selectors.
        A maximum of 8 selectable fields are allowed.
        See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
    served : bool, default is Undefined, required
        Served is a flag enabling/disabling this version from being served via REST APIs
    storage : bool, default is Undefined, required
        Storage indicates this version should be used when persisting custom resources to storage.
        There must be exactly one version with storage=true.
    subresources : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Subresources, default is Undefined, optional
        subresources
    """
    additionalPrinterColumns?: [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0AdditionalPrinterColumnsItems0]
    deprecated?: bool
    deprecationWarning?: str
    name: str

    $schema?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Schema
    selectableFields?: [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SelectableFieldsItems0]
    served: bool

    storage: bool

    subresources?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Subresources

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0AdditionalPrinterColumnsItems0:
    r"""
    CustomResourceColumnDefinition specifies a column for server side printing.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description is a human readable description of this column.
    format : str, default is Undefined, optional
        format is an optional OpenAPI type definition for this column. The 'name' format is applied
        to the primary identifier column to assist in clients identifying column is the resource name.
        See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
    jsonPath : str, default is Undefined, required
        jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
        each custom resource to produce the value for this column.
    name : str, default is Undefined, required
        name is a human readable name for the column.
    priority : int, default is Undefined, optional
        priority is an integer defining the relative importance of this column compared to others. Lower
        numbers are considered higher priority. Columns that may be omitted in limited space scenarios
        should be given a priority greater than 0.
    $type : str, default is Undefined, required
        type is an OpenAPI type definition for this column.
        See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
    """
    description?: str
    format?: str
    jsonPath: str

    name: str

    priority?: int
    $type: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Schema:
    r"""
    Schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.

    Attributes
    ----------
    openAPIV3Schema : any, default is Undefined, optional
        OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and
        pruning.
    """
    openAPIV3Schema?: any

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SelectableFieldsItems0:
    r"""
    SelectableField specifies the JSON path of a field that may be used with field selectors.

    Attributes
    ----------
    jsonPath : str, default is Undefined, required
        jsonPath is a simple JSON path which is evaluated against each custom resource to produce a
        field selector value.
        Only JSON paths without the array notation are allowed.
        Must point to a field of type string, boolean or integer. Types with enum values
        and strings with formats are allowed.
        If jsonPath refers to absent field in a resource, the jsonPath evaluates to an empty string.
        Must not point to metdata fields.
        Required.
    """
    jsonPath: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0Subresources:
    r"""
    Subresources specify what subresources this version of the defined custom resource have.

    Attributes
    ----------
    scale : ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SubresourcesScale, default is Undefined, optional
        scale
    status : any, default is Undefined, optional
        status indicates the custom resource should serve a `/status` subresource.
        When enabled:
        1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object.
        2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
    """
    scale?: ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SubresourcesScale
    status?: any

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionSpecVersionsItems0SubresourcesScale:
    r"""
    scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.

    Attributes
    ----------
    labelSelectorPath : str, default is Undefined, optional
        labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`.
        Only JSON paths without the array notation are allowed.
        Must be a JSON Path under `.status` or `.spec`.
        Must be set to work with HorizontalPodAutoscaler.
        The field pointed by this JSON path must be a string field (not a complex selector struct)
        which contains a serialized label selector in string form.
        More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
        If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale`
        subresource will default to the empty string.
    specReplicasPath : str, default is Undefined, required
        specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`.
        Only JSON paths without the array notation are allowed.
        Must be a JSON Path under `.spec`.
        If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
    statusReplicasPath : str, default is Undefined, required
        statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`.
        Only JSON paths without the array notation are allowed.
        Must be a JSON Path under `.status`.
        If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource
        will default to 0.
    """
    labelSelectorPath?: str
    specReplicasPath: str

    statusReplicasPath: str

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatus:
    r"""
    ManagedResourceDefinitionStatus shows the observed state of the resource definition.

    Attributes
    ----------
    conditions : [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """
    conditions?: [ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatusConditionsItems0]

schema ApiextensionsCrossplaneIoV1alpha1ManagedResourceDefinitionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

