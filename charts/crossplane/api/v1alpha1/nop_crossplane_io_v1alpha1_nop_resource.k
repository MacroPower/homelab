"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema NopResource:
    r"""
    A NopResource is an example API type.

    Attributes
    ----------
    apiVersion : str, default is "nop.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NopResource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NopCrossplaneIoV1alpha1NopResourceSpec, default is Undefined, required
        spec
    status : NopCrossplaneIoV1alpha1NopResourceStatus, default is Undefined, optional
        status
    """
    apiVersion: "nop.crossplane.io/v1alpha1" = "nop.crossplane.io/v1alpha1"

    kind: "NopResource" = "NopResource"

    metadata?: v1.ObjectMeta
    spec: NopCrossplaneIoV1alpha1NopResourceSpec

    status?: NopCrossplaneIoV1alpha1NopResourceStatus

schema NopCrossplaneIoV1alpha1NopResourceSpec:
    r"""
    A NopResourceSpec defines the desired state of a NopResource.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : NopCrossplaneIoV1alpha1NopResourceSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : NopCrossplaneIoV1alpha1NopResourceSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NopCrossplaneIoV1alpha1NopResourceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: NopCrossplaneIoV1alpha1NopResourceSpecForProvider

    providerConfigRef?: NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRef
    providerRef?: NopCrossplaneIoV1alpha1NopResourceSpecProviderRef
    publishConnectionDetailsTo?: NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: NopCrossplaneIoV1alpha1NopResourceSpecWriteConnectionSecretToRef

schema NopCrossplaneIoV1alpha1NopResourceSpecForProvider:
    r"""
    NopResourceParameters are the configurable fields of a NopResource.

    Attributes
    ----------
    conditionAfter : [NopCrossplaneIoV1alpha1NopResourceSpecForProviderConditionAfterItems0], default is Undefined, optional
        ConditionAfter can be used to set status conditions after a specified time. By default a NopResource will only have a status condition of Type: Synced. It will never have a status condition of Type: Ready unless one is configured here.
    connectionDetails : [NopCrossplaneIoV1alpha1NopResourceSpecForProviderConnectionDetailsItems0], default is Undefined, optional
        ConnectionDetails that this NopResource should emit on each reconcile.
    fields : any, default is Undefined, optional
        Fields is an arbitrary object you can patch to and from. It has no schema, is not validated, and is not used by the NopResource controller.
    """
    conditionAfter?: [NopCrossplaneIoV1alpha1NopResourceSpecForProviderConditionAfterItems0]
    connectionDetails?: [NopCrossplaneIoV1alpha1NopResourceSpecForProviderConnectionDetailsItems0]
    fields?: any

schema NopCrossplaneIoV1alpha1NopResourceSpecForProviderConditionAfterItems0:
    r"""
    ResourceConditionAfter specifies a condition of a NopResource that should be set after a certain duration.

    Attributes
    ----------
    conditionReason : str, default is Undefined, optional
        ConditionReason to set - e.g. Available.
    conditionStatus : str, default is Undefined, required
        ConditionStatus to set - e.g. True.
    conditionType : str, default is Undefined, required
        ConditionType to set - e.g. Ready.
    time : str, default is Undefined, required
        Time is the duration after which the condition should be set.
    """
    conditionReason?: str
    conditionStatus: str

    conditionType: str

    time: str

schema NopCrossplaneIoV1alpha1NopResourceSpecForProviderConnectionDetailsItems0:
    r"""
    ResourceConnectionDetail specifies a connection detail a NopResource should emit.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the connection detail.
    value : str, default is Undefined, required
        Value of the connection detail.
    """
    name: str

    value: str

schema NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRefPolicy

schema NopCrossplaneIoV1alpha1NopResourceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema NopCrossplaneIoV1alpha1NopResourceSpecProviderRef:
    r"""
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NopCrossplaneIoV1alpha1NopResourceSpecProviderRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: NopCrossplaneIoV1alpha1NopResourceSpecProviderRefPolicy

schema NopCrossplaneIoV1alpha1NopResourceSpecProviderRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRef
    metadata?: NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToMetadata
    name: str

schema NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRefPolicy

schema NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema NopCrossplaneIoV1alpha1NopResourceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema NopCrossplaneIoV1alpha1NopResourceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema NopCrossplaneIoV1alpha1NopResourceStatus:
    r"""
    A NopResourceStatus represents the observed state of a NopResource.

    Attributes
    ----------
    atProvider : NopCrossplaneIoV1alpha1NopResourceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NopCrossplaneIoV1alpha1NopResourceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """
    atProvider?: NopCrossplaneIoV1alpha1NopResourceStatusAtProvider
    conditions?: [NopCrossplaneIoV1alpha1NopResourceStatusConditionsItems0]

schema NopCrossplaneIoV1alpha1NopResourceStatusAtProvider:
    r"""
    NopResourceObservation are the observable fields of a NopResource.

    Attributes
    ----------
    fields : any, default is Undefined, optional
        Fields is an arbitrary object you can patch to and from. It has no schema, is not validated, and is not used by the NopResource controller.
    """
    fields?: any

schema NopCrossplaneIoV1alpha1NopResourceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    reason: str

    status: str

    $type: str

