"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema WatchOperation:
    r"""
    A WatchOperation creates Operations when watched resources change.

    Attributes
    ----------
    apiVersion : str, default is "ops.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "WatchOperation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpsCrossplaneIoV1alpha1WatchOperationSpec, default is Undefined, optional
        spec
    status : OpsCrossplaneIoV1alpha1WatchOperationStatus, default is Undefined, optional
        status
    """
    apiVersion: "ops.crossplane.io/v1alpha1" = "ops.crossplane.io/v1alpha1"

    kind: "WatchOperation" = "WatchOperation"

    metadata?: v1.ObjectMeta
    spec?: OpsCrossplaneIoV1alpha1WatchOperationSpec
    status?: OpsCrossplaneIoV1alpha1WatchOperationStatus

schema OpsCrossplaneIoV1alpha1WatchOperationSpec:
    r"""
    WatchOperationSpec specifies the desired state of a WatchOperation.

    Attributes
    ----------
    concurrencyPolicy : str, default is "Allow", optional
        ConcurrencyPolicy specifies how to treat concurrent executions of an
        operation.
    failedHistoryLimit : int, default is 1, optional
        FailedHistoryLimit is the number of failed Operations to retain.
    operationTemplate : OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplate, default is Undefined, required
        operation template
    successfulHistoryLimit : int, default is 3, optional
        SuccessfulHistoryLimit is the number of successful Operations to retain.
    watch : OpsCrossplaneIoV1alpha1WatchOperationSpecWatch, default is Undefined, required
        watch
    """
    concurrencyPolicy?: "Allow" | "Forbid" | "Replace" = "Allow"
    failedHistoryLimit?: int = 1
    operationTemplate: OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplate

    successfulHistoryLimit?: int = 3
    watch: OpsCrossplaneIoV1alpha1WatchOperationSpecWatch

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplate:
    r"""
    OperationTemplate is the template for the Operation to be created.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        Standard object metadata.
    spec : OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpec, default is Undefined, required
        spec
    """
    metadata?: any
    spec: OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpec

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpec:
    r"""
    Spec is the specification of the Operation to be created.

    Attributes
    ----------
    mode : str, default is "Pipeline", required
        Mode controls what type or "mode" of operation will be used.

        "Pipeline" indicates that an Operation specifies a pipeline of
        functions, each of which is responsible for implementing its logic.
    pipeline : [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0], default is Undefined, required
        Pipeline is a list of operation function steps that will be used when
        this operation runs.
    retryLimit : int, default is Undefined, optional
        RetryLimit configures how many times the operation may fail. When the
        failure limit is exceeded, the operation will not be retried.
    """
    mode: "Pipeline" = "Pipeline"

    pipeline: [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0]

    retryLimit?: int

    check:
        len(pipeline) >= 1
        len(pipeline) <= 99

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0:
    r"""
    A PipelineStep in an operation function pipeline.

    Attributes
    ----------
    credentials : [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0], default is Undefined, optional
        Credentials are optional credentials that the operation function needs.
    functionRef : OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0FunctionRef, default is Undefined, required
        function ref
    input : any, default is Undefined, optional
        Input is an optional, arbitrary Kubernetes resource (i.e. a resource
        with an apiVersion and kind) that will be passed to the unction as
        the 'input' of its RunFunctionRequest.
    requirements : OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0Requirements, default is Undefined, optional
        requirements
    step : str, default is Undefined, required
        Step name. Must be unique within its Pipeline.
    """
    credentials?: [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0]
    functionRef: OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0FunctionRef

    input?: any
    requirements?: OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0Requirements
    step: str

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0:
    r"""
    FunctionCredentials are optional credentials that a function
    needs to run.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this set of credentials.
    secretRef : OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0SecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source of the function credentials.
    """
    name: str

    secretRef?: OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0SecretRef
    source: "None" | "Secret"

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0CredentialsItems0SecretRef:
    r"""
    A SecretRef is a reference to a secret containing credentials that should
    be supplied to the function.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0FunctionRef:
    r"""
    FunctionRef is a reference to the function this step should
    execute.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced function.
    """
    name: str

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0Requirements:
    r"""
    Requirements are resource requirements that will be satisfied before
    this pipeline step is called for the first time. This allows
    pre-populating required resources without requiring a function to
    request them first.

    Attributes
    ----------
    requiredResources : [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0RequirementsRequiredResourcesItems0], default is Undefined, optional
        RequiredResources that will be fetched before this pipeline step
        is called for the first time.
    """
    requiredResources?: [OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0RequirementsRequiredResourcesItems0]

schema OpsCrossplaneIoV1alpha1WatchOperationSpecOperationTemplateSpecPipelineItems0RequirementsRequiredResourcesItems0:
    r"""
    RequiredResourceSelector selects resources that should be fetched before
    a pipeline step runs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        APIVersion of resources to select.
    kind : str, default is Undefined, required
        Kind of resources to select.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels matches resources by label selector. Only one of Name or
        MatchLabels may be specified.
    name : str, default is Undefined, optional
        Name matches a single resource by name. Only one of Name or
        MatchLabels may be specified.
    namespace : str, default is Undefined, optional
        Namespace to search for resources. Optional for cluster-scoped resources.
    requirementName : str, default is Undefined, required
        RequirementName uniquely identifies this group of resources.
        This name will be used as the key in RunFunctionRequest.required_resources.
    """
    apiVersion: str

    kind: str

    matchLabels?: {str:str}
    name?: str
    namespace?: str
    requirementName: str

schema OpsCrossplaneIoV1alpha1WatchOperationSpecWatch:
    r"""
    Watch specifies the resource to watch.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        APIVersion of the resource to watch.
    kind : str, default is Undefined, required
        Kind of the resource to watch.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels selects resources by label. If empty, all resources of the
        specified kind are watched.
    namespace : str, default is Undefined, optional
        Namespace selects resources in a specific namespace. If empty, all
        namespaces are watched. Only applicable for namespaced resources.
    """
    apiVersion: str

    kind: str

    matchLabels?: {str:str}
    namespace?: str

schema OpsCrossplaneIoV1alpha1WatchOperationStatus:
    r"""
    WatchOperationStatus represents the observed state of a WatchOperation.

    Attributes
    ----------
    conditions : [OpsCrossplaneIoV1alpha1WatchOperationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    lastScheduleTime : str, default is Undefined, optional
        LastScheduleTime is the last time the WatchOperation created an
        Operation.
    lastSuccessfulTime : str, default is Undefined, optional
        LastSuccessfulTime is the last time the WatchOperation successfully
        completed an Operation.
    runningOperationRefs : [OpsCrossplaneIoV1alpha1WatchOperationStatusRunningOperationRefsItems0], default is Undefined, optional
        RunningOperationRefs is a list of currently running Operations.
    watchingResources : int, default is Undefined, optional
        WatchingResources is the number of resources this WatchOperation is
        currently watching.
    """
    conditions?: [OpsCrossplaneIoV1alpha1WatchOperationStatusConditionsItems0]
    lastScheduleTime?: str
    lastSuccessfulTime?: str
    runningOperationRefs?: [OpsCrossplaneIoV1alpha1WatchOperationStatusRunningOperationRefsItems0]
    watchingResources?: int

schema OpsCrossplaneIoV1alpha1WatchOperationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

schema OpsCrossplaneIoV1alpha1WatchOperationStatusRunningOperationRefsItems0:
    r"""
    A RunningOperationRef is a reference to a running operation.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the active operation.
    """
    name: str

