"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ClusterParseDefinition:
    r"""
    ClusterParseDefinition is the Schema for the clusterparsedefinitions API

    Attributes
    ----------
    apiVersion : str, default is "execution.securecodebox.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterParseDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        ParseDefinitionStatus defines the observed state of ParseDefinition
    """
    apiVersion: "execution.securecodebox.io/v1" = "execution.securecodebox.io/v1"

    kind: "ClusterParseDefinition" = "ClusterParseDefinition"

    metadata?: v1.ObjectMeta
    spec?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpec
    status?: any

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpec:
    r"""
    ParseDefinitionSpec defines the desired state of ParseDefinition

    Attributes
    ----------
    affinity : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinity, default is Undefined, optional
        affinity
    contentType : str, default is "Text", optional
        ContentType specifies the content type of the scan result
        Valid values are:
        - "Text" (default): the scan result is a text file
        - "Binary": the scan result is a binary file
    env : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0], default is Undefined, optional
        Env allows to specify environment vars for the parser container.
    image : str, default is Undefined, optional
        Image is the reference to the parser container image which ca transform the raw scan report into findings
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    imagePullSecrets : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets used to access private parser images
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector allows to specify a node selector, to control on which nodes you want a scan to run. See: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
    resources : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResources, default is Undefined, optional
        resources
    scopeLimiterAliases : {str:str}, default is Undefined, optional
        scope limiter aliases
    tolerations : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecTolerationsItems0], default is Undefined, optional
        Tolerations are a different way to control on which nodes your parser is executed. See https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
    ttlSecondsAfterFinished : int, default is Undefined, optional
        TTLSecondsAfterFinished configures the ttlSecondsAfterFinished field for the created parse job
    volumeMounts : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows to specify volume mounts for the parser container.
    volumes : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0], default is Undefined, optional
        Volumes allows to specify volumes for the parser container.
    """
    affinity?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinity
    contentType?: "Text" | "Binary" = "Text"
    env?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0]
    image?: str
    imagePullPolicy?: str
    imagePullSecrets?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecImagePullSecretsItems0]
    nodeSelector?: {str:str}
    resources?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResources
    scopeLimiterAliases?: {str:str}
    tolerations?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecTolerationsItems0]
    ttlSecondsAfterFinished?: int
    volumeMounts?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumeMountsItems0]
    volumes?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinity:
    r"""
    Affinity allows to specify a node affinity, to control on which nodes you want a parser to run. See: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/

    Attributes
    ----------
    nodeAffinity : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """
    nodeAffinity?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinity
    podAffinity?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinity
    podAntiAffinity?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinity

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0
    (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """
    preference: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]
    matchFields?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at
    scheduling time, the pod will not be scheduled onto the node.
    If the affinity requirements specified by this field cease to be met
    at some point during pod execution (e.g.

    Attributes
    ----------
    nodeSelectorTerms : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """
    nodeSelectorTerms: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of
    them are ANDed.
    The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]
    matchFields?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator
    that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at
        scheduling time, the pod will not be scheduled onto the node.
        If the affinity requirements specified by this field cease to be met
        at some point during pod execution (e.g.
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm,
        in the range 1-100.
    """
    podAffinityTerm: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    namespaceSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of...
    """
    labelSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector
    relative to the given namespace(s)) that this pod should be
    co-located (affinity) or not co-located (anti-affinity) with,
    where co-located is defined as running on a node whose value of
    the...

    Attributes
    ----------
    labelSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    namespaceSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of...
    """
    labelSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy
        the anti-affinity expressions specified by this field, but it may choose
        a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at
        scheduling time, the pod will not be scheduled onto the node.
        If the anti-affinity requirements specified by this field cease to be met
        at some point during pod execution (e.g.
    """
    preferredDuringSchedulingIgnoredDuringExecution?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]
    requiredDuringSchedulingIgnoredDuringExecution?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm,
        in the range 1-100.
    """
    podAffinityTerm: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    namespaceSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of...
    """
    labelSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector
    relative to the given namespace(s)) that this pod should be
    co-located (affinity) or not co-located (anti-affinity) with,
    where co-located is defined as running on a node whose value of
    the...

    Attributes
    ----------
    labelSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    mismatchLabelKeys : [str], default is Undefined, optional
        MismatchLabelKeys is a set of pod label keys to select which pods will
        be taken into consideration.
    namespaceSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to.
        The term is applied to the union of the namespaces listed in this field
        and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
        the labelSelector in the specified namespaces, where co-located is defined as running on a node
        whose value of the label with key topologyKey matches that of...
    """
    labelSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector
    matchLabelKeys?: [str]
    mismatchLabelKeys?: [str]
    namespaceSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector
    namespaces?: [str]
    topologyKey: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.
    If it's null, this PodAffinityTerm matches with no Pods.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    r"""
    A label query over the set of namespaces that the term applies to.
    The term is applied to the union of the namespaces selected by this field
    and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable.
        May consist of any printable ASCII characters except '='.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged.
    valueFrom : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFrom, default is Undefined, optional
        value from
    """
    name: str

    value?: str
    valueFrom?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFrom

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    fileKeyRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFileKeyRef, default is Undefined, optional
        file key ref
    resourceFieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """
    configMapKeyRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromConfigMapKeyRef
    fieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFieldRef
    fileKeyRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFileKeyRef
    resourceFieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromResourceFieldRef
    secretKeyRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromSecretKeyRef

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromFileKeyRef:
    r"""
    FileKeyRef selects a key of the env file.
    Requires the EnvFiles feature gate to be enabled.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key within the env file. An invalid key will prevent the pod from starting.
        The keys defined within a source may consist of any printable ASCII characters except '='.
    optional : bool, default is Undefined, optional
        Specify whether the file or its key must be defined. If the file or key
        does not exist, then the env var is not published.
        If optional is set to true and the specified key does not exist,
        the environment variable will not be set in the Pod's containers.
    path : str, default is Undefined, required
        The path within the volume from which to select the file.
        Must be relative and may not contain the '..' path or start with '..'.
    volumeName : str, default is Undefined, required
        The name of the volume mount containing the env file.
    """
    key: str

    optional?: bool = False
    path: str

    volumeName: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecEnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """
    key: str

    name?: str = ""
    optional?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResources:
    r"""
    Resources lets you control resource limits and requests for the parser container. See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.

        This field depends on the
        DynamicResourceAllocation feature gate.

        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
    """
    claims?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResourcesClaimsItems0]
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecResourcesClaimsItems0:
    r"""
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    request : str, default is Undefined, optional
        Request is the name chosen for a request in the referenced claim.
        If empty, everything from the claim is made available, otherwise
        only the result of this request.
    """
    name: str

    request?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches
    the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects.
        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys.
        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value.
        Valid operators are Exists and Equal. Defaults to Equal.
        Exists is equivalent to wildcard for value, so that a pod can
        tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be
        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
        it is not set, which means tolerate the taint forever (do not evict).
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to.
        If the operator is Exists, the value should be empty, otherwise just a regular string.
    """
    effect?: str
    key?: str
    operator?: str
    tolerationSeconds?: int
    value?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    recursiveReadOnly : str, default is Undefined, optional
        RecursiveReadOnly specifies whether read-only mounts should be handled
        recursively.

        If ReadOnly is false, this field has no meaning and must be unspecified.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
    """
    mountPath: str

    mountPropagation?: str
    name: str

    readOnly?: bool
    recursiveReadOnly?: str
    subPath?: str
    subPathExpr?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0:
    r"""
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    image : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Image, default is Undefined, optional
        image
    iscsi : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume.
        Must be a DNS_LABEL and unique within the pod.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """
    awsElasticBlockStore?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AwsElasticBlockStore
    azureDisk?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureDisk
    azureFile?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureFile
    cephfs?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cephfs
    cinder?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cinder
    configMap?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMap
    csi?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Csi
    downwardAPI?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPI
    emptyDir?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EmptyDir
    ephemeral?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Ephemeral
    fc?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Fc
    flexVolume?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolume
    flocker?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Flocker
    gcePersistentDisk?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GcePersistentDisk
    gitRepo?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GitRepo
    glusterfs?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Glusterfs
    hostPath?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0HostPath
    image?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Image
    iscsi?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Iscsi
    name: str

    nfs?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Nfs
    persistentVolumeClaim?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PersistentVolumeClaim
    photonPersistentDisk?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PhotonPersistentDisk
    portworxVolume?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PortworxVolume
    projected?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Projected
    quobyte?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Quobyte
    rbd?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Rbd
    scaleIO?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIO
    secret?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Secret
    storageos?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Storageos
    vsphereVolume?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0VsphereVolume

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AwsElasticBlockStore:
    r"""
    awsElasticBlockStore represents an AWS Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    Deprecated: AWSElasticBlockStore is deprecated.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount.
        If omitted, the default is to mount by volume name.
        Examples: For volume /dev/sda1, you specify the partition as "1".
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """
    fsType?: str
    partition?: int
    readOnly?: bool
    volumeID: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureDisk:
    r"""
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
    Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
    are redirected to the disk.csi.azure.com CSI driver.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is "ext4", optional
        fsType is Filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    """
    cachingMode?: str
    diskName: str

    diskURI: str

    fsType?: str = "ext4"
    kind?: str
    readOnly?: bool = False

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0AzureFile:
    r"""
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.
    Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
    are redirected to the file.csi.azure.com CSI driver.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """
    readOnly?: bool
    secretName: str

    shareName: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cephfs:
    r"""
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
    Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin
        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """
    monitors: [str]

    path?: str
    readOnly?: bool
    secretFile?: str
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CephfsSecretRef
    user?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CephfsSecretRef:
    r"""
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Cinder:
    r"""
    cinder represents a cinder volume attached and mounted on kubelets host machine.
    Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
    are redirected to the cinder.csi.openstack.org CSI driver.
    More info: https://examples.k8s.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder.
        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """
    fsType?: str
    readOnly?: bool
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CinderSecretRef
    volumeID: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CinderSecretRef:
    r"""
    secretRef is optional: points to a secret object containing parameters used to connect
    to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMap:
    r"""
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """
    defaultMode?: int
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMapItemsItems0]
    name?: str = ""
    optional?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Csi:
    r"""
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume.
        Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs".
        If not provided, the empty value is passed to the associated CSI driver
        which will determine the default filesystem to apply.
    nodePublishSecretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume.
        Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI
        driver. Consult your driver's documentation for supported values.
    """
    driver: str

    fsType?: str
    nodePublishSecretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CsiNodePublishSecretRef
    readOnly?: bool
    volumeAttributes?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0CsiNodePublishSecretRef:
    r"""
    nodePublishSecretRef is a reference to the secret object containing
    sensitive information to pass to the CSI driver to complete the CSI
    NodePublishVolume and NodeUnpublishVolume calls.
    This field is optional, and  may be empty if no secret is required.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPI:
    r"""
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a
        Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """
    defaultMode?: int
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """
    fieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0FieldRef
    mode?: int
    path: str

    resourceFieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EmptyDir:
    r"""
    emptyDir represents a temporary directory that shares a pod's lifetime.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory.
        The default is "" which means to use the node's default medium.
        Must be an empty string (default) or Memory.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume.
        The size limit is also applicable for memory medium.
    """
    medium?: str
    sizeLimit?: int | str

    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Ephemeral:
    r"""
    ephemeral represents a volume that is handled by a cluster storage driver.
    The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
    and deleted when the pod is removed.

    Attributes
    ----------
    volumeClaimTemplate : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """
    volumeClaimTemplate?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplate

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplate:
    r"""
    Will be used to create a stand-alone PVC to provision the volume.
    The pod in which this EphemeralVolumeSource is embedded will be the
    owner of the PVC, i.e. the PVC will be deleted together with the
    pod.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC
        when creating it. No other fields are allowed and will be rejected during
        validation.
    spec : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """
    metadata?: any
    spec: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpec

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    r"""
    The specification for the PersistentVolumeClaim. The entire content is
    copied unchanged into the PVC that gets created from this
    template. The same fields as in a PersistentVolumeClaim
    are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeAttributesClassName : str, default is Undefined, optional
        volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
        If specified, the CSI driver will create or update the volume with the attributes defined
        in the corresponding VolumeAttributesClass.
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim.
        Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """
    accessModes?: [str]
    dataSource?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource
    dataSourceRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef
    resources?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources
    selector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector
    storageClassName?: str
    volumeAttributesClassName?: str
    volumeMode?: str
    volumeName?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    r"""
    dataSource field can be used to specify either:
    * An existing VolumeSnapshot object (snapshot.storage.k8s.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """
    apiGroup?: str
    kind: str

    name: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    r"""
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
    volume is desired. This may be any object from a non-empty API group (non
    core object) or a PersistentVolumeClaim object.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced
        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference.
    """
    apiGroup?: str
    kind: str

    name: str

    namespace?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    r"""
    resources represents the minimum resources the volume should have.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
    """
    limits?: {str:int | str}
    requests?: {str:int | str}

    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits} if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests} if requests

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    r"""
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Fc:
    r"""
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids)
        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """
    fsType?: str
    lun?: int
    readOnly?: bool
    targetWWNs?: [str]
    wwids?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolume:
    r"""
    flexVolume represents a generic volume resource that is
    provisioned/attached using an exec based plugin.
    Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """
    driver: str

    fsType?: str
    options?: {str:str}
    readOnly?: bool
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolumeSecretRef

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0FlexVolumeSecretRef:
    r"""
    secretRef is Optional: secretRef is reference to the secret object containing
    sensitive information to pass to the plugin scripts. This may be
    empty if no secret object is specified.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Flocker:
    r"""
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
    Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
        should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """
    datasetName?: str
    datasetUUID?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GcePersistentDisk:
    r"""
    gcePersistentDisk represents a GCE Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
    gcePersistentDisk type are redirected to the pd.csi.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        More info: https://kubernetes.
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount.
        If omitted, the default is to mount by volume name.
        Examples: For volume /dev/sda1, you specify the partition as "1".
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """
    fsType?: str
    partition?: int
    pdName: str

    readOnly?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0GitRepo:
    r"""
    gitRepo represents a git repository at a particular revision.
    Deprecated: GitRepo is deprecated.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name.
        Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
        git repository.  Otherwise, if specified, the volume will contain the git repository in
        the subdirectory with the given name.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """
    directory?: str
    repository: str

    revision?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Glusterfs:
    r"""
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
    Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology.
    path : str, default is Undefined, required
        path is the Glusterfs volume path.
        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
        Defaults to false.
        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """
    endpoints: str

    path: str

    readOnly?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0HostPath:
    r"""
    hostPath represents a pre-existing file or directory on the host
    machine that is directly exposed to the container. This is generally
    used for system agents or other privileged things that are allowed
    to see the host machine.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host.
        If the path is a symlink, it will follow the link to the real path.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume
        Defaults to ""
        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """
    path: str

    $type?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Image:
    r"""
    image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        Policy for pulling OCI objects. Possible values are:
        Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
        Never: the kubelet never pulls the reference and only uses a local image or artifact.
    reference : str, default is Undefined, optional
        Required: Image or artifact reference to be used.
        Behaves in the same way as pod.spec.containers[*].image.
    """
    pullPolicy?: str
    reference?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Iscsi:
    r"""
    iscsi represents an ISCSI Disk resource that is attached to a
    kubelet's host machine and then exposed to the pod.
    More info: https://kubernetes.io/docs/concepts/storage/volumes/#iscsi

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name.
        If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
        <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is "default", optional
        iscsiInterface is the interface Name that uses an iSCSI transport.
        Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
        is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
        is other than default (typically TCP ports 860 and 3260).
    """
    chapAuthDiscovery?: bool
    chapAuthSession?: bool
    fsType?: str
    initiatorName?: str
    iqn: str

    iscsiInterface?: str = "default"
    lun: int

    portals?: [str]
    readOnly?: bool
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0IscsiSecretRef
    targetPortal: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0IscsiSecretRef:
    r"""
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Nfs:
    r"""
    nfs represents an NFS mount on the host that shares a pod's lifetime
    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions.
        Defaults to false.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """
    path: str

    readOnly?: bool
    server: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PersistentVolumeClaim:
    r"""
    persistentVolumeClaimVolumeSource represents a reference to a
    PersistentVolumeClaim in the same namespace.
    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts.
        Default false.
    """
    claimName: str

    readOnly?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PhotonPersistentDisk:
    r"""
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
    Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """
    fsType?: str
    pdID: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0PortworxVolume:
    r"""
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
    Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
    are redirected to the pxd.portworx.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """
    fsType?: str
    readOnly?: bool
    volumeID: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Projected:
    r"""
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    sources : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections. Each entry in this list
        handles one source.
    """
    defaultMode?: int
    sources?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types.
    Exactly one of these fields must be set.

    Attributes
    ----------
    clusterTrustBundle : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle, default is Undefined, optional
        cluster trust bundle
    configMap : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    podCertificate : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0PodCertificate, default is Undefined, optional
        pod certificate
    secret : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """
    clusterTrustBundle?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle
    configMap?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMap
    downwardAPI?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPI
    podCertificate?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0PodCertificate
    secret?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0Secret
    serviceAccountToken?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundle:
    r"""
    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
    of ClusterTrustBundle objects in an auto-updating file.

    Alpha, gated by the ClusterTrustBundleProjection feature gate.

    Attributes
    ----------
    labelSelector : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
        with signerName and labelSelector.
    optional : bool, default is Undefined, optional
        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
        aren't available.  If using name, then the named ClusterTrustBundle is
        allowed not to exist.
    path : str, default is Undefined, required
        Relative path from the volume root to write the bundle.
    signerName : str, default is Undefined, optional
        Select all ClusterTrustBundles that match this signer name.
        Mutually-exclusive with name.  The contents of all selected
        ClusterTrustBundles will be unified and deduplicated.
    """
    labelSelector?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector
    name?: str
    optional?: bool
    path: str

    signerName?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelector:
    r"""
    Select all ClusterTrustBundles that match this label selector.  Only has
    effect if signerName is set.  Mutually-exclusive with name.  If unset,
    interpreted as "match nothing".  If set but empty, interpreted as "match
    everything".

    Attributes
    ----------
    matchExpressions : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ClusterTrustBundleLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        ConfigMap will be projected into the volume as a file whose name is the
        key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]
    name?: str = ""
    optional?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value
        between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """
    fieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef
    mode?: int
    path: str

    resourceFieldRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """
    apiVersion?: str
    fieldPath: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests
    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """
    containerName?: str
    divisor?: int | str
    resource: str

    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0PodCertificate:
    r"""
    Projects an auto-rotating credential bundle (private key and certificate
    chain) that the pod can use either as a TLS client or server.

    Kubelet generates a private key and uses it to send a
    PodCertificateRequest to the named signer.

    Attributes
    ----------
    certificateChainPath : str, default is Undefined, optional
        Write the certificate chain at this path in the projected volume.

        Most applications should use credentialBundlePath.
    credentialBundlePath : str, default is Undefined, optional
        Write the credential bundle at this path in the projected volume.

        The credential bundle is a single file that contains multiple PEM blocks.
        The first PEM block is a PRIVATE KEY block, containing a PKCS#8 private
        key.
    keyPath : str, default is Undefined, optional
        Write the key at this path in the projected volume.

        Most applications should use credentialBundlePath.
    keyType : str, default is Undefined, required
        The type of keypair Kubelet will generate for the pod.

        Valid values are "RSA3072", "RSA4096", "ECDSAP256", "ECDSAP384",
        "ECDSAP521", and "ED25519".
    maxExpirationSeconds : int, default is Undefined, optional
        maxExpirationSeconds is the maximum lifetime permitted for the
        certificate.

        Kubelet copies this value verbatim into the PodCertificateRequests it
        generates for this projection.

        If omitted, kube-apiserver will set it to 86400(24 hours).
    signerName : str, default is Undefined, required
        Kubelet's generated CSRs will be addressed to this signer.
    """
    certificateChainPath?: str
    credentialBundlePath?: str
    keyPath?: str
    keyType: str

    maxExpirationSeconds?: int
    signerName: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0Secret:
    r"""
    secret information about the secret data to project

    Attributes
    ----------
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]
    name?: str = ""
    optional?: bool

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token
        must identify itself with an identifier specified in the audience of the
        token, and otherwise should reject the token. The audience defaults to the
        identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service
        account token. As the token approaches expiration, the kubelet volume
        plugin will proactively rotate the service account token.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the
        token into.
    """
    audience?: str
    expirationSeconds?: int
    path: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Quobyte:
    r"""
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
    Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to
        Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions.
        Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services
        specified as a string as host:port pair (multiple entries are separated with commas)
        which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend
        Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to
        Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """
    group?: str
    readOnly?: bool
    registry: str

    tenant?: str
    user?: str
    volume: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Rbd:
    r"""
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
    Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount.
        Tip: Ensure that the filesystem type is supported by the host operating system.
        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    image : str, default is Undefined, required
        image is the rados image name.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is "/etc/ceph/keyring", optional
        keyring is the path to key ring for RBDUser.
        Default is /etc/ceph/keyring.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is "rbd", optional
        pool is the rados pool name.
        Default is rbd.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts.
        Defaults to false.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is "admin", optional
        user is the rados user name.
        Default is admin.
        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """
    fsType?: str
    image: str

    keyring?: str = "/etc/ceph/keyring"
    monitors: [str]

    pool?: str = "rbd"
    readOnly?: bool
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0RbdSecretRef
    user?: str = "admin"

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0RbdSecretRef:
    r"""
    secretRef is name of the authentication secret for RBDUser. If provided
    overrides keyring.
    Default is nil.
    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIO:
    r"""
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
    Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.

    Attributes
    ----------
    fsType : str, default is "xfs", optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs".
        Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is "ThinProvisioned", optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
        Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system
        that is associated with this volume source.
    """
    fsType?: str = "xfs"
    gateway: str

    protectionDomain?: str
    readOnly?: bool
    secretRef: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool
    storageMode?: str = "ThinProvisioned"
    storagePool?: str
    system: str

    volumeName?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0ScaleIOSecretRef:
    r"""
    secretRef references to the secret for ScaleIO user and other
    sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Secret:
    r"""
    secret represents a secret that should populate this volume.
    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced
        Secret will be projected into the volume as a file whose name is the
        key and content is the value.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use.
        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """
    defaultMode?: int
    items?: [ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0SecretItemsItems0]
    optional?: bool
    secretName?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file.
        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to.
        May not be an absolute path.
        May not contain the path element '..'.
        May not start with the string '..'.
    """
    key: str

    mode?: int
    path: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0Storageos:
    r"""
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
    Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force
        the ReadOnly setting in VolumeMounts.
    secretRef : ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume
        names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no
        namespace is specified then the Pod's namespace will be used.  This allows the
        Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
    """
    fsType?: str
    readOnly?: bool
    secretRef?: ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0StorageosSecretRef
    volumeName?: str
    volumeNamespace?: str

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0StorageosSecretRef:
    r"""
    secretRef specifies the secret to use for obtaining the StorageOS API
    credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        More info: https://kubernetes.
    """
    name?: str = ""

schema ExecutionSecurecodeboxIoV1ClusterParseDefinitionSpecVolumesItems0VsphereVolume:
    r"""
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
    Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
    are redirected to the csi.vsphere.vmware.com CSI driver.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount.
        Must be a filesystem type supported by the host operating system.
        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """
    fsType?: str
    storagePolicyID?: str
    storagePolicyName?: str
    volumePath: str

