"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema Application:
    r"""
    Application is a definition of Application resource.

    Attributes
    ----------
    apiVersion : str, default is "argoproj.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    operation : ArgoprojIoV1alpha1ApplicationOperation, default is Undefined, optional
        operation
    spec : ArgoprojIoV1alpha1ApplicationSpec, default is Undefined, required
        spec
    status : ArgoprojIoV1alpha1ApplicationStatus, default is Undefined, optional
        status
    """
    apiVersion: "argoproj.io/v1alpha1" = "argoproj.io/v1alpha1"

    kind: "Application" = "Application"

    metadata: v1.ObjectMeta

    operation?: ArgoprojIoV1alpha1ApplicationOperation
    spec: ArgoprojIoV1alpha1ApplicationSpec

    status?: ArgoprojIoV1alpha1ApplicationStatus

schema ArgoprojIoV1alpha1ApplicationOperation:
    r"""
    Operation contains information about a requested or running operation

    Attributes
    ----------
    info : [ArgoprojIoV1alpha1ApplicationOperationInfoItems0], default is Undefined, optional
        Info is a list of informational items for this operation
    initiatedBy : ArgoprojIoV1alpha1ApplicationOperationInitiatedBy, default is Undefined, optional
        initiated by
    retry : ArgoprojIoV1alpha1ApplicationOperationRetry, default is Undefined, optional
        retry
    sync : ArgoprojIoV1alpha1ApplicationOperationSync, default is Undefined, optional
        sync
    """
    info?: [ArgoprojIoV1alpha1ApplicationOperationInfoItems0]
    initiatedBy?: ArgoprojIoV1alpha1ApplicationOperationInitiatedBy
    retry?: ArgoprojIoV1alpha1ApplicationOperationRetry
    sync?: ArgoprojIoV1alpha1ApplicationOperationSync

schema ArgoprojIoV1alpha1ApplicationOperationInfoItems0:
    r"""
    argoproj io v1alpha1 application operation info items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationInitiatedBy:
    r"""
    InitiatedBy contains information about who initiated the operations

    Attributes
    ----------
    automated : bool, default is Undefined, optional
        Automated is set to true if operation was initiated automatically by the application controller.
    username : str, default is Undefined, optional
        Username contains the name of a user who started operation
    """
    automated?: bool
    username?: str

schema ArgoprojIoV1alpha1ApplicationOperationRetry:
    r"""
    Retry controls the strategy to apply if a sync fails

    Attributes
    ----------
    backoff : ArgoprojIoV1alpha1ApplicationOperationRetryBackoff, default is Undefined, optional
        backoff
    limit : int, default is Undefined, optional
        Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
    """
    backoff?: ArgoprojIoV1alpha1ApplicationOperationRetryBackoff
    limit?: int

schema ArgoprojIoV1alpha1ApplicationOperationRetryBackoff:
    r"""
    Backoff controls how to backoff on subsequent retries of failed syncs

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
    factor : int, default is Undefined, optional
        Factor is a factor to multiply the base duration after each failed retry
    maxDuration : str, default is Undefined, optional
        MaxDuration is the maximum amount of time allowed for the backoff strategy
    """
    duration?: str
    factor?: int
    maxDuration?: str

schema ArgoprojIoV1alpha1ApplicationOperationSync:
    r"""
    Sync contains parameters for the operation

    Attributes
    ----------
    autoHealAttemptsCount : int, default is Undefined, optional
        SelfHealAttemptsCount contains the number of auto-heal attempts
    dryRun : bool, default is Undefined, optional
        DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
    manifests : [str], default is Undefined, optional
        Manifests is an optional field that overrides sync source with a local directory for development
    prune : bool, default is Undefined, optional
        Prune specifies to delete resources from the cluster that are no longer tracked in git
    resources : [ArgoprojIoV1alpha1ApplicationOperationSyncResourcesItems0], default is Undefined, optional
        Resources describes which resources shall be part of the sync
    revision : str, default is Undefined, optional
        Revision is the revision (Git) or chart version (Helm) which to sync the application to
        If omitted, will use the revision specified in app spec.
    revisions : [str], default is Undefined, optional
        Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to
        If omitted, will use the revision specified in app spec.
    source : ArgoprojIoV1alpha1ApplicationOperationSyncSource, default is Undefined, optional
        source
    sources : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0], default is Undefined, optional
        Sources overrides the source definition set in the application.
        This is typically set in a Rollback operation and is nil during a Sync operation
    syncOptions : [str], default is Undefined, optional
        SyncOptions provide per-sync sync-options, e.g. Validate=false
    syncStrategy : ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategy, default is Undefined, optional
        sync strategy
    """
    autoHealAttemptsCount?: int
    dryRun?: bool
    manifests?: [str]
    prune?: bool
    resources?: [ArgoprojIoV1alpha1ApplicationOperationSyncResourcesItems0]
    revision?: str
    revisions?: [str]
    source?: ArgoprojIoV1alpha1ApplicationOperationSyncSource
    sources?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0]
    syncOptions?: [str]
    syncStrategy?: ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategy

schema ArgoprojIoV1alpha1ApplicationOperationSyncResourcesItems0:
    r"""
    SyncOperationResource contains resources to sync.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, required
        kind
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    """
    group?: str
    kind: str

    name: str

    namespace?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSource:
    r"""
    Source overrides the source definition set in the application.
    This is typically set in a Rollback operation and is nil during a Sync operation

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationOperationSyncSourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application operation sync source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application operation sync source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application operation sync source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application operation sync source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application operation sync sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application operation sync sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application operation sync sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application operation sync sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategy:
    r"""
    SyncStrategy describes how to perform the sync

    Attributes
    ----------
    apply : ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyApply, default is Undefined, optional
        apply
    hook : ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyHook, default is Undefined, optional
        hook
    """
    apply?: ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyApply
    hook?: ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyHook

schema ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyApply:
    r"""
    Apply will perform a `kubectl apply` to perform the sync.

    Attributes
    ----------
    force : bool, default is Undefined, optional
        Force indicates whether or not to supply the --force flag to `kubectl apply`.
        The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
        retried for 5 times.
    """
    force?: bool

schema ArgoprojIoV1alpha1ApplicationOperationSyncSyncStrategyHook:
    r"""
    Hook will submit any referenced resources to perform the sync. This is the default strategy

    Attributes
    ----------
    force : bool, default is Undefined, optional
        Force indicates whether or not to supply the --force flag to `kubectl apply`.
        The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
        retried for 5 times.
    """
    force?: bool

schema ArgoprojIoV1alpha1ApplicationSpec:
    r"""
    ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.

    Attributes
    ----------
    destination : ArgoprojIoV1alpha1ApplicationSpecDestination, default is Undefined, required
        destination
    ignoreDifferences : [ArgoprojIoV1alpha1ApplicationSpecIgnoreDifferencesItems0], default is Undefined, optional
        IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
    info : [ArgoprojIoV1alpha1ApplicationSpecInfoItems0], default is Undefined, optional
        Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
    project : str, default is Undefined, required
        Project is a reference to the project this application belongs to.
        The empty string means that application belongs to the 'default' project.
    revisionHistoryLimit : int, default is Undefined, optional
        RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.
        This should only be changed in exceptional circumstances.
        Setting to zero will store no history. This will reduce storage used.
        Increasing will increase the space used to store the history, so we do not recommend increasing it.
        Default is 10.
    source : ArgoprojIoV1alpha1ApplicationSpecSource, default is Undefined, optional
        source
    sourceHydrator : ArgoprojIoV1alpha1ApplicationSpecSourceHydrator, default is Undefined, optional
        source hydrator
    sources : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0], default is Undefined, optional
        Sources is a reference to the location of the application's manifests or chart
    syncPolicy : ArgoprojIoV1alpha1ApplicationSpecSyncPolicy, default is Undefined, optional
        sync policy
    """
    destination: ArgoprojIoV1alpha1ApplicationSpecDestination

    ignoreDifferences?: [ArgoprojIoV1alpha1ApplicationSpecIgnoreDifferencesItems0]
    info?: [ArgoprojIoV1alpha1ApplicationSpecInfoItems0]
    project: str

    revisionHistoryLimit?: int
    source?: ArgoprojIoV1alpha1ApplicationSpecSource
    sourceHydrator?: ArgoprojIoV1alpha1ApplicationSpecSourceHydrator
    sources?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0]
    syncPolicy?: ArgoprojIoV1alpha1ApplicationSpecSyncPolicy

schema ArgoprojIoV1alpha1ApplicationSpecDestination:
    r"""
    Destination is a reference to the target Kubernetes server and namespace

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
    namespace : str, default is Undefined, optional
        Namespace specifies the target namespace for the application's resources.
        The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    server : str, default is Undefined, optional
        Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
    """
    name?: str
    namespace?: str
    server?: str

schema ArgoprojIoV1alpha1ApplicationSpecIgnoreDifferencesItems0:
    r"""
    ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group
    jqPathExpressions : [str], default is Undefined, optional
        jq path expressions
    jsonPointers : [str], default is Undefined, optional
        json pointers
    kind : str, default is Undefined, required
        kind
    managedFieldsManagers : [str], default is Undefined, optional
        ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the
        desired state defined in the SCM and won't be displayed in diffs
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """
    group?: str
    jqPathExpressions?: [str]
    jsonPointers?: [str]
    kind: str

    managedFieldsManagers?: [str]
    name?: str
    namespace?: str

schema ArgoprojIoV1alpha1ApplicationSpecInfoItems0:
    r"""
    argoproj io v1alpha1 application spec info items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSource:
    r"""
    Source is a reference to the location of the application's manifests or chart

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationSpecSourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationSpecSourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationSpecSourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationSpecSourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationSpecSourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationSpecSourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationSpecSourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationSpecSourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationSpecSourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationSpecSourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationSpecSourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationSpecSourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHydrator:
    r"""
    SourceHydrator provides a way to push hydrated manifests back to git before syncing them to the cluster.

    Attributes
    ----------
    drySource : ArgoprojIoV1alpha1ApplicationSpecSourceHydratorDrySource, default is Undefined, required
        dry source
    hydrateTo : ArgoprojIoV1alpha1ApplicationSpecSourceHydratorHydrateTo, default is Undefined, optional
        hydrate to
    syncSource : ArgoprojIoV1alpha1ApplicationSpecSourceHydratorSyncSource, default is Undefined, required
        sync source
    """
    drySource: ArgoprojIoV1alpha1ApplicationSpecSourceHydratorDrySource

    hydrateTo?: ArgoprojIoV1alpha1ApplicationSpecSourceHydratorHydrateTo
    syncSource: ArgoprojIoV1alpha1ApplicationSpecSourceHydratorSyncSource

schema ArgoprojIoV1alpha1ApplicationSpecSourceHydratorDrySource:
    r"""
    DrySource specifies where the dry "don't repeat yourself" manifest source lives.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the Git repository where the manifests are located
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the git repository that contains the application manifests
    targetRevision : str, default is Undefined, required
        TargetRevision defines the revision of the source to hydrate
    """
    path: str

    repoURL: str

    targetRevision: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHydratorHydrateTo:
    r"""
    HydrateTo specifies an optional "staging" location to push hydrated manifests to. An external system would then
    have to move manifests to the SyncSource, e.g. by pull request.

    Attributes
    ----------
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceHydratorSyncSource:
    r"""
    SyncSource specifies where to sync hydrated manifests from.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the git repository where hydrated manifests should be committed to and synced
        from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    path: str

    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationSpecSourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationSpecSourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application spec source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationSpecSourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application spec source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application spec source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationSpecSourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationSpecSourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationSpecSourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationSpecSourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationSpecSourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application spec source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application spec sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application spec sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application spec sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationSpecSourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application spec sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationSpecSyncPolicy:
    r"""
    SyncPolicy controls when and how a sync will be performed

    Attributes
    ----------
    automated : ArgoprojIoV1alpha1ApplicationSpecSyncPolicyAutomated, default is Undefined, optional
        automated
    managedNamespaceMetadata : ArgoprojIoV1alpha1ApplicationSpecSyncPolicyManagedNamespaceMetadata, default is Undefined, optional
        managed namespace metadata
    retry : ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetry, default is Undefined, optional
        retry
    syncOptions : [str], default is Undefined, optional
        Options allow you to specify whole app sync-options
    """
    automated?: ArgoprojIoV1alpha1ApplicationSpecSyncPolicyAutomated
    managedNamespaceMetadata?: ArgoprojIoV1alpha1ApplicationSpecSyncPolicyManagedNamespaceMetadata
    retry?: ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetry
    syncOptions?: [str]

schema ArgoprojIoV1alpha1ApplicationSpecSyncPolicyAutomated:
    r"""
    Automated will keep an application synced to the target revision

    Attributes
    ----------
    allowEmpty : bool, default is Undefined, optional
        AllowEmpty allows apps have zero live resources (default: false)
    enabled : bool, default is Undefined, optional
        Enable allows apps to explicitly control automated sync
    prune : bool, default is Undefined, optional
        Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
    selfHeal : bool, default is Undefined, optional
        SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)
    """
    allowEmpty?: bool
    enabled?: bool
    prune?: bool
    selfHeal?: bool

schema ArgoprojIoV1alpha1ApplicationSpecSyncPolicyManagedNamespaceMetadata:
    r"""
    ManagedNamespaceMetadata controls metadata in the given namespace (if CreateNamespace=true)

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    labels : {str:str}, default is Undefined, optional
        labels
    """
    annotations?: {str:str}
    labels?: {str:str}

schema ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetry:
    r"""
    Retry controls failed sync retry behavior

    Attributes
    ----------
    backoff : ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetryBackoff, default is Undefined, optional
        backoff
    limit : int, default is Undefined, optional
        Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
    """
    backoff?: ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetryBackoff
    limit?: int

schema ArgoprojIoV1alpha1ApplicationSpecSyncPolicyRetryBackoff:
    r"""
    Backoff controls how to backoff on subsequent retries of failed syncs

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
    factor : int, default is Undefined, optional
        Factor is a factor to multiply the base duration after each failed retry
    maxDuration : str, default is Undefined, optional
        MaxDuration is the maximum amount of time allowed for the backoff strategy
    """
    duration?: str
    factor?: int
    maxDuration?: str

schema ArgoprojIoV1alpha1ApplicationStatus:
    r"""
    ApplicationStatus contains status information for the application

    Attributes
    ----------
    conditions : [ArgoprojIoV1alpha1ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions is a list of currently observed application conditions
    controllerNamespace : str, default is Undefined, optional
        ControllerNamespace indicates the namespace in which the application controller is located
    health : ArgoprojIoV1alpha1ApplicationStatusHealth, default is Undefined, optional
        health
    history : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0], default is Undefined, optional
        History contains information about the application's sync history
    observedAt : str, default is Undefined, optional
        ObservedAt indicates when the application state was updated without querying latest git state
        Deprecated: controller no longer updates ObservedAt field
    operationState : ArgoprojIoV1alpha1ApplicationStatusOperationState, default is Undefined, optional
        operation state
    reconciledAt : str, default is Undefined, optional
        ReconciledAt indicates when the application state was reconciled using the latest git version
    resourceHealthSource : str, default is Undefined, optional
        ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree
    resources : [ArgoprojIoV1alpha1ApplicationStatusResourcesItems0], default is Undefined, optional
        Resources is a list of Kubernetes resources managed by this application
    sourceHydrator : ArgoprojIoV1alpha1ApplicationStatusSourceHydrator, default is Undefined, optional
        source hydrator
    sourceType : str, default is Undefined, optional
        SourceType specifies the type of this application
    sourceTypes : [str], default is Undefined, optional
        SourceTypes specifies the type of the sources included in the application
    summary : ArgoprojIoV1alpha1ApplicationStatusSummary, default is Undefined, optional
        summary
    sync : ArgoprojIoV1alpha1ApplicationStatusSync, default is Undefined, optional
        sync
    """
    conditions?: [ArgoprojIoV1alpha1ApplicationStatusConditionsItems0]
    controllerNamespace?: str
    health?: ArgoprojIoV1alpha1ApplicationStatusHealth
    history?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0]
    observedAt?: str
    operationState?: ArgoprojIoV1alpha1ApplicationStatusOperationState
    reconciledAt?: str
    resourceHealthSource?: str
    resources?: [ArgoprojIoV1alpha1ApplicationStatusResourcesItems0]
    sourceHydrator?: ArgoprojIoV1alpha1ApplicationStatusSourceHydrator
    sourceType?: str
    sourceTypes?: [str]
    summary?: ArgoprojIoV1alpha1ApplicationStatusSummary
    sync?: ArgoprojIoV1alpha1ApplicationStatusSync

schema ArgoprojIoV1alpha1ApplicationStatusConditionsItems0:
    r"""
    ApplicationCondition contains details about an application condition, which is usually an error or warning

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the time the condition was last observed
    message : str, default is Undefined, required
        Message contains human-readable message indicating details about condition
    $type : str, default is Undefined, required
        Type is an application condition type
    """
    lastTransitionTime?: str
    message: str

    $type: str

schema ArgoprojIoV1alpha1ApplicationStatusHealth:
    r"""
    Health contains information about the application's current health status

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the time the HealthStatus was set or updated
    message : str, default is Undefined, optional
        Message is a human-readable informational message describing the health status

        Deprecated: this field is not used and will be removed in a future release.
    status : str, default is Undefined, optional
        Status holds the status code of the application
    """
    lastTransitionTime?: str
    message?: str
    status?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0:
    r"""
    RevisionHistory contains history information about a previous sync

    Attributes
    ----------
    deployStartedAt : str, default is Undefined, optional
        DeployStartedAt holds the time the sync operation started
    deployedAt : str, default is Undefined, required
        DeployedAt holds the time the sync operation completed
    id : int, default is Undefined, required
        ID is an auto incrementing identifier of the RevisionHistory
    initiatedBy : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0InitiatedBy, default is Undefined, optional
        initiated by
    revision : str, default is Undefined, optional
        Revision holds the revision the sync was performed against
    revisions : [str], default is Undefined, optional
        Revisions holds the revision of each source in sources field the sync was performed against
    source : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0Source, default is Undefined, optional
        source
    sources : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0], default is Undefined, optional
        Sources is a reference to the application sources used for the sync operation
    """
    deployStartedAt?: str
    deployedAt: str

    id: int

    initiatedBy?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0InitiatedBy
    revision?: str
    revisions?: [str]
    source?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0Source
    sources?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0]

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0InitiatedBy:
    r"""
    InitiatedBy contains information about who initiated the operations

    Attributes
    ----------
    automated : bool, default is Undefined, optional
        Automated is set to true if operation was initiated automatically by the application controller.
    username : str, default is Undefined, optional
        Username contains the name of a user who started operation
    """
    automated?: bool
    username?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0Source:
    r"""
    Source is a reference to the application source used for the sync operation

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status history items0 source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status history items0 source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status history items0 source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status history items0 source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status history items0 sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status history items0 sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status history items0 sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusHistoryItems0SourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status history items0 sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationState:
    r"""
    OperationState contains information about any ongoing operations, such as a sync

    Attributes
    ----------
    finishedAt : str, default is Undefined, optional
        FinishedAt contains time of operation completion
    message : str, default is Undefined, optional
        Message holds any pertinent messages when attempting to perform operation (typically errors).
    operation : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperation, default is Undefined, required
        operation
    phase : str, default is Undefined, required
        Phase is the current phase of the operation
    retryCount : int, default is Undefined, optional
        RetryCount contains time of operation retries
    startedAt : str, default is Undefined, required
        StartedAt contains time of operation start
    syncResult : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResult, default is Undefined, optional
        sync result
    """
    finishedAt?: str
    message?: str
    operation: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperation

    phase: str

    retryCount?: int
    startedAt: str

    syncResult?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResult

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperation:
    r"""
    Operation is the original requested operation

    Attributes
    ----------
    info : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInfoItems0], default is Undefined, optional
        Info is a list of informational items for this operation
    initiatedBy : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInitiatedBy, default is Undefined, optional
        initiated by
    retry : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetry, default is Undefined, optional
        retry
    sync : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSync, default is Undefined, optional
        sync
    """
    info?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInfoItems0]
    initiatedBy?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInitiatedBy
    retry?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetry
    sync?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSync

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInfoItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation info items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationInitiatedBy:
    r"""
    InitiatedBy contains information about who initiated the operations

    Attributes
    ----------
    automated : bool, default is Undefined, optional
        Automated is set to true if operation was initiated automatically by the application controller.
    username : str, default is Undefined, optional
        Username contains the name of a user who started operation
    """
    automated?: bool
    username?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetry:
    r"""
    Retry controls the strategy to apply if a sync fails

    Attributes
    ----------
    backoff : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetryBackoff, default is Undefined, optional
        backoff
    limit : int, default is Undefined, optional
        Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
    """
    backoff?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetryBackoff
    limit?: int

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationRetryBackoff:
    r"""
    Backoff controls how to backoff on subsequent retries of failed syncs

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
    factor : int, default is Undefined, optional
        Factor is a factor to multiply the base duration after each failed retry
    maxDuration : str, default is Undefined, optional
        MaxDuration is the maximum amount of time allowed for the backoff strategy
    """
    duration?: str
    factor?: int
    maxDuration?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSync:
    r"""
    Sync contains parameters for the operation

    Attributes
    ----------
    autoHealAttemptsCount : int, default is Undefined, optional
        SelfHealAttemptsCount contains the number of auto-heal attempts
    dryRun : bool, default is Undefined, optional
        DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
    manifests : [str], default is Undefined, optional
        Manifests is an optional field that overrides sync source with a local directory for development
    prune : bool, default is Undefined, optional
        Prune specifies to delete resources from the cluster that are no longer tracked in git
    resources : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncResourcesItems0], default is Undefined, optional
        Resources describes which resources shall be part of the sync
    revision : str, default is Undefined, optional
        Revision is the revision (Git) or chart version (Helm) which to sync the application to
        If omitted, will use the revision specified in app spec.
    revisions : [str], default is Undefined, optional
        Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to
        If omitted, will use the revision specified in app spec.
    source : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSource, default is Undefined, optional
        source
    sources : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0], default is Undefined, optional
        Sources overrides the source definition set in the application.
        This is typically set in a Rollback operation and is nil during a Sync operation
    syncOptions : [str], default is Undefined, optional
        SyncOptions provide per-sync sync-options, e.g. Validate=false
    syncStrategy : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategy, default is Undefined, optional
        sync strategy
    """
    autoHealAttemptsCount?: int
    dryRun?: bool
    manifests?: [str]
    prune?: bool
    resources?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncResourcesItems0]
    revision?: str
    revisions?: [str]
    source?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSource
    sources?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0]
    syncOptions?: [str]
    syncStrategy?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategy

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncResourcesItems0:
    r"""
    SyncOperationResource contains resources to sync.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, required
        kind
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    """
    group?: str
    kind: str

    name: str

    namespace?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSource:
    r"""
    Source overrides the source definition set in the application.
    This is typically set in a Rollback operation and is nil during a Sync operation

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status operation state operation sync source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status operation state operation sync sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status operation state operation sync sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategy:
    r"""
    SyncStrategy describes how to perform the sync

    Attributes
    ----------
    apply : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyApply, default is Undefined, optional
        apply
    hook : ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyHook, default is Undefined, optional
        hook
    """
    apply?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyApply
    hook?: ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyHook

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyApply:
    r"""
    Apply will perform a `kubectl apply` to perform the sync.

    Attributes
    ----------
    force : bool, default is Undefined, optional
        Force indicates whether or not to supply the --force flag to `kubectl apply`.
        The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
        retried for 5 times.
    """
    force?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateOperationSyncSyncStrategyHook:
    r"""
    Hook will submit any referenced resources to perform the sync. This is the default strategy

    Attributes
    ----------
    force : bool, default is Undefined, optional
        Force indicates whether or not to supply the --force flag to `kubectl apply`.
        The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
        retried for 5 times.
    """
    force?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResult:
    r"""
    SyncResult is the result of a Sync operation

    Attributes
    ----------
    managedNamespaceMetadata : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultManagedNamespaceMetadata, default is Undefined, optional
        managed namespace metadata
    resources : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultResourcesItems0], default is Undefined, optional
        Resources contains a list of sync result items for each individual resource in a sync operation
    revision : str, default is Undefined, required
        Revision holds the revision this sync operation was performed to
    revisions : [str], default is Undefined, optional
        Revisions holds the revision this sync operation was performed for respective indexed source in sources field
    source : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSource, default is Undefined, optional
        source
    sources : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0], default is Undefined, optional
        Source records the application source information of the sync, used for comparing auto-sync
    """
    managedNamespaceMetadata?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultManagedNamespaceMetadata
    resources?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultResourcesItems0]
    revision: str

    revisions?: [str]
    source?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSource
    sources?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultManagedNamespaceMetadata:
    r"""
    ManagedNamespaceMetadata contains the current sync state of managed namespace metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    labels : {str:str}, default is Undefined, optional
        labels
    """
    annotations?: {str:str}
    labels?: {str:str}

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultResourcesItems0:
    r"""
    ResourceResult holds the operation result details of a specific resource

    Attributes
    ----------
    group : str, default is Undefined, required
        Group specifies the API group of the resource
    hookPhase : str, default is Undefined, optional
        HookPhase contains the state of any operation associated with this resource OR hook
        This can also contain values for non-hook resources.
    hookType : str, default is Undefined, optional
        HookType specifies the type of the hook. Empty for non-hook resources
    images : [str], default is Undefined, optional
        Images contains the images related to the ResourceResult
    kind : str, default is Undefined, required
        Kind specifies the API kind of the resource
    message : str, default is Undefined, optional
        Message contains an informational or error message for the last sync OR operation
    name : str, default is Undefined, required
        Name specifies the name of the resource
    namespace : str, default is Undefined, required
        Namespace specifies the target namespace of the resource
    status : str, default is Undefined, optional
        Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
    syncPhase : str, default is Undefined, optional
        SyncPhase indicates the particular phase of the sync that this result was acquired in
    version : str, default is Undefined, required
        Version specifies the API version of the resource
    """
    group: str

    hookPhase?: str
    hookType?: str
    images?: [str]
    kind: str

    message?: str
    name: str

    namespace: str

    status?: str
    syncPhase?: str
    version: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSource:
    r"""
    Source records the application source information of the sync, used for comparing auto-sync

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status operation state sync result source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status operation state sync result sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusOperationStateSyncResultSourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status operation state sync result sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusResourcesItems0:
    r"""
    ResourceStatus holds the current synchronization and health status of a Kubernetes resource.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group represents the API group of the resource (e.g., "apps" for Deployments).
    health : ArgoprojIoV1alpha1ApplicationStatusResourcesItems0Health, default is Undefined, optional
        health
    hook : bool, default is Undefined, optional
        Hook is true if the resource is used as a lifecycle hook in an Argo CD application.
    kind : str, default is Undefined, optional
        Kind specifies the type of the resource (e.g., "Deployment", "Service").
    name : str, default is Undefined, optional
        Name is the unique name of the resource within the namespace.
    namespace : str, default is Undefined, optional
        Namespace defines the Kubernetes namespace where the resource is located.
    requiresDeletionConfirmation : bool, default is Undefined, optional
        RequiresDeletionConfirmation is true if the resource requires explicit user confirmation before deletion.
    requiresPruning : bool, default is Undefined, optional
        RequiresPruning is true if the resource needs to be pruned (deleted) as part of synchronization.
    status : str, default is Undefined, optional
        Status represents the synchronization state of the resource (e.g., Synced, OutOfSync).
    syncWave : int, default is Undefined, optional
        SyncWave determines the order in which resources are applied during a sync operation.
        Lower values are applied first.
    version : str, default is Undefined, optional
        Version indicates the API version of the resource (e.g., "v1", "v1beta1").
    """
    group?: str
    health?: ArgoprojIoV1alpha1ApplicationStatusResourcesItems0Health
    hook?: bool
    kind?: str
    name?: str
    namespace?: str
    requiresDeletionConfirmation?: bool
    requiresPruning?: bool
    status?: str
    syncWave?: int
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusResourcesItems0Health:
    r"""
    Health indicates the health status of the resource (e.g., Healthy, Degraded, Progressing).

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the time the HealthStatus was set or updated

        Deprecated: this field is not used and will be removed in a future release.
    message : str, default is Undefined, optional
        Message is a human-readable informational message describing the health status
    status : str, default is Undefined, optional
        Status holds the status code of the resource
    """
    lastTransitionTime?: str
    message?: str
    status?: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydrator:
    r"""
    SourceHydrator stores information about the current state of source hydration

    Attributes
    ----------
    currentOperation : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperation, default is Undefined, optional
        current operation
    lastSuccessfulOperation : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperation, default is Undefined, optional
        last successful operation
    """
    currentOperation?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperation
    lastSuccessfulOperation?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperation

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperation:
    r"""
    CurrentOperation holds the status of the hydrate operation

    Attributes
    ----------
    drySHA : str, default is Undefined, optional
        DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation
    finishedAt : str, default is Undefined, optional
        FinishedAt indicates when the hydrate operation finished
    hydratedSHA : str, default is Undefined, optional
        HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation
    message : str, default is Undefined, required
        Message contains a message describing the current status of the hydrate operation
    phase : str, default is Undefined, required
        Phase indicates the status of the hydrate operation
    sourceHydrator : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydrator, default is Undefined, optional
        source hydrator
    startedAt : str, default is Undefined, optional
        StartedAt indicates when the hydrate operation started
    """
    drySHA?: str
    finishedAt?: str
    hydratedSHA?: str
    message: str

    phase: "Hydrating" | "Failed" | "Hydrated"

    sourceHydrator?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydrator
    startedAt?: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydrator:
    r"""
    SourceHydrator holds the hydrator config used for the hydrate operation

    Attributes
    ----------
    drySource : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorDrySource, default is Undefined, required
        dry source
    hydrateTo : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorHydrateTo, default is Undefined, optional
        hydrate to
    syncSource : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorSyncSource, default is Undefined, required
        sync source
    """
    drySource: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorDrySource

    hydrateTo?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorHydrateTo
    syncSource: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorSyncSource

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorDrySource:
    r"""
    DrySource specifies where the dry "don't repeat yourself" manifest source lives.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the Git repository where the manifests are located
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the git repository that contains the application manifests
    targetRevision : str, default is Undefined, required
        TargetRevision defines the revision of the source to hydrate
    """
    path: str

    repoURL: str

    targetRevision: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorHydrateTo:
    r"""
    HydrateTo specifies an optional "staging" location to push hydrated manifests to. An external system would then
    have to move manifests to the SyncSource, e.g. by pull request.

    Attributes
    ----------
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorCurrentOperationSourceHydratorSyncSource:
    r"""
    SyncSource specifies where to sync hydrated manifests from.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the git repository where hydrated manifests should be committed to and synced
        from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    path: str

    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperation:
    r"""
    LastSuccessfulOperation holds info about the most recent successful hydration

    Attributes
    ----------
    drySHA : str, default is Undefined, optional
        DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation
    hydratedSHA : str, default is Undefined, optional
        HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation
    sourceHydrator : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydrator, default is Undefined, optional
        source hydrator
    """
    drySHA?: str
    hydratedSHA?: str
    sourceHydrator?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydrator

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydrator:
    r"""
    SourceHydrator holds the hydrator config used for the hydrate operation

    Attributes
    ----------
    drySource : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorDrySource, default is Undefined, required
        dry source
    hydrateTo : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorHydrateTo, default is Undefined, optional
        hydrate to
    syncSource : ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorSyncSource, default is Undefined, required
        sync source
    """
    drySource: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorDrySource

    hydrateTo?: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorHydrateTo
    syncSource: ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorSyncSource

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorDrySource:
    r"""
    DrySource specifies where the dry "don't repeat yourself" manifest source lives.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the Git repository where the manifests are located
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the git repository that contains the application manifests
    targetRevision : str, default is Undefined, required
        TargetRevision defines the revision of the source to hydrate
    """
    path: str

    repoURL: str

    targetRevision: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorHydrateTo:
    r"""
    HydrateTo specifies an optional "staging" location to push hydrated manifests to. An external system would then
    have to move manifests to the SyncSource, e.g. by pull request.

    Attributes
    ----------
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationStatusSourceHydratorLastSuccessfulOperationSourceHydratorSyncSource:
    r"""
    SyncSource specifies where to sync hydrated manifests from.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a directory path within the git repository where hydrated manifests should be committed to and synced
        from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.
    targetBranch : str, default is Undefined, required
        TargetBranch is the branch to which hydrated manifests should be committed
    """
    path: str

    targetBranch: str

schema ArgoprojIoV1alpha1ApplicationStatusSummary:
    r"""
    Summary contains a list of URLs and container images used by this application

    Attributes
    ----------
    externalURLs : [str], default is Undefined, optional
        ExternalURLs holds all external URLs of application child resources.
    images : [str], default is Undefined, optional
        Images holds all images of application child resources.
    """
    externalURLs?: [str]
    images?: [str]

schema ArgoprojIoV1alpha1ApplicationStatusSync:
    r"""
    Sync contains information about the application's current sync status

    Attributes
    ----------
    comparedTo : ArgoprojIoV1alpha1ApplicationStatusSyncComparedTo, default is Undefined, optional
        compared to
    revision : str, default is Undefined, optional
        Revision contains information about the revision the comparison has been performed to
    revisions : [str], default is Undefined, optional
        Revisions contains information about the revisions of multiple sources the comparison has been performed to
    status : str, default is Undefined, required
        Status is the sync state of the comparison
    """
    comparedTo?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedTo
    revision?: str
    revisions?: [str]
    status: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedTo:
    r"""
    ComparedTo contains information about what has been compared

    Attributes
    ----------
    destination : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToDestination, default is Undefined, required
        destination
    ignoreDifferences : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToIgnoreDifferencesItems0], default is Undefined, optional
        IgnoreDifferences is a reference to the application's ignored differences used for comparison
    source : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSource, default is Undefined, optional
        source
    sources : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0], default is Undefined, optional
        Sources is a reference to the application's multiple sources used for comparison
    """
    destination: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToDestination

    ignoreDifferences?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToIgnoreDifferencesItems0]
    source?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSource
    sources?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0]

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToDestination:
    r"""
    Destination is a reference to the application's destination used for comparison

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
    namespace : str, default is Undefined, optional
        Namespace specifies the target namespace for the application's resources.
        The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    server : str, default is Undefined, optional
        Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
    """
    name?: str
    namespace?: str
    server?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToIgnoreDifferencesItems0:
    r"""
    ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.

    Attributes
    ----------
    group : str, default is Undefined, optional
        group
    jqPathExpressions : [str], default is Undefined, optional
        jq path expressions
    jsonPointers : [str], default is Undefined, optional
        json pointers
    kind : str, default is Undefined, required
        kind
    managedFieldsManagers : [str], default is Undefined, optional
        ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the
        desired state defined in the SCM and won't be displayed in diffs
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """
    group?: str
    jqPathExpressions?: [str]
    jsonPointers?: [str]
    kind: str

    managedFieldsManagers?: [str]
    name?: str
    namespace?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSource:
    r"""
    Source is a reference to the application's source used for comparison

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePlugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectory
    helm?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePlugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceDirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceHelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to source kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status sync compared to source kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourceKustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to source kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePlugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcePluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to source plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0:
    r"""
    ApplicationSource contains all required information about the source of an application

    Attributes
    ----------
    chart : str, default is Undefined, optional
        Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
    directory : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Directory, default is Undefined, optional
        directory
    helm : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Helm, default is Undefined, optional
        helm
    kustomize : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Kustomize, default is Undefined, optional
        kustomize
    name : str, default is Undefined, optional
        Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.
    path : str, default is Undefined, optional
        Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
    plugin : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Plugin, default is Undefined, optional
        plugin
    ref : str, default is Undefined, optional
        Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
    repoURL : str, default is Undefined, required
        RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
    targetRevision : str, default is Undefined, optional
        TargetRevision defines the revision of the source to sync the application to.
        In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
        In case of Helm, this is a semver tag for the Chart's version.
    """
    chart?: str
    directory?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Directory
    helm?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Helm
    kustomize?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Kustomize
    name?: str
    path?: str
    plugin?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Plugin
    ref?: str
    repoURL: str

    targetRevision?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Directory:
    r"""
    Directory holds path/directory specific options

    Attributes
    ----------
    exclude : str, default is Undefined, optional
        Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
    include : str, default is Undefined, optional
        Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
    jsonnet : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnet, default is Undefined, optional
        jsonnet
    recurse : bool, default is Undefined, optional
        Recurse specifies whether to scan a directory recursively for manifests
    """
    exclude?: str
    include?: str
    jsonnet?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnet
    recurse?: bool

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnet:
    r"""
    Jsonnet holds options specific to Jsonnet

    Attributes
    ----------
    extVars : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetExtVarsItems0], default is Undefined, optional
        ExtVars is a list of Jsonnet External Variables
    libs : [str], default is Undefined, optional
        Additional library search dirs
    tlas : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetTlasItems0], default is Undefined, optional
        TLAS is a list of Jsonnet Top-level Arguments
    """
    extVars?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetExtVarsItems0]
    libs?: [str]
    tlas?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetTlasItems0]

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetExtVarsItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0DirectoryJsonnetTlasItems0:
    r"""
    JsonnetVar represents a variable to be passed to jsonnet during manifest generation

    Attributes
    ----------
    code : bool, default is Undefined, optional
        code
    name : str, default is Undefined, required
        name
    value : str, default is Undefined, required
        value
    """
    code?: bool
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Helm:
    r"""
    Helm holds helm specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    fileParameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmFileParametersItems0], default is Undefined, optional
        FileParameters are file parameters to the helm template
    ignoreMissingValueFiles : bool, default is Undefined, optional
        IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    namespace : str, default is Undefined, optional
        Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.
    parameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmParametersItems0], default is Undefined, optional
        Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
    passCredentials : bool, default is Undefined, optional
        PassCredentials pass credentials to all domains (Helm's --pass-credentials)
    releaseName : str, default is Undefined, optional
        ReleaseName is the Helm release name to use. If omitted it will use the application name
    skipCrds : bool, default is Undefined, optional
        SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
    skipSchemaValidation : bool, default is Undefined, optional
        SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)
    skipTests : bool, default is Undefined, optional
        SkipTests skips test manifest installation step (Helm's --skip-tests).
    valueFiles : [str], default is Undefined, optional
        ValuesFiles is a list of Helm value files to use when generating a template
    values : str, default is Undefined, optional
        Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
    valuesObject : any, default is Undefined, optional
        ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
    version : str, default is Undefined, optional
        Version is the Helm version to use for templating ("3")
    """
    apiVersions?: [str]
    fileParameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmFileParametersItems0]
    ignoreMissingValueFiles?: bool
    kubeVersion?: str
    namespace?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmParametersItems0]
    passCredentials?: bool
    releaseName?: str
    skipCrds?: bool
    skipSchemaValidation?: bool
    skipTests?: bool
    valueFiles?: [str]
    values?: str
    valuesObject?: any
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmFileParametersItems0:
    r"""
    HelmFileParameter is a file parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    path : str, default is Undefined, optional
        Path is the path to the file containing the values for the Helm parameter
    """
    name?: str
    path?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0HelmParametersItems0:
    r"""
    HelmParameter is a parameter that's passed to helm template during manifest generation

    Attributes
    ----------
    forceString : bool, default is Undefined, optional
        ForceString determines whether to tell Helm to interpret booleans and numbers as strings
    name : str, default is Undefined, optional
        Name is the name of the Helm parameter
    value : str, default is Undefined, optional
        Value is the value for the Helm parameter
    """
    forceString?: bool
    name?: str
    value?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Kustomize:
    r"""
    Kustomize holds kustomize specific options

    Attributes
    ----------
    apiVersions : [str], default is Undefined, optional
        APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
        Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.
    commonAnnotations : {str:str}, default is Undefined, optional
        CommonAnnotations is a list of additional annotations to add to rendered manifests
    commonAnnotationsEnvsubst : bool, default is Undefined, optional
        CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
    commonLabels : {str:str}, default is Undefined, optional
        CommonLabels is a list of additional labels to add to rendered manifests
    components : [str], default is Undefined, optional
        Components specifies a list of kustomize components to add to the kustomization before building
    forceCommonAnnotations : bool, default is Undefined, optional
        ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
    forceCommonLabels : bool, default is Undefined, optional
        ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
    ignoreMissingComponents : bool, default is Undefined, optional
        IgnoreMissingComponents prevents kustomize from failing when components do not exist locally by not appending them to kustomization file
    images : [str], default is Undefined, optional
        Images is a list of Kustomize image override specifications
    kubeVersion : str, default is Undefined, optional
        KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
        uses the Kubernetes version of the target cluster.
    labelIncludeTemplates : bool, default is Undefined, optional
        LabelIncludeTemplates specifies whether to apply common labels to resource templates or not
    labelWithoutSelector : bool, default is Undefined, optional
        LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
    namePrefix : str, default is Undefined, optional
        NamePrefix is a prefix appended to resources for Kustomize apps
    nameSuffix : str, default is Undefined, optional
        NameSuffix is a suffix appended to resources for Kustomize apps
    namespace : str, default is Undefined, optional
        Namespace sets the namespace that Kustomize adds to all resources
    patches : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0], default is Undefined, optional
        Patches is a list of Kustomize patches
    replicas : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizeReplicasItems0], default is Undefined, optional
        Replicas is a list of Kustomize Replicas override specifications
    version : str, default is Undefined, optional
        Version controls which version of Kustomize to use for rendering manifests
    """
    apiVersions?: [str]
    commonAnnotations?: {str:str}
    commonAnnotationsEnvsubst?: bool
    commonLabels?: {str:str}
    components?: [str]
    forceCommonAnnotations?: bool
    forceCommonLabels?: bool
    ignoreMissingComponents?: bool
    images?: [str]
    kubeVersion?: str
    labelIncludeTemplates?: bool
    labelWithoutSelector?: bool
    namePrefix?: str
    nameSuffix?: str
    namespace?: str
    patches?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0]
    replicas?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizeReplicasItems0]
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to sources items0 kustomize patches items0

    Attributes
    ----------
    options : {str:bool}, default is Undefined, optional
        options
    patch : str, default is Undefined, optional
        patch
    path : str, default is Undefined, optional
        path
    target : ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """
    options?: {str:bool}
    patch?: str
    path?: str
    target?: ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0Target

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizePatchesItems0Target:
    r"""
    argoproj io v1alpha1 application status sync compared to sources items0 kustomize patches items0 target

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        annotation selector
    group : str, default is Undefined, optional
        group
    kind : str, default is Undefined, optional
        kind
    labelSelector : str, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    version : str, default is Undefined, optional
        version
    """
    annotationSelector?: str
    group?: str
    kind?: str
    labelSelector?: str
    name?: str
    namespace?: str
    version?: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0KustomizeReplicasItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to sources items0 kustomize replicas items0

    Attributes
    ----------
    count : int | str, default is Undefined, required
        Number of replicas
    name : str, default is Undefined, required
        Name of Deployment or StatefulSet
    """
    count: int | str

    name: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0Plugin:
    r"""
    Plugin holds config management plugin specific options

    Attributes
    ----------
    env : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginEnvItems0], default is Undefined, optional
        Env is a list of environment variable entries
    name : str, default is Undefined, optional
        name
    parameters : [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginParametersItems0], default is Undefined, optional
        parameters
    """
    env?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginEnvItems0]
    name?: str
    parameters?: [ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginParametersItems0]

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginEnvItems0:
    r"""
    EnvEntry represents an entry in the application's environment

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the variable, usually expressed in uppercase
    value : str, default is Undefined, required
        Value is the value of the variable
    """
    name: str

    value: str

schema ArgoprojIoV1alpha1ApplicationStatusSyncComparedToSourcesItems0PluginParametersItems0:
    r"""
    argoproj io v1alpha1 application status sync compared to sources items0 plugin parameters items0

    Attributes
    ----------
    array : [str], default is Undefined, optional
        Array is the value of an array type parameter.
    $map : {str:str}, default is Undefined, optional
        Map is the value of a map type parameter.
    name : str, default is Undefined, optional
        Name is the name identifying a parameter.
    string : str, default is Undefined, optional
        String_ is the value of a string type parameter.
    """
    array?: [str]
    $map?: {str:str}
    name?: str
    string?: str

