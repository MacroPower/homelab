{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "additionalAnnotations": {
      "additionalProperties": true,
      "description": "# Additional annotations to include with deployment or statefulset",
      "required": [],
      "title": "additionalAnnotations",
      "type": "object"
    },
    "additionalContainers": {
      "description": "additionalContainers are the sidecar containers to add to the NATS StatefulSet",
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalContainers",
      "type": "array"
    },
    "additionalLabels": {
      "additionalProperties": true,
      "description": "# Additional labels to include with deployment or statefulset",
      "required": [],
      "title": "additionalLabels",
      "type": "object"
    },
    "additionalVolumeMounts": {
      "description": "additionalVolumeMounts are the additional volume mounts to add to the nats-server and nats-server-config-reloader containers",
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalVolumeMounts",
      "type": "array"
    },
    "additionalVolumes": {
      "description": "additionalVolumes are the additional volumes to add to the NATS StatefulSet",
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalVolumes",
      "type": "array"
    },
    "adminApi": {
      "additionalProperties": true,
      "description": "Configuration for the `admin-api` target",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for admin-api Pods",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the `admin-api` Deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "env": {
          "description": "Configure optional environment variables",
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld\nAdditional CLI arguments for the `admin-api` target",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "description": "Conifgure optional extraContainers",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the admin-api pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional volume mounts for Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional volumes for Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initContainers": {
          "description": "Configure optional initContainers",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional labels for the `admin-api` Deployment",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for admin-api Pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Run container as user `enterprise-logs(uid=10001)`\n`fsGroup` must not be specified, because these security options are applied\non container level not on Pod level.",
          "properties": {
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 45,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Define the amount of instances",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Request and limit Kubernetes resources\nValues are defined in small.yaml and large.yaml",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "Additional labels and annotations for the `admin-api` Service",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "description": "Update strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "description": "Grace period to allow the admin-api to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for admin-api Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for admin-api pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "adminApi",
      "type": "object"
    },
    "advertiseconfigVolume": {
      "additionalProperties": true,
      "description": "Shared volume to be mounted in pods for advertiseconfig",
      "properties": {
        "emptyDir": {
          "additionalProperties": true,
          "required": [],
          "title": "emptyDir",
          "type": "object"
        }
      },
      "required": [],
      "title": "advertiseconfigVolume",
      "type": "object"
    },
    "affinity": {
      "additionalProperties": true,
      "description": "Affinity for pod assignment\nref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "agents": {
      "additionalProperties": true,
      "properties": {
        "core": {
          "additionalProperties": true,
          "properties": {
            "allowNonPersistentDevlink": {
              "default": false,
              "description": "Allow using non-persistent kernel devpaths for pool disks.\nEnabling this will let users to use the kernel devpaths e.g /dev/sda, for diskpools. However, this comes with associated risks if the devpaths\nget swapped among disks, resulting in total data loss especially if encryption is being used.",
              "required": [],
              "title": "allowNonPersistentDevlink",
              "type": "boolean"
            },
            "capacity": {
              "additionalProperties": true,
              "properties": {
                "thin": {
                  "additionalProperties": true,
                  "properties": {
                    "poolCommitment": {
                      "default": "250%",
                      "description": "The allowed pool commitment limit when dealing with thin provisioned volumes.\nExample: If the commitment is 250 and the pool is 10GiB we can overcommit the pool\nup to 25GiB (create 2 10GiB and 1 5GiB volume) but no further.",
                      "required": [],
                      "title": "poolCommitment",
                      "type": "string"
                    },
                    "snapshotCommitment": {
                      "default": "40%",
                      "description": "When creating snapshots for an existing volume, each replica pool must have at least\nthis much free space percentage of the volume size.\nExample: if this value is 40, the pool has 40GiB free, then the max volume size allowed\nto be snapped on the pool is 100GiB.",
                      "required": [],
                      "title": "snapshotCommitment",
                      "type": "string"
                    },
                    "volumeCommitment": {
                      "default": "40%",
                      "description": "When creating replicas for an existing volume, each replica pool must have at least\nthis much free space percentage of the volume size.\nExample: if this value is 40, the pool has 40GiB free, then the max volume size allowed\nto be created on the pool is 100GiB.",
                      "required": [],
                      "title": "volumeCommitment",
                      "type": "string"
                    },
                    "volumeCommitmentInitial": {
                      "default": "40%",
                      "description": "Same as the `volumeCommitment` argument, but applicable only when creating replicas\nfor a new volume.",
                      "required": [],
                      "title": "volumeCommitmentInitial",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "thin",
                  "type": "object"
                }
              },
              "required": [],
              "title": "capacity",
              "type": "object"
            },
            "encryptedPoolsSoftScheduling": {
              "default": false,
              "description": "Prefer encrypted pools for volume replicas.\nIf a volume wasn't provisioned with a encryption storageclass, we try to place the replicas of such volume on best-effort basis onto encrypted pools, if this global is set.\nThis is effective subject to volume spec already modified via plugin to request encryption.",
              "required": [],
              "title": "encryptedPoolsSoftScheduling",
              "type": "boolean"
            },
            "logLevel": {
              "default": "info",
              "description": "Log level for the core service",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "maxCreateVolume": {
              "default": 10,
              "description": "The maximum number of concurrent create volume requests.",
              "required": [],
              "title": "maxCreateVolume",
              "type": "integer"
            },
            "minTimeouts": {
              "default": true,
              "description": "Enable minimal timeouts",
              "required": [],
              "title": "minTimeouts",
              "type": "boolean"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global.\nIf both local and global are not set, the final deployment manifest has a mayastor custom critical priority class assigned to the pod by default.\nRefer the `templates/_helpers.tpl` and `templates/mayastor/agents/core/agent-core-deployment.yaml` for more details.",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "rebuild": {
              "additionalProperties": true,
              "properties": {
                "maxConcurrent": {
                  "default": "",
                  "description": "The maximum number of system-wide rebuilds permitted at any given time.\nIf set to an empty string, there are no limits.",
                  "required": [],
                  "title": "maxConcurrent",
                  "type": "string"
                },
                "partial": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Partial rebuild uses a log of missed IO to rebuild replicas which have become temporarily faulted,\nhence a bit faster, depending on the log size.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "waitPeriod": {
                      "default": "",
                      "description": "If a faulted replica comes back online within this time period then it will be\nrebuilt using the partial rebuild capability. Otherwise, the replica will be fully rebuilt.\nA blank value \"\" means internally derived value will be used.",
                      "required": [],
                      "title": "waitPeriod",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "partial",
                  "type": "object"
                }
              },
              "required": [],
              "title": "rebuild",
              "type": "object"
            },
            "requestTimeout": {
              "default": "",
              "description": "Request timeout for core agents\nDefault value is defined in .base.default_req_timeout",
              "required": [],
              "title": "requestTimeout",
              "type": "null"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "1000m",
                      "description": "Cpu limits for core agents",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "128Mi",
                      "description": "Memory limits for core agents",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "500m",
                      "description": "Cpu requests for core agents",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "Memory requests for core agents",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "volumeHealth": {
              "default": true,
              "description": "Enable extended volume health information, which helps generate the volume status more accurately.",
              "required": [],
              "title": "volumeHealth",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "core",
          "type": "object"
        },
        "ha": {
          "additionalProperties": true,
          "properties": {
            "cluster": {
              "additionalProperties": true,
              "properties": {
                "logLevel": {
                  "default": "info",
                  "description": "Log level for the ha cluster service",
                  "required": [],
                  "title": "logLevel",
                  "type": "string"
                },
                "resources": {
                  "additionalProperties": true,
                  "properties": {
                    "limits": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "100m",
                          "description": "Cpu limits for ha cluster agent",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "64Mi",
                          "description": "Memory limits for ha cluster agent",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "limits",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "100m",
                          "description": "Cpu requests for ha cluster agent",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "16Mi",
                          "description": "Memory requests for ha cluster agent",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "requests",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "resources",
                  "type": "object"
                }
              },
              "required": [],
              "title": "cluster",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "node": {
              "additionalProperties": true,
              "properties": {
                "logLevel": {
                  "default": "info",
                  "description": "Log level for the ha node service",
                  "required": [],
                  "title": "logLevel",
                  "type": "string"
                },
                "priorityClassName": {
                  "default": "",
                  "description": "Set PriorityClass, overrides global",
                  "required": [],
                  "title": "priorityClassName",
                  "type": "string"
                },
                "resources": {
                  "additionalProperties": true,
                  "properties": {
                    "limits": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "100m",
                          "description": "Cpu limits for ha node agent",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "64Mi",
                          "description": "Memory limits for ha node agent",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "limits",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "100m",
                          "description": "Cpu requests for ha node agent",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "64Mi",
                          "description": "Memory requests for ha node agent",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "requests",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "tolerations": {
                  "description": "Set tolerations, overrides global",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tolerations",
                  "type": "array"
                }
              },
              "required": [],
              "title": "node",
              "type": "object"
            }
          },
          "required": [],
          "title": "ha",
          "type": "object"
        }
      },
      "required": [],
      "title": "agents",
      "type": "object"
    },
    "alloy": {
      "additionalProperties": true,
      "description": "# Various Alloy settings. For backwards compatibility with the grafana-agent\n# chart, this field may also be called \"agent\". Naming this field \"agent\" is\n# deprecated and will be removed in a future release.",
      "properties": {
        "alloy": {
          "additionalProperties": true,
          "properties": {
            "configMap": {
              "additionalProperties": true,
              "properties": {
                "content": {
                  "default": "{{- $releaseName := .Release.Name | replace \"-\" \"_\" -}}\n\nlivedebugging {\n  enabled = {{ .Values.logging_config.debugging }}\n}\n\ndiscovery.kubernetes \"{{ $releaseName }}_pods_name\" {\n  role = \"pod\"\n}\n\ndiscovery.relabel \"{{ $releaseName }}_pods_name\" {\n  targets = discovery.kubernetes.{{ $releaseName }}_pods_name.targets\n\n  {{- $labels := .Values.logging_config.labels }}\n  {{- if $labels }}\n  {{- $keys := (keys $labels | sortAlpha) }}\n\n  rule {\n    source_labels = [\n      {{- range $key := $keys }}\n      \"__meta_kubernetes_pod_label_{{ $key | replace \".\" \"_\" | replace \"/\" \"_\" }}\",\n      {{- end }}\n    ]\n    separator     = \";\"\n    regex         = \"^{{ include \"regex_or\" (dict \"labels\" $labels \"keys\" $keys) }}$\"\n    action        = \"keep\"\n  }\n\n  {{- end }}\n\n  rule {\n    regex  = \"__meta_kubernetes_pod_label_(.+)\"\n    action = \"labelmap\"\n  }\n\n  rule {\n    regex  = \"__meta_kubernetes_pod_label_(.+)\"\n    action = \"labelmap\"\n  }\n\n  rule {\n    source_labels = [\"__meta_kubernetes_namespace\"]\n    separator     = \"/\"\n    target_label  = \"job\"\n  }\n\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_name\"]\n    target_label  = \"pod\"\n  }\n\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_container_name\"]\n    target_label  = \"container\"\n  }\n\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_node_name\"]\n    target_label  = \"hostname\"\n  }\n\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_uid\", \"__meta_kubernetes_pod_container_name\"]\n    separator     = \"/\"\n    target_label  = \"__path__\"\n    replacement   = \"/var/log/pods/*$1/*.log\"\n  }\n}\n\nlocal.file_match \"{{ $releaseName }}_pod_files\" {\n  path_targets = discovery.relabel.{{ $releaseName }}_pods_name.output\n}\n\nloki.source.file \"{{ $releaseName }}_pod_logs\" {\n  targets    = local.file_match.{{ $releaseName }}_pod_files.targets\n  forward_to = [loki.process.{{ $releaseName }}_process_logs.receiver]\n}\n\nloki.process \"{{ $releaseName }}_process_logs\" {\n  forward_to = [loki.write.default.receiver]\n\n  stage.docker { }\n\n  stage.replace {\n    expression = \"(\\\\n)\"\n    replace = \"\"\n  }\n\n  stage.multiline {\n    firstline = \"^  \\\\x1b\\\\[2m(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}).(\\\\d{6})Z\"\n  }\n\n  stage.multiline {\n    firstline = \"^  (\\\\d{4})-(\\\\d{2})-(\\\\d{2})T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}).(\\\\d{6})Z\"\n  }\n}\n\nloki.write \"default\" {\n    endpoint {\n    url       = \"http://{{ .Release.Name }}-loki:3100/loki/api/v1/push\"\n    tenant_id = \"{{ .Values.logging_config.tenant_id }}\"\n  }\n  external_labels = {}\n}\n\n{{- define \"regex_or\" -}}\n{{- $labels := .labels -}}\n{{- $keys := .keys -}}\n{{- $numKeys := len $keys -}}\n{{- $regexParts := list -}}\n{{- range $i, $key := $keys -}}\n{{- $part := list -}}\n{{- range $j := until $numKeys -}}\n{{- if eq $j $i -}}\n{{- $part = append $part (get $labels $key) -}}\n{{- else -}}\n{{- $part = append $part \".*\" -}}\n{{- end -}}\n{{- end -}}\n{{- $regexParts = append $regexParts (join \";\" $part) -}}\n{{- end -}}\n{{- join \"|\" $regexParts -}}\n{{- end -}}\n",
                  "required": [],
                  "title": "content",
                  "type": "string"
                },
                "create": {
                  "default": true,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "configMap",
              "type": "object"
            },
            "mounts": {
              "additionalProperties": true,
              "properties": {
                "varlog": {
                  "default": true,
                  "required": [],
                  "title": "varlog",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "mounts",
              "type": "object"
            }
          },
          "required": [],
          "title": "alloy",
          "type": "object"
        },
        "clustering": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Deploy Alloy in a cluster to allow for load distribution.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "Name for the Alloy cluster. Used for differentiating between clusters.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "portName": {
              "default": "http",
              "description": "Name for the port used for clustering, useful if running inside an Istio Mesh",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "clustering",
          "type": "object"
        },
        "configMap": {
          "additionalProperties": true,
          "properties": {
            "content": {
              "default": "",
              "description": "Content to assign to the new ConfigMap.  This is passed into `tpl` allowing for templating from values.",
              "required": [],
              "title": "content",
              "type": "string"
            },
            "create": {
              "default": true,
              "description": "Create a new ConfigMap for the config file.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "key": {
              "default": "null",
              "description": "Key in ConfigMap to get config from.",
              "required": [],
              "title": "key",
              "type": "null"
            },
            "name": {
              "default": "null",
              "description": "Name of existing ConfigMap to use. Used when create is false.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "configMap",
          "type": "object"
        },
        "enableReporting": {
          "default": true,
          "description": "Enables sending Grafana Labs anonymous usage stats to help improve Grafana\nAlloy.",
          "required": [],
          "title": "enableReporting",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "envFrom": {
          "description": "Maps all the keys on a ConfigMap or Secret as environment variables. https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#envfromsource-v1-core",
          "items": {
            "additionalProperties": true,
            "properties": {
              "configMapRef": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "title": "configMapRef",
                "type": "object"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "envFrom",
          "type": "array"
        },
        "extraArgs": {
          "description": "Extra args to pass to `alloy run`: https://grafana.com/docs/alloy/latest/reference/cli/run/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Extra environment variables to pass to the Alloy container.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "value": {
                "required": [],
                "title": "value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraPorts": {
          "description": "Extra ports to expose on the Alloy container.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "port": {
                "required": [],
                "title": "port",
                "type": "integer"
              },
              "protocol": {
                "required": [],
                "title": "protocol",
                "type": "string"
              },
              "targetPort": {
                "required": [],
                "title": "targetPort",
                "type": "integer"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraPorts",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases to add to the Alloy container.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "hostnames": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "title": "hostnames",
                "type": "array"
              },
              "ip": {
                "required": [],
                "title": "ip",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Set lifecycle hooks for the Grafana Alloy container.",
          "properties": {
            "preStop": {
              "additionalProperties": true,
              "properties": {
                "exec": {
                  "additionalProperties": true,
                  "properties": {
                    "command": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "command",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "exec",
                  "type": "object"
                }
              },
              "required": [],
              "title": "preStop",
              "type": "object"
            }
          },
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "listenAddr": {
          "default": "0.0.0.0",
          "description": "Address to listen for traffic on. 0.0.0.0 exposes the UI to other\ncontainers.",
          "required": [],
          "title": "listenAddr",
          "type": "string"
        },
        "listenPort": {
          "default": 12345,
          "description": "Port to listen for traffic on.",
          "required": [],
          "title": "listenPort",
          "type": "integer"
        },
        "listenScheme": {
          "default": "HTTP",
          "description": "Scheme is needed for readiness probes. If enabling tls in your configs, set to \"HTTPS\"",
          "required": [],
          "title": "listenScheme",
          "type": "string"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Set livenessProbe for the Grafana Alloy container.",
          "properties": {
            "failureThreshold": {
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "scheme": {
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "required": [],
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "logging_config": {
          "additionalProperties": true,
          "properties": {
            "debugging": {
              "default": false,
              "description": "Enable debugging on alloy components.",
              "required": [],
              "title": "debugging",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels to enable scraping on, at-least one of these labels should be present.",
              "properties": {
                "openebs.io/logging": {
                  "default": true,
                  "required": [],
                  "title": "openebs.io/logging",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "tenant_id": {
              "default": "openebs",
              "description": "X-Scope-OrgID to pe populated which pushing logs. Make sure the caller also uses the same.",
              "required": [],
              "title": "tenant_id",
              "type": "string"
            }
          },
          "required": [],
          "title": "logging_config",
          "type": "object"
        },
        "mounts": {
          "additionalProperties": true,
          "properties": {
            "dockercontainers": {
              "default": false,
              "description": "Mount /var/lib/docker/containers from the host into the container for log\ncollection.",
              "required": [],
              "title": "dockercontainers",
              "type": "boolean"
            },
            "extra": {
              "description": "Extra volume mounts to add into the Grafana Alloy container. Does not\naffect the watch container.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "mountPath": {
                    "required": [],
                    "title": "mountPath",
                    "type": "string"
                  },
                  "name": {
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "extra",
              "type": "array"
            },
            "varlog": {
              "default": false,
              "description": "Mount /var/log from the host into the container for log collection.",
              "required": [],
              "title": "varlog",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "mounts",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits to apply to the Grafana Alloy container.",
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana Alloy container.",
          "properties": {
            "runAsGroup": {
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "stabilityLevel": {
          "default": "generally-available",
          "description": "Minimum stability level of components and behavior to enable. Must be\none of \"experimental\", \"public-preview\", or \"generally-available\".",
          "required": [],
          "title": "stabilityLevel",
          "type": "string"
        },
        "storagePath": {
          "default": "/tmp/alloy",
          "description": "Path to where Grafana Alloy stores data (for example, the Write-Ahead Log).\nBy default, data is lost between reboots.",
          "required": [],
          "title": "storagePath",
          "type": "string"
        },
        "uiPathPrefix": {
          "default": "/",
          "description": " Base path where the UI is exposed.",
          "required": [],
          "title": "uiPathPrefix",
          "type": "string"
        }
      },
      "required": [],
      "title": "alloy",
      "type": "object"
    },
    "analytics": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "installerType": {
          "default": "zfs-localpv-helm",
          "required": [],
          "title": "installerType",
          "type": "string"
        },
        "pingInterval": {
          "default": "24h",
          "description": "Specify in hours the duration after which a ping event needs to be sent.",
          "required": [],
          "title": "pingInterval",
          "type": "string"
        }
      },
      "required": [],
      "title": "analytics",
      "type": "object"
    },
    "annotations": {
      "additionalProperties": true,
      "description": "Annotations for the Deployment",
      "required": [],
      "title": "annotations",
      "type": "object"
    },
    "apis": {
      "additionalProperties": true,
      "properties": {
        "rest": {
          "additionalProperties": true,
          "properties": {
            "healthProbes": {
              "additionalProperties": true,
              "properties": {
                "liveness": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Toggle liveness probe.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "failureThreshold": {
                      "default": 1,
                      "description": "No. of failures the liveness probe will tolerate.",
                      "required": [],
                      "title": "failureThreshold",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "default": 0,
                      "description": "No. of seconds of delay before checking the liveness status.",
                      "required": [],
                      "title": "initialDelaySeconds",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "default": 30,
                      "description": "No. of seconds between liveness probe checks.",
                      "required": [],
                      "title": "periodSeconds",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "default": 5,
                      "description": "No. of seconds of timeout tolerance.",
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "liveness",
                  "type": "object"
                },
                "readiness": {
                  "additionalProperties": true,
                  "properties": {
                    "agentCoreProbeFreq": {
                      "default": "20s",
                      "description": "Frequency for the agent-core liveness probe.",
                      "required": [],
                      "title": "agentCoreProbeFreq",
                      "type": "string"
                    },
                    "enabled": {
                      "default": true,
                      "description": "Toggle readiness probe.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "failureThreshold": {
                      "default": 2,
                      "description": "No. of failures the readiness probe will tolerate.",
                      "required": [],
                      "title": "failureThreshold",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "default": 0,
                      "description": "No. of seconds of delay before checking the readiness status.",
                      "required": [],
                      "title": "initialDelaySeconds",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "default": 20,
                      "description": "No. of seconds between readiness probe checks.",
                      "required": [],
                      "title": "periodSeconds",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "default": 5,
                      "description": "No. of seconds of timeout tolerance.",
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "readiness",
                  "type": "object"
                }
              },
              "required": [],
              "title": "healthProbes",
              "type": "object"
            },
            "logLevel": {
              "default": "info",
              "description": "Log level for the rest service",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global.\nIf both local and global are not set, the final deployment manifest has a mayastor custom critical priority class assigned to the pod by default.\nRefer the `templates/_helpers.tpl` and `templates/mayastor/apis/rest/api-rest-deployment.yaml` for more details.",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "replicaCount": {
              "default": 1,
              "description": "Number of replicas of rest",
              "required": [],
              "title": "replicaCount",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu limits for rest",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "64Mi",
                      "description": "Memory limits for rest",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "50m",
                      "description": "Cpu requests for rest",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "Memory requests for rest",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "description": "Rest service parameters define how the rest service is exposed",
              "properties": {
                "nodePorts": {
                  "additionalProperties": true,
                  "description": "Ports from where rest endpoints are accessible from outside the cluster, only valid if type is NodePort",
                  "properties": {
                    "http": {
                      "default": 30011,
                      "description": "NodePort associated with http port",
                      "required": [],
                      "title": "http",
                      "type": "integer"
                    },
                    "https": {
                      "default": 30010,
                      "description": "NodePort associated with https port",
                      "required": [],
                      "title": "https",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "nodePorts",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "Rest K8s service type",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "rest",
          "type": "object"
        }
      },
      "required": [],
      "title": "apis",
      "type": "object"
    },
    "args": {
      "description": "#\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "args",
      "type": "array"
    },
    "auth": {
      "additionalProperties": true,
      "description": "Authentication setup",
      "properties": {
        "client": {
          "additionalProperties": true,
          "description": "# TLS authentication for client-to-server communications\n# ref: https://etcd.io/docs/current/op-guide/security/\n#",
          "properties": {
            "caFilename": {
              "default": "",
              "description": "#\n# If not specified and `auth.client.enableAuthentication=true` or `auth.rbac.enabled=true`, the default is is `ca.crt`\n#",
              "required": [],
              "title": "caFilename",
              "type": "string"
            },
            "certFilename": {
              "default": "cert.pem",
              "description": "#\n#",
              "required": [],
              "title": "certFilename",
              "type": "string"
            },
            "certKeyFilename": {
              "default": "key.pem",
              "description": "#\n#",
              "required": [],
              "title": "certKeyFilename",
              "type": "string"
            },
            "enableAuthentication": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enableAuthentication",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "secureTransport": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "secureTransport",
              "type": "boolean"
            },
            "useAutoTLS": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "useAutoTLS",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "client",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "peer": {
          "additionalProperties": true,
          "description": "# TLS authentication for server-to-server communications\n# ref: https://etcd.io/docs/current/op-guide/security/\n#",
          "properties": {
            "caFilename": {
              "default": "",
              "description": "#\n# If not specified and `auth.peer.enableAuthentication=true` or `rbac.enabled=true`, the default is is `ca.crt`\n#",
              "required": [],
              "title": "caFilename",
              "type": "string"
            },
            "certFilename": {
              "default": "cert.pem",
              "description": "#\n#",
              "required": [],
              "title": "certFilename",
              "type": "string"
            },
            "certKeyFilename": {
              "default": "key.pem",
              "description": "#\n#",
              "required": [],
              "title": "certKeyFilename",
              "type": "string"
            },
            "enableAuthentication": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enableAuthentication",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "secureTransport": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "secureTransport",
              "type": "boolean"
            },
            "useAutoTLS": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "useAutoTLS",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "peer",
          "type": "object"
        },
        "rbac": {
          "additionalProperties": true,
          "description": "# Role-based access control parameters\n# ref: https://etcd.io/docs/current/op-guide/authentication/\n#",
          "properties": {
            "allowNoneAuthentication": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "allowNoneAuthentication",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "existingSecretPasswordKey": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "existingSecretPasswordKey",
              "type": "string"
            },
            "rootPassword": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "rootPassword",
              "type": "string"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "resolver": {
          "additionalProperties": true,
          "description": "Public key of the System Account\nsystemAccount:",
          "properties": {
            "allowDelete": {
              "default": false,
              "description": "If the resolver type is 'full', delete when enabled will rename the jwt.",
              "required": [],
              "title": "allowDelete",
              "type": "boolean"
            },
            "interval": {
              "default": "2m",
              "description": "Interval at which a nats-server with a nats based account resolver will compare\nit's state with one random nats based account resolver in the cluster and if needed,\nexchange jwt and converge on the same set of jwt.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "operator": {
              "default": "",
              "description": "Operator JWT",
              "required": [],
              "title": "operator",
              "type": "null"
            },
            "store": {
              "additionalProperties": true,
              "description": "Directory in which the account JWTs will be stored.",
              "properties": {
                "dir": {
                  "default": "/accounts/jwt",
                  "required": [],
                  "title": "dir",
                  "type": "string"
                },
                "size": {
                  "default": "1Gi",
                  "description": "Size of the account JWT storage.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                }
              },
              "required": [],
              "title": "store",
              "type": "object"
            },
            "systemAccount": {
              "default": "",
              "description": "System Account Public NKEY",
              "required": [],
              "title": "systemAccount",
              "type": "null"
            },
            "type": {
              "default": "none",
              "description": "Disables the resolver by default",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "resolver",
          "type": "object"
        },
        "token": {
          "additionalProperties": true,
          "description": "# Authentication token\n# ref: https://etcd.io/docs/latest/learning/design-auth-v3/#two-types-of-tokens-simple-and-jwt\n#",
          "properties": {
            "privateKey": {
              "additionalProperties": true,
              "description": "#\n#\n# NOTE: Ignored if auth.token.type=simple\n# NOTE: A secret containing a private key will be auto-generated if an existing one is not provided.\n#",
              "properties": {
                "existingSecret": {
                  "default": "",
                  "required": [],
                  "title": "existingSecret",
                  "type": "string"
                },
                "filename": {
                  "default": "jwt-token.pem",
                  "required": [],
                  "title": "filename",
                  "type": "string"
                }
              },
              "required": [],
              "title": "privateKey",
              "type": "object"
            },
            "signMethod": {
              "default": "RS256",
              "description": "#\n# NOTE: Ignored if auth.token.type=simple\n#",
              "required": [],
              "title": "signMethod",
              "type": "string"
            },
            "ttl": {
              "default": "10m",
              "description": "#\n# NOTE: Ignored if auth.token.type=simple\n#",
              "required": [],
              "title": "ttl",
              "type": "string"
            },
            "type": {
              "default": "jwt",
              "description": "#\n# ref: https://etcd.io/docs/latest/op-guide/configuration/#--auth-token\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "token",
          "type": "object"
        }
      },
      "required": [],
      "title": "auth",
      "type": "object"
    },
    "autoCompactionMode": {
      "default": "",
      "description": "#\n# - 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. 5m).\n# - 'revision' for revision number based retention.\n#",
      "required": [],
      "title": "autoCompactionMode",
      "type": "string"
    },
    "autoCompactionRetention": {
      "default": "",
      "description": "#\n#",
      "required": [],
      "title": "autoCompactionRetention",
      "type": "string"
    },
    "backend": {
      "additionalProperties": true,
      "description": " Configuration for the backend pod(s)",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for backend pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "backend",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for backend StatefulSet",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Behavior policies while scaling.",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the backend.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 6,
              "description": "Maximum autoscaling replicas for the backend.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 3,
              "description": "Minimum autoscaling replicas for the backend.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilization percentage for the backend.",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilization percentage for the backend.",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for backend pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the backend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the backend image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the backend image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the backend image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for backend pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for volume claim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "dataVolumeParameters": {
              "additionalProperties": true,
              "description": "Parameters used for the `data` volume when volumeClaimEnabled if false",
              "properties": {
                "emptyDir": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "emptyDir",
                  "type": "object"
                }
              },
              "required": [],
              "title": "dataVolumeParameters",
              "type": "object"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": true,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "selector": {
              "default": "null",
              "description": "Selector for persistent disk",
              "required": [],
              "title": "selector",
              "type": "null"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "volumeClaimsEnabled": {
              "default": true,
              "description": "Enable volume claims in pod spec",
              "required": [],
              "title": "volumeClaimsEnabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for backend pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for each `backend` pod",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podManagementPolicy": {
          "default": "Parallel",
          "description": "The default is to deploy all pods in parallel.",
          "required": [],
          "title": "podManagementPolicy",
          "type": "string"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for backend pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 3,
          "description": "Number of replicas for the backend",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the backend",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "selectorLabels": {
          "additionalProperties": true,
          "description": "Additional selector labels for each `backend` pod",
          "required": [],
          "title": "selectorLabels",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for backend Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for backend Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "targetModule": {
          "default": "backend",
          "description": "Comma-separated list of Loki modules to load for the backend",
          "required": [],
          "title": "targetModule",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the backend to shutdown before it is killed. Especially for the ingester,\nthis must be increased. It must be long enough so backends can be gracefully shutdown flushing/transferring\nall data and to successfully leave the member ring on shutdown.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for backend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "backend",
      "type": "object"
    },
    "backupGC": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "backupGC",
      "type": "object"
    },
    "base": {
      "additionalProperties": true,
      "properties": {
        "cache_poll_period": {
          "default": "30s",
          "description": "Cache timeout for core agent \u0026 diskpool deployment",
          "required": [],
          "title": "cache_poll_period",
          "type": "string"
        },
        "default_req_timeout": {
          "default": "5s",
          "description": "Request timeout for rest \u0026 core agents",
          "required": [],
          "title": "default_req_timeout",
          "type": "string"
        },
        "initContainers": {
          "additionalProperties": true,
          "properties": {
            "containers": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "command": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "command",
                    "type": "array"
                  },
                  "name": {
                    "default": "etcd-probe",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "name": {
                  "default": "alpine-sh",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "tag": {
                  "default": "4.2.0",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            }
          },
          "required": [],
          "title": "initContainers",
          "type": "object"
        },
        "initCoreContainers": {
          "additionalProperties": true,
          "properties": {
            "containers": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "command": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "command",
                    "type": "array"
                  },
                  "name": {
                    "default": "etcd-probe",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "initCoreContainers",
          "type": "object"
        },
        "initHaNodeContainers": {
          "additionalProperties": true,
          "properties": {
            "containers": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "command": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "command",
                    "type": "array"
                  },
                  "name": {
                    "default": "agent-cluster-grpc-probe",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "initHaNodeContainers",
          "type": "object"
        },
        "initRestContainer": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "initContainer": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "command": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "command",
                    "type": "array"
                  },
                  "name": {
                    "default": "api-rest-probe",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "initContainer",
              "type": "array"
            }
          },
          "required": [],
          "title": "initRestContainer",
          "type": "object"
        },
        "jaeger": {
          "additionalProperties": true,
          "properties": {
            "agent": {
              "additionalProperties": true,
              "properties": {
                "initContainer": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "command": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "command",
                        "type": "array"
                      },
                      "name": {
                        "default": "jaeger-probe",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "initContainer",
                  "type": "array"
                },
                "name": {
                  "default": "jaeger-agent",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "port": {
                  "default": 6831,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "agent",
              "type": "object"
            },
            "collector": {
              "additionalProperties": true,
              "properties": {
                "initContainer": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "command": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "command",
                        "type": "array"
                      },
                      "name": {
                        "default": "jaeger-probe",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "initContainer",
                  "type": "array"
                },
                "name": {
                  "default": "jaeger-collector",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "port": {
                  "default": 4317,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "collector",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable jaeger tracing (for development only).\nSince version 1.31 the Jaeger Operator uses webhooks to validate Jaeger custom resources (CRs).\nThis requires an installed version of the cert-manager.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "initContainer": {
              "default": true,
              "required": [],
              "title": "initContainer",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "jaeger",
          "type": "object"
        },
        "logging": {
          "additionalProperties": true,
          "properties": {
            "color": {
              "default": true,
              "description": "Enable ansi color code for Pod StdOut/StdErr",
              "required": [],
              "title": "color",
              "type": "boolean"
            },
            "format": {
              "default": "pretty",
              "description": "Valid values for format are pretty, json and compact",
              "required": [],
              "title": "format",
              "type": "string"
            },
            "silenceLevel": {
              "default": "",
              "description": "Silence specific module components",
              "required": [],
              "title": "silenceLevel",
              "type": "null"
            }
          },
          "required": [],
          "title": "logging",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable the metrics exporter",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        }
      },
      "required": [],
      "title": "base",
      "type": "object"
    },
    "bloomBuilder": {
      "additionalProperties": true,
      "description": "Configuration for the bloom-builder",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for bloom-builder pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "bloom-builder",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the queryFrontend service. This allows bloomBuilder to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "- type: Pods\n  pods:\n    metric:\n      name: loki_query_rate\n    target:\n      type: AverageValue\n      averageValue: 100",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable autoscaling behaviours",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "description": "define scale down policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "define scale up policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "customMetrics": {
              "description": "Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "customMetrics",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the bloom-builder",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the bloom-builder",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the bloom-builder",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the bloom-builder",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "null",
              "description": "Target memory utilisation percentage for the bloom-builder",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the bloom-builder",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the bloom-builder image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the bloom-builder image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the bloom-builder image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for bloom-builder pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-builder pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-builder pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for bloom-builder pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the bloom-builder",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the bloom-builder",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-builder service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-builder service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the bloom-builder to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for bloom-builder pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "bloomBuilder",
      "type": "object"
    },
    "bloomCompactor": {
      "additionalProperties": true,
      "properties": {
        "replicas": {
          "required": [],
          "title": "replicas",
          "type": "integer"
        }
      },
      "required": [],
      "title": "bloomCompactor",
      "type": "object"
    },
    "bloomGateway": {
      "additionalProperties": true,
      "description": "Configuration for the bloom-gateway",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for bloom-gateway pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "bloom-gateway",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the bloom-gateway",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the bloom-gateway image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the bloom-gateway image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the bloom-gateway image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "liveness probe settings for ingester pods. If empty use `loki.livenessProbe`",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for bloom-gateway pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for bloom-gateway PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "claims": {
              "description": "List of the bloom-gateway PVCs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "data",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "size": {
                    "default": "10Gi",
                    "description": "Size of persistent disk",
                    "required": [],
                    "title": "size",
                    "type": "string"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "  -- Storage class to be used.\n  If defined, storageClassName: \u003cstorageClass\u003e.\n  If set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\n  If empty or set to null, no storageClassName spec is\n  set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "claims",
              "type": "array"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the bloom-gateway",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-gateway pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-gateway pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for bloom-gateway pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the bloom-gateway",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the bloom-gateway",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the bloom-gateway service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "Set this toggle to false to opt out of automounting API credentials for the service account",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": false,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "imagePullSecrets": {
              "description": "Image pull secrets for the bloom-gateway service account",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "name": {
              "default": "null",
              "description": "The name of the ServiceAccount to use for the bloom-gateway.\nIf not set and create is true, a name is generated by appending\n\"-bloom-gateway\" to the common ServiceAccount.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-gateway service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-gateway service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the bloom-gateway to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for bloom-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "bloomGateway",
      "type": "object"
    },
    "bloomPlanner": {
      "additionalProperties": true,
      "description": "Configuration for the bloom-planner",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for bloom-planner pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "bloom-planner",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the bloom-planner",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the bloom-planner image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the bloom-planner image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the bloom-planner image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "liveness probe settings for ingester pods. If empty use `loki.livenessProbe`",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for bloom-planner pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for bloom-planner PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "claims": {
              "description": "List of the bloom-planner PVCs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "data",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "size": {
                    "default": "10Gi",
                    "description": "Size of persistent disk",
                    "required": [],
                    "title": "size",
                    "type": "string"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "  -- Storage class to be used.\n  If defined, storageClassName: \u003cstorageClass\u003e.\n  If set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\n  If empty or set to null, no storageClassName spec is\n  set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "claims",
              "type": "array"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the bloom-planner",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-planner pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-planner pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for bloom-planner pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the bloom-planner",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the bloom-planner",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the bloom-planner service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "Set this toggle to false to opt out of automounting API credentials for the service account",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": false,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "imagePullSecrets": {
              "description": "Image pull secrets for the bloom-planner service account",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "name": {
              "default": "null",
              "description": "The name of the ServiceAccount to use for the bloom-planner.\nIf not set and create is true, a name is generated by appending\n\"-bloom-planner\" to the common ServiceAccount.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for bloom-planner service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for bloom-planner service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the bloom-planner to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for bloom-planner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "bloomPlanner",
      "type": "object"
    },
    "bootconfig": {
      "additionalProperties": true,
      "description": "In case of both external access and advertisements being\nenabled, an initializer container will be used to gather\nthe public ips.",
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "natsio/nats-boot-config",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "0.10.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resources to add to the container\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "bootconfig",
      "type": "object"
    },
    "bucketRoot": {
      "default": "",
      "description": "# Override the root directory which the minio server should serve from.\n# If left empty, it defaults to the value of {{ .Values.mountPath }}\n# If defined, it must be a sub-directory of the path specified in {{ .Values.mountPath }}\n#",
      "required": [],
      "title": "bucketRoot",
      "type": "string"
    },
    "buckets": {
      "description": "# List of buckets to be created after minio install\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "buckets",
      "type": "array"
    },
    "certs": {
      "additionalProperties": true,
      "properties": {
        "certificate": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "issuerKind": {
              "default": "Issuer",
              "description": "Specify the cert-manager issuer kind to use an existing cert-manager\nissuer; typically Issuer or ClusterIssuer\nThis field will be ignored if issuer.create is true",
              "required": [],
              "title": "issuerKind",
              "type": "string"
            },
            "namespace": {
              "default": "",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "secretName": {
              "default": "",
              "required": [],
              "title": "secretName",
              "type": "string"
            }
          },
          "required": [],
          "title": "certificate",
          "type": "object"
        },
        "issuer": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "issuer",
          "type": "object"
        }
      },
      "required": [],
      "title": "certs",
      "type": "object"
    },
    "certsPath": {
      "default": "/etc/minio/certs/",
      "description": "# Directory on the MinIO pof",
      "required": [],
      "title": "certsPath",
      "type": "string"
    },
    "chunksCache": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for chunks-cache pods",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "allocatedMemory": {
          "default": 8192,
          "description": "Amount of memory allocated to chunks-cache for object storage (in MB).",
          "required": [],
          "title": "allocatedMemory",
          "type": "integer"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the chunks-cache pods",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "batchSize": {
          "default": 4,
          "description": "Batchsize for sending and receiving chunks from chunks cache",
          "required": [],
          "title": "batchSize",
          "type": "integer"
        },
        "connectionLimit": {
          "default": 16384,
          "description": "Maximum number of connections allowed",
          "required": [],
          "title": "connectionLimit",
          "type": "integer"
        },
        "defaultValidity": {
          "default": "0s",
          "description": "Specify how long cached chunks should be stored in the chunks-cache before being expired",
          "required": [],
          "title": "defaultValidity",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Specifies whether memcached based chunks-cache should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": "Additional CLI args for chunks-cache",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "description": "Additional containers to be added to the chunks-cache pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraExtendedOptions": {
          "default": "",
          "description": "Add extended options for chunks-cache memcached container. The format is the same as for the memcached -o/--extend flag.\nExample:\nextraExtendedOptions: 'tls,no_hashexpand'",
          "required": [],
          "title": "extraExtendedOptions",
          "type": "string"
        },
        "extraVolumeMounts": {
          "description": "Additional volume mounts to be added to the chunks-cache pod (applies to both memcached and exporter containers).\nExample:\nextraVolumeMounts:\n- name: extra-volume\n  mountPath: /etc/extra-volume\n  readOnly: true",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional volumes to be added to the chunks-cache pod (applies to both memcached and exporter containers).\nExample:\nextraVolumes:\n- name: extra-volume\n  secret:\n   secretName: extra-volume-secret",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "initContainers": {
          "description": "Extra init containers for chunks-cache pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxItemMemory": {
          "default": 5,
          "description": "Maximum item memory for chunks-cache (in MB).",
          "required": [],
          "title": "maxItemMemory",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for chunks-cache pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "parallelism": {
          "default": 5,
          "description": "Parallel threads for sending and receiving chunks from chunks cache",
          "required": [],
          "title": "parallelism",
          "type": "integer"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "Persistence settings for the chunks-cache",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the chunks-cache",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "mountPath": {
              "default": "/data",
              "description": "Volume mount path",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "storageSize": {
              "default": "10G",
              "description": "Size of persistent disk, must be in G or Gi",
              "required": [],
              "title": "storageSize",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for chunks-cache pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "Pod Disruption Budget",
          "properties": {
            "maxUnavailable": {
              "default": 1,
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for chunks-cache pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podManagementPolicy": {
          "default": "Parallel",
          "description": "Management policy for chunks-cache pods",
          "required": [],
          "title": "podManagementPolicy",
          "type": "string"
        },
        "port": {
          "default": 11211,
          "description": "Port of the chunks-cache service",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for chunks-cache pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Total number of chunks-cache replicas",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "default": "null",
          "description": "Resource requests and limits for the chunks-cache\nBy default a safe memory limit will be requested based on allocatedMemory value (floor (* 1.2 allocatedMemory)).",
          "required": [],
          "title": "resources",
          "type": "null"
        },
        "service": {
          "additionalProperties": true,
          "description": "Service annotations and labels",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "statefulStrategy": {
          "additionalProperties": true,
          "description": "Stateful chunks-cache strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "statefulStrategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "description": "Grace period to allow the chunks-cache to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "timeout": {
          "default": "2000ms",
          "description": "Memcached operation timeout",
          "required": [],
          "title": "timeout",
          "type": "string"
        },
        "tolerations": {
          "description": " maxSkew: 1\n topologyKey: kubernetes.io/hostname\n whenUnsatisfiable: ScheduleAnyway\nTolerations for chunks-cache pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "topologySpreadConstraints allows to customize the default topologySpreadConstraints. This can be either a single dict as shown below or a slice of topologySpreadConstraints.\nlabelSelector is taken from the constraint itself (if it exists) or is generated by the chart using the same selectors as for services.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "writebackBuffer": {
          "default": 500000,
          "description": "Max number of objects to use for cache write back",
          "required": [],
          "title": "writebackBuffer",
          "type": "integer"
        },
        "writebackParallelism": {
          "default": 1,
          "description": "Number of parallel threads for cache write back",
          "required": [],
          "title": "writebackParallelism",
          "type": "integer"
        },
        "writebackSizeLimit": {
          "default": "500MB",
          "description": "Max memory to use for cache write back",
          "required": [],
          "title": "writebackSizeLimit",
          "type": "string"
        }
      },
      "required": [],
      "title": "chunksCache",
      "type": "object"
    },
    "cluster": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraRoutes": {
          "description": "Explicitly set routes for clustering.\nWhen JetStream is enabled, the serverName must be unique in the cluster.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraRoutes",
          "type": "array"
        },
        "noAdvertise": {
          "default": false,
          "required": [],
          "title": "noAdvertise",
          "type": "boolean"
        },
        "replicas": {
          "default": 3,
          "required": [],
          "title": "replicas",
          "type": "integer"
        }
      },
      "required": [],
      "title": "cluster",
      "type": "object"
    },
    "clusterDomain": {
      "default": "cluster.local",
      "description": "# set kubernetes cluster domain where minio is running\n#",
      "required": [],
      "title": "clusterDomain",
      "type": "string"
    },
    "clusterLabelOverride": {
      "default": "null",
      "description": "Overrides the chart's cluster label",
      "required": [],
      "title": "clusterLabelOverride",
      "type": "null"
    },
    "command": {
      "description": "#\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "command",
      "type": "array"
    },
    "commonAnnotations": {
      "additionalProperties": true,
      "description": "#\n#",
      "required": [],
      "title": "commonAnnotations",
      "type": "object"
    },
    "commonLabels": {
      "additionalProperties": true,
      "description": "Add labels to all the deployed resources",
      "required": [],
      "title": "commonLabels",
      "type": "object"
    },
    "compactor": {
      "additionalProperties": true,
      "description": "Configuration for the compactor",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for compactor pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "compactor",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the compactor",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the compactor image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the compactor image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the compactor image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "liveness probe settings for ingester pods. If empty use `loki.livenessProbe`",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for compactor pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for compactor PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "claims": {
              "description": "List of the compactor PVCs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "data",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "size": {
                    "default": "10Gi",
                    "required": [],
                    "title": "size",
                    "type": "string"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "  -- Storage class to be used.\n  If defined, storageClassName: \u003cstorageClass\u003e.\n  If set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\n  If empty or set to null, no storageClassName spec is\n  set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "claims",
              "type": "array"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the compactor",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for compactor pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for compactor pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for compactor pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the compactor",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the compactor",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the compactor service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "Set this toggle to false to opt out of automounting API credentials for the service account",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": false,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "imagePullSecrets": {
              "description": "Image pull secrets for the compactor service account",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "name": {
              "default": "null",
              "description": "The name of the ServiceAccount to use for the compactor.\nIf not set and create is true, a name is generated by appending\n\"-compactor\" to the common ServiceAccount.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for compactor service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for compactor service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the compactor to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "compactor",
      "type": "object"
    },
    "configPathmc": {
      "default": "/etc/minio/mc/",
      "required": [],
      "title": "configPathmc",
      "type": "string"
    },
    "configReloader": {
      "additionalProperties": true,
      "description": "Options for the extra controller used for config reloading.",
      "properties": {
        "customArgs": {
          "description": "Override the args passed to the container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "customArgs",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "description": "Enables automatically reloading when the Alloy config changes.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "",
              "description": "SHA256 digest of image to use for config reloading (either in format \"sha256:XYZ\" or \"XYZ\"). When set, will override `configReloader.image.tag`",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "registry": {
              "default": "quay.io",
              "description": "Config reloader image registry (defaults to docker.io)",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "prometheus-operator/prometheus-config-reloader",
              "description": "Repository to get config reloader image from.",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.81.0",
              "description": "Tag of image to use for config reloading.",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits to apply to the config reloader container.",
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "10m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "50Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana configReloader container.",
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "configReloader",
      "type": "object"
    },
    "configuration": {
      "default": "",
      "description": "#\n# e.g:\n# configuration: |-\n#    foo: bar\n#    baz:\n#",
      "required": [],
      "title": "configuration",
      "type": "string"
    },
    "consoleIngress": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "node-role.kubernetes.io/ingress: platform",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "ingressClassName": {
          "default": "~",
          "required": [],
          "title": "ingressClassName",
          "type": "null"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "default": "/",
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nkubernetes.io/ingress.allow-http: \"false\"\nkubernetes.io/ingress.global-static-ip-name: \"\"\nnginx.ingress.kubernetes.io/secure-backends: \"true\"\nnginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nnginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "consoleIngress",
      "type": "object"
    },
    "consoleService": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "clusterIP": {
          "default": "~",
          "required": [],
          "title": "clusterIP",
          "type": "null"
        },
        "externalIPs": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "externalIPs",
          "type": "array"
        },
        "externalTrafficPolicy": {
          "default": "Cluster",
          "description": "# servconsoleServiceice.externalTrafficPolicy minio service external traffic policy\n# ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
          "required": [],
          "title": "externalTrafficPolicy",
          "type": "string"
        },
        "loadBalancerIP": {
          "default": "~",
          "required": [],
          "title": "loadBalancerIP",
          "type": "null"
        },
        "loadBalancerSourceRanges": {
          "description": "# consoleService.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n#\nloadBalancerSourceRanges:\n  - 10.10.10.0/24",
          "items": {
            "required": []
          },
          "required": [],
          "title": "loadBalancerSourceRanges",
          "type": "array"
        },
        "nodePort": {
          "default": 32001,
          "required": [],
          "title": "nodePort",
          "type": "integer"
        },
        "port": {
          "default": "9001",
          "required": [],
          "title": "port",
          "type": "string"
        },
        "type": {
          "default": "ClusterIP",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "consoleService",
      "type": "object"
    },
    "containerPorts": {
      "additionalProperties": true,
      "description": "# etcd container ports to open\n#\n#\n#",
      "properties": {
        "client": {
          "default": 2379,
          "required": [],
          "title": "client",
          "type": "integer"
        },
        "peer": {
          "default": 2380,
          "required": [],
          "title": "peer",
          "type": "integer"
        }
      },
      "required": [],
      "title": "containerPorts",
      "type": "object"
    },
    "containerSecurityContext": {
      "additionalProperties": true,
      "description": "Container security context (allowPrivilegeEscalation, etc.)",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "default": false,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1001,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        }
      },
      "required": [],
      "title": "containerSecurityContext",
      "type": "object"
    },
    "controller": {
      "additionalProperties": true,
      "description": "Test correct rendering of the pod annotations",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity configuration for pods.",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Creates a HorizontalPodAutoscaler for controller type deployment.\nDeprecated: Please use controller.autoscaling.horizontal instead",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "horizontal": {
              "additionalProperties": true,
              "description": "Configures the Horizontal Pod Autoscaler for the controller.",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enables the Horizontal Pod Autoscaler for the controller.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxReplicas": {
                  "default": 5,
                  "description": "The upper limit for the number of replicas to which the autoscaler can scale up.",
                  "required": [],
                  "title": "maxReplicas",
                  "type": "integer"
                },
                "minReplicas": {
                  "default": 1,
                  "description": "The lower limit for the number of replicas to which the autoscaler can scale down.",
                  "required": [],
                  "title": "minReplicas",
                  "type": "integer"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "properties": {
                    "policies": {
                      "description": "List of policies to determine the scale-down behavior.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "periodSeconds": {
                            "required": [],
                            "title": "periodSeconds",
                            "type": "integer"
                          },
                          "type": {
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "required": [],
                            "title": "value",
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    },
                    "selectPolicy": {
                      "default": "Max",
                      "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-down policies to apply if multiple are specified.",
                      "required": [],
                      "title": "selectPolicy",
                      "type": "string"
                    },
                    "stabilizationWindowSeconds": {
                      "default": 300,
                      "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling down.",
                      "required": [],
                      "title": "stabilizationWindowSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "properties": {
                    "policies": {
                      "description": "List of policies to determine the scale-up behavior.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "periodSeconds": {
                            "required": [],
                            "title": "periodSeconds",
                            "type": "integer"
                          },
                          "type": {
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "required": [],
                            "title": "value",
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    },
                    "selectPolicy": {
                      "default": "Max",
                      "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-up policies to apply if multiple are specified.",
                      "required": [],
                      "title": "selectPolicy",
                      "type": "string"
                    },
                    "stabilizationWindowSeconds": {
                      "default": 0,
                      "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling up.",
                      "required": [],
                      "title": "stabilizationWindowSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                },
                "targetCPUUtilizationPercentage": {
                  "default": 0,
                  "description": "Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.",
                  "required": [],
                  "title": "targetCPUUtilizationPercentage",
                  "type": "integer"
                },
                "targetMemoryUtilizationPercentage": {
                  "default": 80,
                  "description": "Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.",
                  "required": [],
                  "title": "targetMemoryUtilizationPercentage",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "horizontal",
              "type": "object"
            },
            "maxReplicas": {
              "default": 5,
              "description": "The upper limit for the number of replicas to which the autoscaler can scale up.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "The lower limit for the number of replicas to which the autoscaler can scale down.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "scaleDown": {
              "additionalProperties": true,
              "properties": {
                "policies": {
                  "description": "List of policies to determine the scale-down behavior.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "periodSeconds": {
                        "required": [],
                        "title": "periodSeconds",
                        "type": "integer"
                      },
                      "type": {
                        "required": [],
                        "title": "type",
                        "type": "string"
                      },
                      "value": {
                        "required": [],
                        "title": "value",
                        "type": "integer"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "policies",
                  "type": "array"
                },
                "selectPolicy": {
                  "default": "Max",
                  "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-down policies to apply if multiple are specified.",
                  "required": [],
                  "title": "selectPolicy",
                  "type": "string"
                },
                "stabilizationWindowSeconds": {
                  "default": 300,
                  "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling down.",
                  "required": [],
                  "title": "stabilizationWindowSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "scaleDown",
              "type": "object"
            },
            "scaleUp": {
              "additionalProperties": true,
              "properties": {
                "policies": {
                  "description": "List of policies to determine the scale-up behavior.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "periodSeconds": {
                        "required": [],
                        "title": "periodSeconds",
                        "type": "integer"
                      },
                      "type": {
                        "required": [],
                        "title": "type",
                        "type": "string"
                      },
                      "value": {
                        "required": [],
                        "title": "value",
                        "type": "integer"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "policies",
                  "type": "array"
                },
                "selectPolicy": {
                  "default": "Max",
                  "description": "- type: Pods\n  value: 4\n  periodSeconds: 60\nDetermines which of the provided scaling-up policies to apply if multiple are specified.",
                  "required": [],
                  "title": "selectPolicy",
                  "type": "string"
                },
                "stabilizationWindowSeconds": {
                  "default": 0,
                  "description": "The duration that the autoscaling mechanism should look back on to make decisions about scaling up.",
                  "required": [],
                  "title": "stabilizationWindowSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "scaleUp",
              "type": "object"
            },
            "targetCPUUtilizationPercentage": {
              "default": 0,
              "description": "Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": 80,
              "description": "Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "integer"
            },
            "vertical": {
              "additionalProperties": true,
              "description": "Configures the Vertical Pod Autoscaler for the controller.",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enables the Vertical Pod Autoscaler for the controller.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "recommenders": {
                  "description": "List of recommenders to use for the Vertical Pod Autoscaler.\nRecommenders are responsible for generating recommendation for the object.\nList should be empty (then the default recommender will generate the recommendation)\nor contain exactly one recommender.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "recommenders",
                  "type": "array"
                },
                "resourcePolicy": {
                  "additionalProperties": true,
                  "description": "Configures the resource policy for the Vertical Pod Autoscaler.",
                  "properties": {
                    "containerPolicies": {
                      "description": "Configures the container policies for the Vertical Pod Autoscaler.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "containerName": {
                            "default": "alloy",
                            "required": [],
                            "title": "containerName",
                            "type": "string"
                          },
                          "controlledResources": {
                            "description": "The controlled resources for the Vertical Pod Autoscaler.",
                            "items": {
                              "required": [],
                              "type": "string"
                            },
                            "required": [],
                            "title": "controlledResources",
                            "type": "array"
                          },
                          "controlledValues": {
                            "default": "RequestsAndLimits",
                            "description": "The controlled values for the Vertical Pod Autoscaler. Needs to be either RequestsOnly or RequestsAndLimits.",
                            "required": [],
                            "title": "controlledValues",
                            "type": "string"
                          },
                          "maxAllowed": {
                            "additionalProperties": true,
                            "description": "The maximum allowed values for the pods.",
                            "required": [],
                            "title": "maxAllowed",
                            "type": "object"
                          },
                          "minAllowed": {
                            "additionalProperties": true,
                            "description": "cpu: 200m\nmemory: 100Mi\nDefines the min allowed resources for the pod",
                            "required": [],
                            "title": "minAllowed",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "containerPolicies",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "resourcePolicy",
                  "type": "object"
                },
                "updatePolicy": {
                  "default": "",
                  "description": "Configures the update policy for the Vertical Pod Autoscaler.",
                  "required": [],
                  "title": "updatePolicy",
                  "type": "null"
                }
              },
              "required": [],
              "title": "vertical",
              "type": "object"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsPolicy": {
          "default": "ClusterFirst",
          "description": "Configures the DNS policy for the pod. https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "required": [],
          "title": "dnsPolicy",
          "type": "string"
        },
        "enableStatefulSetAutoDeletePVC": {
          "default": false,
          "description": "Whether to enable automatic deletion of stale PVCs due to a scale down operation, when controller.type is 'statefulset'.",
          "required": [],
          "title": "enableStatefulSetAutoDeletePVC",
          "type": "boolean"
        },
        "extraAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to add to controller.",
          "required": [],
          "title": "extraAnnotations",
          "type": "object"
        },
        "extraContainers": {
          "description": "Additional containers to run alongside the Alloy container and initContainers.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "env": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    },
                    "value": {
                      "required": [],
                      "title": "value",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "env",
                "type": "array"
              },
              "image": {
                "required": [],
                "title": "image",
                "type": "string"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "volumeMounts": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "mountPath": {
                      "required": [],
                      "title": "mountPath",
                      "type": "string"
                    },
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "volumeMounts",
                "type": "array"
              },
              "volumes": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "emptyDir": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "emptyDir",
                      "type": "object"
                    },
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "volumes",
                "type": "array"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "hostNetwork": {
          "default": false,
          "description": "Configures Pods to use the host network. When set to true, the ports that will be used must be specified.",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "hostPID": {
          "default": false,
          "description": "Configures Pods to use the host PID namespace.",
          "required": [],
          "title": "hostPID",
          "type": "boolean"
        },
        "initContainers": {
          "description": "# -- Additional init containers to run.\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n#",
          "items": {
            "additionalProperties": true,
            "properties": {
              "env": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    },
                    "value": {
                      "required": [],
                      "title": "value",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "env",
                "type": "array"
              },
              "image": {
                "required": [],
                "title": "image",
                "type": "string"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "volumeMounts": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "mountPath": {
                      "required": [],
                      "title": "mountPath",
                      "type": "string"
                    },
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "volumeMounts",
                "type": "array"
              },
              "volumes": {
                "items": {
                  "additionalProperties": true,
                  "properties": {
                    "emptyDir": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "emptyDir",
                      "type": "object"
                    },
                    "name": {
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "title": "volumes",
                "type": "array"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "nodeSelector to apply to Grafana Alloy pods.",
          "properties": {
            "key1": {
              "required": [],
              "title": "key1",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "parallelRollout": {
          "default": true,
          "description": "Whether to deploy pods in parallel. Only used when controller.type is\n'statefulset'.",
          "required": [],
          "title": "parallelRollout",
          "type": "boolean"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Extra pod annotations to add.",
          "properties": {
            "testAnnotationKey": {
              "required": [],
              "title": "testAnnotationKey",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "PodDisruptionBudget configuration.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Whether to create a PodDisruptionBudget for the controller.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": "null",
              "description": "Maximum number of pods that can be unavailable during a disruption.\nNote: Only one of minAvailable or maxUnavailable should be set.",
              "required": [],
              "title": "maxUnavailable",
              "type": "null"
            },
            "minAvailable": {
              "default": "null",
              "description": "Minimum number of pods that must be available during a disruption.\nNote: Only one of minAvailable or maxUnavailable should be set.",
              "required": [],
              "title": "minAvailable",
              "type": "null"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Extra pod labels to add.",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "priorityClassName to apply to Grafana Alloy pods.",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "replicas": {
          "default": 1,
          "description": "Number of pods to deploy. Ignored when controller.type is 'daemonset'.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "terminationGracePeriodSeconds": {
          "default": "null",
          "description": "Termination grace period in seconds for the Grafana Alloy pods.\nThe default value used by Kubernetes if unspecifed is 30 seconds.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "null"
        },
        "tolerations": {
          "description": "Tolerations to apply to Grafana Alloy pods.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "effect": {
                "required": [],
                "title": "effect",
                "type": "string"
              },
              "key": {
                "required": [],
                "title": "key",
                "type": "string"
              },
              "operator": {
                "required": [],
                "title": "operator",
                "type": "string"
              },
              "value": {
                "required": [],
                "title": "value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints to apply to Grafana Alloy pods.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "labelSelector": {
                "additionalProperties": true,
                "properties": {
                  "matchLabels": {
                    "additionalProperties": true,
                    "properties": {
                      "app.kubernetes.io/instance": {
                        "required": [],
                        "title": "app.kubernetes.io/instance",
                        "type": "string"
                      },
                      "app.kubernetes.io/name": {
                        "required": [],
                        "title": "app.kubernetes.io/name",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "matchLabels",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "labelSelector",
                "type": "object"
              },
              "maxSkew": {
                "required": [],
                "title": "maxSkew",
                "type": "integer"
              },
              "topologyKey": {
                "required": [],
                "title": "topologyKey",
                "type": "string"
              },
              "whenUnsatisfiable": {
                "required": [],
                "title": "whenUnsatisfiable",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "type": {
          "default": "daemonset",
          "description": "Type of controller to use for deploying Grafana Alloy in the cluster.\nMust be one of 'daemonset', 'deployment', or 'statefulset'.",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "Update strategy for updating deployed Pods.",
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        },
        "volumeClaimTemplates": {
          "description": "volumeClaimTemplates to add when controller.type is 'statefulset'.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeClaimTemplates",
          "type": "array"
        },
        "volumes": {
          "additionalProperties": true,
          "properties": {
            "extra": {
              "description": "Extra volumes to add to the Grafana Alloy pod.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "emptyDir": {
                    "additionalProperties": true,
                    "properties": {
                      "sizeLimit": {
                        "required": [],
                        "title": "sizeLimit",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "emptyDir",
                    "type": "object"
                  },
                  "mountPath": {
                    "required": [],
                    "title": "mountPath",
                    "type": "string"
                  },
                  "name": {
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "extra",
              "type": "array"
            }
          },
          "required": [],
          "title": "volumes",
          "type": "object"
        }
      },
      "required": [],
      "title": "controller",
      "type": "object"
    },
    "crds": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": true,
          "description": "Whether to install CRDs for monitoring.",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "csi": {
          "additionalProperties": true,
          "properties": {
            "volumeSnapshots": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Install Volume Snapshot CRDs",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "keep": {
                  "default": true,
                  "description": "Keep CRDs on chart uninstall",
                  "required": [],
                  "title": "keep",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "volumeSnapshots",
              "type": "object"
            }
          },
          "required": [],
          "title": "csi",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "Disables the installation of all CRDs if set to false",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "lvmLocalPv": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Install lvm-localpv CRDs",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "keep": {
              "default": true,
              "description": "Keep CRDs on chart uninstall",
              "required": [],
              "title": "keep",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "lvmLocalPv",
          "type": "object"
        },
        "zfsLocalPv": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Install zfs-localpv CRDs",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "zfsLocalPv",
          "type": "object"
        }
      },
      "required": [],
      "title": "crds",
      "type": "object"
    },
    "csi": {
      "additionalProperties": true,
      "properties": {
        "controller": {
          "additionalProperties": true,
          "properties": {
            "enableDangerousRetainGC": {
              "default": false,
              "description": "Enable auto garbage collection of volume resources which were associated with `Retain` PV's.\nBefore enabling this, make sure you're well aware of the dangerous downsides.\nFor more information see: \u003chttps://kubernetes.io/docs/concepts/storage/persistent-volumes/#retain\u003e.",
              "required": [],
              "title": "enableDangerousRetainGC",
              "type": "boolean"
            },
            "logLevel": {
              "default": "info",
              "description": "Log level for the csi controller",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "maxCreateVolume": {
              "default": 10,
              "description": "The maximum number of concurrent create volume requests.",
              "required": [],
              "title": "maxCreateVolume",
              "type": "integer"
            },
            "preventVolumeModeConversion": {
              "default": true,
              "description": "Prevent modifying the volume mode when creating a PVC from an existing VolumeSnapshot",
              "required": [],
              "title": "preventVolumeModeConversion",
              "type": "boolean"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "32m",
                      "description": "Cpu limits for csi controller",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "128Mi",
                      "description": "Memory limits for csi controller",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "16m",
                      "description": "Cpu requests for csi controller",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "64Mi",
                      "description": "Memory requests for csi controller",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "controller",
          "type": "object"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "attacherTag": {
              "default": "v4.8.1",
              "description": "csi-attacher image release tag",
              "required": [],
              "title": "attacherTag",
              "type": "string"
            },
            "provisionerTag": {
              "default": "v5.2.0",
              "description": "csi-provisioner image release tag",
              "required": [],
              "title": "provisionerTag",
              "type": "string"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "imagePullPolicy for all CSI Sidecar images",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registrarTag": {
              "default": "v2.13.0",
              "description": "csi-node-driver-registrar image release tag",
              "required": [],
              "title": "registrarTag",
              "type": "string"
            },
            "registry": {
              "default": "registry.k8s.io",
              "description": "Image registry to pull all CSI Sidecar images",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repo": {
              "default": "sig-storage",
              "description": "Image registry's namespace",
              "required": [],
              "title": "repo",
              "type": "string"
            },
            "resizerTag": {
              "default": "v1.13.2",
              "description": "csi-resizer image release tag",
              "required": [],
              "title": "resizerTag",
              "type": "string"
            },
            "snapshotControllerTag": {
              "default": "v8.2.0",
              "description": "csi-snapshot-controller image release tag",
              "required": [],
              "title": "snapshotControllerTag",
              "type": "string"
            },
            "snapshotterTag": {
              "default": "v8.2.0",
              "description": "csi-snapshotter image release tag",
              "required": [],
              "title": "snapshotterTag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "node": {
          "additionalProperties": true,
          "properties": {
            "initContainers": {
              "additionalProperties": true,
              "properties": {
                "containers": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "command": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "command",
                        "type": "array"
                      },
                      "name": {
                        "default": "nvme-tcp-probe",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "containers",
                  "type": "array"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "initContainers",
              "type": "object"
            },
            "kubeletDir": {
              "default": "/var/lib/kubelet",
              "description": "The kubeletDir directory for the csi-node plugin",
              "required": [],
              "title": "kubeletDir",
              "type": "string"
            },
            "logLevel": {
              "default": "info",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "mkfs_args": {
              "additionalProperties": true,
              "description": "Additional arguments when creating filesystems",
              "properties": {
                "xfs": {
                  "default": "",
                  "required": [],
                  "title": "xfs",
                  "type": "string"
                }
              },
              "required": [],
              "title": "mkfs_args",
              "type": "object"
            },
            "nvme": {
              "additionalProperties": true,
              "properties": {
                "ctrl_loss_tmo": {
                  "default": "1980",
                  "description": "The ctrl_loss_tmo (controller loss timeout) in seconds",
                  "required": [],
                  "title": "ctrl_loss_tmo",
                  "type": "string"
                },
                "io_timeout": {
                  "default": "",
                  "description": "The nvme_core module and nvme block io timeout in humantime\nBy default it uses the \"io_engine.nvme.ioTimeout\" + 10s\nDo not modify this unless you're really sure about its effects",
                  "required": [],
                  "title": "io_timeout",
                  "type": "string"
                },
                "keep_alive_tmo": {
                  "default": "",
                  "description": "Kato (keep alive timeout) in seconds",
                  "required": [],
                  "title": "keep_alive_tmo",
                  "type": "string"
                },
                "tcpFallback": {
                  "default": true,
                  "description": "Fallback to nvme-tcp if nvme-rdma is enabled for Mayastor but rdma is not available on a particular csi-node",
                  "required": [],
                  "title": "tcpFallback",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "nvme",
              "type": "object"
            },
            "pluginMountPath": {
              "default": "/csi",
              "required": [],
              "title": "pluginMountPath",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu limits for csi node plugin",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "128Mi",
                      "description": "Memory limits for csi node plugin",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu requests for csi node plugin",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "64Mi",
                      "description": "Memory requests for csi node plugin",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "restClient": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "restClient",
              "type": "object"
            },
            "socketPath": {
              "default": "csi.sock",
              "required": [],
              "title": "socketPath",
              "type": "string"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topology": {
              "additionalProperties": true,
              "properties": {
                "nodeSelector": {
                  "default": false,
                  "description": "Add topology segments to the csi-node and agent-ha-node daemonset node selector",
                  "required": [],
                  "title": "nodeSelector",
                  "type": "boolean"
                },
                "segments": {
                  "additionalProperties": true,
                  "properties": {
                    "openebs.io/csi-node": {
                      "default": "mayastor",
                      "required": [],
                      "title": "openebs.io/csi-node",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "segments",
                  "type": "object"
                }
              },
              "required": [],
              "title": "topology",
              "type": "object"
            }
          },
          "required": [],
          "title": "node",
          "type": "object"
        },
        "volumeSnapshots": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to all CRDs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Install Volume Snapshot CRDs",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "keep": {
              "default": true,
              "description": "Keep CRDs on chart uninstall",
              "required": [],
              "title": "keep",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "volumeSnapshots",
          "type": "object"
        }
      },
      "required": [],
      "title": "csi",
      "type": "object"
    },
    "customCommandJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job customCommandJob",
      "properties": {
        "exitCommand": {
          "default": "",
          "description": "- name: extra-policies\n  mountPath: /mnt/extras/\nCommand to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "extraVolumeMounts": {
          "description": "- name: extra-policies\n  configMap:\n    name: my-extra-policies-cm\n# Additional volumeMounts to add to the custom commands container when\n# running the post-job.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "# Additional volumes to add to the post-job.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "customCommandJob",
      "type": "object"
    },
    "customCommands": {
      "default": "",
      "description": "# List of command to run after minio install\n# NOTE: the mc command TARGET is always \"myminio\"",
      "required": [],
      "title": "customCommands",
      "type": "null"
    },
    "customLivenessProbe": {
      "additionalProperties": true,
      "description": "#\n#",
      "required": [],
      "title": "customLivenessProbe",
      "type": "object"
    },
    "customReadinessProbe": {
      "additionalProperties": true,
      "description": "#\n#",
      "required": [],
      "title": "customReadinessProbe",
      "type": "object"
    },
    "customStartupProbe": {
      "additionalProperties": true,
      "description": "#\n#",
      "required": [],
      "title": "customStartupProbe",
      "type": "object"
    },
    "deploymentMode": {
      "default": "SimpleScalable",
      "description": "Deployment mode lets you specify how to deploy Loki.\nThere are 3 options:\n- SingleBinary: Loki is deployed as a single binary, useful for small installs typically without HA, up to a few tens of GB/day.\n- SimpleScalable: Loki is deployed as 3 targets: read, write, and backend. Useful for medium installs easier to manage than distributed, up to a about 1TB/day.\n- Distributed: Loki is deployed as individual microservices. The most complicated but most capable, useful for large installs, typically over 1TB/day.\nThere are also 2 additional modes used for migrating between deployment modes:\n- SingleBinary\u003c-\u003eSimpleScalable: Migrate from SingleBinary to SimpleScalable (or vice versa)\n- SimpleScalable\u003c-\u003eDistributed: Migrate from SimpleScalable to Distributed (or vice versa)\nNote: SimpleScalable and Distributed REQUIRE the use of object storage.",
      "required": [],
      "title": "deploymentMode",
      "type": "string"
    },
    "deploymentUpdate": {
      "additionalProperties": true,
      "description": "# Update strategy for Deployments",
      "properties": {
        "maxSurge": {
          "default": "100%",
          "required": [],
          "title": "maxSurge",
          "type": "string"
        },
        "maxUnavailable": {
          "default": 0,
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "deploymentUpdate",
      "type": "object"
    },
    "diagnosticMode": {
      "additionalProperties": true,
      "description": "# Enable diagnostic mode in the deployment\n#",
      "properties": {
        "args": {
          "description": "#\n#",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "args",
          "type": "array"
        },
        "command": {
          "description": "#\n#",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "command",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "diagnosticMode",
      "type": "object"
    },
    "disasterRecovery": {
      "additionalProperties": true,
      "description": "# Enable auto disaster recovery by periodically snapshotting the keyspace:\n# - It creates a cronjob to periodically snapshotting the keyspace\n# - It also creates a ReadWriteMany PVC to store the snapshots\n# If the cluster permanently loses more than (N-1)/2 members, it tries to\n# recover itself from the last available snapshot.\n#",
      "properties": {
        "cronjob": {
          "additionalProperties": true,
          "properties": {
            "historyLimit": {
              "default": 1,
              "description": "#\n#",
              "required": [],
              "title": "historyLimit",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "#\n# Ref: https://kubernetes.io/docs/user-guide/node-selection/\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n#",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "description": "# Configure resource requests and limits for snapshotter containers\n# ref: https://kubernetes.io/docs/user-guide/compute-resources/\n# We usually recommend not to specify default resources and to leave this as a conscious\n# choice for the user. This also increases chances charts run on environments with little\n# resources, such as Minikube. If you do want to specify resources, uncomment the following\n# lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n#\n#\n#",
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "description": "# Example:\n# limits:\n#    cpu: 500m\n#    memory: 1Gi\n#",
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "schedule": {
              "default": "*/30 * * * *",
              "description": "#\n# See https://en.wikipedia.org/wiki/Cron\n#",
              "required": [],
              "title": "schedule",
              "type": "string"
            },
            "snapshotHistoryLimit": {
              "default": 1,
              "description": "#\n#",
              "required": [],
              "title": "snapshotHistoryLimit",
              "type": "integer"
            },
            "tolerations": {
              "description": "#\n# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "cronjob",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "pvc": {
          "additionalProperties": true,
          "properties": {
            "existingClaim": {
              "default": "",
              "description": "#\n# If defined, PVC must be created manually before volume will be bound\n# The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart\n#",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "size": {
              "default": "2Gi",
              "description": "#\n#",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClassName": {
              "default": "nfs",
              "description": "#\n#",
              "required": [],
              "title": "storageClassName",
              "type": "string"
            }
          },
          "required": [],
          "title": "pvc",
          "type": "object"
        }
      },
      "required": [],
      "title": "disasterRecovery",
      "type": "object"
    },
    "distributor": {
      "additionalProperties": true,
      "description": " Configuration for the distributor",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for distributor pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "distributor",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the distributor service. This allows distributor to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "- type: Pods\n  pods:\n    metric:\n      name: loki_lines_total\n    target:\n      type: AverageValue\n      averageValue: 10k",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable autoscaling behaviours",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "description": "define scale down policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "define scale up policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "customMetrics": {
              "description": "Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "customMetrics",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the distributor",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the distributor",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the distributor",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the distributor",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "null",
              "description": "Target memory utilisation percentage for the distributor",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the distributor",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the distributor image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the distributor image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the distributor image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "maxSurge": {
          "default": 0,
          "description": "Max Surge for distributor pods",
          "required": [],
          "title": "maxSurge",
          "type": "integer"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for distributor pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for distributor pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for distributor pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for distributor pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the distributor",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the distributor",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for distributor service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for distributor service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the distributor to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "distributor",
      "type": "object"
    },
    "drivesPerNode": {
      "default": 1,
      "description": "Number of drives attached to a node",
      "required": [],
      "title": "drivesPerNode",
      "type": "integer"
    },
    "earlyEvictionTolerations": {
      "items": {
        "additionalProperties": true,
        "properties": {
          "effect": {
            "default": "NoExecute",
            "required": [],
            "title": "effect",
            "type": "string"
          },
          "key": {
            "default": "node.kubernetes.io/not-ready",
            "required": [],
            "title": "key",
            "type": "string"
          },
          "operator": {
            "default": "Exists",
            "required": [],
            "title": "operator",
            "type": "string"
          },
          "tolerationSeconds": {
            "default": 5,
            "required": [],
            "title": "tolerationSeconds",
            "type": "integer"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "earlyEvictionTolerations",
      "type": "array"
    },
    "enableHelmMetaLabels": {
      "default": true,
      "description": "Allows adding helm specific labels to the components.\nOnly useful for generating independent templates from helm.",
      "required": [],
      "title": "enableHelmMetaLabels",
      "type": "boolean"
    },
    "engines": {
      "additionalProperties": true,
      "properties": {
        "local": {
          "additionalProperties": true,
          "properties": {
            "lvm": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "lvm",
              "type": "object"
            },
            "zfs": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "zfs",
              "type": "object"
            }
          },
          "required": [],
          "title": "local",
          "type": "object"
        },
        "replicated": {
          "additionalProperties": true,
          "properties": {
            "mayastor": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "mayastor",
              "type": "object"
            }
          },
          "required": [],
          "title": "replicated",
          "type": "object"
        }
      },
      "required": [],
      "title": "engines",
      "type": "object"
    },
    "enterprise": {
      "additionalProperties": true,
      "description": "Configuration for running Enterprise Loki",
      "properties": {
        "adminApi": {
          "additionalProperties": true,
          "description": "If enabled, the correct admin_client storage will be configured. If disabled while running enterprise,\nmake sure auth is set to `type: trust`, or that `auth_enabled` is set to `false`.",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "adminApi",
          "type": "object"
        },
        "adminToken": {
          "additionalProperties": true,
          "properties": {
            "additionalNamespaces": {
              "description": "Additional namespace to also create the token in. Useful if your Grafana instance\nis in a different namespace",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalNamespaces",
              "type": "array"
            },
            "secret": {
              "default": "null",
              "description": "Alternative name for admin token secret, needed by tokengen and provisioner jobs",
              "required": [],
              "title": "secret",
              "type": "null"
            }
          },
          "required": [],
          "title": "adminToken",
          "type": "object"
        },
        "canarySecret": {
          "default": "null",
          "description": "Alternative name of the secret to store token for the canary",
          "required": [],
          "title": "canarySecret",
          "type": "null"
        },
        "cluster_name": {
          "default": "null",
          "description": "Optional name of the GEL cluster, otherwise will use .Release.Name\nThe cluster name must match what is in your GEL license",
          "required": [],
          "title": "cluster_name",
          "type": "null"
        },
        "config": {
          "default": "{{- if .Values.enterprise.adminApi.enabled }}\nadmin_client:\n  {{ include \"enterprise-logs.adminAPIStorageConfig\" . | nindent 2 }}\n{{ end }}\nauth:\n  type: {{ .Values.enterprise.adminApi.enabled | ternary \"enterprise\" \"trust\" }}\nauth_enabled: {{ .Values.loki.auth_enabled }}\ncluster_name: {{ include \"loki.clusterName\" . }}\nlicense:\n  path: /etc/loki/license/license.jwt\n",
          "description": "enterprise specific sections of the config.yaml file",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable enterprise features, license must be provided",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalConfigName": {
          "default": "",
          "description": "Name of the external config secret to use",
          "required": [],
          "title": "externalConfigName",
          "type": "string"
        },
        "externalLicenseName": {
          "default": "null",
          "description": "Name of external license secret to use",
          "required": [],
          "title": "externalLicenseName",
          "type": "null"
        },
        "gelGateway": {
          "default": true,
          "description": "Use GEL gateway, if false will use the default nginx gateway",
          "required": [],
          "title": "gelGateway",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/enterprise-logs",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "3.4.1",
              "description": "Docker image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "license": {
          "additionalProperties": true,
          "description": "Grafana Enterprise Logs license\nIn order to use Grafana Enterprise Logs features, you will need to provide\nthe contents of your Grafana Enterprise Logs license, either by providing the\ncontents of the license.jwt, or the name Kubernetes Secret that contains your\nlicense.jwt.\nTo set the license contents, use the flag `--set-file 'enterprise.license.contents=./license.jwt'`",
          "properties": {
            "contents": {
              "default": "NOTAVALIDLICENSE",
              "required": [],
              "title": "contents",
              "type": "string"
            }
          },
          "required": [],
          "title": "license",
          "type": "object"
        },
        "provisioner": {
          "additionalProperties": true,
          "description": "Configuration for `provisioner` target",
          "properties": {
            "additionalTenants": {
              "description": "Additional tenants to be created. Each tenant will get a read and write policy\nand associated token. Tenant must have a name and a namespace for the secret containting\nthe token to be created in. For example\nadditionalTenants:\n  - name: loki\n    secretNamespace: grafana",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalTenants",
              "type": "array"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "Affinity for tokengen Pods",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Additional annotations for the `provisioner` Job",
              "properties": {
                "eks.amazonaws.com/role-arn": {
                  "required": [],
                  "title": "eks.amazonaws.com/role-arn",
                  "type": "string"
                }
              },
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Whether the job should be part of the deployment",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "description": "Additional Kubernetes environment",
              "items": {
                "required": []
              },
              "required": [],
              "title": "env",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Volume mounts to add to the provisioner pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "hookType": {
              "default": "post-install",
              "description": "Hook type(s) to customize when the job runs.  defaults to post-install",
              "required": [],
              "title": "hookType",
              "type": "string"
            },
            "image": {
              "additionalProperties": true,
              "description": "Provisioner image to Utilize",
              "properties": {
                "digest": {
                  "default": "null",
                  "description": "Overrides the image tag with an image digest",
                  "required": [],
                  "title": "digest",
                  "type": "null"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "Docker image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "docker.io",
                  "description": "The Docker registry",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "grafana/enterprise-logs-provisioner",
                  "description": "Docker image repository",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "null",
                  "description": "Overrides the image tag whose default is the chart's appVersion",
                  "required": [],
                  "title": "tag",
                  "type": "null"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for the `provisioner` Job",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node selector for tokengen Pods",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "priorityClassName": {
              "default": "null",
              "description": "The name of the PriorityClass for provisioner Job",
              "required": [],
              "title": "priorityClassName",
              "type": "null"
            },
            "provisionedSecretPrefix": {
              "default": "null",
              "description": "Name of the secret to store provisioned tokens in",
              "required": [],
              "title": "provisionedSecretPrefix",
              "type": "null"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "Run containers as user `enterprise-logs(uid=10001)`",
              "properties": {
                "fsGroup": {
                  "default": 10001,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 10001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 10001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "tolerations": {
              "description": "Tolerations for tokengen Pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "provisioner",
          "type": "object"
        },
        "tokengen": {
          "additionalProperties": true,
          "description": "Configuration for `tokengen` target",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Affinity for tokengen Pods",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Additional annotations for the `tokengen` Job",
              "properties": {
                "eks.amazonaws.com/role-arn": {
                  "required": [],
                  "title": "eks.amazonaws.com/role-arn",
                  "type": "string"
                }
              },
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Whether the job should be part of the deployment",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "description": "Additional Kubernetes environment",
              "items": {
                "required": []
              },
              "required": [],
              "title": "env",
              "type": "array"
            },
            "extraArgs": {
              "description": "Additional CLI arguments for the `tokengen` target",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "extraEnvFrom": {
              "description": "Environment variables from secrets or configmaps to add to the tokengen pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvFrom",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Additional volume mounts for Pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "Additional volumes for Pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for the `tokengen` Job",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node selector for tokengen Pods",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "The name of the PriorityClass for tokengen Pods",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "Run containers as user `enterprise-logs(uid=10001)`",
              "properties": {
                "fsGroup": {
                  "default": 10001,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 10001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 10001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "targetModule": {
              "default": "tokengen",
              "description": "Comma-separated list of Loki modules to load for tokengen",
              "required": [],
              "title": "targetModule",
              "type": "string"
            },
            "tolerations": {
              "description": "Tolerations for tokengen Job",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "tokengen",
          "type": "object"
        },
        "useExternalLicense": {
          "default": false,
          "description": "Set to true when providing an external license",
          "required": [],
          "title": "useExternalLicense",
          "type": "boolean"
        },
        "version": {
          "default": "3.4.0",
          "description": "Default verion of GEL to deploy",
          "required": [],
          "title": "version",
          "type": "string"
        }
      },
      "required": [],
      "title": "enterprise",
      "type": "object"
    },
    "enterpriseGateway": {
      "additionalProperties": true,
      "description": "If running enterprise and using the default enterprise gateway, configs go here.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for gateway Pods",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the `gateway` Pod",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "env": {
          "description": "Configure optional environment variables",
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld\nAdditional CLI arguments for the `gateway` target",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "description": "Conifgure optional extraContainers",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the enterprise gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional volume mounts for Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional volumes for Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initContainers": {
          "description": "Configure optional initContainers",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional labels for the `gateway` Pod",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for gateway Pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Run container as user `enterprise-logs(uid=10001)`",
          "properties": {
            "fsGroup": {
              "default": 10001,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 45,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Define the amount of instances",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Request and limit Kubernetes resources\nValues are defined in small.yaml and large.yaml",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "Additional labels and annotations for the `gateway` Service\nService overriding service type",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "type": {
              "default": "ClusterIP",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "description": "update strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "description": "Grace period to allow the gateway to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for gateway Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for enterprise-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "useDefaultProxyURLs": {
          "default": true,
          "description": "If you want to use your own proxy URLs, set this to false.",
          "required": [],
          "title": "useDefaultProxyURLs",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "enterpriseGateway",
      "type": "object"
    },
    "environment": {
      "default": "",
      "description": "# Use this field to add environment variables relevant to MinIO server. These fields will be passed on to MinIO container(s)\n# when Chart is deployed",
      "required": [],
      "title": "environment",
      "type": "null"
    },
    "etcd": {
      "additionalProperties": true,
      "description": "# ETCD settings: https://github.com/minio/minio/blob/master/docs/sts/etcd.md\n# Define endpoints to enable this section.",
      "properties": {
        "auth": {
          "additionalProperties": true,
          "properties": {
            "rbac": {
              "additionalProperties": true,
              "properties": {
                "allowNoneAuthentication": {
                  "default": true,
                  "required": [],
                  "title": "allowNoneAuthentication",
                  "type": "boolean"
                },
                "create": {
                  "default": false,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "rbac",
              "type": "object"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "autoCompactionMode": {
          "default": "revision",
          "description": "AutoCompaction\nSince etcd keeps an exact history of its keyspace, this history should be\nperiodically compacted to avoid performance degradation\nand eventual storage space exhaustion.\nAuto compaction mode. Valid values: \"periodic\", \"revision\".\n- 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. 5m).\n- 'revision' for revision number based retention.",
          "required": [],
          "title": "autoCompactionMode",
          "type": "string"
        },
        "autoCompactionRetention": {
          "default": 100,
          "description": "Auto compaction retention length. 0 means disable auto compaction.",
          "required": [],
          "title": "autoCompactionRetention",
          "type": "integer"
        },
        "client": {
          "additionalProperties": true,
          "description": "TLS authentication for client-to-server communications\nref: https://etcd.io/docs/current/op-guide/security/",
          "properties": {
            "secureTransport": {
              "default": false,
              "required": [],
              "title": "secureTransport",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "client",
          "type": "object"
        },
        "clientCert": {
          "default": "",
          "required": [],
          "title": "clientCert",
          "type": "string"
        },
        "clientCertKey": {
          "default": "",
          "required": [],
          "title": "clientCertKey",
          "type": "string"
        },
        "clusterDomain": {
          "default": "cluster.local",
          "description": "Kubernetes Cluster Domain",
          "required": [],
          "title": "clusterDomain",
          "type": "string"
        },
        "corednsPathPrefix": {
          "default": "",
          "required": [],
          "title": "corednsPathPrefix",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Disable when using an external etcd cluster.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "externalUrl": {
          "default": "",
          "description": "(string) Url of the external etcd cluster. Note, etcd.enable must be set to false.",
          "required": [],
          "title": "externalUrl",
          "type": "string"
        },
        "extraEnvVars": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "default": "ETCD_QUOTA_BACKEND_BYTES",
                "required": [],
                "title": "name",
                "type": "string"
              },
              "value": {
                "default": "8589934592",
                "required": [],
                "title": "value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnvVars",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "debug": {
              "default": false,
              "description": "extra debug information on logs",
              "required": [],
              "title": "debug",
              "type": "boolean"
            },
            "registry": {
              "default": "docker.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "openebs/etcd",
              "required": [],
              "title": "repository",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "localpvScConfig": {
          "additionalProperties": true,
          "description": "Configuration for etcd's localpv hostpath storage class.",
          "properties": {
            "basePath": {
              "default": "/var/local/{{ .Release.Name }}/localpv-hostpath/etcd",
              "description": "Host path where local etcd data is stored in.",
              "required": [],
              "title": "basePath",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "name": {
              "default": "mayastor-etcd-localpv",
              "description": "Name of etcd's localpv hostpath storage class.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "reclaimPolicy": {
              "default": "Delete",
              "description": "ReclaimPolicy of etcd's localpv hostpath storage class.",
              "required": [],
              "title": "reclaimPolicy",
              "type": "string"
            },
            "volumeBindingMode": {
              "default": "WaitForFirstConsumer",
              "description": "VolumeBindingMode of etcd's localpv hostpath storage class.",
              "required": [],
              "title": "volumeBindingMode",
              "type": "string"
            }
          },
          "required": [],
          "title": "localpvScConfig",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "# -- nodeSelector [object] Node labels for pod assignment\n# Ref: https://kubernetes.io/docs/user-guide/node-selection/",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "pathPrefix": {
          "default": "",
          "required": [],
          "title": "pathPrefix",
          "type": "string"
        },
        "peer": {
          "additionalProperties": true,
          "description": "TLS authentication for server-to-server communications\nref: https://etcd.io/docs/current/op-guide/security/",
          "properties": {
            "secureTransport": {
              "default": false,
              "required": [],
              "title": "secureTransport",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "peer",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "Enable persistence using Persistent Volume Claims",
          "properties": {
            "enabled": {
              "default": true,
              "description": "If true, use a Persistent Volume Claim. If false, use emptyDir.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "reclaimPolicy": {
              "default": "Delete",
              "description": "PVC's reclaimPolicy",
              "required": [],
              "title": "reclaimPolicy",
              "type": "string"
            },
            "size": {
              "default": "2Gi",
              "description": "Volume size",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "mayastor-etcd-localpv",
              "description": "Will define which storageClass to use in etcd's StatefulSets. Options:\n\u003cp\u003e - `\"manual\"` - Will provision a hostpath PV on the same node. \u003cbr\u003e\n- `\"\"` (empty) - Will use the default StorageClass on the cluster. \u003c/p\u003e",
              "required": [],
              "title": "storageClass",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAntiAffinityPreset": {
          "default": "hard",
          "description": "Pod anti-affinity preset\nRef: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity",
          "required": [],
          "title": "podAntiAffinityPreset",
          "type": "string"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Pod labels; okay to remove the openebs logging label if required",
          "properties": {
            "app": {
              "default": "etcd",
              "required": [],
              "title": "app",
              "type": "string"
            },
            "openebs.io/logging": {
              "default": "true",
              "required": [],
              "title": "openebs.io/logging",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "removeMemberOnContainerTermination": {
          "default": false,
          "description": "Use a PreStop hook to remove the etcd members from the etcd cluster on container termination\nIgnored if lifecycleHooks is set or replicaCount=1",
          "required": [],
          "title": "removeMemberOnContainerTermination",
          "type": "boolean"
        },
        "replicaCount": {
          "default": 3,
          "description": "Number of replicas of etcd",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "service": {
          "additionalProperties": true,
          "description": "etcd service parameters defines how the etcd service is exposed",
          "properties": {
            "nodePorts": {
              "additionalProperties": true,
              "description": "Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.\nref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n",
              "properties": {
                "clientPort": {
                  "default": 31379,
                  "description": "Port from where etcd endpoints are accessible from outside cluster",
                  "required": [],
                  "title": "clientPort",
                  "type": "integer"
                },
                "peerPort": {
                  "default": "",
                  "required": [],
                  "title": "peerPort",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodePorts",
              "type": "object"
            },
            "port": {
              "default": 2379,
              "description": "etcd client port",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "K8s service type",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "volumePermissions": {
          "additionalProperties": true,
          "description": "Init containers parameters:\nvolumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.\n",
          "properties": {
            "enabled": {
              "default": true,
              "description": "chown the mounted volume; this is required if a statically provisioned hostpath volume is used",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullSecrets": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "openebs/alpine-bash",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "4.2.0",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            }
          },
          "required": [],
          "title": "volumePermissions",
          "type": "object"
        }
      },
      "required": [],
      "title": "etcd",
      "type": "object"
    },
    "eventing": {
      "additionalProperties": true,
      "description": "Eventing which enables or disables eventing-related components.",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "eventing",
      "type": "object"
    },
    "exampleValue": {
      "default": "common-chart",
      "description": "# bitnami/common\n# It is required by CI/CD tools and processes.\n#\n#",
      "required": [],
      "title": "exampleValue",
      "type": "string"
    },
    "existingConfigmap": {
      "default": "",
      "description": "#\n# NOTE: When it's set the configuration parameter is ignored\n#",
      "required": [],
      "title": "existingConfigmap",
      "type": "string"
    },
    "existingSecret": {
      "default": "",
      "description": "# Use existing Secret that store following variables:\n#\n# | Chart var             | .data.\u003ckey\u003e in Secret    |\n# |:----------------------|:-------------------------|\n# | rootUser              | rootUser                 |\n# | rootPassword          | rootPassword             |\n#\n# All mentioned variables will be ignored in values file.\n# .data.rootUser and .data.rootPassword are mandatory,\n# others depend on enabled status of corresponding sections.",
      "required": [],
      "title": "existingSecret",
      "type": "string"
    },
    "exporter": {
      "additionalProperties": true,
      "description": "Prometheus NATS Exporter configuration.",
      "properties": {
        "args": {
          "description": "override the default args passed to the exporter\nsee https://github.com/nats-io/prometheus-nats-exporter#usage\nmake sure to pass HTTP monitoring port URL as last arg, e.g [\"-connz\", \"http://localhost:8222/\"]",
          "items": {
            "required": []
          },
          "required": [],
          "title": "args",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "natsio/prometheus-nats-exporter",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "0.11.0",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "portName": {
          "default": "metrics",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resources to add to the container\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "Prometheus operator ServiceMonitor support. Exporter has to be enabled",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "# Specify the namespace where Prometheus Operator is running\n#\nnamespace: monitoring",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "exporter",
      "type": "object"
    },
    "extraArgs": {
      "description": "# Additional arguments to pass to minio binary",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraArgs",
      "type": "array"
    },
    "extraContainers": {
      "description": "# Additional sidecar containers",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraContainers",
      "type": "array"
    },
    "extraDeploy": {
      "description": "#\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraDeploy",
      "type": "array"
    },
    "extraEnv": {
      "description": "Specifies extra environment variables passed to the operator:",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "extraEnvVars": {
      "description": "#\n# e.g:\n# extraEnvVars:\n#   - name: FOO\n#     value: \"bar\"\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnvVars",
      "type": "array"
    },
    "extraEnvVarsCM": {
      "default": "",
      "description": "#\n#",
      "required": [],
      "title": "extraEnvVarsCM",
      "type": "string"
    },
    "extraEnvVarsSecret": {
      "default": "",
      "description": "#\n#",
      "required": [],
      "title": "extraEnvVarsSecret",
      "type": "string"
    },
    "extraLabels": {
      "additionalProperties": true,
      "description": "Additional labels to add to all chart resources",
      "required": [],
      "title": "extraLabels",
      "type": "object"
    },
    "extraObjects": {
      "description": "Create extra manifests via values. Would be passed through `tpl` for templating\nobjects can also be provided as multiline strings, useful for templating field names",
      "items": {
        "additionalProperties": true,
        "properties": {
          "apiVersion": {
            "required": [],
            "title": "apiVersion",
            "type": "string"
          },
          "kind": {
            "required": [],
            "title": "kind",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              }
            },
            "required": [],
            "title": "metadata",
            "type": "object"
          },
          "stringData": {
            "additionalProperties": true,
            "properties": {
              "PROMETHEUS_HOST": {
                "required": [],
                "title": "PROMETHEUS_HOST",
                "type": "string"
              },
              "PROMETHEUS_USERNAME": {
                "required": [],
                "title": "PROMETHEUS_USERNAME",
                "type": "string"
              }
            },
            "required": [],
            "title": "stringData",
            "type": "object"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "extraObjects",
      "type": "array"
    },
    "extraSecret": {
      "default": "~",
      "description": "# The name of a secret in the same kubernetes namespace which contain secret values\n# This can be useful for LDAP password, etc\n# The key in the secret must be 'config.env'\n#",
      "required": [],
      "title": "extraSecret",
      "type": "null"
    },
    "extraVolumeMounts": {
      "description": "# Additional volumeMounts to minio container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "description": "# Additional volumes to minio container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "feature": {
      "additionalProperties": true,
      "description": "- name: \"image-pull-secret\"",
      "properties": {
        "storageCapacity": {
          "default": true,
          "description": "enable storage capacity tracking feature\nRef: https://kubernetes:io/docs/concepts/storage/storage-capacity",
          "required": [],
          "title": "storageCapacity",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "feature",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "null",
      "description": "Overrides the chart's computed fullname",
      "required": [],
      "title": "fullnameOverride",
      "type": "null"
    },
    "gateway": {
      "additionalProperties": true,
      "description": "Gateway connections to create a super cluster\n\nhttps://docs.nats.io/nats-server/configuration/gateways\n",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for gateway pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "gateway",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for gateway deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "See `kubectl explain deployment.spec.strategy` for more\nref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\nBehavior policies while scaling.",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the gateway",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the gateway",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the gateway",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the gateway",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the gateway",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "basicAuth": {
          "additionalProperties": true,
          "description": "Basic auth configuration",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables basic authentication for the gateway",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "null",
              "description": "Existing basic auth secret to use. Must contain '.htpasswd'",
              "required": [],
              "title": "existingSecret",
              "type": "null"
            },
            "htpasswd": {
              "default": "{{ if .Values.loki.tenants }}\n\n\n  {{- range $t := .Values.loki.tenants }}\n{{ htpasswd (required \"All tenants must have a 'name' set\" $t.name) (required \"All tenants must have a 'password' set\" $t.password) }}\n\n\n  {{- end }}\n{{ else }} {{ htpasswd (required \"'gateway.basicAuth.username' is required\" .Values.gateway.basicAuth.username) (required \"'gateway.basicAuth.password' is required\" .Values.gateway.basicAuth.password) }} {{ end }}",
              "description": "Uses the specified users from the `loki.tenants` list to create the htpasswd file.\nif `loki.tenants` is not set, the `gateway.basicAuth.username` and `gateway.basicAuth.password` are used.\nThe value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes\nhigh CPU load.",
              "required": [],
              "title": "htpasswd",
              "type": "string"
            },
            "password": {
              "default": "null",
              "description": "The basic auth password for the gateway",
              "required": [],
              "title": "password",
              "type": "null"
            },
            "username": {
              "default": "null",
              "description": "The basic auth username for the gateway",
              "required": [],
              "title": "username",
              "type": "null"
            }
          },
          "required": [],
          "title": "basicAuth",
          "type": "object"
        },
        "containerPort": {
          "default": 8080,
          "description": "Default container port",
          "required": [],
          "title": "containerPort",
          "type": "integer"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for gateway containers",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "deploymentStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "deploymentStrategy",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for gateway pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether the gateway should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the gateway",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the gateway image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "The gateway image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry for the gateway image",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "nginxinc/nginx-unprivileged",
              "description": "The gateway image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.27-alpine",
              "description": "The gateway image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "description": "Gateway ingress configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the gateway ingress",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Specifies whether an ingress for the gateway should be created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Hosts configuration for the gateway ingress, passed through the `tpl` function to allow templating",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "host": {
                    "default": "gateway.loki.example.com",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "default": "/",
                          "required": [],
                          "title": "path",
                          "type": "string"
                        },
                        "pathType": {
                          "required": [],
                          "title": "pathType",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "ingressClassName": {
              "default": "",
              "description": "Ingress Class Name. MAY be required for Kubernetes versions \u003e= 1.18",
              "required": [],
              "title": "ingressClassName",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for the gateway ingress",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "tls": {
              "description": "TLS configuration for the gateway ingress. Hosts passed through the `tpl` function to allow templating",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "hosts": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "hosts",
                    "type": "array"
                  },
                  "secretName": {
                    "default": "loki-gateway-tls",
                    "required": [],
                    "title": "secretName",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Lifecycle for the gateway container",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "name": {
          "default": "default",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "nginxConfig": {
          "additionalProperties": true,
          "properties": {
            "clientMaxBodySize": {
              "default": "4M",
              "description": "Allows customizing the `client_max_body_size` directive",
              "required": [],
              "title": "clientMaxBodySize",
              "type": "string"
            },
            "customBackendUrl": {
              "default": "null",
              "description": "Override Backend URL",
              "required": [],
              "title": "customBackendUrl",
              "type": "null"
            },
            "customReadUrl": {
              "default": "null",
              "description": "Override Read URL",
              "required": [],
              "title": "customReadUrl",
              "type": "null"
            },
            "customWriteUrl": {
              "default": "null",
              "description": "Override Write URL",
              "required": [],
              "title": "customWriteUrl",
              "type": "null"
            },
            "enableIPv6": {
              "default": true,
              "description": "Enable listener for IPv6, disable on IPv4-only systems",
              "required": [],
              "title": "enableIPv6",
              "type": "boolean"
            },
            "file": {
              "default": "{{- include \"loki.nginxFile\" . | indent 2 -}}\n",
              "description": "Config file contents for Nginx. Passed through the `tpl` function to allow templating",
              "required": [],
              "title": "file",
              "type": "string"
            },
            "httpSnippet": {
              "default": "{{ if .Values.loki.tenants }}proxy_set_header X-Scope-OrgID $remote_user;{{ end }}",
              "description": "Allows appending custom configuration to the http block, passed through the `tpl` function to allow templating",
              "required": [],
              "title": "httpSnippet",
              "type": "string"
            },
            "logFormat": {
              "default": "main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';",
              "description": "NGINX log format",
              "required": [],
              "title": "logFormat",
              "type": "string"
            },
            "resolver": {
              "default": "",
              "description": "Allows overriding the DNS resolver address nginx will use.",
              "required": [],
              "title": "resolver",
              "type": "string"
            },
            "schema": {
              "default": "http",
              "description": "Which schema to be used when building URLs. Can be 'http' or 'https'.",
              "required": [],
              "title": "schema",
              "type": "string"
            },
            "serverSnippet": {
              "default": "",
              "description": "Allows appending custom configuration to the server block",
              "required": [],
              "title": "serverSnippet",
              "type": "string"
            },
            "ssl": {
              "default": false,
              "description": "Whether ssl should be appended to the listen directive of the server block or not.",
              "required": [],
              "title": "ssl",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "nginxConfig",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for gateway pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for gateway pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for gateway pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for gateway containers",
          "properties": {
            "fsGroup": {
              "default": 101,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 101,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 101,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "port": {
          "default": 7522,
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for gateway pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Configures the readiness probe for the gateway",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 15,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the gateway",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the gateway",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "Gateway service configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the gateway service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "null",
              "description": "ClusterIP of the gateway service",
              "required": [],
              "title": "clusterIP",
              "type": "null"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for gateway service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "null",
              "description": "Load balancer IPO address if service type is LoadBalancer",
              "required": [],
              "title": "loadBalancerIP",
              "type": "null"
            },
            "nodePort": {
              "default": "null",
              "description": "(int) Node port if service type is NodePort",
              "required": [],
              "title": "nodePort",
              "type": "null"
            },
            "port": {
              "default": 80,
              "description": "Port of the gateway service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the gateway service",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the gateway to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "verboseLogging": {
          "default": true,
          "description": "Enable logging of 2xx and 3xx HTTP requests",
          "required": [],
          "title": "verboseLogging",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "gateway",
      "type": "object"
    },
    "global": {
      "additionalProperties": true,
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "properties": {
        "clusterDomain": {
          "default": "cluster.local",
          "description": "configures cluster domain (\"cluster.local\" by default)",
          "required": [],
          "title": "clusterDomain",
          "type": "string"
        },
        "commonLabels": {
          "additionalProperties": true,
          "description": "Common labels for all object directly managed by this chart.",
          "required": [],
          "title": "commonLabels",
          "type": "object"
        },
        "dnsNamespace": {
          "default": "kube-system",
          "description": "configures DNS service namespace",
          "required": [],
          "title": "dnsNamespace",
          "type": "string"
        },
        "dnsService": {
          "default": "kube-dns",
          "description": "configures DNS service name",
          "required": [],
          "title": "dnsService",
          "type": "string"
        },
        "extraArgs": {
          "description": "Common additional CLI arguments for all jobs (that is, -log.level debug, -config.expand-env=true or -log-config-reverse-order)\nscope: admin-api, backend, bloom-builder, bloom-gateway, bloom-planner, compactor, distributor, index-gateway, ingester, overrides-exporter, pattern-ingester, querier, query-frontend, query-scheduler, read, ruler, write.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Common environment variables to add to all pods directly managed by this chart.\nscope: admin-api, backend, bloom-builder, bloom-gateway, bloom-planner, compactor, distributor, index-gateway, ingester, overrides-exporter, pattern-ingester, querier, query-frontend, query-scheduler, read, ruler, write.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Common source of environment injections to add to all pods directly managed by this chart.\nscope: admin-api, backend, bloom-builder, bloom-gateway, bloom-planner, compactor, distributor, index-gateway, ingester, overrides-exporter, pattern-ingester, querier, query-frontend, query-scheduler, read, ruler, write.\nFor example to inject values from a Secret, use:\nextraEnvFrom:\n  - secretRef:\n      name: mysecret",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Common mount points to add to all pods directly managed by this chart.\nscope: admin-api, backend, bloom-builder, bloom-gateway, bloom-planner, compactor, distributor, index-gateway, ingester, overrides-exporter, pattern-ingester, querier, query-frontend, query-scheduler, read, ruler, write.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Common volumes to add to all pods directly managed by this chart.\nscope: admin-api, backend, bloom-builder, bloom-gateway, bloom-planner, compactor, distributor, index-gateway, ingester, overrides-exporter, pattern-ingester, querier, query-frontend, query-scheduler, read, ruler, write.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional set of global image pull secrets.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "Overrides the Docker registry globally for all images",
              "required": [],
              "title": "registry",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "# E.g.\n# imagePullSecrets:\n#   - myRegistryKeySecretName\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "imageRegistry": {
          "default": "",
          "description": "Used as default image registry, values supplied by localpv.image.registry\nand helperPod.image.registry override this value.",
          "required": [],
          "title": "imageRegistry",
          "type": "string"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security context to apply to the Grafana Alloy pod.",
          "properties": {
            "fsGroup": {
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "Overrides the priorityClassName for all pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "storageClass": {
          "default": "",
          "required": [],
          "title": "storageClass",
          "type": "string"
        }
      },
      "required": [],
      "title": "global",
      "type": "object"
    },
    "helperPod": {
      "additionalProperties": true,
      "properties": {
        "hostNetwork": {
          "default": false,
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "openebs/linux-utils",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "4.2.0",
              "description": "Overrides the image tag whose default is the chart appVersion.",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        }
      },
      "required": [],
      "title": "helperPod",
      "type": "object"
    },
    "hostAliases": {
      "description": "hostAliases to add",
      "items": {
        "required": []
      },
      "required": [],
      "title": "hostAliases",
      "type": "array"
    },
    "hostNetwork": {
      "default": false,
      "description": "Specifies weather host network should be used",
      "required": [],
      "title": "hostNetwork",
      "type": "boolean"
    },
    "hostpathClass": {
      "additionalProperties": true,
      "properties": {
        "basePath": {
          "default": "",
          "description": "Path on the host where local volumes of this storage class are mounted under.\nNOTE: If not specified, this defaults to the value of localpv.basePath.",
          "required": [],
          "title": "basePath",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "If true, enables creation of the openebs-hostpath StorageClass",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ext4Quota": {
          "additionalProperties": true,
          "description": "Prerequisite: EXT4 Quota requires an EXT4 filesystem mounted with\nthe 'prjquota' mount option.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "If true, enables XFS project quota",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hardLimitGrace": {
              "default": "0%",
              "required": [],
              "title": "hardLimitGrace",
              "type": "string"
            },
            "softLimitGrace": {
              "default": "0%",
              "description": "Detailed configuration options for EXT4 project quota.\nIf EXT4 Quota is enabled with the default values, the usage limit\nis set at the storage capacity specified in the PVC.",
              "required": [],
              "title": "softLimitGrace",
              "type": "string"
            }
          },
          "required": [],
          "title": "ext4Quota",
          "type": "object"
        },
        "isDefaultClass": {
          "default": false,
          "description": "If true, sets the openebs-hostpath StorageClass as the default StorageClass",
          "required": [],
          "title": "isDefaultClass",
          "type": "boolean"
        },
        "name": {
          "default": "openebs-hostpath",
          "description": "Name of the default hostpath StorageClass",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "nodeAffinityLabels": {
          "description": "Custom node affinity label(s) for example \"openebs.io/node-affinity-value\"\nthat will be used instead of hostnames\nThis helps in cases where the hostname changes when the node is removed and\nadded back with the disks still intact.\nExample:\n         nodeAffinityLabels:\n           - \"openebs.io/node-affinity-key-1\"\n           - \"openebs.io/node-affinity-key-2\"",
          "items": {
            "required": []
          },
          "required": [],
          "title": "nodeAffinityLabels",
          "type": "array"
        },
        "reclaimPolicy": {
          "default": "Delete",
          "description": "Available reclaim policies: Delete/Retain, defaults: Delete.",
          "required": [],
          "title": "reclaimPolicy",
          "type": "string"
        },
        "xfsQuota": {
          "additionalProperties": true,
          "description": "Prerequisite: XFS Quota requires an XFS filesystem mounted with\nthe 'pquota' or 'prjquota' mount option.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "If true, enables XFS project quota",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hardLimitGrace": {
              "default": "0%",
              "required": [],
              "title": "hardLimitGrace",
              "type": "string"
            },
            "softLimitGrace": {
              "default": "0%",
              "description": "Detailed configuration options for XFS project quota.\nIf XFS Quota is enabled with the default values, the usage limit\nis set at the storage capacity specified in the PVC.",
              "required": [],
              "title": "softLimitGrace",
              "type": "string"
            }
          },
          "required": [],
          "title": "xfsQuota",
          "type": "object"
        }
      },
      "required": [],
      "title": "hostpathClass",
      "type": "object"
    },
    "ignoreChartChecksums": {
      "default": false,
      "description": "# Typically the deployment/statefulset includes checksums of secrets/config,\n# So that when these change on a subsequent helm install, the deployment/statefulset\n# is restarted. This can result in unnecessary restarts under GitOps tooling such as\n# flux, so set to \"true\" to disable this behaviour.",
      "required": [],
      "title": "ignoreChartChecksums",
      "type": "boolean"
    },
    "image": {
      "additionalProperties": true,
      "description": "# Set default image, imageTag, and imagePullPolicy. mode is used to indicate the\n#",
      "properties": {
        "debug": {
          "default": false,
          "description": "#\n# Set to true if you would like to see extra information on logs\n#",
          "required": [],
          "title": "debug",
          "type": "boolean"
        },
        "digest": {
          "default": "",
          "description": "Grafana Alloy image's SHA256 digest (either in format \"sha256:XYZ\" or \"XYZ\"). When set, will override `image.tag`.",
          "required": [],
          "title": "digest",
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "ImagePullPolicy for our images",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "pullSecrets": {
          "description": "docker-secrets required to pull images if the container registry from image.registry is protected",
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "pullSecrets",
          "type": "array"
        },
        "registry": {
          "default": "docker.io",
          "description": "Image registry to pull our product images",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repo": {
          "default": "openebs",
          "description": "Image registry's namespace",
          "required": [],
          "title": "repo",
          "type": "string"
        },
        "repoTags": {
          "additionalProperties": true,
          "properties": {
            "controlPlane": {
              "default": "",
              "description": "Note: Below image tag configuration is optional and typically should never be\n      used. Setting specific image tags for the different repositories proves useful\n      for some integration testing scenarios. Use the 'tag' option above to set\n      release/pre-release container image tags.\n      The below tag values will be picked for images by default.\n      If not specified, 'tag' option provided above will be picked.",
              "required": [],
              "title": "controlPlane",
              "type": "string"
            },
            "dataPlane": {
              "default": "",
              "required": [],
              "title": "dataPlane",
              "type": "string"
            },
            "extensions": {
              "default": "",
              "required": [],
              "title": "extensions",
              "type": "string"
            }
          },
          "required": [],
          "title": "repoTags",
          "type": "object"
        },
        "repository": {
          "default": "grafana/rollout-operator",
          "description": "Image repo",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "v2.9.2",
          "description": "Release tag for our images",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "default": "",
      "description": "Default values for openebs-zfslocalpv.\nThis is a YAML-formatted file.\nDeclare variables to be passed into your templates.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "null"
    },
    "indexGateway": {
      "additionalProperties": true,
      "description": "Configuration for the index-gateway",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for index-gateway pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "index-gateway",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the index-gateway",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the index-gateway image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the index-gateway image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the index-gateway image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "joinMemberlist": {
          "default": true,
          "description": "Whether the index gateway should join the memberlist hashring",
          "required": [],
          "title": "joinMemberlist",
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for index-gateway pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for index gateway PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs which is required when using boltdb-shipper",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "inMemory": {
              "default": false,
              "description": "Use emptyDir with ramdisk for storage. **Please note that all data in indexGateway will be lost on pod restart**",
              "required": [],
              "title": "inMemory",
              "type": "boolean"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent or memory disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for index-gateway pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for index-gateway pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for index-gateway pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the index-gateway",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the index-gateway",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for index-gateway service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for index-gateway service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the index-gateway to shutdown before it is killed.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for index-gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "UpdateStrategy for the indexGateway StatefulSet.",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "description": "One of  'OnDelete' or 'RollingUpdate'",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "indexGateway",
      "type": "object"
    },
    "ingester": {
      "additionalProperties": true,
      "description": "Configuration for the ingester",
      "properties": {
        "addIngesterNamePrefix": {
          "default": false,
          "description": "optionally allow adding 'loki-' prefix to ingester name label",
          "required": [],
          "title": "addIngesterNamePrefix",
          "type": "boolean"
        },
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for ingester pods. Ignored if zoneAwareReplication is enabled.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "ingester",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the ingester service. This allows ingester to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "- type: Pods\n  pods:\n    metric:\n      name: loki_lines_total\n    target:\n      type: AverageValue\n      averageValue: 10k",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable autoscaling behaviours",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "description": "define scale down policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "define scale up policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "customMetrics": {
              "description": "Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "customMetrics",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the ingester",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the ingester",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the ingester",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the ingester",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "null",
              "description": "Target memory utilisation percentage for the ingester",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the ingester",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the ingester image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the ingester image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the ingester image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Lifecycle for the ingester container",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "liveness probe settings for ingester pods. If empty use `loki.livenessProbe`",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for ingester pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "claims": {
              "description": "List of the ingester PVCs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "data",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "size": {
                    "default": "10Gi",
                    "required": [],
                    "title": "size",
                    "type": "string"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "  -- Storage class to be used.\n  If defined, storageClassName: \u003cstorageClass\u003e.\n  If set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\n  If empty or set to null, no storageClassName spec is\n  set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "claims",
              "type": "array"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs which is required when using boltdb-shipper",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "inMemory": {
              "default": false,
              "description": "Use emptyDir with ramdisk for storage. **Please note that all data in ingester will be lost on pod restart**",
              "required": [],
              "title": "inMemory",
              "type": "boolean"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for ingester pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for ingester pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the ingester, when zoneAwareReplication.enabled is true, the total\nnumber of replicas will match this value with each zone having 1/3rd of the total replicas.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the ingester",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rolloutGroupPrefix": {
          "default": "null",
          "description": "optionally allow adding arbitrary prefix to the ingester rollout-group label",
          "required": [],
          "title": "rolloutGroupPrefix",
          "type": "null"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for ingestor service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "The name of the PriorityClass for ingester pods\nLabels for ingestor service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the ingester to shutdown before it is killed. Especially for the ingestor,\nthis must be increased. It must be long enough so ingesters can be gracefully shutdown flushing/transferring\nall data and to successfully leave the member ring on shutdown.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "topologySpread for ingester pods.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "labelSelector": {
                "additionalProperties": true,
                "properties": {
                  "matchLabels": {
                    "additionalProperties": true,
                    "properties": {
                      "app.kubernetes.io/component": {
                        "default": "ingester",
                        "required": [],
                        "title": "app.kubernetes.io/component",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "matchLabels",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "labelSelector",
                "type": "object"
              },
              "maxSkew": {
                "default": 1,
                "required": [],
                "title": "maxSkew",
                "type": "integer"
              },
              "topologyKey": {
                "default": "kubernetes.io/hostname",
                "required": [],
                "title": "topologyKey",
                "type": "string"
              },
              "whenUnsatisfiable": {
                "default": "ScheduleAnyway",
                "required": [],
                "title": "whenUnsatisfiable",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "UpdateStrategy for the ingester StatefulSets.",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "description": "One of  'OnDelete' or 'RollingUpdate'",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        },
        "zoneAwareReplication": {
          "additionalProperties": true,
          "description": "Enabling zone awareness on ingesters will create 3 statefulests where all writes will send a replica to each zone.\nThis is primarily intended to accelerate rollout operations by allowing for multiple ingesters within a single\nzone to be shutdown and restart simultaneously (the remaining 2 zones will be guaranteed to have at least one copy\nof the data).\nNote: This can be used to run Loki over multiple cloud provider availability zones however this is not currently\nrecommended as Loki is not optimized for this and cross zone network traffic costs can become extremely high\nextremely quickly. Even with zone awareness enabled, it is recommended to run Loki in a single availability zone.",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable zone awareness.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailablePct": {
              "default": 33,
              "description": "The percent of replicas in each zone that will be restarted at once. In a value of 0-100",
              "required": [],
              "title": "maxUnavailablePct",
              "type": "integer"
            },
            "migration": {
              "additionalProperties": true,
              "description": "The migration block allows migrating non zone aware ingesters to zone aware ingesters.",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "excludeDefaultZone": {
                  "default": false,
                  "required": [],
                  "title": "excludeDefaultZone",
                  "type": "boolean"
                },
                "readPath": {
                  "default": false,
                  "required": [],
                  "title": "readPath",
                  "type": "boolean"
                },
                "writePath": {
                  "default": false,
                  "required": [],
                  "title": "writePath",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "migration",
              "type": "object"
            },
            "zoneA": {
              "additionalProperties": true,
              "description": "zoneA configuration",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone A statefulset",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "extraAffinity": {
                  "additionalProperties": true,
                  "description": "optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host",
                  "required": [],
                  "title": "extraAffinity",
                  "type": "object"
                },
                "nodeSelector": {
                  "default": "null",
                  "description": "optionally define a node selector for this zone",
                  "required": [],
                  "title": "nodeSelector",
                  "type": "null"
                },
                "podAnnotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone A pods",
                  "required": [],
                  "title": "podAnnotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "zoneA",
              "type": "object"
            },
            "zoneB": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone B statefulset",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "extraAffinity": {
                  "additionalProperties": true,
                  "description": "optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host",
                  "required": [],
                  "title": "extraAffinity",
                  "type": "object"
                },
                "nodeSelector": {
                  "default": "null",
                  "description": "optionally define a node selector for this zone",
                  "required": [],
                  "title": "nodeSelector",
                  "type": "null"
                },
                "podAnnotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone B pods",
                  "required": [],
                  "title": "podAnnotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "zoneB",
              "type": "object"
            },
            "zoneC": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone C statefulset",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "extraAffinity": {
                  "additionalProperties": true,
                  "description": "optionally define extra affinity rules, by default different zones are not allowed to schedule on the same host",
                  "required": [],
                  "title": "extraAffinity",
                  "type": "object"
                },
                "nodeSelector": {
                  "default": "null",
                  "description": "optionally define a node selector for this zone",
                  "required": [],
                  "title": "nodeSelector",
                  "type": "null"
                },
                "podAnnotations": {
                  "additionalProperties": true,
                  "description": "Specific annotations to add to zone C pods",
                  "required": [],
                  "title": "podAnnotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "zoneC",
              "type": "object"
            }
          },
          "required": [],
          "title": "zoneAwareReplication",
          "type": "object"
        }
      },
      "required": [],
      "title": "ingester",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": true,
      "description": "Ingress configuration Use either this ingress or the gateway, but not both at once.\nIf you enable this, make sure to disable the gateway.\nYou'll need to supply authn configuration for your ingress controller.",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "node-role.kubernetes.io/ingress: platform",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enables ingress for Alloy (Faro port)",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraPaths": {
          "description": "# Extra paths to prepend to every host configuration. This is useful when working with annotation based services.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPaths",
          "type": "array"
        },
        "faroPort": {
          "default": 12347,
          "required": [],
          "title": "faroPort",
          "type": "integer"
        },
        "hosts": {
          "description": "Hosts configuration for the ingress, passed through the `tpl` function to allow templating",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "ingressClassName": {
          "default": "",
          "required": [],
          "title": "ingressClassName",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "description": "   nginx.ingress.kubernetes.io/auth-type: basic\n   nginx.ingress.kubernetes.io/auth-secret: loki-distributed-basic-auth\n   nginx.ingress.kubernetes.io/auth-secret-type: auth-map\n   nginx.ingress.kubernetes.io/configuration-snippet: |\n     proxy_set_header X-Scope-OrgID $remote_user;",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "default": "/",
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nkubernetes.io/ingress.allow-http: \"false\"\nkubernetes.io/ingress.global-static-ip-name: \"\"\nnginx.ingress.kubernetes.io/secure-backends: \"true\"\nnginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nnginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "pathType": {
          "default": "Prefix",
          "description": "pathType is only for k8s \u003e= 1.1=",
          "required": [],
          "title": "pathType",
          "type": "string"
        },
        "paths": {
          "additionalProperties": true,
          "description": "   blackbox.monitoring.exclude: \"true\"",
          "properties": {
            "distributor": {
              "description": "Paths that are exposed by Loki Distributor.\nIf deployment mode is Distributed, the requests are forwarded to the service: `{{\"loki.distributorFullname\"}}`.\nIf deployment mode is SimpleScalable, the requests are forwarded to write k8s service: `{{\"loki.writeFullname\"}}`.\nIf deployment mode is SingleBinary, the requests are forwarded to the central/single k8s service: `{{\"loki.singleBinaryFullname\"}}`",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "distributor",
              "type": "array"
            },
            "queryFrontend": {
              "description": "Paths that are exposed by Loki Query Frontend.\nIf deployment mode is Distributed, the requests are forwarded to the service: `{{\"loki.queryFrontendFullname\"}}`.\nIf deployment mode is SimpleScalable, the requests are forwarded to write k8s service: `{{\"loki.readFullname\"}}`.\nIf deployment mode is SingleBinary, the requests are forwarded to the central/single k8s service: `{{\"loki.singleBinaryFullname\"}}`",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "queryFrontend",
              "type": "array"
            },
            "ruler": {
              "description": "Paths that are exposed by Loki Ruler.\nIf deployment mode is Distributed, the requests are forwarded to the service: `{{\"loki.rulerFullname\"}}`.\nIf deployment mode is SimpleScalable, the requests are forwarded to k8s service: `{{\"loki.backendFullname\"}}`.\nIf deployment mode is SimpleScalable but `read.legacyReadTarget` is `true`, the requests are forwarded to k8s service: `{{\"loki.readFullname\"}}`.\nIf deployment mode is SingleBinary, the requests are forwarded to the central/single k8s service: `{{\"loki.singleBinaryFullname\"}}`",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "ruler",
              "type": "array"
            }
          },
          "required": [],
          "title": "paths",
          "type": "object"
        },
        "tls": {
          "description": "TLS configuration for the ingress. Hosts passed through the `tpl` function to allow templating",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "initContainers": {
      "description": "#\n# e.g:\n# initContainers:\n#   - name: your-image-name\n#     image: your-image\n#     imagePullPolicy: Always\n#     ports:\n#       - name: portname\n#         containerPort: 1234\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "initContainers",
      "type": "array"
    },
    "initialClusterState": {
      "default": "",
      "description": "#\n# If this values is not set, the default values below are set:\n# - 'new': when installing the chart ('helm install ...')\n# - 'existing': when upgrading the chart ('helm upgrade ...')\n#",
      "required": [],
      "title": "initialClusterState",
      "type": "string"
    },
    "io_engine": {
      "additionalProperties": true,
      "properties": {
        "api": {
          "default": "v1",
          "required": [],
          "title": "api",
          "type": "string"
        },
        "coreList": {
          "description": "If not empty, overrides the cpuCount and explicitly sets the list of cores.\nExample: --set='io_engine.coreList={30,31}'",
          "items": {
            "required": []
          },
          "required": [],
          "title": "coreList",
          "type": "array"
        },
        "cpuCount": {
          "default": "2",
          "description": "The number of cores that each io-engine instance will bind to.",
          "required": [],
          "title": "cpuCount",
          "type": "string"
        },
        "envcontext": {
          "default": "",
          "description": "Pass additional arguments to the Environment Abstraction Layer.\nExample: --set {product}.envcontext=iova-mode=pa",
          "required": [],
          "title": "envcontext",
          "type": "string"
        },
        "logLevel": {
          "default": "info",
          "description": "Log level for the io-engine service",
          "required": [],
          "title": "logLevel",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selectors to designate storage nodes for diskpool creation\nNote that if multi-arch images support 'kubernetes.io/arch: amd64'\nshould be removed.",
          "properties": {
            "kubernetes.io/arch": {
              "default": "amd64",
              "required": [],
              "title": "kubernetes.io/arch",
              "type": "string"
            },
            "openebs.io/engine": {
              "default": "mayastor",
              "required": [],
              "title": "openebs.io/engine",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "nvme": {
          "additionalProperties": true,
          "properties": {
            "adminTimeout": {
              "default": "30s",
              "description": "Timeout for admin commands",
              "required": [],
              "title": "adminTimeout",
              "type": "string"
            },
            "ioTimeout": {
              "default": "110s",
              "description": "Timeout for IOs\nThe default here is exaggerated for local disks, but we've observed that in\nshared virtual environments having a higher timeout value is beneficial.\nPlease adjust this according to your hardware and needs.",
              "required": [],
              "title": "ioTimeout",
              "type": "string"
            },
            "keepAliveTimeout": {
              "default": "10s",
              "description": "Timeout for keep alives",
              "required": [],
              "title": "keepAliveTimeout",
              "type": "string"
            },
            "tcp": {
              "additionalProperties": true,
              "properties": {
                "maxQpairsPerCtrl": {
                  "default": "32",
                  "description": "Max qpairs per controller.",
                  "required": [],
                  "title": "maxQpairsPerCtrl",
                  "type": "string"
                },
                "maxQueueDepth": {
                  "default": "32",
                  "description": "Max size setting (both initiator and target) for an NVMe queue\nYou may need to increase this for a higher outstanding IOs per volume",
                  "required": [],
                  "title": "maxQueueDepth",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tcp",
              "type": "object"
            }
          },
          "required": [],
          "title": "nvme",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "Set PriorityClass, overrides global",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "pstorRetries": {
          "default": 300,
          "description": "Number of retries for pstor persistence before the volume target self shutdowns",
          "required": [],
          "title": "pstorRetries",
          "type": "integer"
        },
        "reactorFreezeDetection": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "reactorFreezeDetection",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "",
                  "description": "Cpu limits for the io-engine",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "hugepages2Mi": {
                  "default": "2Gi",
                  "description": "Hugepage size available on the nodes",
                  "required": [],
                  "title": "hugepages2Mi",
                  "type": "string"
                },
                "memory": {
                  "default": "1Gi",
                  "description": "Memory limits for the io-engine",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "",
                  "description": "Cpu requests for the io-engine",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "hugepages2Mi": {
                  "default": "2Gi",
                  "description": "Hugepage size available on the nodes",
                  "required": [],
                  "title": "hugepages2Mi",
                  "type": "string"
                },
                "memory": {
                  "default": "1Gi",
                  "description": "Memory requests for the io-engine",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "runtimeClassName": {
          "default": "",
          "description": "Runtime class to use. Defaults to cluster standard",
          "required": [],
          "title": "runtimeClassName",
          "type": "string"
        },
        "target": {
          "additionalProperties": true,
          "properties": {
            "nvmf": {
              "additionalProperties": true,
              "properties": {
                "hostCmdRetryDelay": {
                  "additionalProperties": true,
                  "description": "NVMF target Command Retry Delay for volume target initiators",
                  "properties": {
                    "crdt1": {
                      "default": 30,
                      "description": "A command retry delay in milliseconds. A value of 0 means no delay, host may retry immediately",
                      "required": [],
                      "title": "crdt1",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "hostCmdRetryDelay",
                  "type": "object"
                },
                "iface": {
                  "default": "",
                  "description": "NVMF target interface (ip, mac, name or subnet)\nIf RDMA is enabled, please set iface to an RDMA\ncapable netdev name from host network. Example, if an rdma device mlx5_0 is\navailable on a netdev eth0 on RNIC, as can be seen from `rdma link` command output,\nthen this field should be set to eth0.",
                  "required": [],
                  "title": "iface",
                  "type": "string"
                },
                "ptpl": {
                  "default": true,
                  "description": "Reservations Persist Through Power Loss State",
                  "required": [],
                  "title": "ptpl",
                  "type": "boolean"
                },
                "rdma": {
                  "additionalProperties": true,
                  "description": "Enable RDMA\nCapability of Mayastor nvmf target to take RDMA connections if the cluster nodes have RDMA device(s)\nconfigured from RNIC.",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "rdma",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nvmf",
              "type": "object"
            }
          },
          "required": [],
          "title": "target",
          "type": "object"
        },
        "tolerations": {
          "description": "Set tolerations, overrides global",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "io_engine",
      "type": "object"
    },
    "jaeger": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": false,
          "description": "Specifies whether Jaeger instance should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "namespace": {
          "default": "",
          "description": "namespace where Jaeger resource should be created default to .Release.Namespace",
          "required": [],
          "title": "namespace",
          "type": "null"
        },
        "spec": {
          "additionalProperties": true,
          "required": [],
          "title": "spec",
          "type": "object"
        }
      },
      "required": [],
      "title": "jaeger",
      "type": "object"
    },
    "jaeger-operator": {
      "additionalProperties": true,
      "properties": {
        "jaeger": {
          "additionalProperties": true,
          "properties": {
            "collector": {
              "additionalProperties": true,
              "properties": {
                "service": {
                  "additionalProperties": true,
                  "properties": {
                    "otlp": {
                      "additionalProperties": true,
                      "properties": {
                        "grpc": {
                          "default": true,
                          "required": [],
                          "title": "grpc",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "otlp",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "service",
                  "type": "object"
                }
              },
              "required": [],
              "title": "collector",
              "type": "object"
            },
            "create": {
              "default": false,
              "description": "Install jaeger-operator",
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "jaeger",
          "type": "object"
        },
        "name": {
          "default": "{{ .Release.Name }}",
          "description": "Name of jaeger operator",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "priorityClassName": {
          "default": "",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "clusterRole": {
              "default": true,
              "description": "Create a clusterRole for Jaeger",
              "required": [],
              "title": "clusterRole",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "jaeger-operator",
      "type": "object"
    },
    "k8sClusterDomain": {
      "default": "cluster.local",
      "description": "Cluster Domain configured on the kubelets\nhttps://kubernetes.io/docs/concepts/services-networking/dns-pod-service/",
      "required": [],
      "title": "k8sClusterDomain",
      "type": "string"
    },
    "kubeVersion": {
      "default": "",
      "description": "#\n#",
      "required": [],
      "title": "kubeVersion",
      "type": "string"
    },
    "kubeVersionOverride": {
      "default": "null",
      "description": "Overrides the version used to determine compatibility of resources with the target Kubernetes cluster.\nThis is useful when using `helm template`, because then helm will use the client version of kubectl as the Kubernetes version,\nwhich may or may not match your cluster's server version. Example: 'v1.24.4'. Set to null to use the version that helm\ndevises.",
      "required": [],
      "title": "kubeVersionOverride",
      "type": "null"
    },
    "kubectlImage": {
      "additionalProperties": true,
      "description": "kubetclImage is used in the enterprise provisioner and tokengen jobs",
      "properties": {
        "digest": {
          "default": "null",
          "description": "Overrides the image tag with an image digest",
          "required": [],
          "title": "digest",
          "type": "null"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Docker image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "The Docker registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "bitnami/kubectl",
          "description": "Docker image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "null",
          "description": "Overrides the image tag whose default is the chart's appVersion",
          "required": [],
          "title": "tag",
          "type": "null"
        }
      },
      "required": [],
      "title": "kubectlImage",
      "type": "object"
    },
    "kubeletService": {
      "additionalProperties": true,
      "description": "If both are set, Agent Operator will create and maintain a service for scraping kubelets\nhttps://grafana.com/docs/agent/latest/operator/getting-started/#monitor-kubelets",
      "properties": {
        "namespace": {
          "default": "default",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "serviceName": {
          "default": "kubelet",
          "required": [],
          "title": "serviceName",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeletService",
      "type": "object"
    },
    "leafnodes": {
      "additionalProperties": true,
      "description": "Leafnode connections to extend a cluster:\n\nhttps://docs.nats.io/nats-server/configuration/leafnodes\n",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "noAdvertise": {
          "default": false,
          "required": [],
          "title": "noAdvertise",
          "type": "boolean"
        },
        "port": {
          "default": 7422,
          "required": [],
          "title": "port",
          "type": "integer"
        }
      },
      "required": [],
      "title": "leafnodes",
      "type": "object"
    },
    "lifecycleHooks": {
      "additionalProperties": true,
      "description": "#\n#",
      "required": [],
      "title": "lifecycleHooks",
      "type": "object"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "description": "# Configure extra options for liveness probe\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failureThreshold": {
          "default": 5,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 60,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "livenessProbe",
      "type": "object"
    },
    "localpv": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "basePath": {
          "default": "/var/openebs/local",
          "required": [],
          "title": "basePath",
          "type": "string"
        },
        "enableLeaderElection": {
          "default": true,
          "required": [],
          "title": "enableLeaderElection",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "healthCheck": {
          "additionalProperties": true,
          "properties": {
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 60,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "healthCheck",
          "type": "object"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "openebs/provisioner-localpv",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "4.3.0",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "name": {
          "default": "localpv-provisioner",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "We usually recommend not to specify default resources and to leave this as a conscious\nchoice for the user. This also increases chances charts run on environments with little\nresources, such as Minikube. If you do want to specify resources, uncomment the following\nlines, adjust them as necessary, and remove the curly braces after 'resources:'.\n limits:\n   cpu: 100m\n   memory: 128Mi\n requests:\n   cpu: 100m\n   memory: 128Mi",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "# Labels to be added to localpv provisioner deployment pods",
          "properties": {
            "name": {
              "default": "openebs-localpv-provisioner",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "# Sets priorityClassName in pod",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "privileged": {
          "default": true,
          "description": "If set to false, containers created by the localpv provisioner will run without extra privileges.",
          "required": [],
          "title": "privileged",
          "type": "boolean"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "default": "",
          "required": [],
          "title": "resources",
          "type": "null"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "localpv",
      "type": "object"
    },
    "localpv-provisioner": {
      "additionalProperties": true,
      "description": "Refer to https://github.com/openebs/dynamic-localpv-provisioner/blob/v4.2.0/deploy/helm/charts/values.yaml for complete set of values.",
      "properties": {
        "analytics": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "analytics",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "Enables the openebs dynamic-localpv-provisioner. If disabled, modify etcd and loki storage class accordingly.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hostpathClass": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable default hostpath localpv StorageClass.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "hostpathClass",
          "type": "object"
        },
        "localpv": {
          "additionalProperties": true,
          "properties": {
            "priorityClassName": {
              "default": "{{ .Release.Name }}-cluster-critical",
              "description": "Set the PriorityClass for the LocalPV Hostpath provisioner Deployment.",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            }
          },
          "required": [],
          "title": "localpv",
          "type": "object"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        }
      },
      "required": [],
      "title": "localpv-provisioner",
      "type": "object"
    },
    "logLevel": {
      "default": "info",
      "description": "#\n#",
      "required": [],
      "title": "logLevel",
      "type": "string"
    },
    "loggingLabels": {
      "additionalProperties": true,
      "properties": {
        "openebs.io/logging": {
          "default": "true",
          "required": [],
          "title": "openebs.io/logging",
          "type": "string"
        }
      },
      "required": [],
      "title": "loggingLabels",
      "type": "object"
    },
    "loki": {
      "additionalProperties": true,
      "description": "#####################################################################################################################\n\nBase Loki Configs including kubernetes configurations and configurations for Loki itself,\nsee below for more specifics on Loki's configuration.\n\n#####################################################################################################################\nConfiguration for running Loki",
      "properties": {
        "analytics": {
          "additionalProperties": true,
          "description": " Optional analytics configuration",
          "required": [],
          "title": "analytics",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Common annotations for all deployments/StatefulSets",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "auth_enabled": {
          "default": true,
          "description": "Should authentication be enabled",
          "required": [],
          "title": "auth_enabled",
          "type": "boolean"
        },
        "backend": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "backend",
          "type": "object"
        },
        "bloomCompactor": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "bloomCompactor",
          "type": "object"
        },
        "bloomGateway": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "bloomGateway",
          "type": "object"
        },
        "bloom_build": {
          "additionalProperties": true,
          "properties": {
            "builder": {
              "additionalProperties": true,
              "properties": {
                "planner_address": {
                  "default": "{{ include \"loki.bloomPlannerAddress\" . }}",
                  "required": [],
                  "title": "planner_address",
                  "type": "string"
                }
              },
              "required": [],
              "title": "builder",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "bloom_build",
          "type": "object"
        },
        "bloom_gateway": {
          "additionalProperties": true,
          "properties": {
            "client": {
              "additionalProperties": true,
              "properties": {
                "addresses": {
                  "default": "{{ include \"loki.bloomGatewayAddresses\" . }}",
                  "required": [],
                  "title": "addresses",
                  "type": "string"
                }
              },
              "required": [],
              "title": "client",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "bloom_gateway",
          "type": "object"
        },
        "chunksCache": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "chunksCache",
          "type": "object"
        },
        "commonConfig": {
          "additionalProperties": true,
          "description": "Check https://grafana.com/docs/loki/latest/configuration/#common_config for more info on how to provide a common configuration",
          "properties": {
            "compactor_address": {
              "default": "{{ include \"loki.compactorAddress\" . }}",
              "required": [],
              "title": "compactor_address",
              "type": "string"
            },
            "path_prefix": {
              "default": "/var/loki",
              "required": [],
              "title": "path_prefix",
              "type": "string"
            },
            "replication_factor": {
              "default": 3,
              "required": [],
              "title": "replication_factor",
              "type": "integer"
            }
          },
          "required": [],
          "title": "commonConfig",
          "type": "object"
        },
        "compactor": {
          "additionalProperties": true,
          "description": " Optional compactor configuration",
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "compactor",
          "type": "object"
        },
        "config": {
          "default": "{{- if .Values.enterprise.enabled}}\n{{- tpl .Values.enterprise.config . }}\n{{- else }}\nauth_enabled: {{ .Values.loki.auth_enabled }}\n{{- end }}\n\n{{- with .Values.loki.server }}\nserver:\n  {{- toYaml . | nindent 2}}\n{{- end}}\n\npattern_ingester:\n  enabled: {{ .Values.loki.pattern_ingester.enabled }}\n\nmemberlist:\n{{- if .Values.loki.memberlistConfig }}\n  {{- toYaml .Values.loki.memberlistConfig | nindent 2 }}\n{{- else }}\n{{- if .Values.loki.extraMemberlistConfig}}\n{{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}\n{{- end }}\n  join_members:\n    - {{ include \"loki.memberlist\" . }}\n    {{- with .Values.migrate.fromDistributed }}\n    {{- if .enabled }}\n    - {{ .memberlistService }}\n    {{- end }}\n    {{- end }}\n{{- end }}\n\n{{- with .Values.loki.ingester }}\ningester:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- if .Values.loki.commonConfig}}\ncommon:\n{{- toYaml .Values.loki.commonConfig | nindent 2}}\n  storage:\n  {{- include \"loki.commonStorageConfig\" . | nindent 4}}\n{{- end}}\n\n{{- with .Values.loki.limits_config }}\nlimits_config:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\nruntime_config:\n  file: /etc/loki/runtime-config/runtime-config.yaml\n\n{{- with .Values.chunksCache }}\n{{- if .enabled }}\nchunk_store_config:\n  chunk_cache_config:\n    default_validity: {{ .defaultValidity }}\n    background:\n      writeback_goroutines: {{ .writebackParallelism }}\n      writeback_buffer: {{ .writebackBuffer }}\n      writeback_size_limit: {{ .writebackSizeLimit }}\n    memcached:\n      batch_size: {{ .batchSize }}\n      parallelism: {{ .parallelism }}\n    memcached_client:\n      addresses: dnssrvnoa+_memcached-client._tcp.{{ template \"loki.fullname\" $ }}-chunks-cache.{{ $.Release.Namespace }}.svc\n      consistent_hash: true\n      timeout: {{ .timeout }}\n      max_idle_conns: 72\n{{- end }}\n{{- end }}\n\n{{- if .Values.loki.schemaConfig }}\nschema_config:\n{{- toYaml .Values.loki.schemaConfig | nindent 2}}\n{{- end }}\n\n{{- if .Values.loki.useTestSchema }}\nschema_config:\n{{- toYaml .Values.loki.testSchemaConfig | nindent 2}}\n{{- end }}\n\n{{- if .Values.ruler.enabled }}\n{{ include \"loki.rulerConfig\" . }}\n{{- end }}\n\n{{- if and .Values.loki.storage.use_thanos_objstore .Values.ruler.enabled}}\nruler_storage:\n  {{- include \"loki.rulerThanosStorageConfig\" . | nindent 2 }}\n{{- end }}\n\n{{- if or .Values.tableManager.retention_deletes_enabled .Values.tableManager.retention_period }}\ntable_manager:\n  retention_deletes_enabled: {{ .Values.tableManager.retention_deletes_enabled }}\n  retention_period: {{ .Values.tableManager.retention_period }}\n{{- end }}\n\nquery_range:\n  align_queries_with_step: true\n  {{- with .Values.loki.query_range }}\n  {{- tpl (. | toYaml) $ | nindent 2 }}\n  {{- end }}\n  {{- if .Values.resultsCache.enabled }}\n  {{- with .Values.resultsCache }}\n  cache_results: true\n  results_cache:\n    cache:\n      default_validity: {{ .defaultValidity }}\n      background:\n        writeback_goroutines: {{ .writebackParallelism }}\n        writeback_buffer: {{ .writebackBuffer }}\n        writeback_size_limit: {{ .writebackSizeLimit }}\n      memcached_client:\n        consistent_hash: true\n        addresses: dnssrvnoa+_memcached-client._tcp.{{ template \"loki.fullname\" $ }}-results-cache.{{ $.Release.Namespace }}.svc\n        timeout: {{ .timeout }}\n        update_interval: 1m\n  {{- end }}\n  {{- end }}\n\n{{- with .Values.loki.storage_config }}\nstorage_config:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.query_scheduler }}\nquery_scheduler:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.compactor }}\ncompactor:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.analytics }}\nanalytics:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- if .Values.loki.ui.enabled }}\nui:\n  discovery:\n    join_peers:\n      - '{{ include \"loki.queryFrontendFullname\" . }}.{{ $.Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}'\n{{- end }}\n{{- with .Values.loki.querier }}\nquerier:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.index_gateway }}\nindex_gateway:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.frontend }}\nfrontend:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.frontend_worker }}\nfrontend_worker:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.distributor }}\ndistributor:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\ntracing:\n  enabled: {{ .Values.loki.tracing.enabled }}\n\n{{- with .Values.loki.bloom_build }}\nbloom_build:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n\n{{- with .Values.loki.bloom_gateway }}\nbloom_gateway:\n  {{- tpl (. | toYaml) $ | nindent 4 }}\n{{- end }}\n",
          "description": "Config file contents for Loki",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "configObjectName": {
          "default": "{{ include \"loki.name\" . }}",
          "description": "The name of the object which Loki will mount as a volume containing the config.\nIf the configStorageType is Secret, this will be the name of the Secret, if it is ConfigMap, this will be the name of the ConfigMap.\nThe value will be passed through tpl.",
          "required": [],
          "title": "configObjectName",
          "type": "string"
        },
        "configStorageType": {
          "default": "ConfigMap",
          "description": "Defines what kind of object stores the configuration, a ConfigMap or a Secret.\nIn order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/loki/latest/configuration/#use-environment-variables-in-the-configuration).\nSuch environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).",
          "required": [],
          "title": "configStorageType",
          "type": "string"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for Loki containers",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "deploymentMode": {
          "default": "SingleBinary",
          "required": [],
          "title": "deploymentMode",
          "type": "string"
        },
        "distributor": {
          "additionalProperties": true,
          "description": "Optional distributor configuration",
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "distributor",
          "type": "object"
        },
        "enableServiceLinks": {
          "default": true,
          "description": "Should enableServiceLinks be enabled. Default to enable",
          "required": [],
          "title": "enableServiceLinks",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraMemberlistConfig": {
          "additionalProperties": true,
          "description": "Extra memberlist configuration",
          "required": [],
          "title": "extraMemberlistConfig",
          "type": "object"
        },
        "frontend": {
          "additionalProperties": true,
          "properties": {
            "scheduler_address": {
              "default": "{{ include \"loki.querySchedulerAddress\" . }}",
              "required": [],
              "title": "scheduler_address",
              "type": "string"
            },
            "tail_proxy_url": {
              "default": "{{ include \"loki.querierAddress\" . }}",
              "required": [],
              "title": "tail_proxy_url",
              "type": "string"
            }
          },
          "required": [],
          "title": "frontend",
          "type": "object"
        },
        "frontend_worker": {
          "additionalProperties": true,
          "properties": {
            "scheduler_address": {
              "default": "{{ include \"loki.querySchedulerAddress\" . }}",
              "required": [],
              "title": "scheduler_address",
              "type": "string"
            }
          },
          "required": [],
          "title": "frontend_worker",
          "type": "object"
        },
        "gateway": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "gateway",
          "type": "object"
        },
        "generatedConfigObjectName": {
          "default": "{{ include \"loki.name\" . }}",
          "description": "The name of the Secret or ConfigMap that will be created by this chart.\nIf empty, no configmap or secret will be created.\nThe value will be passed through tpl.",
          "required": [],
          "title": "generatedConfigObjectName",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/loki",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "3.4.2",
              "description": "Overrides the image tag whose default is the chart's appVersion",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "indexGateway": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "indexGateway",
          "type": "object"
        },
        "index_gateway": {
          "additionalProperties": true,
          "description": " Optional index gateway configuration",
          "properties": {
            "mode": {
              "default": "simple",
              "required": [],
              "title": "mode",
              "type": "string"
            }
          },
          "required": [],
          "title": "index_gateway",
          "type": "object"
        },
        "ingester": {
          "additionalProperties": true,
          "description": " Optional ingester configuration",
          "properties": {
            "chunk_encoding": {
              "required": [],
              "title": "chunk_encoding",
              "type": "string"
            },
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "ingester",
          "type": "object"
        },
        "limits_config": {
          "additionalProperties": true,
          "description": "Limits config",
          "properties": {
            "max_cache_freshness_per_query": {
              "default": "10m",
              "required": [],
              "title": "max_cache_freshness_per_query",
              "type": "string"
            },
            "query_timeout": {
              "default": "300s",
              "required": [],
              "title": "query_timeout",
              "type": "string"
            },
            "reject_old_samples": {
              "default": true,
              "required": [],
              "title": "reject_old_samples",
              "type": "boolean"
            },
            "reject_old_samples_max_age": {
              "default": "168h",
              "required": [],
              "title": "reject_old_samples_max_age",
              "type": "string"
            },
            "split_queries_by_interval": {
              "default": "15m",
              "required": [],
              "title": "split_queries_by_interval",
              "type": "string"
            },
            "volume_enabled": {
              "default": true,
              "required": [],
              "title": "volume_enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "limits_config",
          "type": "object"
        },
        "localpvScConfig": {
          "additionalProperties": true,
          "description": "NOTE: For all possible storage options for loki, check https://github.com/openebs/openebs/blob/HEAD/charts/loki-storage.md\nConfiguration for loki's localpv hostpath storage class.",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "loki": {
              "additionalProperties": true,
              "properties": {
                "basePath": {
                  "default": "/var/local/{{ .Release.Name }}/localpv-hostpath/loki",
                  "description": "Host path where local loki data is stored in.",
                  "required": [],
                  "title": "basePath",
                  "type": "string"
                },
                "name": {
                  "default": "openebs-loki-localpv",
                  "description": "Name of loki's localpv hostpath storage class.",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "reclaimPolicy": {
                  "default": "Delete",
                  "description": "ReclaimPolicy of loki's localpv hostpath storage class.",
                  "required": [],
                  "title": "reclaimPolicy",
                  "type": "string"
                },
                "volumeBindingMode": {
                  "default": "WaitForFirstConsumer",
                  "description": "VolumeBindingMode of loki's localpv hostpath storage class.",
                  "required": [],
                  "title": "volumeBindingMode",
                  "type": "string"
                }
              },
              "required": [],
              "title": "loki",
              "type": "object"
            },
            "minio": {
              "additionalProperties": true,
              "properties": {
                "basePath": {
                  "default": "/var/local/{{ .Release.Name }}/localpv-hostpath/minio",
                  "description": "Host path where local minio data is stored in.",
                  "required": [],
                  "title": "basePath",
                  "type": "string"
                },
                "name": {
                  "default": "openebs-minio-localpv",
                  "description": "Name of minio's localpv hostpath storage class.",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "reclaimPolicy": {
                  "default": "Delete",
                  "description": "ReclaimPolicy of minio's localpv hostpath storage class.",
                  "required": [],
                  "title": "reclaimPolicy",
                  "type": "string"
                },
                "volumeBindingMode": {
                  "default": "WaitForFirstConsumer",
                  "description": "VolumeBindingMode of minio's localpv hostpath storage class.",
                  "required": [],
                  "title": "volumeBindingMode",
                  "type": "string"
                }
              },
              "required": [],
              "title": "minio",
              "type": "object"
            }
          },
          "required": [],
          "title": "localpvScConfig",
          "type": "object"
        },
        "loki": {
          "additionalProperties": true,
          "properties": {
            "commonConfig": {
              "additionalProperties": true,
              "properties": {
                "replication_factor": {
                  "default": 3,
                  "required": [],
                  "title": "replication_factor",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "commonConfig",
              "type": "object"
            },
            "ingester": {
              "additionalProperties": true,
              "properties": {
                "chunk_encoding": {
                  "default": "snappy",
                  "required": [],
                  "title": "chunk_encoding",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ingester",
              "type": "object"
            },
            "limits_config": {
              "additionalProperties": true,
              "properties": {
                "ingestion_burst_size_mb": {
                  "default": 1000,
                  "required": [],
                  "title": "ingestion_burst_size_mb",
                  "type": "integer"
                },
                "ingestion_rate_mb": {
                  "default": 10000,
                  "required": [],
                  "title": "ingestion_rate_mb",
                  "type": "integer"
                },
                "max_label_names_per_series": {
                  "default": 20,
                  "required": [],
                  "title": "max_label_names_per_series",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "limits_config",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "properties": {
                "app": {
                  "default": "loki",
                  "required": [],
                  "title": "app",
                  "type": "string"
                }
              },
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "querier": {
              "additionalProperties": true,
              "properties": {
                "max_concurrent": {
                  "default": 1,
                  "required": [],
                  "title": "max_concurrent",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "querier",
              "type": "object"
            },
            "schemaConfig": {
              "additionalProperties": true,
              "properties": {
                "configs": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "from": {
                        "default": "2024-04-01",
                        "required": [],
                        "title": "from",
                        "type": "string"
                      },
                      "index": {
                        "additionalProperties": true,
                        "properties": {
                          "period": {
                            "default": "24h",
                            "required": [],
                            "title": "period",
                            "type": "string"
                          },
                          "prefix": {
                            "default": "loki_index_",
                            "required": [],
                            "title": "prefix",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "index",
                        "type": "object"
                      },
                      "object_store": {
                        "default": "s3",
                        "required": [],
                        "title": "object_store",
                        "type": "string"
                      },
                      "schema": {
                        "default": "v13",
                        "required": [],
                        "title": "schema",
                        "type": "string"
                      },
                      "store": {
                        "default": "tsdb",
                        "required": [],
                        "title": "store",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "configs",
                  "type": "array"
                }
              },
              "required": [],
              "title": "schemaConfig",
              "type": "object"
            },
            "serviceLabels": {
              "additionalProperties": true,
              "properties": {
                "app": {
                  "default": "loki",
                  "required": [],
                  "title": "app",
                  "type": "string"
                }
              },
              "required": [],
              "title": "serviceLabels",
              "type": "object"
            },
            "tracing": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "tracing",
              "type": "object"
            }
          },
          "required": [],
          "title": "loki",
          "type": "object"
        },
        "lokiCanary": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "lokiCanary",
          "type": "object"
        },
        "memberlistConfig": {
          "additionalProperties": true,
          "description": "memberlist configuration (overrides embedded default)",
          "required": [],
          "title": "memberlistConfig",
          "type": "object"
        },
        "memcached": {
          "additionalProperties": true,
          "description": "Configure memcached as an external cache for chunk and results cache. Disabled by default\nmust enable and specify a host for each cache you would like to use.",
          "properties": {
            "chunk_cache": {
              "additionalProperties": true,
              "properties": {
                "batch_size": {
                  "default": 256,
                  "required": [],
                  "title": "batch_size",
                  "type": "integer"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "host": {
                  "default": "",
                  "required": [],
                  "title": "host",
                  "type": "string"
                },
                "parallelism": {
                  "default": 10,
                  "required": [],
                  "title": "parallelism",
                  "type": "integer"
                },
                "service": {
                  "default": "memcached-client",
                  "required": [],
                  "title": "service",
                  "type": "string"
                }
              },
              "required": [],
              "title": "chunk_cache",
              "type": "object"
            },
            "results_cache": {
              "additionalProperties": true,
              "properties": {
                "default_validity": {
                  "default": "12h",
                  "required": [],
                  "title": "default_validity",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "host": {
                  "default": "",
                  "required": [],
                  "title": "host",
                  "type": "string"
                },
                "service": {
                  "default": "memcached-client",
                  "required": [],
                  "title": "service",
                  "type": "string"
                },
                "timeout": {
                  "default": "500ms",
                  "required": [],
                  "title": "timeout",
                  "type": "string"
                }
              },
              "required": [],
              "title": "results_cache",
              "type": "object"
            }
          },
          "required": [],
          "title": "memcached",
          "type": "object"
        },
        "minio": {
          "additionalProperties": true,
          "properties": {
            "drivesPerNode": {
              "default": 1,
              "required": [],
              "title": "drivesPerNode",
              "type": "integer"
            },
            "enabled": {
              "default": true,
              "description": "Disable this if you want to enabled external s3 bucket, and uncomment the storage section above.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "mode": {
              "default": "distributed",
              "required": [],
              "title": "mode",
              "type": "string"
            },
            "persistence": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enabled persistence for minio",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "size": {
                  "default": "2Gi",
                  "description": "Size of minio local storage volume",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClass": {
                  "default": "openebs-minio-localpv",
                  "description": "Storage class for minio storage",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "replicas": {
              "default": 3,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "minio",
          "type": "object"
        },
        "pattern_ingester": {
          "additionalProperties": true,
          "description": " Optional pattern ingester configuration",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "pattern_ingester",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Common annotations for all pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Common labels for all pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for Loki pods",
          "properties": {
            "fsGroup": {
              "default": 10001,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "querier": {
          "additionalProperties": true,
          "description": " Optional querier configuration",
          "properties": {
            "max_concurrent": {
              "description": "Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing",
              "required": [],
              "title": "max_concurrent",
              "type": "integer"
            },
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "querier",
          "type": "object"
        },
        "queryFrontend": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "queryFrontend",
          "type": "object"
        },
        "queryScheduler": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "queryScheduler",
          "type": "object"
        },
        "query_range": {
          "additionalProperties": true,
          "description": " Optional querier configuration",
          "required": [],
          "title": "query_range",
          "type": "object"
        },
        "query_scheduler": {
          "additionalProperties": true,
          "description": "Additional query scheduler config",
          "required": [],
          "title": "query_scheduler",
          "type": "object"
        },
        "read": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "read",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Configures the readiness probe for all of the Loki pods",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resultsCache": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "resultsCache",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "description": "The number of old ReplicaSets to retain to allow rollback",
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "rulerConfig": {
          "additionalProperties": true,
          "description": "Check https://grafana.com/docs/loki/latest/configuration/#ruler for more info on configuring ruler",
          "properties": {
            "wal": {
              "additionalProperties": true,
              "properties": {
                "dir": {
                  "default": "/var/loki/ruler-wal",
                  "required": [],
                  "title": "dir",
                  "type": "string"
                }
              },
              "required": [],
              "title": "wal",
              "type": "object"
            }
          },
          "required": [],
          "title": "rulerConfig",
          "type": "object"
        },
        "runtimeConfig": {
          "additionalProperties": true,
          "description": "Provides a reloadable runtime configuration file for some specific configuration",
          "required": [],
          "title": "runtimeConfig",
          "type": "object"
        },
        "schemaConfig": {
          "additionalProperties": true,
          "description": "Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas",
          "properties": {
            "configs": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "from": {
                    "required": [],
                    "title": "from",
                    "type": "string"
                  },
                  "index": {
                    "additionalProperties": true,
                    "properties": {
                      "period": {
                        "required": [],
                        "title": "period",
                        "type": "string"
                      },
                      "prefix": {
                        "required": [],
                        "title": "prefix",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "index",
                    "type": "object"
                  },
                  "object_store": {
                    "required": [],
                    "title": "object_store",
                    "type": "string"
                  },
                  "schema": {
                    "required": [],
                    "title": "schema",
                    "type": "string"
                  },
                  "store": {
                    "required": [],
                    "title": "store",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "configs",
              "type": "array"
            }
          },
          "required": [],
          "title": "schemaConfig",
          "type": "object"
        },
        "server": {
          "additionalProperties": true,
          "description": "Check https://grafana.com/docs/loki/latest/configuration/#server for more info on the server configuration.",
          "properties": {
            "grpc_listen_port": {
              "default": 9095,
              "required": [],
              "title": "grpc_listen_port",
              "type": "integer"
            },
            "http_listen_port": {
              "default": 3100,
              "required": [],
              "title": "http_listen_port",
              "type": "integer"
            },
            "http_server_read_timeout": {
              "default": "600s",
              "required": [],
              "title": "http_server_read_timeout",
              "type": "string"
            },
            "http_server_write_timeout": {
              "default": "600s",
              "required": [],
              "title": "http_server_write_timeout",
              "type": "string"
            }
          },
          "required": [],
          "title": "server",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Common annotations for all services",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Common labels for all services",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "singleBinary": {
          "additionalProperties": true,
          "properties": {
            "drivesPerNode": {
              "default": 1,
              "required": [],
              "title": "drivesPerNode",
              "type": "integer"
            },
            "persistence": {
              "additionalProperties": true,
              "properties": {
                "accessModes": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "enabled": {
                  "default": true,
                  "description": "Enabled persistence for loki",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "size": {
                  "default": "2Gi",
                  "description": "Size of loki local storage volume",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClass": {
                  "default": "openebs-loki-localpv",
                  "description": "Storage class for loki storage",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "replicas": {
              "default": 3,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "singleBinary",
          "type": "object"
        },
        "storage": {
          "additionalProperties": true,
          "description": "Storage config. Providing this will automatically populate all necessary storage configs in the templated config.\nIn case of using thanos storage, enable use_thanos_objstore and the configuration should be done inside the object_store section.",
          "properties": {
            "azure": {
              "additionalProperties": true,
              "properties": {
                "accountKey": {
                  "default": "null",
                  "required": [],
                  "title": "accountKey",
                  "type": "null"
                },
                "accountName": {
                  "default": "null",
                  "required": [],
                  "title": "accountName",
                  "type": "null"
                },
                "chunkDelimiter": {
                  "default": "null",
                  "required": [],
                  "title": "chunkDelimiter",
                  "type": "null"
                },
                "connectionString": {
                  "default": "null",
                  "required": [],
                  "title": "connectionString",
                  "type": "null"
                },
                "endpointSuffix": {
                  "default": "null",
                  "required": [],
                  "title": "endpointSuffix",
                  "type": "null"
                },
                "requestTimeout": {
                  "default": "null",
                  "required": [],
                  "title": "requestTimeout",
                  "type": "null"
                },
                "useFederatedToken": {
                  "default": false,
                  "required": [],
                  "title": "useFederatedToken",
                  "type": "boolean"
                },
                "useManagedIdentity": {
                  "default": false,
                  "required": [],
                  "title": "useManagedIdentity",
                  "type": "boolean"
                },
                "userAssignedId": {
                  "default": "null",
                  "required": [],
                  "title": "userAssignedId",
                  "type": "null"
                }
              },
              "required": [],
              "title": "azure",
              "type": "object"
            },
            "bucketNames": {
              "additionalProperties": true,
              "description": "Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.\nPlease provide these values if you are using object storage.",
              "properties": {
                "admin": {
                  "required": [],
                  "title": "admin",
                  "type": "string"
                },
                "chunks": {
                  "required": [],
                  "title": "chunks",
                  "type": "string"
                },
                "ruler": {
                  "required": [],
                  "title": "ruler",
                  "type": "string"
                }
              },
              "required": [],
              "title": "bucketNames",
              "type": "object"
            },
            "filesystem": {
              "additionalProperties": true,
              "properties": {
                "admin_api_directory": {
                  "default": "/var/loki/admin",
                  "required": [],
                  "title": "admin_api_directory",
                  "type": "string"
                },
                "chunks_directory": {
                  "default": "/var/loki/chunks",
                  "required": [],
                  "title": "chunks_directory",
                  "type": "string"
                },
                "rules_directory": {
                  "default": "/var/loki/rules",
                  "required": [],
                  "title": "rules_directory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "filesystem",
              "type": "object"
            },
            "gcs": {
              "additionalProperties": true,
              "properties": {
                "chunkBufferSize": {
                  "default": 0,
                  "required": [],
                  "title": "chunkBufferSize",
                  "type": "integer"
                },
                "enableHttp2": {
                  "default": true,
                  "required": [],
                  "title": "enableHttp2",
                  "type": "boolean"
                },
                "requestTimeout": {
                  "default": "0s",
                  "required": [],
                  "title": "requestTimeout",
                  "type": "string"
                }
              },
              "required": [],
              "title": "gcs",
              "type": "object"
            },
            "object_store": {
              "additionalProperties": true,
              "properties": {
                "azure": {
                  "additionalProperties": true,
                  "description": "Azure configuration (when type is \"azure\")",
                  "properties": {
                    "account_key": {
                      "default": "null",
                      "description": "Optional storage account key",
                      "required": [],
                      "title": "account_key",
                      "type": "null"
                    },
                    "account_name": {
                      "default": "null",
                      "description": "Storage account name",
                      "required": [],
                      "title": "account_name",
                      "type": "null"
                    }
                  },
                  "required": [],
                  "title": "azure",
                  "type": "object"
                },
                "gcs": {
                  "additionalProperties": true,
                  "description": "GCS configuration (when type is \"gcs\")",
                  "properties": {
                    "bucket_name": {
                      "default": "null",
                      "description": "Name of the bucket",
                      "required": [],
                      "title": "bucket_name",
                      "type": "null"
                    },
                    "service_account": {
                      "default": "null",
                      "description": "Optional service account JSON",
                      "required": [],
                      "title": "service_account",
                      "type": "null"
                    }
                  },
                  "required": [],
                  "title": "gcs",
                  "type": "object"
                },
                "s3": {
                  "additionalProperties": true,
                  "description": "S3 configuration (when type is \"s3\")",
                  "properties": {
                    "access_key_id": {
                      "default": "null",
                      "description": "Optional access key",
                      "required": [],
                      "title": "access_key_id",
                      "type": "null"
                    },
                    "endpoint": {
                      "default": "null",
                      "description": "S3 endpoint URL",
                      "required": [],
                      "title": "endpoint",
                      "type": "null"
                    },
                    "http": {
                      "additionalProperties": true,
                      "description": "Optional HTTP client configuration",
                      "properties": {
                        "tls_config": {
                          "additionalProperties": true,
                          "properties": {
                            "insecure_skip_verify": {
                              "required": [],
                              "title": "insecure_skip_verify",
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "tls_config",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "http",
                      "type": "object"
                    },
                    "insecure": {
                      "default": false,
                      "description": "Optional. Enable if using self-signed TLS",
                      "required": [],
                      "title": "insecure",
                      "type": "boolean"
                    },
                    "region": {
                      "default": "null",
                      "description": "Optional region",
                      "required": [],
                      "title": "region",
                      "type": "null"
                    },
                    "secret_access_key": {
                      "default": "null",
                      "description": "Optional secret key",
                      "required": [],
                      "title": "secret_access_key",
                      "type": "null"
                    },
                    "sse": {
                      "additionalProperties": true,
                      "description": "Optional server-side encryption configuration",
                      "required": [],
                      "title": "sse",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "s3",
                  "type": "object"
                },
                "storage_prefix": {
                  "default": "null",
                  "description": "Optional prefix for storage keys",
                  "required": [],
                  "title": "storage_prefix",
                  "type": "null"
                },
                "type": {
                  "default": "s3",
                  "description": "Type of object store. Valid options are: s3, gcs, azure",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "object_store",
              "type": "object"
            },
            "s3": {
              "additionalProperties": true,
              "properties": {
                "accessKeyId": {
                  "default": "null",
                  "required": [],
                  "title": "accessKeyId",
                  "type": "null"
                },
                "backoff_config": {
                  "additionalProperties": true,
                  "description": "Check https://grafana.com/docs/loki/latest/configure/#s3_storage_config for more info on how to provide a backoff_config",
                  "required": [],
                  "title": "backoff_config",
                  "type": "object"
                },
                "disable_dualstack": {
                  "default": false,
                  "required": [],
                  "title": "disable_dualstack",
                  "type": "boolean"
                },
                "endpoint": {
                  "default": "null",
                  "required": [],
                  "title": "endpoint",
                  "type": "null"
                },
                "http_config": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "http_config",
                  "type": "object"
                },
                "insecure": {
                  "default": false,
                  "required": [],
                  "title": "insecure",
                  "type": "boolean"
                },
                "region": {
                  "default": "null",
                  "required": [],
                  "title": "region",
                  "type": "null"
                },
                "s3": {
                  "default": "null",
                  "required": [],
                  "title": "s3",
                  "type": "null"
                },
                "s3ForcePathStyle": {
                  "default": false,
                  "required": [],
                  "title": "s3ForcePathStyle",
                  "type": "boolean"
                },
                "secretAccessKey": {
                  "default": "null",
                  "required": [],
                  "title": "secretAccessKey",
                  "type": "null"
                },
                "signatureVersion": {
                  "default": "null",
                  "required": [],
                  "title": "signatureVersion",
                  "type": "null"
                }
              },
              "required": [],
              "title": "s3",
              "type": "object"
            },
            "swift": {
              "additionalProperties": true,
              "properties": {
                "auth_url": {
                  "default": "null",
                  "required": [],
                  "title": "auth_url",
                  "type": "null"
                },
                "auth_version": {
                  "default": "null",
                  "required": [],
                  "title": "auth_version",
                  "type": "null"
                },
                "connect_timeout": {
                  "default": "null",
                  "required": [],
                  "title": "connect_timeout",
                  "type": "null"
                },
                "container_name": {
                  "default": "null",
                  "required": [],
                  "title": "container_name",
                  "type": "null"
                },
                "domain_id": {
                  "default": "null",
                  "required": [],
                  "title": "domain_id",
                  "type": "null"
                },
                "domain_name": {
                  "default": "null",
                  "required": [],
                  "title": "domain_name",
                  "type": "null"
                },
                "internal": {
                  "default": "null",
                  "required": [],
                  "title": "internal",
                  "type": "null"
                },
                "max_retries": {
                  "default": "null",
                  "required": [],
                  "title": "max_retries",
                  "type": "null"
                },
                "password": {
                  "default": "null",
                  "required": [],
                  "title": "password",
                  "type": "null"
                },
                "project_domain_id": {
                  "default": "null",
                  "required": [],
                  "title": "project_domain_id",
                  "type": "null"
                },
                "project_domain_name": {
                  "default": "null",
                  "required": [],
                  "title": "project_domain_name",
                  "type": "null"
                },
                "project_id": {
                  "default": "null",
                  "required": [],
                  "title": "project_id",
                  "type": "null"
                },
                "project_name": {
                  "default": "null",
                  "required": [],
                  "title": "project_name",
                  "type": "null"
                },
                "region_name": {
                  "default": "null",
                  "required": [],
                  "title": "region_name",
                  "type": "null"
                },
                "request_timeout": {
                  "default": "null",
                  "required": [],
                  "title": "request_timeout",
                  "type": "null"
                },
                "user_domain_id": {
                  "default": "null",
                  "required": [],
                  "title": "user_domain_id",
                  "type": "null"
                },
                "user_domain_name": {
                  "default": "null",
                  "required": [],
                  "title": "user_domain_name",
                  "type": "null"
                },
                "user_id": {
                  "default": "null",
                  "required": [],
                  "title": "user_id",
                  "type": "null"
                },
                "username": {
                  "default": "null",
                  "required": [],
                  "title": "username",
                  "type": "null"
                }
              },
              "required": [],
              "title": "swift",
              "type": "object"
            },
            "type": {
              "default": "s3",
              "description": "Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.\nPlease provide these values if you are using object storage.\nbucketNames:\n  chunks: FIXME\n  ruler: FIXME\n  admin: FIXME",
              "required": [],
              "title": "type",
              "type": "string"
            },
            "use_thanos_objstore": {
              "default": false,
              "description": "Loki now supports using thanos storage clients for connecting to object storage backend.\nThis will become the default way to configure storage in a future releases.",
              "required": [],
              "title": "use_thanos_objstore",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "storage",
          "type": "object"
        },
        "storage_config": {
          "additionalProperties": true,
          "description": "Additional storage config",
          "properties": {
            "bloom_shipper": {
              "additionalProperties": true,
              "properties": {
                "working_directory": {
                  "default": "/var/loki/data/bloomshipper",
                  "required": [],
                  "title": "working_directory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "bloom_shipper",
              "type": "object"
            },
            "boltdb_shipper": {
              "additionalProperties": true,
              "properties": {
                "index_gateway_client": {
                  "additionalProperties": true,
                  "properties": {
                    "server_address": {
                      "default": "{{ include \"loki.indexGatewayAddress\" . }}",
                      "required": [],
                      "title": "server_address",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "index_gateway_client",
                  "type": "object"
                }
              },
              "required": [],
              "title": "boltdb_shipper",
              "type": "object"
            },
            "hedging": {
              "additionalProperties": true,
              "properties": {
                "at": {
                  "default": "250ms",
                  "required": [],
                  "title": "at",
                  "type": "string"
                },
                "max_per_second": {
                  "default": 20,
                  "required": [],
                  "title": "max_per_second",
                  "type": "integer"
                },
                "up_to": {
                  "default": 3,
                  "required": [],
                  "title": "up_to",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "hedging",
              "type": "object"
            },
            "tsdb_shipper": {
              "additionalProperties": true,
              "properties": {
                "index_gateway_client": {
                  "additionalProperties": true,
                  "properties": {
                    "server_address": {
                      "default": "{{ include \"loki.indexGatewayAddress\" . }}",
                      "required": [],
                      "title": "server_address",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "index_gateway_client",
                  "type": "object"
                }
              },
              "required": [],
              "title": "tsdb_shipper",
              "type": "object"
            }
          },
          "required": [],
          "title": "storage_config",
          "type": "object"
        },
        "structuredConfig": {
          "additionalProperties": true,
          "description": "Structured loki configuration, takes precedence over `loki.config`, `loki.schemaConfig`, `loki.storageConfig`",
          "required": [],
          "title": "structuredConfig",
          "type": "object"
        },
        "tenants": {
          "description": "Tenants list to be created on nginx htpasswd file, with name and password keys",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tenants",
          "type": "array"
        },
        "test": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "test",
          "type": "object"
        },
        "testSchemaConfig": {
          "additionalProperties": true,
          "properties": {
            "configs": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "from": {
                    "default": "2024-04-01",
                    "required": [],
                    "title": "from",
                    "type": "string"
                  },
                  "index": {
                    "additionalProperties": true,
                    "properties": {
                      "period": {
                        "default": "24h",
                        "required": [],
                        "title": "period",
                        "type": "string"
                      },
                      "prefix": {
                        "default": "index_",
                        "required": [],
                        "title": "prefix",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "index",
                    "type": "object"
                  },
                  "object_store": {
                    "default": "{{ include \"loki.testSchemaObjectStore\" . }}",
                    "required": [],
                    "title": "object_store",
                    "type": "string"
                  },
                  "schema": {
                    "default": "v13",
                    "required": [],
                    "title": "schema",
                    "type": "string"
                  },
                  "store": {
                    "default": "tsdb",
                    "required": [],
                    "title": "store",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "configs",
              "type": "array"
            }
          },
          "required": [],
          "title": "testSchemaConfig",
          "type": "object"
        },
        "tracing": {
          "additionalProperties": true,
          "description": "Enable tracing",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "tracing",
          "type": "object"
        },
        "ui": {
          "additionalProperties": true,
          "description": " Optional Loki UI: Provides access to a operators UI for Loki distributed. When enabled UI will be available at /ui/ of loki-gateway",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Disabled by default for backwards compatibility. Enable to use the Loki UI.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "gateway": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "enable gateway proxying to UI under /ui",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "gateway",
              "type": "object"
            }
          },
          "required": [],
          "title": "ui",
          "type": "object"
        },
        "useTestSchema": {
          "default": false,
          "description": "a real Loki install requires a proper schemaConfig defined above this, however for testing or playing around\nyou can enable useTestSchema",
          "required": [],
          "title": "useTestSchema",
          "type": "boolean"
        },
        "write": {
          "additionalProperties": true,
          "properties": {
            "replicas": {
              "default": 0,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "write",
          "type": "object"
        }
      },
      "required": [],
      "title": "loki",
      "type": "object"
    },
    "lokiCanary": {
      "additionalProperties": true,
      "description": "The Loki canary pushes logs to and queries from this loki installation to test\nthat it's working correctly",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the `loki-canary` Daemonset",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for canary pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI arguments for the `loki-canary' command",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the canary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the canary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the canary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the canary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": "Image to use for loki canary",
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/loki-canary",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "null",
              "description": "Overrides the image tag whose default is the chart's appVersion",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "labelname": {
          "default": "pod",
          "description": "The name of the label to look for at loki when doing the checks.",
          "required": [],
          "title": "labelname",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for canary pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for each `loki-canary` pod",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for loki-canary pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "push": {
          "default": true,
          "description": "If true, the canary will send directly to Loki via the address configured for verification --\nIf false, it will write to stdout and an Agent will be needed to scrape and send the logs --",
          "required": [],
          "title": "push",
          "type": "boolean"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the canary",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for loki-canary Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for loki-canary Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "description": "Tolerations for canary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "Update strategy for the `loki-canary` Daemonset pods",
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxUnavailable": {
                  "default": 1,
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "lokiCanary",
      "type": "object"
    },
    "lvm-localpv": {
      "additionalProperties": true,
      "description": "Refer to https://github.com/openebs/lvm-localpv/blob/lvm-localpv-1.6.2/deploy/helm/charts/values.yaml for complete set of values.",
      "properties": {
        "crds": {
          "additionalProperties": true,
          "properties": {
            "csi": {
              "additionalProperties": true,
              "properties": {
                "volumeSnapshots": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "volumeSnapshots",
                  "type": "object"
                }
              },
              "required": [],
              "title": "csi",
              "type": "object"
            },
            "lvmLocalPv": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "lvmLocalPv",
              "type": "object"
            }
          },
          "required": [],
          "title": "crds",
          "type": "object"
        }
      },
      "required": [],
      "title": "lvm-localpv",
      "type": "object"
    },
    "lvmController": {
      "additionalProperties": true,
      "description": "lvmController contains the configurables for\nthe lvm controller deployment",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "componentName": {
          "default": "openebs-lvm-controller",
          "required": [],
          "title": "componentName",
          "type": "string"
        },
        "kubeClientRateLimiter": {
          "additionalProperties": true,
          "description": "Configure kubernetes client API requests rate.",
          "properties": {
            "burst": {
              "default": 0,
              "description": "Configure the maximum number of queries allowed after\naccounting for rolled over qps from previous seconds.",
              "required": [],
              "title": "burst",
              "type": "integer"
            },
            "qps": {
              "default": 0,
              "description": "Configure the number of queries per second.",
              "required": [],
              "title": "qps",
              "type": "integer"
            }
          },
          "required": [],
          "title": "kubeClientRateLimiter",
          "type": "object"
        },
        "logLevel": {
          "default": 5,
          "required": [],
          "title": "logLevel",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "   limits:\n     cpu: 10m\n     memory: 32Mi\n   requests:\n     cpu: 10m\n     memory: 32Mi\n# Labels to be added to openebs-lvm controller pods",
          "properties": {
            "name": {
              "default": "openebs-lvm-controller",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClass": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "lvm-localpv-csi-controller-critical",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "priorityClass",
          "type": "object"
        },
        "provisioner": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-provisioner",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v5.2.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-provisioner",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "provisioner",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resizer": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-resizer",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v1.11.2",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-resizer",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "resizer",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "snapshotController": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/snapshot-controller",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v7.0.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "snapshot-controller",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "snapshotController",
          "type": "object"
        },
        "snapshotter": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-snapshotter",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v7.0.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-snapshotter",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "snapshotter",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "lvmController",
      "type": "object"
    },
    "lvmLocalPv": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Install lvm-localpv CRDs",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "keep": {
          "default": true,
          "description": "Keep CRDs on chart uninstall",
          "required": [],
          "title": "keep",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "lvmLocalPv",
      "type": "object"
    },
    "lvmNode": {
      "additionalProperties": true,
      "description": "lvmNode contains the configurables for\nthe lvm node daemonset",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "componentName": {
          "default": "openebs-lvm-node",
          "required": [],
          "title": "componentName",
          "type": "string"
        },
        "driverRegistrar": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-node-driver-registrar",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v2.13.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-node-driver-registrar",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "driverRegistrar",
          "type": "object"
        },
        "hostNetwork": {
          "default": false,
          "description": "Disable or enable the use of hostNetwork for the lvm node daemonset.",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "kubeClientRateLimiter": {
          "additionalProperties": true,
          "description": "Configure kubernetes client API requests rate.",
          "properties": {
            "burst": {
              "default": 0,
              "description": "Configure the maximum number of queries allowed after\naccounting for rolled over qps from previous seconds.",
              "required": [],
              "title": "burst",
              "type": "integer"
            },
            "qps": {
              "default": 0,
              "description": "Configure the number of queries per second.",
              "required": [],
              "title": "qps",
              "type": "integer"
            }
          },
          "required": [],
          "title": "kubeClientRateLimiter",
          "type": "object"
        },
        "kubeletDir": {
          "default": "/var/lib/kubelet/",
          "description": "This can be configured to run on various different k8s distributions like\nmicrok8s where kubelet dir is different",
          "required": [],
          "title": "kubeletDir",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "logLevel": {
          "default": 5,
          "required": [],
          "title": "logLevel",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "   limits:\n     cpu: 10m\n     memory: 32Mi\n   requests:\n     cpu: 10m\n     memory: 32Mi\n# Labels to be added to openebs-lvm node pods",
          "properties": {
            "app": {
              "default": "openebs-lvm-node",
              "required": [],
              "title": "app",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClass": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "lvm-localpv-csi-node-critical",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "priorityClass",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "lvmNode",
      "type": "object"
    },
    "lvmPlugin": {
      "additionalProperties": true,
      "description": "lvmPlugin is the common csi container used by the\ncontroller deployment and node daemonset",
      "properties": {
        "allowedTopologies": {
          "default": "kubernetes.io/hostname,",
          "description": "Comma seperated list of k8s worker node topologies",
          "required": [],
          "title": "allowedTopologies",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "",
              "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "openebs/lvm-driver",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.7.0",
              "description": "Overrides the image tag whose default is the chart appVersion.",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "ioLimits": {
          "additionalProperties": true,
          "properties": {
            "containerRuntime": {
              "default": "containerd",
              "required": [],
              "title": "containerRuntime",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "readIopsPerGB": {
              "default": "",
              "required": [],
              "title": "readIopsPerGB",
              "type": "string"
            },
            "writeIopsPerGB": {
              "default": "",
              "required": [],
              "title": "writeIopsPerGB",
              "type": "string"
            }
          },
          "required": [],
          "title": "ioLimits",
          "type": "object"
        },
        "metricsPort": {
          "default": 9500,
          "description": "The TCP port number used for exposing lvm-metrics.\nIf not set, service will not be created to expose metrics endpoint\nto serviceMonitor andlisten-address flag will not be set.",
          "required": [],
          "title": "metricsPort",
          "type": "integer"
        },
        "name": {
          "default": "openebs-lvm-plugin",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "lvmPlugin",
      "type": "object"
    },
    "makeBucketJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job makeBucketJob",
      "properties": {
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "makeBucketJob",
      "type": "object"
    },
    "makePolicyJob": {
      "additionalProperties": true,
      "description": "# writeexamplepolicy policy grants creation or deletion of buckets with name\n# starting with example. In addition, grants objects write permissions on buckets starting with\n# example.\n- name: writeexamplepolicy\n  statements:\n    - effect: Allow  # this is the default\n      resources:\n        - 'arn:aws:s3:::example*/*'\n      actions:\n        - \"s3:AbortMultipartUpload\"\n        - \"s3:GetObject\"\n        - \"s3:DeleteObject\"\n        - \"s3:PutObject\"\n        - \"s3:ListMultipartUploadParts\"\n    - resources:\n        - 'arn:aws:s3:::example*'\n      actions:\n        - \"s3:CreateBucket\"\n        - \"s3:DeleteBucket\"\n        - \"s3:GetBucketLocation\"\n        - \"s3:ListBucket\"\n        - \"s3:ListBucketMultipartUploads\"\n# readonlyexamplepolicy policy grants access to buckets with name starting with example.\n# In addition, grants objects read permissions on buckets starting with example.\n- name: readonlyexamplepolicy\n  statements:\n    - resources:\n        - 'arn:aws:s3:::example*/*'\n      actions:\n        - \"s3:GetObject\"\n    - resources:\n        - 'arn:aws:s3:::example*'\n      actions:\n        - \"s3:GetBucketLocation\"\n        - \"s3:ListBucket\"\n        - \"s3:ListBucketMultipartUploads\"\n# conditionsexample policy creates all access to example bucket with aws:username=\"johndoe\" and source ip range 10.0.0.0/8 and 192.168.0.0/24 only\n- name: conditionsexample\n  statements:\n    - resources:\n      - 'arn:aws:s3:::example/*'\n      actions:\n      - 's3:*'\n      conditions:\n        - StringEquals: '\"aws:username\": \"johndoe\"'\n        - IpAddress: |\n            \"aws:SourceIp\": [\n              \"10.0.0.0/8\",\n              \"192.168.0.0/24\"\n            ]\n\n# Additional Annotations for the Kubernetes Job makePolicyJob",
      "properties": {
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "makePolicyJob",
      "type": "object"
    },
    "makeServiceAccountJob": {
      "additionalProperties": true,
      "properties": {
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "makeServiceAccountJob",
      "type": "object"
    },
    "makeUserJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job makeUserJob",
      "properties": {
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "makeUserJob",
      "type": "object"
    },
    "maxProcs": {
      "default": "",
      "description": "#\n# Go code simultaneously by setting GOMAXPROCS environment variable\n# ref: https://golang.org/pkg/runtime\n#",
      "required": [],
      "title": "maxProcs",
      "type": "string"
    },
    "mayastor": {
      "additionalProperties": true,
      "description": "Refer to https://github.com/openebs/mayastor-extensions/blob/v2.8.0/chart/values.yaml for complete set of values.",
      "properties": {
        "alloy": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "alloy",
          "type": "object"
        },
        "crds": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "crds",
          "type": "object"
        },
        "csi": {
          "additionalProperties": true,
          "properties": {
            "node": {
              "additionalProperties": true,
              "properties": {
                "initContainers": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "initContainers",
                  "type": "object"
                }
              },
              "required": [],
              "title": "node",
              "type": "object"
            }
          },
          "required": [],
          "title": "csi",
          "type": "object"
        },
        "etcd": {
          "additionalProperties": true,
          "properties": {
            "clusterDomain": {
              "default": "cluster.local",
              "description": "Kubernetes Cluster Domain",
              "required": [],
              "title": "clusterDomain",
              "type": "string"
            }
          },
          "required": [],
          "title": "etcd",
          "type": "object"
        },
        "localpv-provisioner": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "localpv-provisioner",
          "type": "object"
        },
        "loki": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "loki",
          "type": "object"
        }
      },
      "required": [],
      "title": "mayastor",
      "type": "object"
    },
    "mcImage": {
      "additionalProperties": true,
      "description": "# Set default image, imageTag, and imagePullPolicy for the `mc` (the minio\n# client used to create a default bucket).\n#",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "quay.io/minio/mc",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "RELEASE.2024-11-21T17-21-54Z",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "mcImage",
      "type": "object"
    },
    "memberlist": {
      "additionalProperties": true,
      "description": "Configuration for the memberlist service",
      "properties": {
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "publishNotReadyAddresses": {
              "default": false,
              "required": [],
              "title": "publishNotReadyAddresses",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "memberlist",
      "type": "object"
    },
    "memcached": {
      "additionalProperties": true,
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for memcached containers",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Memcached Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "memcached",
              "description": "Memcached Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.6.38-alpine",
              "description": "Memcached Docker image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext override for memcached pods",
          "properties": {
            "fsGroup": {
              "default": 11211,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 11211,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 11211,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for memcached pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        }
      },
      "required": [],
      "title": "memcached",
      "type": "object"
    },
    "memcachedExporter": {
      "additionalProperties": true,
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for memcached exporter containers",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "Whether memcached metrics should be exported",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": "Extra args to add to the exporter container.\nExample:\nextraArgs:\n  memcached.tls.enable: true\n  memcached.tls.cert-file: /certs/cert.crt\n  memcached.tls.key-file: /certs/cert.key\n  memcached.tls.ca-file: /certs/ca.crt\n  memcached.tls.insecure-skip-verify: false\n  memcached.tls.server-name: memcached",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "prom/memcached-exporter",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.15.2",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        }
      },
      "required": [],
      "title": "memcachedExporter",
      "type": "object"
    },
    "metrics": {
      "additionalProperties": true,
      "description": "#\n#",
      "properties": {
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "#\n#",
          "properties": {
            "prometheus.io/port": {
              "default": "{{ .Values.containerPorts.client }}",
              "required": [],
              "title": "prometheus.io/port",
              "type": "string"
            },
            "prometheus.io/scrape": {
              "default": "true",
              "required": [],
              "title": "prometheus.io/scrape",
              "type": "string"
            }
          },
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podMonitor": {
          "additionalProperties": true,
          "description": "# Prometheus Service Monitor\n# ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n#",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "#\n# ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "30s",
              "description": "#\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "namespace": {
              "default": "monitoring",
              "description": "#\n#",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "relabelings": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "description": "#\n#",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "30s",
              "description": "#\n#",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "#\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#tlsconfig\n# e.g:\n# tlsConfig:\n#   ca:\n#     secret:\n#       name: existingSecretName\n#",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "podMonitor",
          "type": "object"
        },
        "prometheusRule": {
          "additionalProperties": true,
          "description": "# Prometheus Operator PrometheusRule configuration\n#",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "#\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "namespace": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "rules": {
              "description": "#\n- alert: ETCD has no leader\n  annotations:\n    summary: \"ETCD has no leader\"\n    description: \"pod {{`{{`}} $labels.pod {{`}}`}} state error, can't connect leader\"\n  for: 1m\n  expr: etcd_server_has_leader == 0\n  labels:\n    severity: critical\n    group: PaaS\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "rules",
              "type": "array"
            }
          },
          "required": [],
          "title": "prometheusRule",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "includeNode": {
              "default": false,
              "description": "scrape each node/pod individually for additional metrics",
              "required": [],
              "title": "includeNode",
              "type": "boolean"
            },
            "interval": {
              "default": "~",
              "description": "Scrape interval, for example `interval: 30s`",
              "required": [],
              "title": "interval",
              "type": "null"
            },
            "namespace": {
              "default": "~",
              "description": "metricRelabelings:\n  - regex: (server|pod)\n    action: labeldrop",
              "required": [],
              "title": "namespace",
              "type": "null"
            },
            "public": {
              "default": true,
              "required": [],
              "title": "public",
              "type": "boolean"
            },
            "relabelConfigs": {
              "additionalProperties": true,
              "description": "for node metrics",
              "required": [],
              "title": "relabelConfigs",
              "type": "object"
            },
            "relabelConfigsCluster": {
              "additionalProperties": true,
              "description": "for cluster metrics",
              "required": [],
              "title": "relabelConfigsCluster",
              "type": "object"
            },
            "scrapeTimeout": {
              "default": "~",
              "description": "Scrape timeout, for example `scrapeTimeout: 10s`",
              "required": [],
              "title": "scrapeTimeout",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "metrics",
      "type": "object"
    },
    "metricsPort": {
      "default": 8383,
      "required": [],
      "title": "metricsPort",
      "type": "integer"
    },
    "migrate": {
      "additionalProperties": true,
      "description": "Options that may be necessary when performing a migration from another helm chart",
      "properties": {
        "fromDistributed": {
          "additionalProperties": true,
          "description": "When migrating from a distributed chart like loki-distributed or enterprise-logs",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Set to true if migrating from a distributed helm chart",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "memberlistService": {
              "default": "",
              "description": "If migrating from a distributed service, provide the distributed deployment's\nmemberlist service DNS so the new deployment can join its ring.",
              "required": [],
              "title": "memberlistService",
              "type": "string"
            }
          },
          "required": [],
          "title": "fromDistributed",
          "type": "object"
        }
      },
      "required": [],
      "title": "migrate",
      "type": "object"
    },
    "minReadySeconds": {
      "default": 10,
      "required": [],
      "title": "minReadySeconds",
      "type": "integer"
    },
    "minio": {
      "additionalProperties": true,
      "description": "Configuration for the minio subchart",
      "properties": {
        "address": {
          "default": "null",
          "description": "Allow the address used by Loki to refer to Minio to be overridden",
          "required": [],
          "title": "address",
          "type": "null"
        },
        "buckets": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "default": "admin",
                "required": [],
                "title": "name",
                "type": "string"
              },
              "policy": {
                "default": "none",
                "required": [],
                "title": "policy",
                "type": "string"
              },
              "purge": {
                "default": false,
                "required": [],
                "title": "purge",
                "type": "boolean"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "buckets",
          "type": "array"
        },
        "drivesPerNode": {
          "default": 2,
          "description": "Minio requires 2 to 16 drives for erasure code (drivesPerNode * replicas)\nhttps://docs.min.io/docs/minio-erasure-code-quickstart-guide\nSince we only have 1 replica, that means 2 drives must be used.",
          "required": [],
          "title": "drivesPerNode",
          "type": "integer"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "size": {
              "default": "5Gi",
              "required": [],
              "title": "size",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rootPassword": {
          "default": "supersecretpassword",
          "required": [],
          "title": "rootPassword",
          "type": "string"
        },
        "rootUser": {
          "default": "root-user",
          "description": "root user; not used for GEL authentication",
          "required": [],
          "title": "rootUser",
          "type": "string"
        },
        "users": {
          "description": "The first user in the list below is used for Loki/GEL authentication.\nYou can add additional users if desired; they will not impact Loki/GEL.\n`accessKey` = username, `secretKey` = password",
          "items": {
            "additionalProperties": true,
            "properties": {
              "accessKey": {
                "default": "logs-user",
                "required": [],
                "title": "accessKey",
                "type": "string"
              },
              "policy": {
                "default": "readwrite",
                "required": [],
                "title": "policy",
                "type": "string"
              },
              "secretKey": {
                "default": "supersecretpassword",
                "required": [],
                "title": "secretKey",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "users",
          "type": "array"
        }
      },
      "required": [],
      "title": "minio",
      "type": "object"
    },
    "minioAPIPort": {
      "default": "9000",
      "description": "# Internal port number for MinIO S3 API container\n# Change service.port to change external port number",
      "required": [],
      "title": "minioAPIPort",
      "type": "string"
    },
    "minioConsolePort": {
      "default": "9001",
      "description": "# Internal port number for MinIO Browser Console container\n# Change consoleService.port to change external port number",
      "required": [],
      "title": "minioConsolePort",
      "type": "string"
    },
    "mode": {
      "default": "distributed",
      "description": "# minio mode, i.e. standalone or distributed",
      "required": [],
      "title": "mode",
      "type": "string"
    },
    "monitoring": {
      "additionalProperties": true,
      "description": "DEPRECATED Monitoring section determines which monitoring features to enable, this section is being replaced\nby https://github.com/grafana/meta-monitoring-chart",
      "properties": {
        "dashboards": {
          "additionalProperties": true,
          "description": "Dashboards for monitoring Loki",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Additional annotations for the dashboards ConfigMap",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "If enabled, create configmap with dashboards for monitoring Loki",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for the dashboards ConfigMap",
              "properties": {
                "grafana_dashboard": {
                  "default": "1",
                  "required": [],
                  "title": "grafana_dashboard",
                  "type": "string"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "namespace": {
              "default": "null",
              "description": "Alternative namespace to create dashboards ConfigMap in",
              "required": [],
              "title": "namespace",
              "type": "null"
            }
          },
          "required": [],
          "title": "dashboards",
          "type": "object"
        },
        "enabled": {
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "lokiCanary": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "lokiCanary",
          "type": "object"
        },
        "rules": {
          "additionalProperties": true,
          "description": "DEPRECATED Recording rules for monitoring Loki, required for some dashboards",
          "properties": {
            "additionalGroups": {
              "description": "Additional groups to add to the rules file",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalGroups",
              "type": "array"
            },
            "additionalRuleLabels": {
              "additionalProperties": true,
              "description": "Additional labels for PrometheusRule alerts",
              "required": [],
              "title": "additionalRuleLabels",
              "type": "object"
            },
            "alerting": {
              "default": true,
              "description": "Include alerting rules",
              "required": [],
              "title": "alerting",
              "type": "boolean"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Additional annotations for the rules PrometheusRule resource",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "disabled": {
              "additionalProperties": true,
              "description": "Specify which individual alerts should be disabled\nInstead of turning off each alert one by one, set the .monitoring.rules.alerting value to false instead.\nIf you disable all the alerts and keep .monitoring.rules.alerting set to true, the chart will fail to render.",
              "required": [],
              "title": "disabled",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "If enabled, create PrometheusRule resource with Loki recording rules",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for the rules PrometheusRule resource",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "namespace": {
              "default": "null",
              "description": " LokiRequestErrors: true\n LokiRequestPanics: true\nAlternative namespace to create PrometheusRule resources in",
              "required": [],
              "title": "namespace",
              "type": "null"
            }
          },
          "required": [],
          "title": "rules",
          "type": "object"
        },
        "selfMonitoring": {
          "additionalProperties": true,
          "description": "DEPRECATED Self monitoring determines whether Loki should scrape its own logs.\nThis feature currently relies on the Grafana Agent Operator being installed,\nwhich is installed by default using the grafana-agent-operator sub-chart.\nIt will create custom resources for GrafanaAgent, LogsInstance, and PodLogs to configure\nscrape configs to scrape its own logs with the labels expected by the included dashboards.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "grafanaAgent": {
              "additionalProperties": true,
              "description": "DEPRECATED Grafana Agent configuration",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Grafana Agent annotations",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enableConfigReadAPI": {
                  "default": false,
                  "description": "Enable the config read api on port 8080 of the agent",
                  "required": [],
                  "title": "enableConfigReadAPI",
                  "type": "boolean"
                },
                "installOperator": {
                  "default": false,
                  "description": "DEPRECATED Controls whether to install the Grafana Agent Operator and its CRDs.\nNote that helm will not install CRDs if this flag is enabled during an upgrade.\nIn that case install the CRDs manually from https://github.com/grafana/agent/tree/main/production/operator/crds",
                  "required": [],
                  "title": "installOperator",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Additional Grafana Agent labels",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "priorityClassName": {
                  "default": "null",
                  "description": "The name of the PriorityClass for GrafanaAgent pods",
                  "required": [],
                  "title": "priorityClassName",
                  "type": "null"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "Resource requests and limits for the grafanaAgent pods",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "tolerations": {
                  "description": "  limits:\n    memory: 200Mi\n  requests:\n    cpu: 50m\n    memory: 100Mi\nTolerations for GrafanaAgent pods",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tolerations",
                  "type": "array"
                }
              },
              "required": [],
              "title": "grafanaAgent",
              "type": "object"
            },
            "logsInstance": {
              "additionalProperties": true,
              "description": "LogsInstance configuration",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "LogsInstance annotations",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "clients": {
                  "default": "null",
                  "description": "Additional clients for remote write",
                  "required": [],
                  "title": "clients",
                  "type": "null"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Additional LogsInstance labels",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "logsInstance",
              "type": "object"
            },
            "podLogs": {
              "additionalProperties": true,
              "description": "PodLogs configuration",
              "properties": {
                "additionalPipelineStages": {
                  "description": "Additional pipeline stages to process logs after scraping\nhttps://grafana.com/docs/agent/latest/operator/api/#pipelinestagespec-a-namemonitoringgrafanacomv1alpha1pipelinestagespeca",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalPipelineStages",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": true,
                  "description": "PodLogs annotations",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "apiVersion": {
                  "default": "monitoring.grafana.com/v1alpha1",
                  "description": "PodLogs version",
                  "required": [],
                  "title": "apiVersion",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Additional PodLogs labels",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "relabelings": {
                  "description": "PodLogs relabel configs to apply to samples before scraping\nhttps://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podLogs",
              "type": "object"
            },
            "tenant": {
              "additionalProperties": true,
              "description": "Tenant to use for self monitoring",
              "properties": {
                "name": {
                  "default": "self-monitoring",
                  "description": "Name of the tenant",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "password": {
                  "default": "null",
                  "description": "Password of the gateway for Basic auth",
                  "required": [],
                  "title": "password",
                  "type": "null"
                },
                "secretNamespace": {
                  "default": "{{ .Release.Namespace }}",
                  "description": "Namespace to create additional tenant token secret in. Useful if your Grafana instance\nis in a separate namespace. Token will still be created in the canary namespace.",
                  "required": [],
                  "title": "secretNamespace",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tenant",
              "type": "object"
            }
          },
          "required": [],
          "title": "selfMonitoring",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": " -- DEPRECATED ServiceMonitor configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "ServiceMonitor annotations",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "If enabled, ServiceMonitor resources for Prometheus Operator are created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "15s",
              "description": "ServiceMonitor scrape interval\nDefault is 15s because included recording rules use a 1m rate, and scrape interval needs to be at\nleast 1/4 rate interval.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional ServiceMonitor labels",
              "properties": {
                "release": {
                  "required": [],
                  "title": "release",
                  "type": "string"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "metricRelabelings": {
              "description": "ServiceMonitor metric relabel configs to apply to samples before ingestion\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "metricsInstance": {
              "additionalProperties": true,
              "description": "If defined, will create a MetricsInstance for the Grafana Agent Operator.",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "MetricsInstance annotations",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "If enabled, MetricsInstance resources for Grafana Agent Operator are created",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Additional MetricsInstance labels",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "remoteWrite": {
                  "default": "null",
                  "description": "If defined a MetricsInstance will be created to remote write metrics.",
                  "required": [],
                  "title": "remoteWrite",
                  "type": "null"
                }
              },
              "required": [],
              "title": "metricsInstance",
              "type": "object"
            },
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Namespace selector for ServiceMonitor resources",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "relabelings": {
              "description": "ServiceMonitor relabel configs to apply to samples before scraping\nhttps://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "description": "ServiceMonitor will use http by default, but you can pick https as well",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "null",
              "description": "ServiceMonitor scrape timeout in Go duration format (e.g. 15s)",
              "required": [],
              "title": "scrapeTimeout",
              "type": "null"
            },
            "tlsConfig": {
              "default": "null",
              "description": "ServiceMonitor will use these tlsConfig settings to make the health check requests",
              "required": [],
              "title": "tlsConfig",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "monitoring",
      "type": "object"
    },
    "mountPath": {
      "default": "/export",
      "description": "# Path where PV would be mounted on the MinIO Pod",
      "required": [],
      "title": "mountPath",
      "type": "string"
    },
    "mqtt": {
      "additionalProperties": true,
      "properties": {
        "ackWait": {
          "default": "1m",
          "required": [],
          "title": "ackWait",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxAckPending": {
          "default": 100,
          "required": [],
          "title": "maxAckPending",
          "type": "integer"
        }
      },
      "required": [],
      "title": "mqtt",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Overrides the chart's name",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "namespaceOverride": {
      "default": "",
      "description": "Overrides the chart's namespace.",
      "required": [],
      "title": "namespaceOverride",
      "type": "string"
    },
    "nats": {
      "additionalProperties": true,
      "description": "Configuration for the nats message-bus. This is an eventing component, and is enabled when\n'eventing.enabled' is set to 'true'.",
      "properties": {
        "advertise": {
          "default": true,
          "description": "Toggle to disable client advertisements (connect_urls),\nin case of running behind a load balancer\nit might be required to disable advertisements.",
          "required": [],
          "title": "advertise",
          "type": "boolean"
        },
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for pod assignment",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/name": {
                                "default": "nats",
                                "required": [],
                                "title": "app.kubernetes.io/name",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "client": {
          "additionalProperties": true,
          "properties": {
            "port": {
              "default": 4222,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "client",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "client",
          "type": "object"
        },
        "cluster": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "replicas": {
              "default": 3,
              "required": [],
              "title": "replicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "cluster",
          "type": "object"
        },
        "configChecksumAnnotation": {
          "default": true,
          "description": "Adds a hash of the ConfigMap as a pod annotation\nThis will cause the StatefulSet to roll when the ConfigMap is updated",
          "required": [],
          "title": "configChecksumAnnotation",
          "type": "boolean"
        },
        "connectRetries": {
          "default": 120,
          "description": "The number of connect attempts against discovered routes.",
          "required": [],
          "title": "connectRetries",
          "type": "integer"
        },
        "dnsPolicy": {
          "default": "ClusterFirst",
          "description": "# Pod Dns Policy. Default is ClusterFirst\n# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "required": [],
          "title": "dnsPolicy",
          "type": "string"
        },
        "externalAccess": {
          "default": false,
          "description": "Toggle whether to enable external access.\nThis binds a host port for clients, gateways and leafnodes.",
          "required": [],
          "title": "externalAccess",
          "type": "boolean"
        },
        "extraEnv": {
          "description": "extraEnv is the list of environment variables to add to the nats-server container",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "healthcheck": {
          "additionalProperties": true,
          "description": "Toggle using health check probes to better detect failures.",
          "properties": {
            "detectHealthz": {
              "default": true,
              "description": "/healthz health check endpoint was introduced in NATS Server 2.7.1\nAttempt to detect /healthz support by inspecting if tag is \u003e=2.7.1",
              "required": [],
              "title": "detectHealthz",
              "type": "boolean"
            },
            "enableHealthz": {
              "default": true,
              "description": "Enable /healthz startupProbe for controlled upgrades of NATS JetStream",
              "required": [],
              "title": "enableHealthz",
              "type": "boolean"
            },
            "enableHealthzLivenessReadiness": {
              "default": false,
              "description": "Enable /healthz liveness and readiness probes (supported in \u003e=2.9.0)\nThis is a feature flag and will be removed in future releases",
              "required": [],
              "title": "enableHealthzLivenessReadiness",
              "type": "boolean"
            },
            "liveness": {
              "additionalProperties": true,
              "description": "Enable liveness checks.  If this fails, then the NATS Server will restarted.",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 30,
                  "description": "NOTE: liveness check + terminationGracePeriodSeconds can introduce unnecessarily long outages\ndue to the coupling between liveness probe and terminationGracePeriodSeconds.\nTo avoid this, we make the periodSeconds of the liveness check to be about half the default\ntime that it takes for lame duck graceful stop.\n\nIn case of using Kubernetes +1.22 with probe-level terminationGracePeriodSeconds\nwe could revise this but for now keep a minimal liveness check.\n\nMore info:\n\n https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#probe-level-terminationgraceperiodseconds\n https://github.com/kubernetes/kubernetes/issues/64715\n",
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "liveness",
              "type": "object"
            },
            "readiness": {
              "additionalProperties": true,
              "description": "Periodically check for the server to be ready for connections while\nthe NATS container is running.",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readiness",
              "type": "object"
            },
            "startup": {
              "additionalProperties": true,
              "description": "Enable startup checks to confirm server is ready for traffic.\nThis is recommended for JetStream deployments since in cluster mode\nit will try to ensure that the server is ready to serve streams.",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 90,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startup",
              "type": "object"
            }
          },
          "required": [],
          "title": "healthcheck",
          "type": "object"
        },
        "hostNetwork": {
          "default": false,
          "description": "# hostNetwork",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "nats",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "2.9.17-alpine",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "jetstream": {
          "additionalProperties": true,
          "properties": {
            "domain": {
              "default": "",
              "description": "Jetstream Domain",
              "required": [],
              "title": "domain",
              "type": "null"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "encryption": {
              "default": "",
              "description": "#########################\n                       #\n Jetstream Encryption  #\n                       #\n#########################",
              "required": [],
              "title": "encryption",
              "type": "null"
            },
            "fileStorage": {
              "additionalProperties": true,
              "description": "###########################\n                         #\n Jetstream File Storage  #\n                         #\n###########################",
              "properties": {
                "accessModes": {
                  "description": "storageClassName: \"\"",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "default": "",
                  "required": [],
                  "title": "annotations",
                  "type": "null"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "size": {
                  "default": "10Gi",
                  "description": "Use below block to create new persistent volume\nonly used if existingClaim is not specified",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageDirectory": {
                  "default": "/data",
                  "required": [],
                  "title": "storageDirectory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "fileStorage",
              "type": "object"
            },
            "max_outstanding_catchup": {
              "default": "",
              "required": [],
              "title": "max_outstanding_catchup",
              "type": "null"
            },
            "memStorage": {
              "additionalProperties": true,
              "description": "############################\n                          #\n Jetstream Memory Storage #\n                          #\n############################",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "size": {
                  "default": "1Gi",
                  "required": [],
                  "title": "size",
                  "type": "string"
                }
              },
              "required": [],
              "title": "memStorage",
              "type": "object"
            },
            "uniqueTag": {
              "default": "",
              "description": "Jetstream Unique Tag prevent placing a stream in the same availability zone twice.",
              "required": [],
              "title": "uniqueTag",
              "type": "null"
            }
          },
          "required": [],
          "title": "jetstream",
          "type": "object"
        },
        "limits": {
          "additionalProperties": true,
          "description": "Server settings.",
          "properties": {
            "lameDuckDuration": {
              "default": "30s",
              "description": "duration over which to slowly close close client connections after lameDuckGracePeriod has passed",
              "required": [],
              "title": "lameDuckDuration",
              "type": "string"
            },
            "lameDuckGracePeriod": {
              "default": "10s",
              "description": "grace period after pod begins shutdown before starting to close client connections",
              "required": [],
              "title": "lameDuckGracePeriod",
              "type": "string"
            },
            "maxConnections": {
              "default": "",
              "required": [],
              "title": "maxConnections",
              "type": "null"
            },
            "maxControlLine": {
              "default": "",
              "required": [],
              "title": "maxControlLine",
              "type": "null"
            },
            "maxPayload": {
              "default": "",
              "required": [],
              "title": "maxPayload",
              "type": "null"
            },
            "maxPending": {
              "default": "",
              "required": [],
              "title": "maxPending",
              "type": "null"
            },
            "maxPings": {
              "default": "",
              "required": [],
              "title": "maxPings",
              "type": "null"
            },
            "maxSubscriptions": {
              "default": "",
              "required": [],
              "title": "maxSubscriptions",
              "type": "null"
            },
            "pingInterval": {
              "default": "",
              "description": "How many seconds should pass before sending a PING\nto a client that has no activity.",
              "required": [],
              "title": "pingInterval",
              "type": "null"
            },
            "writeDeadline": {
              "default": "",
              "required": [],
              "title": "writeDeadline",
              "type": "null"
            }
          },
          "required": [],
          "title": "limits",
          "type": "object"
        },
        "logging": {
          "additionalProperties": true,
          "properties": {
            "connectErrorReports": {
              "default": "",
              "required": [],
              "title": "connectErrorReports",
              "type": "null"
            },
            "debug": {
              "default": "",
              "required": [],
              "title": "debug",
              "type": "null"
            },
            "logtime": {
              "default": "",
              "required": [],
              "title": "logtime",
              "type": "null"
            },
            "reconnectErrorReports": {
              "default": "",
              "required": [],
              "title": "reconnectErrorReports",
              "type": "null"
            },
            "trace": {
              "default": "",
              "required": [],
              "title": "trace",
              "type": "null"
            }
          },
          "required": [],
          "title": "logging",
          "type": "object"
        },
        "mappings": {
          "additionalProperties": true,
          "description": "mappings is used to configure subject mapping\nhttps://docs.nats.io/running-a-nats-service/configuration/configuring_subject_mapping\ne.g:\nmappings:\n  foo: bar\n  foo.cluster.scoped:\n    - destination: bar.cluster.scoped\n      weight: 70%\n      cluster: us-west-1\n    - destination: foobar.cluster.scoped\n      weight: 30%\n      cluster: us-east-1",
          "required": [],
          "title": "mappings",
          "type": "object"
        },
        "nats": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "",
                  "description": "Defaults to docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "jetstream": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "fileStorage": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "fileStorage",
                  "type": "object"
                },
                "memStorage": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "size": {
                      "default": "5Mi",
                      "description": "Size of nats message is around 0.3 KB, so it can store around 10K messages.",
                      "required": [],
                      "title": "size",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "memStorage",
                  "type": "object"
                }
              },
              "required": [],
              "title": "jetstream",
              "type": "object"
            }
          },
          "required": [],
          "title": "nats",
          "type": "object"
        },
        "natsbox": {
          "additionalProperties": true,
          "description": "The nats box can be installed for debugging, by default its enabled.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "natsbox",
          "type": "object"
        },
        "profiling": {
          "additionalProperties": true,
          "description": "Toggle profiling.\nThis enables nats-server pprof (profiling) port, so you can see goroutines\nstacks, memory heap sizes, etc.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "port": {
              "default": 6000,
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "profiling",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resources to add to the container\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "securityContext for the nats container",
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "selectorLabels": {
          "additionalProperties": true,
          "description": "selector matchLabels for the server and service.\nIf left empty defaults are used.\nThis is helpful if you are updating from Chart version \u003c=7.4",
          "required": [],
          "title": "selectorLabels",
          "type": "object"
        },
        "serverNamePrefix": {
          "default": "",
          "description": "The servers name prefix, must be used for example when we want a NATS cluster\nspanning multiple Kubernetes clusters.",
          "required": [],
          "title": "serverNamePrefix",
          "type": "string"
        },
        "serverTags": {
          "default": "",
          "description": "Server Tags",
          "required": [],
          "title": "serverTags",
          "type": "null"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "In case both external access and advertise are enabled\nthen a service account would be required to be able to\ngather the public ip from a node.",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to add to the service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "statefulSetPodLabels": {
          "additionalProperties": true,
          "properties": {
            "app": {
              "default": "nats",
              "required": [],
              "title": "app",
              "type": "string"
            },
            "openebs.io/logging": {
              "default": "true",
              "required": [],
              "title": "openebs.io/logging",
              "type": "string"
            }
          },
          "required": [],
          "title": "statefulSetPodLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "description": "terminationGracePeriodSeconds determines how long to wait for graceful shutdown\nthis should be at least `lameDuckGracePeriod` + `lameDuckDuration` + 20s shutdown overhead",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "useFQDN": {
          "default": false,
          "description": "Define if NATS is using FQDN name for clustering (i.e. nats-0.nats.default.svc.cluster.local) or short name (i.e. nats-0.nats.default).",
          "required": [],
          "title": "useFQDN",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nats",
      "type": "object"
    },
    "natsbox": {
      "additionalProperties": true,
      "description": "NATS Box\n\nhttps://github.com/nats-io/nats-box\n",
      "properties": {
        "additionalLabels": {
          "additionalProperties": true,
          "description": "Labels to add to the natsbox deployment\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for nats box pod assignment\nref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to add to the natsbox deployment\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraVolumeMounts": {
          "description": "Additional nats-box server Volume mounts",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional nats-box server Volumes",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "natsio/nats-box",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "0.13.8",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "An array of imagePullSecrets, and they have to be created manually in the same namespace\nref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for pod assignment\nRef: https://kubernetes.io/docs/user-guide/node-selection/",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to add to the box pods\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to add to the box pods\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resources to add to the container\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "description": "Node tolerations for server scheduling to nodes with taints\nRef: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "natsbox",
      "type": "object"
    },
    "networkPolicy": {
      "additionalProperties": true,
      "description": "Network Policy configuration",
      "properties": {
        "alertmanager": {
          "additionalProperties": true,
          "properties": {
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespace the alertmanager is running in",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the alertmanager Pods.\nAs this is cross-namespace communication, you also need the namespaceSelector.",
              "required": [],
              "title": "podSelector",
              "type": "object"
            },
            "port": {
              "default": 9093,
              "description": "Specify the alertmanager port used for alerting",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "alertmanager",
          "type": "object"
        },
        "allowExternal": {
          "default": true,
          "description": "Don't require client label for connections\nWhen set to false, only pods with the correct client label will have network access to the ports\nNATS is listening on. When true, NATS will accept connections from any source\n(with the correct destination port).",
          "required": [],
          "title": "allowExternal",
          "type": "boolean"
        },
        "discovery": {
          "additionalProperties": true,
          "properties": {
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespace the discovery Pods are running in",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods labels used for discovery.\nAs this is cross-namespace communication, you also need the namespaceSelector.",
              "required": [],
              "title": "podSelector",
              "type": "object"
            },
            "port": {
              "default": "null",
              "description": "(int) Specify the port used for discovery",
              "required": [],
              "title": "port",
              "type": "null"
            }
          },
          "required": [],
          "title": "discovery",
          "type": "object"
        },
        "egressEntities": {
          "description": "only when using flavor: cilium",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "egressEntities",
          "type": "array"
        },
        "egressKubeApiserver": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable additional cilium egress rules to kube-apiserver for backend.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "egressKubeApiserver",
          "type": "object"
        },
        "egressWorld": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable additional cilium egress rules to external world for write, read and backend.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "egressWorld",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether Network Policies should be created",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalStorage": {
          "additionalProperties": true,
          "properties": {
            "cidrs": {
              "description": "Specifies specific network CIDRs you want to limit access to",
              "items": {
                "required": []
              },
              "required": [],
              "title": "cidrs",
              "type": "array"
            },
            "ports": {
              "description": "Specify the port used for external storage, e.g. AWS S3",
              "items": {
                "required": []
              },
              "required": [],
              "title": "ports",
              "type": "array"
            }
          },
          "required": [],
          "title": "externalStorage",
          "type": "object"
        },
        "extraEgress": {
          "description": "Add extra ingress rules to the NetworkPolicy\ne.g:\nextraEgress:\n  - ports:\n      - port: 1234\n    to:\n      - podSelector:\n          - matchLabels:\n              - role: frontend\n      - podSelector:\n          - matchExpressions:\n              - key: role\n                operator: In\n                values:\n                  - frontend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEgress",
          "type": "array"
        },
        "extraIngress": {
          "description": "Add extra ingress rules to the NetworkPolicy\ne.g:\nextraIngress:\n  - ports:\n      - port: 1234\n    from:\n      - podSelector:\n          - matchLabels:\n              - role: frontend\n      - podSelector:\n          - matchExpressions:\n              - key: role\n                operator: In\n                values:\n                  - frontend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraIngress",
          "type": "array"
        },
        "flavor": {
          "default": "kubernetes",
          "description": "Specifies whether the policies created will be standard Network Policies (flavor: kubernetes)\nor Cilium Network Policies (flavor: cilium)",
          "required": [],
          "title": "flavor",
          "type": "string"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespaces which are allowed to access the http port",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods which are allowed to access the http port.\nAs this is cross-namespace communication, you also need the namespaceSelector.",
              "required": [],
              "title": "podSelector",
              "type": "object"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "ingressNSMatchLabels": {
          "additionalProperties": true,
          "description": "Labels to match to allow traffic from other namespaces",
          "required": [],
          "title": "ingressNSMatchLabels",
          "type": "object"
        },
        "ingressNSPodMatchLabels": {
          "additionalProperties": true,
          "description": "Pod labels to match to allow traffic from other namespaces",
          "required": [],
          "title": "ingressNSPodMatchLabels",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": true,
          "properties": {
            "cidrs": {
              "description": "Specifies specific network CIDRs which are allowed to access the metrics port.\nIn case you use namespaceSelector, you also have to specify your kubelet networks here.\nThe metrics ports are also used for probes.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "cidrs",
              "type": "array"
            },
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespaces which are allowed to access the metrics port",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods which are allowed to access the metrics port.\nAs this is cross-namespace communication, you also need the namespaceSelector.",
              "required": [],
              "title": "podSelector",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        }
      },
      "required": [],
      "title": "networkPolicy",
      "type": "object"
    },
    "nodeAffinityPreset": {
      "additionalProperties": true,
      "description": "# Node affinity preset\n# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n#\n#\n#\n#",
      "properties": {
        "key": {
          "default": "",
          "description": "# e.g:\n# key: \"kubernetes.io/e2e-az-name\"\n#",
          "required": [],
          "title": "key",
          "type": "string"
        },
        "type": {
          "default": "",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "values": {
          "description": "# e.g:\n# values:\n#   - e2e-az1\n#   - e2e-az2\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "values",
          "type": "array"
        }
      },
      "required": [],
      "title": "nodeAffinityPreset",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "Node labels for pod assignment\nref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\nNote that if multi-arch images support 'kubernetes.io/arch: amd64'\nshould be removed and set 'nodeSelector' to empty '{}' as default value.",
      "properties": {
        "kubernetes.io/arch": {
          "default": "amd64",
          "required": [],
          "title": "kubernetes.io/arch",
          "type": "string"
        }
      },
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "obs": {
      "additionalProperties": true,
      "properties": {
        "callhome": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable callhome",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "logLevel": {
              "default": "info",
              "description": "Log level for callhome",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu limits for callhome",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "Memory limits for callhome",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "50m",
                      "description": "Cpu requests for callhome",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "16Mi",
                      "description": "Memory requests for callhome",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "sendReport": {
              "default": true,
              "required": [],
              "title": "sendReport",
              "type": "boolean"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "callhome",
          "type": "object"
        },
        "stats": {
          "additionalProperties": true,
          "description": "Eventing component enabled/disabled based on obs.callhome.enabled value",
          "properties": {
            "logLevel": {
              "default": "info",
              "description": "Log level for stats",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu limits for stats",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "Memory limits for stats",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "50m",
                      "description": "Cpu requests for stats",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "16Mi",
                      "description": "Memory requests for stats",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "properties": {
                "nodePorts": {
                  "additionalProperties": true,
                  "description": "Ports from where rest endpoints are accessible from outside the cluster, only valid if type is NodePort",
                  "properties": {
                    "http": {
                      "default": 90011,
                      "description": "NodePort associated with http port",
                      "required": [],
                      "title": "http",
                      "type": "integer"
                    },
                    "https": {
                      "default": 90010,
                      "description": "NodePort associated with https port",
                      "required": [],
                      "title": "https",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "nodePorts",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "Rest K8s service type",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            }
          },
          "required": [],
          "title": "stats",
          "type": "object"
        }
      },
      "required": [],
      "title": "obs",
      "type": "object"
    },
    "oidc": {
      "additionalProperties": true,
      "description": "# OpenID Identity Management\n# The following section documents environment variables for enabling external identity management using an OpenID Connect (OIDC)-compatible provider.\n# See https://min.io/docs/minio/linux/operations/external-iam/configure-openid-external-identity-management.html for a tutorial on using these variables.",
      "properties": {
        "claimName": {
          "default": "policy",
          "required": [],
          "title": "claimName",
          "type": "string"
        },
        "claimPrefix": {
          "default": "",
          "description": "Can leave empty",
          "required": [],
          "title": "claimPrefix",
          "type": "string"
        },
        "clientId": {
          "default": "minio",
          "required": [],
          "title": "clientId",
          "type": "string"
        },
        "clientSecret": {
          "default": "",
          "required": [],
          "title": "clientSecret",
          "type": "string"
        },
        "comment": {
          "default": "",
          "required": [],
          "title": "comment",
          "type": "string"
        },
        "configUrl": {
          "default": "https://identity-provider-url/.well-known/openid-configuration",
          "required": [],
          "title": "configUrl",
          "type": "string"
        },
        "displayName": {
          "default": "",
          "required": [],
          "title": "displayName",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClientIdKey": {
          "default": "",
          "required": [],
          "title": "existingClientIdKey",
          "type": "string"
        },
        "existingClientSecretKey": {
          "default": "",
          "required": [],
          "title": "existingClientSecretKey",
          "type": "string"
        },
        "existingClientSecretName": {
          "default": "",
          "description": "Provide existing client secret from the Kubernetes Secret resource, existing secret will have priority over `clientId` and/or `clientSecret``",
          "required": [],
          "title": "existingClientSecretName",
          "type": "string"
        },
        "redirectUri": {
          "default": "https://console-endpoint-url/oauth_callback",
          "required": [],
          "title": "redirectUri",
          "type": "string"
        },
        "scopes": {
          "default": "openid,profile,email",
          "required": [],
          "title": "scopes",
          "type": "string"
        }
      },
      "required": [],
      "title": "oidc",
      "type": "object"
    },
    "openebs-crds": {
      "additionalProperties": true,
      "properties": {
        "csi": {
          "additionalProperties": true,
          "properties": {
            "volumeSnapshots": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "keep": {
                  "default": true,
                  "required": [],
                  "title": "keep",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "volumeSnapshots",
              "type": "object"
            }
          },
          "required": [],
          "title": "csi",
          "type": "object"
        }
      },
      "required": [],
      "title": "openebs-crds",
      "type": "object"
    },
    "operators": {
      "additionalProperties": true,
      "properties": {
        "pool": {
          "additionalProperties": true,
          "properties": {
            "logLevel": {
              "default": "info",
              "description": "Log level for diskpool operator service",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "Set PriorityClass, overrides global",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "Cpu limits for diskpool operator",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "Memory limits for diskpool operator",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "50m",
                      "description": "Cpu requests for diskpool operator",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "16Mi",
                      "description": "Memory requests for diskpool operator",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "tolerations": {
              "description": "Set tolerations, overrides global",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "pool",
          "type": "object"
        }
      },
      "required": [],
      "title": "operators",
      "type": "object"
    },
    "overridesExporter": {
      "additionalProperties": true,
      "description": "Configuration for the overrides-exporter",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for overrides-exporter pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "overrides-exporter",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "enabled": {
          "default": false,
          "description": "The overrides-exporter component is optional and can be disabled if desired.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the overrides-exporter",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the overrides-exporter image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the overrides-exporter image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the overrides-exporter image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for overrides-exporter pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for overrides-exporter pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for overrides-exporter pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for overrides-exporter pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the overrides-exporter",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the overrides-exporter",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for overrides-exporter service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for overrides-exporter service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the overrides-exporter to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for overrides-exporter pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "overridesExporter",
      "type": "object"
    },
    "patternIngester": {
      "additionalProperties": true,
      "description": "Configuration for the pattern ingester",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for pattern ingester pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "pattern-ingester",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the pattern ingester",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the pattern ingester image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the pattern ingester image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the pattern ingester image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "liveness probe settings for ingester pods. If empty use `loki.livenessProbe`",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for pattern ingester pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for pattern ingester PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "claims": {
              "description": "List of the pattern ingester PVCs",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "data",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "size": {
                    "default": "10Gi",
                    "required": [],
                    "title": "size",
                    "type": "string"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "  -- Storage class to be used.\n  If defined, storageClassName: \u003cstorageClass\u003e.\n  If set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\n  If empty or set to null, no storageClassName spec is\n  set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "claims",
              "type": "array"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the pattern ingester",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "whenDeleted": {
              "default": "Retain",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for pattern ingester pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for pattern ingester pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for pattern ingester pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "readiness probe settings for ingester pods. If empty, use `loki.readinessProbe`",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the pattern ingester",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the pattern ingester",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the pattern ingester service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "Set this toggle to false to opt out of automounting API credentials for the service account",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": false,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "imagePullSecrets": {
              "description": "Image pull secrets for the pattern ingester service account",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "name": {
              "default": "null",
              "description": "The name of the ServiceAccount to use for the pattern ingester.\nIf not set and create is true, a name is generated by appending\n\"-pattern-ingester\" to the common ServiceAccount.",
              "required": [],
              "title": "name",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for pattern ingester service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for pattern ingester service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the pattern ingester to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for pattern ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "patternIngester",
      "type": "object"
    },
    "pdb": {
      "additionalProperties": true,
      "description": "# etcd Pod Disruption Budget configuration\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n#",
      "properties": {
        "create": {
          "default": true,
          "description": "#\n#",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "maxUnavailable",
          "type": "string"
        },
        "minAvailable": {
          "default": "51%",
          "description": "#\n#",
          "required": [],
          "title": "minAvailable",
          "type": "string"
        }
      },
      "required": [],
      "title": "pdb",
      "type": "object"
    },
    "persistence": {
      "additionalProperties": true,
      "description": "# Enable persistence using Persistent Volume Claims\n# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n#",
      "properties": {
        "accessMode": {
          "default": "ReadWriteOnce",
          "required": [],
          "title": "accessMode",
          "type": "string"
        },
        "accessModes": {
          "description": "#\n#",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "accessModes",
          "type": "array"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "#\n#\n#",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClaim": {
          "default": "",
          "description": "# A manually managed Persistent Volume and Claim\n# Requires persistence.enabled: true\n# If defined, PVC must be created manually before volume will be bound",
          "required": [],
          "title": "existingClaim",
          "type": "string"
        },
        "selector": {
          "additionalProperties": true,
          "description": "#\n# ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector\n#",
          "required": [],
          "title": "selector",
          "type": "object"
        },
        "size": {
          "default": "500Gi",
          "description": "#\n#",
          "required": [],
          "title": "size",
          "type": "string"
        },
        "storageClass": {
          "default": "",
          "description": "# minio data Persistent Volume Storage Class\n# If defined, storageClassName: \u003cstorageClass\u003e\n# If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n# If undefined (the default) or set to null, no storageClassName spec is\n#   set, choosing the default provisioner.  (gp2 on AWS, standard on\n#   GKE, AWS \u0026 OpenStack)\n#\n# Storage class of PV to bind. By default it looks for standard storage class.\n# If the PV uses a different storage class, specify that here.",
          "required": [],
          "title": "storageClass",
          "type": "string"
        },
        "subPath": {
          "default": "",
          "description": "# If subPath is set mount a sub folder of a volume instead of the root of the volume.\n# This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).\n#",
          "required": [],
          "title": "subPath",
          "type": "string"
        },
        "volumeName": {
          "default": "",
          "required": [],
          "title": "volumeName",
          "type": "string"
        }
      },
      "required": [],
      "title": "persistence",
      "type": "object"
    },
    "persistentVolumeClaimRetentionPolicy": {
      "additionalProperties": true,
      "description": "# persistentVolumeClaimRetentionPolicy\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention\n#\n#\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "whenDeleted": {
          "default": "Retain",
          "required": [],
          "title": "whenDeleted",
          "type": "string"
        },
        "whenScaled": {
          "default": "Retain",
          "required": [],
          "title": "whenScaled",
          "type": "string"
        }
      },
      "required": [],
      "title": "persistentVolumeClaimRetentionPolicy",
      "type": "object"
    },
    "pidVolume": {
      "additionalProperties": true,
      "description": "Shared volume to be mounted in pods for pid",
      "properties": {
        "emptyDir": {
          "additionalProperties": true,
          "required": [],
          "title": "emptyDir",
          "type": "object"
        }
      },
      "required": [],
      "title": "pidVolume",
      "type": "object"
    },
    "podAffinityPreset": {
      "default": "",
      "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
      "required": [],
      "title": "podAffinityPreset",
      "type": "string"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to add to the NATS pods\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podAntiAffinityPreset": {
      "default": "soft",
      "description": "#\n# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
      "required": [],
      "title": "podAntiAffinityPreset",
      "type": "string"
    },
    "podDisruptionBudget": {
      "additionalProperties": true,
      "description": "Define a Pod Disruption Budget for the stateful set\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": 1,
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        }
      },
      "required": [],
      "title": "podDisruptionBudget",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "Pod (extra) Labels",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podManagementPolicy": {
      "default": "Parallel",
      "description": "podManagementPolicy controls how pods are created during initial scale up,\nwhen replacing pods on nodes, or when scaling down.",
      "required": [],
      "title": "podManagementPolicy",
      "type": "string"
    },
    "podSecurityContext": {
      "additionalProperties": true,
      "description": "Pod security context (runAsUser, etc.)",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fsGroup": {
          "default": 1001,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        }
      },
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "policies": {
      "description": "# List of policies to be created after minio install\n#\n# In addition to default policies [readonly|readwrite|writeonly|consoleAdmin|diagnostics]\n# you can define additional policies with custom supported actions and resources",
      "items": {
        "required": []
      },
      "required": [],
      "title": "policies",
      "type": "array"
    },
    "pools": {
      "default": 1,
      "description": "Number of expanded MinIO clusters",
      "required": [],
      "title": "pools",
      "type": "integer"
    },
    "postJob": {
      "additionalProperties": true,
      "description": "# Merge jobs",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "postJob",
      "type": "object"
    },
    "preUpgradeHook": {
      "additionalProperties": true,
      "description": "Configuration options for pre-upgrade helm hook job.",
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "The imagePullPolicy for the container",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The container image registry URL for the hook job",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repo": {
              "default": "openebs/kubectl",
              "description": "The container repository for the hook job",
              "required": [],
              "title": "repo",
              "type": "string"
            },
            "tag": {
              "default": "1.25.15",
              "description": "The container image tag for the hook job",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "Optional array of imagePullSecrets containing private registry credentials\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "- name: secretName\nLabels to be added to the pod hook job",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "tolerations": {
          "description": "Node tolerations for server scheduling to nodes with taints\n# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "preUpgradeHook",
      "type": "object"
    },
    "priorityClassName": {
      "default": "",
      "description": "Pod scheduling priority.\nSetting this value will apply to all components except the external Chart dependencies.\nIf any component has `priorityClassName` set, then this value would be overridden for that component.\nFor external components like etcd, jaeger or loki, PriorityClass can only be set at component level.",
      "required": [],
      "title": "priorityClassName",
      "type": "string"
    },
    "querier": {
      "additionalProperties": true,
      "description": " Configuration for the querier",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for querier pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "querier",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the querier service. This allows querier to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "- type: External\n  external:\n    metric:\n      name: loki_inflight_queries\n    target:\n      type: AverageValue\n      averageValue: 12",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable autoscaling behaviours",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "description": "define scale down policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "define scale up policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "customMetrics": {
              "description": "Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "customMetrics",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the querier, this is only used if `indexGateway.enabled: true`",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the querier",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the querier",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the querier",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "null",
              "description": "Target memory utilisation percentage for the querier",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNSConfig for querier pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the querier",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the querier image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the querier image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the querier image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxSurge": {
          "default": 0,
          "description": "Max Surge for querier pods",
          "required": [],
          "title": "maxSurge",
          "type": "integer"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for querier pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for querier PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the querier cache",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for querier pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for querier pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for querier pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the querier",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the querier",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for querier service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for querier service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the querier to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "topologySpread for querier pods.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "labelSelector": {
                "additionalProperties": true,
                "properties": {
                  "matchLabels": {
                    "additionalProperties": true,
                    "properties": {
                      "app.kubernetes.io/component": {
                        "default": "querier",
                        "required": [],
                        "title": "app.kubernetes.io/component",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "matchLabels",
                    "type": "object"
                  }
                },
                "required": [],
                "title": "labelSelector",
                "type": "object"
              },
              "maxSkew": {
                "default": 1,
                "required": [],
                "title": "maxSkew",
                "type": "integer"
              },
              "topologyKey": {
                "default": "kubernetes.io/hostname",
                "required": [],
                "title": "topologyKey",
                "type": "string"
              },
              "whenUnsatisfiable": {
                "default": "ScheduleAnyway",
                "required": [],
                "title": "whenUnsatisfiable",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "querier",
      "type": "object"
    },
    "queryFrontend": {
      "additionalProperties": true,
      "description": "Configuration for the query-frontend",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for query-frontend pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "query-frontend",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the queryFrontend service. This allows queryFrontend to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "- type: Pods\n  pods:\n    metric:\n      name: loki_query_rate\n    target:\n      type: AverageValue\n      averageValue: 100",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable autoscaling behaviours",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "scaleDown": {
                  "additionalProperties": true,
                  "description": "define scale down policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "define scale up policies, must conform to HPAScalingRules",
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "customMetrics": {
              "description": "Allows one to define custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "customMetrics",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the query-frontend",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the query-frontend",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the query-frontend",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the query-frontend",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "null",
              "description": "Target memory utilisation percentage for the query-frontend",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "extraArgs": {
          "description": "Additional CLI args for the query-frontend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the query-frontend image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the query-frontend image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the query-frontend image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for query-frontend pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for query-frontend pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for query-frontend pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for query-frontend pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the query-frontend",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the query-frontend",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for query-frontend service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for query-frontend service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the query-frontend to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "queryFrontend",
      "type": "object"
    },
    "queryScheduler": {
      "additionalProperties": true,
      "description": "Configuration for the query-scheduler",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for query-scheduler pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "query-scheduler",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the query-scheduler",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the query-scheduler image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the query-scheduler image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the query-scheduler image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for query-scheduler pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for query-scheduler pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for query-scheduler pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for query-scheduler pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the query-scheduler.\nIt should be lower than `-querier.max-concurrent` to avoid generating back-pressure in queriers;\nit's also recommended that this value evenly divides the latter",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the query-scheduler",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for query-scheduler service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for query-scheduler service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the query-scheduler to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for query-scheduler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "queryScheduler",
      "type": "object"
    },
    "rbac": {
      "additionalProperties": true,
      "description": "RBAC configuration",
      "properties": {
        "clusterRole": {
          "default": false,
          "required": [],
          "title": "clusterRole",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Toggle to create ClusterRole and ClusterRoleBinding",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "namespaced": {
          "default": false,
          "description": "seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'\nseccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'\napparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'\nWhether to install RBAC in the namespace only or cluster-wide. Useful if you want to watch ConfigMap globally.",
          "required": [],
          "title": "namespaced",
          "type": "boolean"
        },
        "podSecurityPolicyName": {
          "default": "",
          "description": "Name of a PodSecurityPolicy to use in the ClusterRole. If unset, no PodSecurityPolicy is used.",
          "required": [],
          "title": "podSecurityPolicyName",
          "type": "string"
        },
        "pspAnnotations": {
          "additionalProperties": true,
          "description": "Specify PSP annotations\nRef: https://kubernetes.io/docs/reference/access-authn-authz/psp-to-pod-security-standards/#podsecuritypolicy-annotations",
          "required": [],
          "title": "pspAnnotations",
          "type": "object"
        },
        "pspEnabled": {
          "default": false,
          "description": "rbac.pspEnabled: `true` if PodSecurityPolicy resources should be created",
          "required": [],
          "title": "pspEnabled",
          "type": "boolean"
        },
        "sccEnabled": {
          "default": false,
          "description": "For OpenShift set pspEnabled to 'false' and sccEnabled to 'true' to use the SecurityContextConstraints.",
          "required": [],
          "title": "sccEnabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "rbac",
      "type": "object"
    },
    "read": {
      "additionalProperties": true,
      "description": " Configuration for the read pod(s)",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for read pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "read",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for read deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Behavior policies while scaling.",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the read, this is only used if `queryIndex.enabled: true`",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 6,
              "description": "Maximum autoscaling replicas for the read",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 2,
              "description": "Minimum autoscaling replicas for the read",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the read",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the read",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for read pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the read",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the read image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the read image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the read image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "legacyReadTarget": {
          "default": false,
          "description": "Whether or not to use the 2 target type simple scalable mode (read, write) or the\n3 target type (read, write, backend). Legacy refers to the 2 target type, so true will\nrun two targets, false will run 3 targets.",
          "required": [],
          "title": "legacyReadTarget",
          "type": "boolean"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Lifecycle for the read container",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for read pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "read.persistence is used only if legacyReadTarget is set to true",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for volume claim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": true,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "selector": {
              "default": "null",
              "description": "Selector for persistent disk",
              "required": [],
              "title": "selector",
              "type": "null"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for read pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for each `read` pod",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podManagementPolicy": {
          "default": "Parallel",
          "description": "The default is to deploy all pods in parallel.",
          "required": [],
          "title": "podManagementPolicy",
          "type": "string"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for read pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 3,
          "description": "Number of replicas for the read",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the read",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "selectorLabels": {
          "additionalProperties": true,
          "description": "Additional selector labels for each `read` pod",
          "required": [],
          "title": "selectorLabels",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for read Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for read Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "targetModule": {
          "default": "read",
          "description": "Comma-separated list of Loki modules to load for the read",
          "required": [],
          "title": "targetModule",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the read to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for read pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "read",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": true,
      "description": "# Configure extra options for readiness probe\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failureThreshold": {
          "default": 5,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 60,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "readinessProbe",
      "type": "object"
    },
    "reloader": {
      "additionalProperties": true,
      "description": "The NATS config reloader image to use.",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraConfigs": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraConfigs",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "natsio/nats-server-config-reloader",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "0.10.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resources to add to the container\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "reloader",
      "type": "object"
    },
    "removeMemberOnContainerTermination": {
      "default": true,
      "description": "#\n# they the containers are terminated\n# NOTE: Ignored if lifecycleHooks is set or replicaCount=1\n#",
      "required": [],
      "title": "removeMemberOnContainerTermination",
      "type": "boolean"
    },
    "replicaCount": {
      "default": 1,
      "description": "#\n#",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "replicas": {
      "default": 16,
      "description": "Number of MinIO containers running",
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": true,
      "description": "# Configure resource requests and limits\n# ref: http://kubernetes.io/docs/user-guide/compute-resources/\n#",
      "properties": {
        "limits": {
          "additionalProperties": true,
          "description": "# Example:\n# limits:\n#    cpu: 500m\n#    memory: 1Gi\n#",
          "properties": {
            "memory": {
              "default": "200Mi",
              "description": "cpu: \"1\"",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "additionalProperties": true,
          "properties": {
            "cpu": {
              "default": "100m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "100Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "resultsCache": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for results-cache pods",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "allocatedMemory": {
          "default": 1024,
          "description": "Amount of memory allocated to results-cache for object storage (in MB).",
          "required": [],
          "title": "allocatedMemory",
          "type": "integer"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the results-cache pods",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "connectionLimit": {
          "default": 16384,
          "description": "Maximum number of connections allowed",
          "required": [],
          "title": "connectionLimit",
          "type": "integer"
        },
        "defaultValidity": {
          "default": "12h",
          "description": "Specify how long cached results should be stored in the results-cache before being expired",
          "required": [],
          "title": "defaultValidity",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Specifies whether memcached based results-cache should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": "Additional CLI args for results-cache",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "description": "Additional containers to be added to the results-cache pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraExtendedOptions": {
          "default": "",
          "description": "Add extended options for results-cache memcached container. The format is the same as for the memcached -o/--extend flag.\nExample:\nextraExtendedOptions: 'tls,modern,track_sizes'",
          "required": [],
          "title": "extraExtendedOptions",
          "type": "string"
        },
        "extraVolumeMounts": {
          "description": "Additional volume mounts to be added to the results-cache pod (applies to both memcached and exporter containers).\nExample:\nextraVolumeMounts:\n- name: extra-volume\n  mountPath: /etc/extra-volume\n  readOnly: true",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional volumes to be added to the results-cache pod (applies to both memcached and exporter containers).\nExample:\nextraVolumes:\n- name: extra-volume\n  secret:\n   secretName: extra-volume-secret",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "initContainers": {
          "description": "Extra init containers for results-cache pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxItemMemory": {
          "default": 5,
          "description": "Maximum item results-cache for memcached (in MB).",
          "required": [],
          "title": "maxItemMemory",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for results-cache pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "Persistence settings for the results-cache",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs for the results-cache",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "mountPath": {
              "default": "/data",
              "description": "Volume mount path",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "storageSize": {
              "default": "10G",
              "description": "Size of persistent disk, must be in G or Gi",
              "required": [],
              "title": "storageSize",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for results-cache pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "Pod Disruption Budget",
          "properties": {
            "maxUnavailable": {
              "default": 1,
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for results-cache pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podManagementPolicy": {
          "default": "Parallel",
          "description": "Management policy for results-cache pods",
          "required": [],
          "title": "podManagementPolicy",
          "type": "string"
        },
        "port": {
          "default": 11211,
          "description": "Port of the results-cache service",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for results-cache pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Total number of results-cache replicas",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "default": "null",
          "description": "Resource requests and limits for the results-cache\nBy default a safe memory limit will be requested based on allocatedMemory value (floor (* 1.2 allocatedMemory)).",
          "required": [],
          "title": "resources",
          "type": "null"
        },
        "service": {
          "additionalProperties": true,
          "description": "Service annotations and labels",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "statefulStrategy": {
          "additionalProperties": true,
          "description": "Stateful results-cache strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "statefulStrategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "description": "Grace period to allow the results-cache to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "timeout": {
          "default": "500ms",
          "description": "Memcached operation timeout",
          "required": [],
          "title": "timeout",
          "type": "string"
        },
        "tolerations": {
          "description": " maxSkew: 1\n topologyKey: kubernetes.io/hostname\n whenUnsatisfiable: ScheduleAnyway\nTolerations for results-cache pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "topologySpreadConstraints allows to customize the default topologySpreadConstraints. This can be either a single dict as shown below or a slice of topologySpreadConstraints.\nlabelSelector is taken from the constraint itself (if it exists) or is generated by the chart using the same selectors as for services.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "writebackBuffer": {
          "default": 500000,
          "description": "Max number of objects to use for cache write back",
          "required": [],
          "title": "writebackBuffer",
          "type": "integer"
        },
        "writebackParallelism": {
          "default": 1,
          "description": "Number of parallel threads for cache write back",
          "required": [],
          "title": "writebackParallelism",
          "type": "integer"
        },
        "writebackSizeLimit": {
          "default": "500MB",
          "description": "Max memory to use for cache write back",
          "required": [],
          "title": "writebackSizeLimit",
          "type": "string"
        }
      },
      "required": [],
      "title": "resultsCache",
      "type": "object"
    },
    "role": {
      "default": "openebs-zfs",
      "required": [],
      "title": "role",
      "type": "string"
    },
    "rollout_operator": {
      "additionalProperties": true,
      "description": "#####################################################################################################################\n\nSubchart configurations\n\n#####################################################################################################################\nSetting for the Grafana Rollout Operator https://github.com/grafana/helm-charts/tree/main/charts/rollout-operator",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "podSecurityContext is the pod security context for the rollout operator.\nWhen installing on OpenShift, override podSecurityContext settings with\n\nrollout_operator:\n  podSecurityContext:\n    fsGroup: null\n    runAsGroup: null\n    runAsUser: null",
          "properties": {
            "fsGroup": {
              "default": 10001,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Set the container security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "rollout_operator",
      "type": "object"
    },
    "rootPassword": {
      "default": "",
      "required": [],
      "title": "rootPassword",
      "type": "string"
    },
    "rootUser": {
      "default": "",
      "description": "# Set default rootUser, rootPassword\n# rootUser and rootPassword is generated when not set\n# Distributed MinIO ref: https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html\n#",
      "required": [],
      "title": "rootUser",
      "type": "string"
    },
    "ruler": {
      "additionalProperties": true,
      "description": "Configuration for the ruler",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for ruler pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "ruler",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
          "properties": {
            "grpc": {
              "default": "",
              "required": [],
              "title": "grpc",
              "type": "string"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "directories": {
          "additionalProperties": true,
          "description": "Directories containing rules files",
          "required": [],
          "title": "directories",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNSConfig for ruler pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "The ruler component is optional and can be disabled if desired.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the ruler",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the ruler image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the ruler image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the ruler image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxUnavailable": {
          "default": "null",
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "null"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for ruler pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for ruler PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs which is required when using recording rules",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for ruler pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for compactor pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for ruler pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the ruler",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the ruler",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "serviceAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for ruler service",
          "required": [],
          "title": "serviceAnnotations",
          "type": "object"
        },
        "serviceLabels": {
          "additionalProperties": true,
          "description": "Labels for ruler service",
          "required": [],
          "title": "serviceLabels",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the ruler to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for ruler pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "ruler",
      "type": "object"
    },
    "runtimeClassName": {
      "default": "",
      "description": "# Pod runtime class name\n# ref https://kubernetes.io/docs/concepts/containers/runtime-class/\n#",
      "required": [],
      "title": "runtimeClassName",
      "type": "string"
    },
    "schedulerName": {
      "default": "",
      "description": "#\n# ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n#",
      "required": [],
      "title": "schedulerName",
      "type": "string"
    },
    "securityContext": {
      "additionalProperties": true,
      "description": "Toggle whether to use setup a Pod Security Context\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fsGroup": {
          "default": 1000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "default": "OnRootMismatch",
          "required": [],
          "title": "fsGroupChangePolicy",
          "type": "string"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        }
      },
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "additionalProperties": true,
      "description": "# Expose the MinIO service to be accessed from outside the cluster (LoadBalancer service).\n# or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.\n# ref: http://kubernetes.io/docs/user-guide/services/\n#",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Specify a specific node port when type is NodePort\nnodePort: 32500\nAnnotations for service",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "clientPortNameOverride": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "clientPortNameOverride",
          "type": "string"
        },
        "clusterIP": {
          "default": "~",
          "description": "#\n# e.g.:\n# clusterIP: None\n#",
          "required": [],
          "title": "clusterIP",
          "type": "null"
        },
        "enabled": {
          "default": true,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalIPs": {
          "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "externalIPs",
          "type": "array"
        },
        "externalTrafficPolicy": {
          "default": "Cluster",
          "description": "# service.externalTrafficPolicy minio service external traffic policy\n# ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
          "required": [],
          "title": "externalTrafficPolicy",
          "type": "string"
        },
        "extraPorts": {
          "description": "#\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPorts",
          "type": "array"
        },
        "internalTrafficPolicy": {
          "default": "Cluster",
          "description": "Value for internal traffic policy. 'Cluster' or 'Local'",
          "required": [],
          "title": "internalTrafficPolicy",
          "type": "string"
        },
        "loadBalancerIP": {
          "default": "~",
          "description": "#\n# ref: https://kubernetes.io/docs/user-guide/services/#type-loadbalancer\n#",
          "required": [],
          "title": "loadBalancerIP",
          "type": "null"
        },
        "loadBalancerSourceRanges": {
          "description": "# service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n#\nloadBalancerSourceRanges:\n  - 10.10.10.0/24",
          "items": {
            "required": []
          },
          "required": [],
          "title": "loadBalancerSourceRanges",
          "type": "array"
        },
        "nodePort": {
          "default": 32000,
          "description": "NodePort port. Only takes effect when `service.type: NodePort`",
          "required": [],
          "title": "nodePort",
          "type": "integer"
        },
        "nodePorts": {
          "additionalProperties": true,
          "description": "#\n#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n#",
          "properties": {
            "client": {
              "default": "",
              "required": [],
              "title": "client",
              "type": "string"
            },
            "peer": {
              "default": "",
              "required": [],
              "title": "peer",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodePorts",
          "type": "object"
        },
        "peerPortNameOverride": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "peerPortNameOverride",
          "type": "string"
        },
        "port": {
          "default": "9000",
          "required": [],
          "title": "port",
          "type": "string"
        },
        "ports": {
          "additionalProperties": true,
          "description": "#\n#\n#",
          "properties": {
            "client": {
              "default": 2379,
              "required": [],
              "title": "client",
              "type": "integer"
            },
            "peer": {
              "default": 2380,
              "required": [],
              "title": "peer",
              "type": "integer"
            }
          },
          "required": [],
          "title": "ports",
          "type": "object"
        },
        "sessionAffinity": {
          "default": "None",
          "description": "#\n# If \"ClientIP\", consecutive client requests will be directed to the same Pod\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n#",
          "required": [],
          "title": "sessionAffinity",
          "type": "string"
        },
        "sessionAffinityConfig": {
          "additionalProperties": true,
          "description": "#\n# sessionAffinityConfig:\n#   clientIP:\n#     timeoutSeconds: 300\n#",
          "required": [],
          "title": "sessionAffinityConfig",
          "type": "object"
        },
        "type": {
          "default": "ClusterIP",
          "description": "#\n#",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": true,
      "description": "#####################################################################################################################\n\nService Accounts and Kubernetes RBAC\n\n#####################################################################################################################",
      "properties": {
        "additionalLabels": {
          "additionalProperties": true,
          "description": "Additional labels to add to the created service account.",
          "properties": {
            "test": {
              "required": [],
              "title": "test",
              "type": "string"
            }
          },
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the service account",
          "properties": {
            "eks.amazonaws.com/role-arn": {
              "required": [],
              "title": "eks.amazonaws.com/role-arn",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automountServiceAccountToken": {
          "default": true,
          "description": "Set this toggle to false to opt out of automounting API credentials for the service account",
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a ServiceAccount should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "Image pull secrets for the service account",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Labels for the service account",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "lvmController": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "openebs-lvm-controller-sa",
              "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "lvmController",
          "type": "object"
        },
        "lvmNode": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "openebs-lvm-node-sa",
              "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "lvmNode",
          "type": "object"
        },
        "name": {
          "default": "null",
          "description": "The name of the ServiceAccount to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "null"
        },
        "zfsController": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "openebs-zfs-controller-sa",
              "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "zfsController",
          "type": "object"
        },
        "zfsNode": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "openebs-zfs-node-sa",
              "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "zfsNode",
          "type": "object"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to add to the NATS Service",
      "required": [],
      "title": "serviceAnnotations",
      "type": "object"
    },
    "serviceExtraLabels": {
      "additionalProperties": true,
      "required": [],
      "title": "serviceExtraLabels",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": true,
      "properties": {
        "additionalLabels": {
          "additionalProperties": true,
          "description": "Additional labels for the service monitor.",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "ServiceMonitor annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Create ServiceMonitor to scrape metrics for Prometheus",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "null",
          "description": "ServiceMonitor scrape interval",
          "required": [],
          "title": "interval",
          "type": "null"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional ServiceMonitor labels",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\nref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "namespace": {
          "default": "null",
          "description": "Alternative namespace for ServiceMonitor resources",
          "required": [],
          "title": "namespace",
          "type": "null"
        },
        "namespaceSelector": {
          "additionalProperties": true,
          "description": "Namespace selector for ServiceMonitor resources",
          "required": [],
          "title": "namespaceSelector",
          "type": "object"
        },
        "relabelings": {
          "description": "ServiceMonitor relabel configs to apply to samples before scraping\nhttps://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig",
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scrapeTimeout": {
          "default": "null",
          "description": "ServiceMonitor scrape timeout in Go duration format (e.g. 15s)",
          "required": [],
          "title": "scrapeTimeout",
          "type": "null"
        },
        "tlsConfig": {
          "additionalProperties": true,
          "description": "Customize tls parameters for the service monitor",
          "properties": {
            "insecureSkipVerify": {
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "tlsConfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "serviceMonitor",
      "type": "object"
    },
    "shareProcessNamespace": {
      "default": false,
      "description": "#\n# If set to false (default), each container will run in separate namespace, etcd will have PID=1.\n# If set to true, the /pause will run as init process and will reap any zombie PIDs,\n# for example, generated by a custom exec probe running longer than a probe timeoutSeconds.\n# Enable this only if customLivenessProbe or customReadinessProbe is used and zombie PIDs are accumulating.\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/\n#",
      "required": [],
      "title": "shareProcessNamespace",
      "type": "boolean"
    },
    "sidecar": {
      "additionalProperties": true,
      "properties": {
        "enableUniqueFilenames": {
          "default": false,
          "description": "Ensure that rule files aren't conflicting and being overwritten by prefixing their name with the namespace they are defined in.",
          "required": [],
          "title": "enableUniqueFilenames",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "kiwigrid/k8s-sidecar",
              "description": "The Docker registry and image for the k8s sidecar",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "description": "Docker image sha. If empty, no sha will be used",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "1.30.2",
              "description": "Docker image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe definition. Probe is disabled on the sidecar by default.",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe definition. Probe is disabled on the sidecar by default.",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the sidecar",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rules": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Whether or not to create a sidecar to ingest rule from specific ConfigMaps and/or Secrets.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "folder": {
              "default": "/rules",
              "description": "Folder into which the rules will be placed.",
              "required": [],
              "title": "folder",
              "type": "string"
            },
            "label": {
              "default": "loki_rule",
              "description": "Label that the configmaps/secrets with rules will be marked with.",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "Label value that the configmaps/secrets with rules will be set to.",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "logLevel": {
              "default": "INFO",
              "description": "Log level of the sidecar container.",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "Search in configmap, secret, or both.",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to the shell script to execute after a configmap or secret has been reloaded.",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Comma separated list of namespaces. If specified, the sidecar will search for config-maps/secrets inside these namespaces.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify 'ALL' to search in all namespaces.",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "watchClientTimeout": {
              "default": 60,
              "description": "\nWatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\nDefaults to 66sec.",
              "required": [],
              "title": "watchClientTimeout",
              "type": "integer"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH request, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            },
            "watchServerTimeout": {
              "default": 60,
              "description": "WatchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S.",
              "required": [],
              "title": "watchServerTimeout",
              "type": "integer"
            }
          },
          "required": [],
          "title": "rules",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "  limits:\n    cpu: 100m\n    memory: 100Mi\n  requests:\n    cpu: 50m\n    memory: 50Mi\nThe SecurityContext for the sidecar.",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "skipTlsVerify": {
          "default": false,
          "description": "Set to true to skip tls verification for kube api calls.",
          "required": [],
          "title": "skipTlsVerify",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "sidecar",
      "type": "object"
    },
    "sidecars": {
      "description": "#\n# e.g:\n# sidecars:\n#   - name: your-image-name\n#     image: your-image\n#     imagePullPolicy: Always\n#     ports:\n#       - name: portname\n#         containerPort: 1234\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecars",
      "type": "array"
    },
    "singleBinary": {
      "additionalProperties": true,
      "description": "Configuration for the single binary node(s)",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for single binary pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "single-binary",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for single binary StatefulSet",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable autoscaling",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the single binary",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the single binary",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the single binary",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the single binary",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for single binary pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraArgs": {
          "description": "Labels for single binary service",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Extra containers to add to the single binary loki pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the single binary pods",
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "value": {
                "required": [],
                "title": "value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the single binary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the single binary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the single binary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the single binary image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the single binary image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the single binary image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the single binary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for single binary pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for volume claim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": true,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "enabled": {
              "default": true,
              "description": "Enable persistent disk",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "selector": {
              "default": "null",
              "description": "Selector for persistent disk",
              "required": [],
              "title": "selector",
              "type": "null"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for single binary pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for each `single binary` pod",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for single binary pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 0,
          "description": "Number of replicas for the single binary",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the single binary",
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "required": [],
                  "title": "cpu",
                  "type": "integer"
                },
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "required": [],
                  "title": "cpu",
                  "type": "integer"
                },
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "selectorLabels": {
          "additionalProperties": true,
          "description": "Additional selector labels for each `single binary` pod",
          "required": [],
          "title": "selectorLabels",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for single binary Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for single binary Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "targetModule": {
          "default": "all",
          "description": "Comma-separated list of Loki modules to load for the single binary",
          "required": [],
          "title": "targetModule",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the single binary to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for single binary pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "singleBinary",
      "type": "object"
    },
    "startFromSnapshot": {
      "additionalProperties": true,
      "description": "# Start a new etcd cluster recovering the data from an existing snapshot before bootstrapping\n#",
      "properties": {
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClaim": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "existingClaim",
          "type": "string"
        },
        "snapshotFilename": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "snapshotFilename",
          "type": "string"
        }
      },
      "required": [],
      "title": "startFromSnapshot",
      "type": "object"
    },
    "startupProbe": {
      "additionalProperties": true,
      "description": "# Configure extra options for liveness probe\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failureThreshold": {
          "default": 60,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "startupProbe",
      "type": "object"
    },
    "statefulSetAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to add to the NATS StatefulSet",
      "required": [],
      "title": "statefulSetAnnotations",
      "type": "object"
    },
    "statefulSetPodLabels": {
      "additionalProperties": true,
      "description": "Labels to add to the pods of the NATS StatefulSet",
      "required": [],
      "title": "statefulSetPodLabels",
      "type": "object"
    },
    "statefulSetUpdate": {
      "additionalProperties": true,
      "description": "# Update strategy for StatefulSets",
      "properties": {
        "updateStrategy": {
          "default": "RollingUpdate",
          "required": [],
          "title": "updateStrategy",
          "type": "string"
        }
      },
      "required": [],
      "title": "statefulSetUpdate",
      "type": "object"
    },
    "storageCapacity": {
      "default": true,
      "description": "enable storage capacity tracking feature\nRef: https://kubernetes:io/docs/concepts/storage/storage-capacity",
      "required": [],
      "title": "storageCapacity",
      "type": "boolean"
    },
    "storageClass": {
      "additionalProperties": true,
      "properties": {
        "allowVolumeExpansion": {
          "default": true,
          "description": "Enable volume expansion for the default StorageClass.",
          "required": [],
          "title": "allowVolumeExpansion",
          "type": "boolean"
        },
        "default": {
          "default": false,
          "required": [],
          "title": "default",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "nameSuffix": {
          "default": "single-replica",
          "required": [],
          "title": "nameSuffix",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": true,
          "properties": {
            "protocol": {
              "default": "nvmf",
              "required": [],
              "title": "protocol",
              "type": "string"
            },
            "repl": {
              "default": 1,
              "required": [],
              "title": "repl",
              "type": "integer"
            }
          },
          "required": [],
          "title": "parameters",
          "type": "object"
        }
      },
      "required": [],
      "title": "storageClass",
      "type": "object"
    },
    "svcaccts": {
      "description": "# List of service accounts to be created after minio install\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "svcaccts",
      "type": "array"
    },
    "tableManager": {
      "additionalProperties": true,
      "description": "DEPRECATED Configuration for the table-manager. The table-manager is only necessary when using a deprecated\nindex type such as Cassandra, Bigtable, or DynamoDB, it has not been necessary since loki introduced self-\ncontained index types like 'boltdb-shipper' and 'tsdb'. This will be removed in a future helm chart.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for table-manager pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "table-manager",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for table-manager deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "command": {
          "default": "null",
          "description": "Command to execute instead of defined in Docker image",
          "required": [],
          "title": "command",
          "type": "null"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config table-manager pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether the table-manager should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the table-manager",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the table-manager image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the table-manager image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the table-manager image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for table-manager pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for table-manager pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for table-manager pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for table-manager pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the table-manager",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "retention_deletes_enabled": {
          "default": false,
          "description": "Enable deletes by retention",
          "required": [],
          "title": "retention_deletes_enabled",
          "type": "boolean"
        },
        "retention_period": {
          "default": 0,
          "description": "Set retention period",
          "required": [],
          "title": "retention_period",
          "type": "integer"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for table-manager Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for table-manager Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the table-manager to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for table-manager pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "tableManager",
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "default": "",
      "description": "#\n# ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution\n#",
      "required": [],
      "title": "terminationGracePeriodSeconds",
      "type": "string"
    },
    "test": {
      "additionalProperties": true,
      "description": "Section for configuring optional Helm test",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for test pods",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "canaryServiceAddress": {
          "default": "http://loki-canary:3500/metrics",
          "description": "Used to directly query the metrics endpoint of the canary for testing, this approach avoids needing prometheus for testing.\nThis in a newer approach to using prometheusAddress such that tests do not have a dependency on prometheus",
          "required": [],
          "title": "canaryServiceAddress",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "Image to use for loki canary",
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/loki-helm-test",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "ewelch-distributed-helm-chart-17db5ee",
              "description": "Overrides the image tag whose default is the chart's appVersion",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional labels for the test pods",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "prometheusAddress": {
          "default": "",
          "description": "Address of the prometheus server to query for the test. This overrides any value set for canaryServiceAddress.\nThis is kept for backward compatibility and may be removed in future releases. Previous value was 'http://prometheus:9090'",
          "required": [],
          "title": "prometheusAddress",
          "type": "string"
        },
        "timeout": {
          "default": "1m",
          "description": "Number of times to retry the test before failing",
          "required": [],
          "title": "timeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "test",
      "type": "object"
    },
    "tls": {
      "additionalProperties": true,
      "description": "# TLS Settings for MinIO",
      "properties": {
        "certSecret": {
          "default": "",
          "description": "# Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret",
          "required": [],
          "title": "certSecret",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "privateKey": {
          "default": "private.key",
          "required": [],
          "title": "privateKey",
          "type": "string"
        },
        "publicCrt": {
          "default": "public.crt",
          "required": [],
          "title": "publicCrt",
          "type": "string"
        }
      },
      "required": [],
      "title": "tls",
      "type": "object"
    },
    "tolerations": {
      "description": "Tolerations to be applied to all components except external Chart dependencies.\nIf any component has tolerations set, then it would override this value.\nFor external components like etcd, jaeger and loki, tolerations can only be set at component level.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "topologyKeys": {
      "description": "Service topology\nref: https://kubernetes.io/docs/concepts/services-networking/service-topology/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "topologyKeys",
      "type": "array"
    },
    "topologySpreadConstraints": {
      "description": "Pod Topology Spread Constraints\nref https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "topologySpreadConstraints",
      "type": "array"
    },
    "trustedCertsSecret": {
      "default": "",
      "description": "# Trusted Certificates Settings for MinIO. Ref: https://min.io/docs/minio/linux/operations/network-encryption.html#third-party-certificate-authorities\n# Bundle multiple trusted certificates into one secret and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n# When using self-signed certificates, remember to include MinIO's own certificate in the bundle with key public.crt.\n# If certSecret is left empty and tls is enabled, this chart installs the public certificate from .Values.tls.certSecret.",
      "required": [],
      "title": "trustedCertsSecret",
      "type": "string"
    },
    "updateStrategy": {
      "additionalProperties": true,
      "description": "# Update strategy\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n#\n#",
      "properties": {
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "updateStrategy",
      "type": "object"
    },
    "useFQDN": {
      "default": true,
      "description": "Define if NATS is using FQDN name for clustering (i.e. nats-0.nats.default.svc.cluster.local) or short name (i.e. nats-0.nats.default).",
      "required": [],
      "title": "useFQDN",
      "type": "boolean"
    },
    "users": {
      "description": "# List of users to be created after minio install\n#",
      "items": {
        "additionalProperties": true,
        "properties": {
          "accessKey": {
            "default": "console",
            "required": [],
            "title": "accessKey",
            "type": "string"
          },
          "policy": {
            "default": "consoleAdmin",
            "required": [],
            "title": "policy",
            "type": "string"
          },
          "secretKey": {
            "default": "console123",
            "required": [],
            "title": "secretKey",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "users",
      "type": "array"
    },
    "volumePermissions": {
      "additionalProperties": true,
      "description": "# Init containers parameters:\n# volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.\n#",
      "properties": {
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "#\n#\n#\n#\n#",
          "properties": {
            "digest": {
              "default": "",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "#\n#",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "#\n# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "bitnami/bitnami-shell",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "11-debian-11-r63",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "# Init container' resource requests and limits\n# ref: https://kubernetes.io/docs/user-guide/compute-resources/\n# We usually recommend not to specify default resources and to leave this as a conscious\n# choice for the user. This also increases chances charts run on environments with little\n# resources, such as Minikube. If you do want to specify resources, uncomment the following\n# lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n#\n#\n#",
          "properties": {
            "limits": {
              "additionalProperties": true,
              "description": "# Example:\n# limits:\n#    cpu: 500m\n#    memory: 1Gi\n#",
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        }
      },
      "required": [],
      "title": "volumePermissions",
      "type": "object"
    },
    "webhooks": {
      "additionalProperties": true,
      "properties": {
        "mutatingWebhook": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "mutatingWebhook",
          "type": "object"
        },
        "port": {
          "default": 9443,
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "validatingWebhook": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "validatingWebhook",
          "type": "object"
        }
      },
      "required": [],
      "title": "webhooks",
      "type": "object"
    },
    "websocket": {
      "additionalProperties": true,
      "properties": {
        "allowedOrigins": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "allowedOrigins",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "noTLS": {
          "default": true,
          "required": [],
          "title": "noTLS",
          "type": "boolean"
        },
        "port": {
          "default": 443,
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "sameOrigin": {
          "default": false,
          "required": [],
          "title": "sameOrigin",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "websocket",
      "type": "object"
    },
    "write": {
      "additionalProperties": true,
      "description": "Configuration for the write pod(s)",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for write pods.",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/component": {
                                "default": "write",
                                "required": [],
                                "title": "app.kubernetes.io/component",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for write StatefulSet",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Behavior policies while scaling.",
              "properties": {
                "scaleDown": {
                  "additionalProperties": true,
                  "properties": {
                    "policies": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "periodSeconds": {
                            "default": 1800,
                            "required": [],
                            "title": "periodSeconds",
                            "type": "integer"
                          },
                          "type": {
                            "default": "Pods",
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "default": 1,
                            "required": [],
                            "title": "value",
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    },
                    "stabilizationWindowSeconds": {
                      "default": 3600,
                      "required": [],
                      "title": "stabilizationWindowSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "scaleDown",
                  "type": "object"
                },
                "scaleUp": {
                  "additionalProperties": true,
                  "description": "see https://github.com/grafana/loki/blob/main/docs/sources/operations/storage/wal.md#how-to-scale-updown for scaledown details",
                  "properties": {
                    "policies": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "periodSeconds": {
                            "default": 900,
                            "required": [],
                            "title": "periodSeconds",
                            "type": "integer"
                          },
                          "type": {
                            "default": "Pods",
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "default": 1,
                            "required": [],
                            "title": "value",
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "policies",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "scaleUp",
                  "type": "object"
                }
              },
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the write.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 6,
              "description": "Maximum autoscaling replicas for the write.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 2,
              "description": "Minimum autoscaling replicas for the write.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the write.",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilization percentage for the write.",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "DNS config for write pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the write",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeClaimTemplates": {
          "description": "volumeClaimTemplates to add to StatefulSet",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeClaimTemplates",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "null",
              "description": "The Docker registry for the write image. Overrides `loki.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the write image. Overrides `loki.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the write image. Overrides `loki.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "The default /flush_shutdown preStop hook is recommended as part of the ingester\nscaledown process so it's added to the template by default when autoscaling is enabled,\nbut it's disabled to optimize rolling restarts in instances that will never be scaled\ndown or when using chunks storage with WAL disabled.\nhttps://github.com/grafana/loki/blob/main/docs/sources/operations/storage/wal.md#how-to-scale-updown\nInit containers to add to the write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Lifecycle for the write container",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for write pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for volume claim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "dataVolumeParameters": {
              "additionalProperties": true,
              "description": "Parameters used for the `data` volume when volumeClaimEnabled if false",
              "properties": {
                "emptyDir": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "emptyDir",
                  "type": "object"
                }
              },
              "required": [],
              "title": "dataVolumeParameters",
              "type": "object"
            },
            "enableStatefulSetAutoDeletePVC": {
              "default": false,
              "description": "Enable StatefulSetAutoDeletePVC feature",
              "required": [],
              "title": "enableStatefulSetAutoDeletePVC",
              "type": "boolean"
            },
            "selector": {
              "default": "null",
              "description": "Selector for persistent disk",
              "required": [],
              "title": "selector",
              "type": "null"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            },
            "volumeClaimsEnabled": {
              "default": true,
              "description": "Enable volume claims in pod spec",
              "required": [],
              "title": "volumeClaimsEnabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for write pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Additional labels for each `write` pod",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podManagementPolicy": {
          "default": "Parallel",
          "description": "The default is to deploy all pods in parallel.",
          "required": [],
          "title": "podManagementPolicy",
          "type": "string"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for write pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 3,
          "description": "Number of replicas for the write",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the write",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "selectorLabels": {
          "additionalProperties": true,
          "description": "Additional selector labels for each `write` pod",
          "required": [],
          "title": "selectorLabels",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for write Service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels for write Service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "targetModule": {
          "default": "write",
          "description": "Comma-separated list of Loki modules to load for the write",
          "required": [],
          "title": "targetModule",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the write to shutdown before it is killed. Especially for the ingester,\nthis must be increased. It must be long enough so writes can be gracefully shutdown flushing/transferring\nall data and to successfully leave the member ring on shutdown.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Topology Spread Constraints for write pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "write",
      "type": "object"
    },
    "zfs": {
      "additionalProperties": true,
      "properties": {
        "bin": {
          "default": "zfs",
          "description": "If you use a non-standard path to the zfs binary, specify it here\nbin: /run/current-system/sw/bin/zfs",
          "required": [],
          "title": "bin",
          "type": "string"
        }
      },
      "required": [],
      "title": "zfs",
      "type": "object"
    },
    "zfs-localpv": {
      "additionalProperties": true,
      "description": "Refer to https://github.com/openebs/zfs-localpv/blob/v2.7.1/deploy/helm/charts/values.yaml for complete set of values.",
      "properties": {
        "crds": {
          "additionalProperties": true,
          "properties": {
            "csi": {
              "additionalProperties": true,
              "properties": {
                "volumeSnapshots": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "volumeSnapshots",
                  "type": "object"
                }
              },
              "required": [],
              "title": "csi",
              "type": "object"
            },
            "zfsLocalPv": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "zfsLocalPv",
              "type": "object"
            }
          },
          "required": [],
          "title": "crds",
          "type": "object"
        }
      },
      "required": [],
      "title": "zfs-localpv",
      "type": "object"
    },
    "zfsController": {
      "additionalProperties": true,
      "description": "zfsController contains the configurables for\nthe zfs controller deployment",
      "properties": {
        "additionalVolumes": {
          "additionalProperties": true,
          "required": [],
          "title": "additionalVolumes",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "componentName": {
          "default": "openebs-zfs-controller",
          "required": [],
          "title": "componentName",
          "type": "string"
        },
        "initContainers": {
          "additionalProperties": true,
          "required": [],
          "title": "initContainers",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "limits:\n  cpu: 10m\n  memory: 32Mi\nrequests:\n  cpu: 10m\n  memory: 32Mi\n# Labels to be added to openebs-zfs controller pods",
          "properties": {
            "name": {
              "default": "openebs-zfs-controller",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClass": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "zfs-csi-controller-critical",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "priorityClass",
          "type": "object"
        },
        "provisioner": {
          "additionalProperties": true,
          "properties": {
            "extraArgs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-provisioner",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v5.2.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-provisioner",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "provisioner",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resizer": {
          "additionalProperties": true,
          "properties": {
            "extraArgs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-resizer",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v1.13.2",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-resizer",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "resizer",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "snapshotController": {
          "additionalProperties": true,
          "properties": {
            "extraArgs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/snapshot-controller",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v8.2.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "snapshot-controller",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "snapshotController",
          "type": "object"
        },
        "snapshotter": {
          "additionalProperties": true,
          "properties": {
            "extraArgs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-snapshotter",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v8.2.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-snapshotter",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "snapshotter",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "zfsController",
      "type": "object"
    },
    "zfsLocalPv": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Install zfs-localpv CRDs",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "keep": {
          "default": true,
          "description": "Keep CRDs on chart uninstall",
          "required": [],
          "title": "keep",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "zfsLocalPv",
      "type": "object"
    },
    "zfsNode": {
      "additionalProperties": true,
      "description": "zfsNode contains the configurables for\nthe zfs node daemonset",
      "properties": {
        "additionalVolumes": {
          "additionalProperties": true,
          "required": [],
          "title": "additionalVolumes",
          "type": "object"
        },
        "allowedTopologyKeys": {
          "default": "All",
          "description": "allowed topologykeys for csi driver\nThe desired comma separated keys can be added here,\nby default all the node label keys are allowed.\nFor example:\nallowedTopologyKeys: \"kubernetes.io/hostname,openebs.io/rack\"",
          "required": [],
          "title": "allowedTopologyKeys",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "componentName": {
          "default": "openebs-zfs-node",
          "required": [],
          "title": "componentName",
          "type": "string"
        },
        "driverRegistrar": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "registry.k8s.io/",
                  "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "sig-storage/csi-node-driver-registrar",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v2.13.0",
                  "description": "Overrides the image tag whose default is the chart appVersion.",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "name": {
              "default": "csi-node-driver-registrar",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "driverRegistrar",
          "type": "object"
        },
        "encrKeysDir": {
          "default": "/home/keys",
          "required": [],
          "title": "encrKeysDir",
          "type": "string"
        },
        "initContainers": {
          "additionalProperties": true,
          "required": [],
          "title": "initContainers",
          "type": "object"
        },
        "kubeletDir": {
          "default": "/var/lib/kubelet/",
          "description": "limits:\n  cpu: 10m\n  memory: 32Mi\nrequests:\n  cpu: 10m\n  memory: 32Mi\nThis can be configured to run on various different k8s distributions like\nmicrok8s where kubelet dir is different",
          "required": [],
          "title": "kubeletDir",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "# Labels to be added to openebs-zfs node pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClass": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "zfs-csi-node-critical",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "priorityClass",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "zfsNode",
      "type": "object"
    },
    "zfsPlugin": {
      "additionalProperties": true,
      "description": "zfsPlugin is the common csi container used by the\ncontroller deployment and node daemonset",
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "",
              "description": "Make sure that registry name end with a '/'.\nFor example : registry.k8s.io/ is a correct value here and quay.io is incorrect",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "openebs/zfs-driver",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "2.8.0",
              "description": "Overrides the image tag whose default is the chart appVersion.",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "name": {
          "default": "openebs-zfs-plugin",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "zfsPlugin",
      "type": "object"
    }
  },
  "required": [],
  "type": "object"
}