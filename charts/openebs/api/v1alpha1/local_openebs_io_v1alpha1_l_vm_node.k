"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema LVMNode:
    r"""
    LVMNode records information about all lvm volume groups available in a node. In general, the openebs node-agent creates the LVMNode object & periodically synchronizing the volume groups available in the node. LVMNode has an owner reference pointing to the corresponding node object.

    Attributes
    ----------
    apiVersion : str, default is "local.openebs.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LVMNode", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    volumeGroups : [LocalOpenebsIoV1alpha1LVMNodeVolumeGroupsItems0], default is Undefined, required
        volume groups
    """
    apiVersion: "local.openebs.io/v1alpha1" = "local.openebs.io/v1alpha1"

    kind: "LVMNode" = "LVMNode"

    metadata?: v1.ObjectMeta
    volumeGroups: [LocalOpenebsIoV1alpha1LVMNodeVolumeGroupsItems0]

schema LocalOpenebsIoV1alpha1LVMNodeVolumeGroupsItems0:
    r"""
    VolumeGroup specifies attributes of a given vg exists on node.

    Attributes
    ----------
    allocationPolicy : int, default is Undefined, required
        AllocationPolicy indicates the volume group allocation policy. AllocationPolicy has the following mapping between int and string for its value: [-1: "", 0: "normal", 1: "contiguous", 2: "cling", 3: "anywhere", 4: "inherited"]
    free : int | str, default is Undefined, required
        Free specifies the available capacity of volume group.
    lvCount : int, default is Undefined, required
        LVCount denotes total number of logical volumes in volume group.
    maxLv : int, default is Undefined, required
        MaxLV denotes maximum number of logical volumes allowed in volume group or 0 if unlimited.
    maxPv : int, default is Undefined, required
        MaxPV denotes maximum number of physical volumes allowed in volume group or 0 if unlimited.
    metadataCount : int, default is Undefined, required
        MetadataCount denotes number of metadata areas on the volume group.
    metadataFree : int | str, default is Undefined, required
        MetadataFree specifies the available metadata area space for the volume group
    metadataSize : int | str, default is Undefined, required
        MetadataSize specifies size of smallest metadata area for the volume group
    metadataUsedCount : int, default is Undefined, required
        MetadataUsedCount denotes number of used metadata areas in volume group
    missingPvCount : int, default is Undefined, required
        MissingPVCount denotes number of physical volumes in volume group which are missing.
    name : str, default is Undefined, required
        Name of the lvm volume group.
    permissions : int, default is Undefined, required
        Permission indicates the volume group permission which can be writable or read-only. Permission has the following mapping between int and string for its value: [-1: "", 0: "writeable", 1: "read-only"]
    pvCount : int, default is Undefined, required
        PVCount denotes total number of physical volumes constituting the volume group.
    size : int | str, default is Undefined, required
        Size specifies the total size of volume group.
    snapCount : int, default is Undefined, required
        SnapCount denotes number of snapshots in volume group.
    uuid : str, default is Undefined, required
        UUID denotes a unique identity of a lvm volume group.
    """
    allocationPolicy: int

    free: int | str

    lvCount: int

    maxLv: int

    maxPv: int

    metadataCount: int

    metadataFree: int | str

    metadataSize: int | str

    metadataUsedCount: int

    missingPvCount: int

    name: str

    permissions: int

    pvCount: int

    size: int | str

    snapCount: int

    uuid: str

    check:
        _regex_match(str(free), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")
        lvCount >= 0
        _regex_match(str(metadataFree), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")
        _regex_match(str(metadataSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")
        len(name) >= 1
        pvCount >= 0
        _regex_match(str(size), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")
        len(uuid) >= 1

