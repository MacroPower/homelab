"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ZFSBackup:
    r"""
    ZFSBackup describes a zfs backup resource created as a custom resource

    Attributes
    ----------
    apiVersion : str, default is "zfs.openebs.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ZFSBackup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ZfsOpenebsIoV1ZFSBackupSpec, default is Undefined, required
        spec
    status : str, default is Undefined, required
        ZFSBackupStatus is to hold status of backup
    """
    apiVersion: "zfs.openebs.io/v1" = "zfs.openebs.io/v1"

    kind: "ZFSBackup" = "ZFSBackup"

    metadata?: v1.ObjectMeta
    spec: ZfsOpenebsIoV1ZFSBackupSpec

    status: "Init" | "Done" | "Failed" | "Pending" | "InProgress" | "Invalid"

schema ZfsOpenebsIoV1ZFSBackupSpec:
    r"""
    ZFSBackupSpec is the spec for a ZFSBackup resource

    Attributes
    ----------
    backupDest : str, default is Undefined, required
        BackupDest is the remote address for backup transfer
    ownerNodeID : str, default is Undefined, required
        OwnerNodeID is a name of the nodes where the source volume is
    prevSnapName : str, default is Undefined, optional
        PrevSnapName is the last completed-backup's snapshot name
    snapName : str, default is Undefined, optional
        SnapName is the snapshot name for backup
    volumeName : str, default is Undefined, required
        VolumeName is a name of the volume for which this backup is destined
    """
    backupDest: str

    ownerNodeID: str

    prevSnapName?: str
    snapName?: str
    volumeName: str

    check:
        len(backupDest) >= 1
        _regex_match(str(backupDest), r"^([0-9]+.[0-9]+.[0-9]+.[0-9]+:[0-9]+)$")
        len(ownerNodeID) >= 1
        len(snapName) >= 1 if snapName
        len(volumeName) >= 1

