"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    fullnameOverride : str, optional, default is ""
    global : ValuesGlobal, optional
        Generated from deployments/kubernetes/templates/chart/values.yaml.tmpl
    image : ValuesImage, optional
    kubernetes : ValuesKubernetes, optional
    nameOverride : str, optional, default is ""
    reloader : ValuesReloader, optional
    """
    [...str]: any
    fullnameOverride?: str
    global?: ValuesGlobal
    image?: ValuesImage
    kubernetes?: ValuesKubernetes
    nameOverride?: str
    reloader?: ValuesReloader

schema ValuesGlobal:
    r"""
    Generated from deployments/kubernetes/templates/chart/values.yaml.tmpl

    Attributes
    ----------
    imagePullSecrets : [any], optional
    imageRegistry : str, optional, default is ""
        # Reference to one or more secrets to be used when pulling images
        # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        #
    """
    [...str]: any
    imagePullSecrets?: [any]
    imageRegistry?: str

schema ValuesImage:
    r"""
    ValuesImage

    Attributes
    ----------
    name : str, optional, default is "stakater/reloader"
    pullPolicy : str, optional, default is "IfNotPresent"
        digest: sha256:1234567
    repository : str, optional, default is "ghcr.io/stakater/reloader"
    tag : str, optional, default is "v1.4.8"
    """
    [...str]: any
    name?: str
    pullPolicy?: str
    repository?: str
    tag?: str

schema ValuesKubernetes:
    r"""
    ValuesKubernetes

    Attributes
    ----------
    host : str, optional, default is "https://kubernetes.default"
    """
    [...str]: any
    host?: str

schema ValuesReloader:
    r"""
    ValuesReloader

    Attributes
    ----------
    autoReloadAll : bool, optional, default is False
    custom_annotations : ValuesReloaderCustomAnnotations, optional
        Optional flags to pass to the Reloader entrypoint
        Example:
          custom_annotations:
            configmap: "my.company.com/configmap"
            secret: "my.company.com/secret"
    deployment : ValuesReloaderDeployment, optional
    enableHA : bool, optional, default is False
        Set to true to enable leadership election allowing you to run multiple replicas
    enableMetricsByNamespace : bool, optional, default is False
        Set to true to expose a prometheus counter of reloads by namespace (this metric may have high cardinality in clusters with many namespaces)
    enablePProf : bool, optional, default is False
        Set to true to enable pprof for profiling
    ignoreConfigMaps : bool, optional, default is False
    ignoreCronJobs : bool, optional, default is False
        Set to true to exclude CronJob workloads from automatic reload monitoring
        Useful when you don't want CronJobs to be restarted when their referenced ConfigMaps/Secrets change
    ignoreJobs : bool, optional, default is False
        Set to true to exclude Job workloads from automatic reload monitoring
        Useful when you don't want Jobs to be restarted when their referenced ConfigMaps/Secrets change
    ignoreNamespaces : str, optional, default is ""
    ignoreSecrets : bool, optional, default is False
    isArgoRollouts : bool, optional, default is False
    isOpenshift : bool, optional, default is False
    legacy : ValuesReloaderLegacy, optional
    logFormat : str, optional, default is ""
    logLevel : str, optional, default is "info"
    matchLabels : ValuesReloaderMatchLabels, optional
    namespaceSelector : str, optional, default is ""
    netpol : ValuesReloaderNetpol, optional
    podDisruptionBudget : ValuesReloaderPodDisruptionBudget, optional
    podMonitor : ValuesReloaderPodMonitor, optional
    pprofAddr : str, optional, default is ":6060"
        Address to start pprof server on. Default is ":6060"
    rbac : ValuesReloaderRbac, optional
        labels: {}
        annotations: {}
        port: 9090
    readOnlyRootFileSystem : bool, optional, default is False
        Set to true if you have a pod security policy that enforces readOnlyRootFilesystem
    reloadOnCreate : bool, optional, default is False
    reloadOnDelete : bool, optional, default is False
    reloadStrategy : str, optional, default is "default"
    resourceLabelSelector : str, optional, default is ""
    service : ValuesReloaderService, optional
    serviceAccount : ValuesReloaderServiceAccount, optional
        Service account config for the agent pods
    serviceMonitor : ValuesReloaderServiceMonitor, optional
    syncAfterRestart : bool, optional, default is False
    verticalPodAutoscaler : ValuesReloaderVerticalPodAutoscaler, optional
        Enable vertical pod autoscaler
    watchGlobally : bool, optional, default is True
    webhookUrl : str, optional, default is ""
    """
    [...str]: any
    autoReloadAll?: bool
    custom_annotations?: ValuesReloaderCustomAnnotations
    deployment?: ValuesReloaderDeployment
    enableHA?: bool
    enableMetricsByNamespace?: bool
    enablePProf?: bool
    ignoreConfigMaps?: bool
    ignoreCronJobs?: bool
    ignoreJobs?: bool
    ignoreNamespaces?: str
    ignoreSecrets?: bool
    isArgoRollouts?: bool
    isOpenshift?: bool
    legacy?: ValuesReloaderLegacy
    logFormat?: str
    logLevel?: str
    matchLabels?: ValuesReloaderMatchLabels
    namespaceSelector?: str
    netpol?: ValuesReloaderNetpol
    podDisruptionBudget?: ValuesReloaderPodDisruptionBudget
    podMonitor?: ValuesReloaderPodMonitor
    pprofAddr?: str
    rbac?: ValuesReloaderRbac
    readOnlyRootFileSystem?: bool
    reloadOnCreate?: bool
    reloadOnDelete?: bool
    reloadStrategy?: str
    resourceLabelSelector?: str
    service?: ValuesReloaderService
    serviceAccount?: ValuesReloaderServiceAccount
    serviceMonitor?: ValuesReloaderServiceMonitor
    syncAfterRestart?: bool
    verticalPodAutoscaler?: ValuesReloaderVerticalPodAutoscaler
    watchGlobally?: bool
    webhookUrl?: str

schema ValuesReloaderCustomAnnotations:
    r"""
    Optional flags to pass to the Reloader entrypoint
    Example:
      custom_annotations:
        configmap: "my.company.com/configmap"
        secret: "my.company.com/secret"
    """
    [...str]: any

schema ValuesReloaderDeployment:
    r"""
    ValuesReloaderDeployment

    Attributes
    ----------
    affinity : ValuesReloaderDeploymentAffinity, optional
        An affinity stanza to be applied to the Deployment.
        Example:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: "node-role.kubernetes.io/infra-worker"
                    operator: "Exists"
    annotations : ValuesReloaderDeploymentAnnotations, optional
    containerSecurityContext : ValuesReloaderDeploymentContainerSecurityContext, optional
    dnsConfig : ValuesReloaderDeploymentDnsConfig, optional
        Specifies the deployment DNS configuration.
    env : ValuesReloaderDeploymentEnv, optional
        Support for extra environment variables.
    gomaxprocsOverride : str, optional, default is ""
        Put "0" in either to have go runtime ignore the set value.
        Otherwise, see https://pkg.go.dev/runtime#hdr-Environment_Variables for GOMAXPROCS and GOMEMLIMIT
    gomemlimitOverride : str, optional, default is ""
    labels : ValuesReloaderDeploymentLabels, optional
    livenessProbe : ValuesReloaderDeploymentLivenessProbe, optional
        Liveness and readiness probe timeout values.
    nodeSelector : any, optional, default is ""
    pod : ValuesReloaderDeploymentPod, optional
    priorityClassName : str, optional, default is ""
    readinessProbe : ValuesReloaderDeploymentReadinessProbe, optional
         timeoutSeconds: 5
         failureThreshold: 5
         periodSeconds: 10
         successThreshold: 1
    replicas : int, optional, default is 1
        If you wish to run multiple replicas set reloader.enableHA = true
    resources : ValuesReloaderDeploymentResources, optional
        Specify resource requests/limits for the deployment.
        Example:
        resources:
          limits:
            cpu: "100m"
            memory: "512Mi"
          requests:
            cpu: "10m"
            memory: "128Mi"
    revisionHistoryLimit : int, optional, default is 2
    securityContext : ValuesReloaderDeploymentSecurityContext, optional
    tolerations : [any], optional
        A list of tolerations to be applied to the Deployment.
        Example:
          tolerations:
          - key: "node-role.kubernetes.io/infra-worker"
            operator: "Exists"
            effect: "NoSchedule"
    topologySpreadConstraints : [any], optional
        Topology spread constraints for pod assignment
        Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
        Example:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: my-app
    volumeMounts : [any], optional
    volumes : [any], optional
    """
    [...str]: any
    affinity?: ValuesReloaderDeploymentAffinity
    annotations?: ValuesReloaderDeploymentAnnotations
    containerSecurityContext?: ValuesReloaderDeploymentContainerSecurityContext
    dnsConfig?: ValuesReloaderDeploymentDnsConfig
    env?: ValuesReloaderDeploymentEnv
    gomaxprocsOverride?: str
    gomemlimitOverride?: str
    labels?: ValuesReloaderDeploymentLabels
    livenessProbe?: ValuesReloaderDeploymentLivenessProbe
    nodeSelector?: any
    pod?: ValuesReloaderDeploymentPod
    priorityClassName?: str
    readinessProbe?: ValuesReloaderDeploymentReadinessProbe
    replicas?: int
    resources?: ValuesReloaderDeploymentResources
    revisionHistoryLimit?: int
    securityContext?: ValuesReloaderDeploymentSecurityContext
    tolerations?: [any]
    topologySpreadConstraints?: [any]
    volumeMounts?: [any]
    volumes?: [any]

schema ValuesReloaderDeploymentAffinity:
    r"""
    An affinity stanza to be applied to the Deployment.
    Example:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/infra-worker"
                operator: "Exists"
    """
    [...str]: any

schema ValuesReloaderDeploymentAnnotations:
    r"""
    ValuesReloaderDeploymentAnnotations
    """
    [...str]: any

schema ValuesReloaderDeploymentContainerSecurityContext:
    r"""
    ValuesReloaderDeploymentContainerSecurityContext
    """
    [...str]: any

schema ValuesReloaderDeploymentDnsConfig:
    r"""
    Specifies the deployment DNS configuration.
    """
    [...str]: any

schema ValuesReloaderDeploymentEnv:
    r"""
    Support for extra environment variables.

    Attributes
    ----------
    existing : any, optional, default is ""
        existing secret, you can specify multiple existing secrets, for each
        specify the env var name followed by the key in existing secret that
        will be used to populate the env var
    field : any, optional, default is ""
         ALERT_ON_RELOAD: <"true"|"false">
         ALERT_SINK: <"slack"> # By default it will be a raw text based webhook
         ALERT_WEBHOOK_URL: <"webhook_url">
         ALERT_ADDITIONAL_INFO: <"Additional Info like Cluster Name if needed">
        field supports Key value pair as environment variables. It gets the values from other fields of pod.
    open : any, optional, default is ""
        Open supports Key value pair as environment variables.
    secret : any, optional, default is ""
        secret supports Key value pair as environment variables. It gets the values based on keys from default reloader secret if any.
    """
    [...str]: any
    existing?: any
    field?: any
    open?: any
    secret?: any

schema ValuesReloaderDeploymentLabels:
    r"""
    ValuesReloaderDeploymentLabels

    Attributes
    ----------
    group : str, optional, default is "com.stakater.platform"
    provider : str, optional, default is "stakater"
    version : str, optional, default is "v1.4.8"
    """
    [...str]: any
    group?: str
    provider?: str
    version?: str

schema ValuesReloaderDeploymentLivenessProbe:
    r"""
    Liveness and readiness probe timeout values.
    """
    [...str]: any

schema ValuesReloaderDeploymentPod:
    r"""
    ValuesReloaderDeploymentPod

    Attributes
    ----------
    annotations : ValuesReloaderDeploymentPodAnnotations, optional
    """
    [...str]: any
    annotations?: ValuesReloaderDeploymentPodAnnotations

schema ValuesReloaderDeploymentPodAnnotations:
    r"""
    ValuesReloaderDeploymentPodAnnotations
    """
    [...str]: any

schema ValuesReloaderDeploymentReadinessProbe:
    r"""
     timeoutSeconds: 5
     failureThreshold: 5
     periodSeconds: 10
     successThreshold: 1
    """
    [...str]: any

schema ValuesReloaderDeploymentResources:
    r"""
    Specify resource requests/limits for the deployment.
    Example:
    resources:
      limits:
        cpu: "100m"
        memory: "512Mi"
      requests:
        cpu: "10m"
        memory: "128Mi"
    """
    [...str]: any

schema ValuesReloaderDeploymentSecurityContext:
    r"""
    ValuesReloaderDeploymentSecurityContext

    Attributes
    ----------
    runAsNonRoot : bool, optional, default is True
    runAsUser : int, optional, default is 65534
    seccompProfile : ValuesReloaderDeploymentSecurityContextSeccompProfile, optional
    """
    [...str]: any
    runAsNonRoot?: bool
    runAsUser?: int
    seccompProfile?: ValuesReloaderDeploymentSecurityContextSeccompProfile

schema ValuesReloaderDeploymentSecurityContextSeccompProfile:
    r"""
    ValuesReloaderDeploymentSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, optional, default is "RuntimeDefault"
    """
    [...str]: any
    $type?: str

schema ValuesReloaderLegacy:
    r"""
    ValuesReloaderLegacy

    Attributes
    ----------
    rbac : bool, optional, default is False
    """
    [...str]: any
    rbac?: bool

schema ValuesReloaderMatchLabels:
    r"""
    ValuesReloaderMatchLabels
    """
    [...str]: any

schema ValuesReloaderNetpol:
    r"""
    ValuesReloaderNetpol

    Attributes
    ----------
    enabled : bool, optional, default is False
    from : [any], optional
    to : [any], optional
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
    """
    [...str]: any
    enabled?: bool
    from?: [any]
    to?: [any]

schema ValuesReloaderPodDisruptionBudget:
    r"""
    ValuesReloaderPodDisruptionBudget

    Attributes
    ----------
    enabled : bool, optional, default is False
    """
    [...str]: any
    enabled?: bool

schema ValuesReloaderPodMonitor:
    r"""
    ValuesReloaderPodMonitor

    Attributes
    ----------
    annotations : ValuesReloaderPodMonitorAnnotations, optional
        # Used to pass annotations that are used by the Prometheus installed in your cluster to select Service Monitors to work with
        # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    enabled : bool, optional, default is False
    honorLabels : bool, optional, default is True
        Retain the job and instance labels of the metrics pushed to the Pushgateway
        [Scraping Pushgateway](https://github.com/prometheus/pushgateway#configure-the-pushgateway-as-a-target-to-scrape)
    labels : ValuesReloaderPodMonitorLabels, optional
        # Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
        # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    metricRelabelings : [any], optional
        # Metric relabel configs to apply to samples before ingestion.
        # [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
    podTargetLabels : [any], optional
    relabelings : [any], optional
        # Relabel configs to apply to samples before ingestion.
        # [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
    """
    [...str]: any
    annotations?: ValuesReloaderPodMonitorAnnotations
    enabled?: bool
    honorLabels?: bool
    labels?: ValuesReloaderPodMonitorLabels
    metricRelabelings?: [any]
    podTargetLabels?: [any]
    relabelings?: [any]

schema ValuesReloaderPodMonitorAnnotations:
    r"""
    # Used to pass annotations that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    """
    [...str]: any

schema ValuesReloaderPodMonitorLabels:
    r"""
    # Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    """
    [...str]: any

schema ValuesReloaderRbac:
    r"""
    labels: {}
    annotations: {}
    port: 9090

    Attributes
    ----------
    enabled : bool, optional, default is True
    labels : ValuesReloaderRbacLabels, optional
    """
    [...str]: any
    enabled?: bool
    labels?: ValuesReloaderRbacLabels

schema ValuesReloaderRbacLabels:
    r"""
    ValuesReloaderRbacLabels
    """
    [...str]: any

schema ValuesReloaderService:
    r"""
    ValuesReloaderService
    """
    [...str]: any

schema ValuesReloaderServiceAccount:
    r"""
    Service account config for the agent pods

    Attributes
    ----------
    annotations : ValuesReloaderServiceAccountAnnotations, optional
    create : bool, optional, default is True
        Specifies whether a ServiceAccount should be created
    labels : ValuesReloaderServiceAccountLabels, optional
    name : any, optional, default is ""
        The name of the ServiceAccount to use.
        If not set and create is true, a name is generated using the fullname template
    """
    [...str]: any
    annotations?: ValuesReloaderServiceAccountAnnotations
    create?: bool
    labels?: ValuesReloaderServiceAccountLabels
    name?: any

schema ValuesReloaderServiceAccountAnnotations:
    r"""
    ValuesReloaderServiceAccountAnnotations
    """
    [...str]: any

schema ValuesReloaderServiceAccountLabels:
    r"""
    ValuesReloaderServiceAccountLabels
    """
    [...str]: any

schema ValuesReloaderServiceMonitor:
    r"""
    ValuesReloaderServiceMonitor

    Attributes
    ----------
    annotations : ValuesReloaderServiceMonitorAnnotations, optional
        # Used to pass annotations that are used by the Prometheus installed in your cluster to select Service Monitors to work with
        # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    enabled : bool, optional, default is False
        Deprecated: Service monitor will be removed in future releases of reloader in favour of Pod monitor
        Enabling this requires service to be enabled as well, or no endpoints will be found
    honorLabels : bool, optional, default is True
        Retain the job and instance labels of the metrics pushed to the Pushgateway
        [Scraping Pushgateway](https://github.com/prometheus/pushgateway#configure-the-pushgateway-as-a-target-to-scrape)
    labels : ValuesReloaderServiceMonitorLabels, optional
        # Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
        # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    metricRelabelings : [any], optional
        # Metric relabel configs to apply to samples before ingestion.
        # [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
    relabelings : [any], optional
        # Relabel configs to apply to samples before ingestion.
        # [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
    targetLabels : [any], optional
    """
    [...str]: any
    annotations?: ValuesReloaderServiceMonitorAnnotations
    enabled?: bool
    honorLabels?: bool
    labels?: ValuesReloaderServiceMonitorLabels
    metricRelabelings?: [any]
    relabelings?: [any]
    targetLabels?: [any]

schema ValuesReloaderServiceMonitorAnnotations:
    r"""
    # Used to pass annotations that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    """
    [...str]: any

schema ValuesReloaderServiceMonitorLabels:
    r"""
    # Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    """
    [...str]: any

schema ValuesReloaderVerticalPodAutoscaler:
    r"""
    Enable vertical pod autoscaler

    Attributes
    ----------
    controlledResources : [any], optional
        List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    enabled : bool, optional, default is False
    maxAllowed : ValuesReloaderVerticalPodAutoscalerMaxAllowed, optional
        Define the max allowed resources for the pod
    minAllowed : ValuesReloaderVerticalPodAutoscalerMinAllowed, optional
        cpu: 200m
        memory: 100Mi
        Define the min allowed resources for the pod
    updatePolicy : ValuesReloaderVerticalPodAutoscalerUpdatePolicy, optional
    """
    [...str]: any
    controlledResources?: [any]
    enabled?: bool
    maxAllowed?: ValuesReloaderVerticalPodAutoscalerMaxAllowed
    minAllowed?: ValuesReloaderVerticalPodAutoscalerMinAllowed
    updatePolicy?: ValuesReloaderVerticalPodAutoscalerUpdatePolicy

schema ValuesReloaderVerticalPodAutoscalerMaxAllowed:
    r"""
    Define the max allowed resources for the pod
    """
    [...str]: any

schema ValuesReloaderVerticalPodAutoscalerMinAllowed:
    r"""
    cpu: 200m
    memory: 100Mi
    Define the min allowed resources for the pod
    """
    [...str]: any

schema ValuesReloaderVerticalPodAutoscalerUpdatePolicy:
    r"""
    ValuesReloaderVerticalPodAutoscalerUpdatePolicy

    Attributes
    ----------
    updateMode : str, optional, default is "Auto"
        Specifies minimal number of replicas which need to be alive for VPA Updater to attempt pod eviction
        minReplicas: 1
        Specifies whether recommended updates are applied when a Pod is started and whether recommended updates
        are applied during the life of a Pod. Possible values are "Off", "Initial", "Recreate", and "Auto".
    """
    [...str]: any
    updateMode?: str

