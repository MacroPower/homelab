"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema CiliumLoadBalancerIPPool:
    r"""
    CiliumLoadBalancerIPPool is a Kubernetes third-party resource which
    is used to defined pools of IPs which the operator can use to to allocate
    and advertise IPs for Services of type LoadBalancer.

    Attributes
    ----------
    apiVersion : str, default is "cilium.io/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CiliumLoadBalancerIPPool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : CiliumIoV2CiliumLoadBalancerIPPoolSpec, default is Undefined, required
        spec
    status : CiliumIoV2CiliumLoadBalancerIPPoolStatus, default is Undefined, optional
        status
    """
    apiVersion: "cilium.io/v2" = "cilium.io/v2"

    kind: "CiliumLoadBalancerIPPool" = "CiliumLoadBalancerIPPool"

    metadata: v1.ObjectMeta

    spec: CiliumIoV2CiliumLoadBalancerIPPoolSpec

    status?: CiliumIoV2CiliumLoadBalancerIPPoolStatus

schema CiliumIoV2CiliumLoadBalancerIPPoolSpec:
    r"""
    Spec is a human readable description for a BGP load balancer
    ip pool.

    Attributes
    ----------
    allowFirstLastIPs : str, default is Undefined, optional
        AllowFirstLastIPs, if set to `Yes` or undefined means that the first and last IPs of each CIDR will be allocatable.
        If `No`, these IPs will be reserved. This field is ignored for /{31,32} and /{127,128} CIDRs since
        reserving the first and last IPs would make the CIDRs unusable.
    blocks : [CiliumIoV2CiliumLoadBalancerIPPoolSpecBlocksItems0], default is Undefined, optional
        Blocks is a list of CIDRs comprising this IP Pool
    disabled : bool, default is Undefined, optional
        Disabled, if set to true means that no new IPs will be allocated from this pool.
        Existing allocations will not be removed from services.
    serviceSelector : CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelector, default is Undefined, optional
        service selector
    """
    allowFirstLastIPs?: "Yes" | "No"
    blocks?: [CiliumIoV2CiliumLoadBalancerIPPoolSpecBlocksItems0]
    disabled?: bool = False
    serviceSelector?: CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelector

schema CiliumIoV2CiliumLoadBalancerIPPoolSpecBlocksItems0:
    r"""
    CiliumLoadBalancerIPPoolIPBlock describes a single IP block.

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        cidr
    start : str, default is Undefined, optional
        start
    stop : str, default is Undefined, optional
        stop
    """
    cidr?: str
    start?: str
    stop?: str

schema CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelector:
    r"""
    ServiceSelector selects a set of services which are eligible to receive IPs from this

    Attributes
    ----------
    matchExpressions : [CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """
    matchExpressions?: [CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelectorMatchExpressionsItems0]
    matchLabels?: {str:str}

    check:
        all _, matchLabels in matchLabels {len(matchLabels) <= 63 if matchLabels not in [None, Undefined]} if matchLabels
        all _, matchLabels in matchLabels {_regex_match(str(matchLabels), r"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$") if matchLabels} if matchLabels

schema CiliumIoV2CiliumLoadBalancerIPPoolSpecServiceSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: "In" | "NotIn" | "Exists" | "DoesNotExist"

    values?: [str]

schema CiliumIoV2CiliumLoadBalancerIPPoolStatus:
    r"""
    Status is the status of the IP Pool.

    It might be possible for users to define overlapping IP Pools, we can't validate or enforce non-overlapping pools
    during object creation. The Cilium operator will do this validation and update the status to reflect the ability
    to allocate IPs from this pool.

    Attributes
    ----------
    conditions : [CiliumIoV2CiliumLoadBalancerIPPoolStatusConditionsItems0], default is Undefined, optional
        Current service state
    """
    conditions?: [CiliumIoV2CiliumLoadBalancerIPPoolStatusConditionsItems0]

schema CiliumIoV2CiliumLoadBalancerIPPoolStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

