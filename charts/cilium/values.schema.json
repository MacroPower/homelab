{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "MTU": {
      "default": 0,
      "description": "Configure the underlying network MTU to overwrite auto-detected MTU.\nThis value doesn't change the host network interface MTU i.e. eth0 or ens0.\nIt changes the MTU for cilium_net\ncilium_vxlan and lxc_health interfaces.",
      "required": [],
      "title": "MTU",
      "type": "integer"
    },
    "affinity": {
      "additionalProperties": true,
      "description": "Affinity for cilium-agent.",
      "properties": {
        "podAntiAffinity": {
          "additionalProperties": true,
          "properties": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "labelSelector": {
                    "additionalProperties": true,
                    "properties": {
                      "matchLabels": {
                        "additionalProperties": true,
                        "properties": {
                          "k8s-app": {
                            "default": "cilium",
                            "required": [],
                            "title": "k8s-app",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "matchLabels",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "labelSelector",
                    "type": "object"
                  },
                  "topologyKey": {
                    "default": "kubernetes.io/hostname",
                    "required": [],
                    "title": "topologyKey",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "requiredDuringSchedulingIgnoredDuringExecution",
              "type": "array"
            }
          },
          "required": [],
          "title": "podAntiAffinity",
          "type": "object"
        }
      },
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "agent": {
      "default": true,
      "description": "Install the cilium agent resources.",
      "required": [],
      "title": "agent",
      "type": "boolean"
    },
    "agentNotReadyTaintKey": {
      "default": "node.cilium.io/agent-not-ready",
      "description": "Configure the key of the taint indicating that Cilium is not ready on the node.\nWhen set to a value starting with `ignore-taint.cluster-autoscaler.kubernetes.io/`, the Cluster Autoscaler will ignore the taint on its decisions, allowing the cluster to scale up.",
      "required": [],
      "title": "agentNotReadyTaintKey",
      "type": "string"
    },
    "aksbyocni": {
      "additionalProperties": true,
      "description": "Configuration Values for cilium-agent",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable AKS BYOCNI integration.\nNote that this is incompatible with AKS clusters not created in BYOCNI mode:\nuse Azure integration (`azure.enabled`) instead.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "aksbyocni",
      "type": "object"
    },
    "alibabacloud": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable AlibabaCloud ENI integration",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alibabacloud",
      "type": "object"
    },
    "annotateK8sNode": {
      "default": false,
      "description": "Annotate k8s node upon initialization with Cilium's metadata.",
      "required": [],
      "title": "annotateK8sNode",
      "type": "boolean"
    },
    "annotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to all top-level cilium-agent objects (resources under templates/cilium-agent)",
      "required": [],
      "title": "annotations",
      "type": "object"
    },
    "apiRateLimit": {
      "default": "~",
      "description": "The api-rate-limit option can be used to overwrite individual settings of the default configuration for rate limiting calls to the Cilium Agent API",
      "required": [],
      "title": "apiRateLimit",
      "type": [
        "null",
        "string"
      ]
    },
    "authentication": {
      "additionalProperties": true,
      "description": "Configuration for types of authentication for Cilium (beta)",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable authentication processing and garbage collection.\nNote that if disabled, policy enforcement will still block requests that require authentication.\nBut the resulting authentication requests for these requests will not be processed, therefore the requests not be allowed.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "gcInterval": {
          "default": "5m0s",
          "description": "Interval for garbage collection of auth map entries.",
          "required": [],
          "title": "gcInterval",
          "type": "string"
        },
        "mutual": {
          "additionalProperties": true,
          "description": "Configuration for Cilium's service-to-service mutual authentication using TLS handshakes.\nNote that this is not full mTLS support without also enabling encryption of some form.\nCurrent encryption options are WireGuard or IPsec, configured in encryption block above.",
          "properties": {
            "connectTimeout": {
              "default": "5s",
              "description": "Timeout for connecting to the remote node TCP socket",
              "required": [],
              "title": "connectTimeout",
              "type": "string"
            },
            "port": {
              "default": 4250,
              "description": "Port on the agent where mutual authentication handshakes between agents will be performed",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "spire": {
              "additionalProperties": true,
              "description": "Settings for SPIRE",
              "properties": {
                "adminSocketPath": {
                  "default": "/run/spire/sockets/admin.sock",
                  "description": "SPIRE socket path where the SPIRE delegated api agent is listening",
                  "required": [],
                  "title": "adminSocketPath",
                  "type": "string"
                },
                "agentSocketPath": {
                  "default": "/run/spire/sockets/agent/agent.sock",
                  "description": "SPIRE socket path where the SPIRE workload agent is listening.\nApplies to both the Cilium Agent and Operator",
                  "required": [],
                  "title": "agentSocketPath",
                  "type": "string"
                },
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations to be added to all top-level spire objects (resources under templates/spire)",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "connectionTimeout": {
                  "default": "30s",
                  "description": "SPIRE connection timeout",
                  "required": [],
                  "title": "connectionTimeout",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable SPIRE integration (beta)",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "install": {
                  "additionalProperties": true,
                  "description": "Settings to control the SPIRE installation and configuration",
                  "properties": {
                    "agent": {
                      "additionalProperties": true,
                      "description": "SPIRE agent configuration",
                      "properties": {
                        "affinity": {
                          "additionalProperties": true,
                          "description": "SPIRE agent affinity configuration",
                          "required": [],
                          "title": "affinity",
                          "type": "object"
                        },
                        "annotations": {
                          "additionalProperties": true,
                          "description": "SPIRE agent annotations",
                          "required": [],
                          "title": "annotations",
                          "type": "object"
                        },
                        "image": {
                          "additionalProperties": true,
                          "description": "SPIRE agent image",
                          "properties": {
                            "digest": {
                              "default": "sha256:163970884fba18860cac93655dc32b6af85a5dcf2ebb7e3e119a10888eff8fcd",
                              "required": [],
                              "title": "digest",
                              "type": "string"
                            },
                            "override": {
                              "default": "~",
                              "required": [],
                              "title": "override",
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "pullPolicy": {
                              "default": "IfNotPresent",
                              "required": [],
                              "title": "pullPolicy",
                              "type": "string"
                            },
                            "repository": {
                              "default": "ghcr.io/spiffe/spire-agent",
                              "required": [],
                              "title": "repository",
                              "type": "string"
                            },
                            "tag": {
                              "default": "1.12.4",
                              "required": [],
                              "title": "tag",
                              "type": "string"
                            },
                            "useDigest": {
                              "default": true,
                              "required": [],
                              "title": "useDigest",
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "image",
                          "type": "object"
                        },
                        "labels": {
                          "additionalProperties": true,
                          "description": "SPIRE agent labels",
                          "required": [],
                          "title": "labels",
                          "type": "object"
                        },
                        "nodeSelector": {
                          "additionalProperties": true,
                          "description": "SPIRE agent nodeSelector configuration\nref: ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
                          "required": [],
                          "title": "nodeSelector",
                          "type": "object"
                        },
                        "podSecurityContext": {
                          "additionalProperties": true,
                          "description": "Security context to be added to spire agent pods.\nSecurityContext holds pod-level security attributes and common container settings.\nref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
                          "required": [],
                          "title": "podSecurityContext",
                          "type": "object"
                        },
                        "priorityClassName": {
                          "default": "",
                          "description": "The priority class to use for the spire agent",
                          "required": [],
                          "title": "priorityClassName",
                          "type": "string"
                        },
                        "resources": {
                          "additionalProperties": true,
                          "description": "container resource limits \u0026 requests",
                          "required": [],
                          "title": "resources",
                          "type": "object"
                        },
                        "securityContext": {
                          "additionalProperties": true,
                          "description": "Security context to be added to spire agent containers.\nSecurityContext holds pod-level security attributes and common container settings.\nref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
                          "required": [],
                          "title": "securityContext",
                          "type": "object"
                        },
                        "serviceAccount": {
                          "additionalProperties": true,
                          "description": "SPIRE agent service account",
                          "properties": {
                            "create": {
                              "default": true,
                              "required": [],
                              "title": "create",
                              "type": "boolean"
                            },
                            "name": {
                              "default": "spire-agent",
                              "required": [],
                              "title": "name",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "serviceAccount",
                          "type": "object"
                        },
                        "skipKubeletVerification": {
                          "default": true,
                          "description": "SPIRE Workload Attestor kubelet verification.",
                          "required": [],
                          "title": "skipKubeletVerification",
                          "type": "boolean"
                        },
                        "tolerations": {
                          "description": "SPIRE agent tolerations configuration\nBy default it follows the same tolerations as the agent itself\nto allow the Cilium agent on this node to connect to SPIRE.\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
                          "items": {
                            "additionalProperties": true,
                            "properties": {
                              "effect": {
                                "default": "NoSchedule",
                                "required": [],
                                "title": "effect",
                                "type": "string"
                              },
                              "key": {
                                "default": "CriticalAddonsOnly",
                                "required": [],
                                "title": "key",
                                "type": "string"
                              },
                              "operator": {
                                "default": "Exists",
                                "required": [],
                                "title": "operator",
                                "type": "string"
                              },
                              "value": {
                                "default": "true",
                                "required": [],
                                "title": "value",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "required": [],
                          "title": "tolerations",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "agent",
                      "type": "object"
                    },
                    "enabled": {
                      "default": true,
                      "description": "Enable SPIRE installation.\nThis will only take effect only if authentication.mutual.spire.enabled is true",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "existingNamespace": {
                      "default": false,
                      "description": "SPIRE namespace already exists. Set to true if Helm should not create, manage, and import the SPIRE namespace.",
                      "required": [],
                      "title": "existingNamespace",
                      "type": "boolean"
                    },
                    "initImage": {
                      "additionalProperties": true,
                      "description": "init container image of SPIRE agent and server",
                      "properties": {
                        "digest": {
                          "default": "sha256:2f590fc602ce325cbff2ccfc39499014d039546dc400ef8bbf5c6ffb860632e7",
                          "required": [],
                          "title": "digest",
                          "type": "string"
                        },
                        "override": {
                          "default": "~",
                          "required": [],
                          "title": "override",
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "pullPolicy": {
                          "default": "IfNotPresent",
                          "required": [],
                          "title": "pullPolicy",
                          "type": "string"
                        },
                        "repository": {
                          "default": "docker.io/library/busybox",
                          "required": [],
                          "title": "repository",
                          "type": "string"
                        },
                        "tag": {
                          "default": "1.37.0",
                          "required": [],
                          "title": "tag",
                          "type": "string"
                        },
                        "useDigest": {
                          "default": true,
                          "required": [],
                          "title": "useDigest",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "initImage",
                      "type": "object"
                    },
                    "namespace": {
                      "default": "cilium-spire",
                      "description": "SPIRE namespace to install into",
                      "required": [],
                      "title": "namespace",
                      "type": "string"
                    },
                    "server": {
                      "additionalProperties": true,
                      "properties": {
                        "affinity": {
                          "additionalProperties": true,
                          "description": "SPIRE server affinity configuration",
                          "required": [],
                          "title": "affinity",
                          "type": "object"
                        },
                        "annotations": {
                          "additionalProperties": true,
                          "description": "SPIRE server annotations",
                          "required": [],
                          "title": "annotations",
                          "type": "object"
                        },
                        "ca": {
                          "additionalProperties": true,
                          "description": "SPIRE CA configuration",
                          "properties": {
                            "keyType": {
                              "default": "rsa-4096",
                              "description": "SPIRE CA key type\nAWS requires the use of RSA. EC cryptography is not supported",
                              "required": [],
                              "title": "keyType",
                              "type": "string"
                            },
                            "subject": {
                              "additionalProperties": true,
                              "description": "SPIRE CA Subject",
                              "properties": {
                                "commonName": {
                                  "default": "Cilium SPIRE CA",
                                  "required": [],
                                  "title": "commonName",
                                  "type": "string"
                                },
                                "country": {
                                  "default": "US",
                                  "required": [],
                                  "title": "country",
                                  "type": "string"
                                },
                                "organization": {
                                  "default": "SPIRE",
                                  "required": [],
                                  "title": "organization",
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "title": "subject",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "ca",
                          "type": "object"
                        },
                        "dataStorage": {
                          "additionalProperties": true,
                          "description": "SPIRE server datastorage configuration",
                          "properties": {
                            "accessMode": {
                              "default": "ReadWriteOnce",
                              "description": "Access mode of the SPIRE server data storage",
                              "required": [],
                              "title": "accessMode",
                              "type": "string"
                            },
                            "enabled": {
                              "default": true,
                              "description": "Enable SPIRE server data storage",
                              "required": [],
                              "title": "enabled",
                              "type": "boolean"
                            },
                            "size": {
                              "default": "1Gi",
                              "description": "Size of the SPIRE server data storage",
                              "required": [],
                              "title": "size",
                              "type": "string"
                            },
                            "storageClass": {
                              "default": "null",
                              "description": "StorageClass of the SPIRE server data storage",
                              "required": [],
                              "title": "storageClass",
                              "type": [
                                "null",
                                "string"
                              ]
                            }
                          },
                          "required": [],
                          "title": "dataStorage",
                          "type": "object"
                        },
                        "image": {
                          "additionalProperties": true,
                          "description": "SPIRE server image",
                          "properties": {
                            "digest": {
                              "default": "sha256:34147f27066ab2be5cc10ca1d4bfd361144196467155d46c45f3519f41596e49",
                              "required": [],
                              "title": "digest",
                              "type": "string"
                            },
                            "override": {
                              "default": "~",
                              "required": [],
                              "title": "override",
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "pullPolicy": {
                              "default": "IfNotPresent",
                              "required": [],
                              "title": "pullPolicy",
                              "type": "string"
                            },
                            "repository": {
                              "default": "ghcr.io/spiffe/spire-server",
                              "required": [],
                              "title": "repository",
                              "type": "string"
                            },
                            "tag": {
                              "default": "1.12.4",
                              "required": [],
                              "title": "tag",
                              "type": "string"
                            },
                            "useDigest": {
                              "default": true,
                              "required": [],
                              "title": "useDigest",
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "image",
                          "type": "object"
                        },
                        "initContainers": {
                          "description": "SPIRE server init containers",
                          "items": {
                            "required": []
                          },
                          "required": [],
                          "title": "initContainers",
                          "type": "array"
                        },
                        "labels": {
                          "additionalProperties": true,
                          "description": "SPIRE server labels",
                          "required": [],
                          "title": "labels",
                          "type": "object"
                        },
                        "nodeSelector": {
                          "additionalProperties": true,
                          "description": "SPIRE server nodeSelector configuration\nref: ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
                          "required": [],
                          "title": "nodeSelector",
                          "type": "object"
                        },
                        "podSecurityContext": {
                          "additionalProperties": true,
                          "description": "Security context to be added to spire server pods.\nSecurityContext holds pod-level security attributes and common container settings.\nref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
                          "required": [],
                          "title": "podSecurityContext",
                          "type": "object"
                        },
                        "priorityClassName": {
                          "default": "",
                          "description": "The priority class to use for the spire server",
                          "required": [],
                          "title": "priorityClassName",
                          "type": "string"
                        },
                        "resources": {
                          "additionalProperties": true,
                          "description": "SPIRE server service configuration\ncontainer resource limits \u0026 requests",
                          "required": [],
                          "title": "resources",
                          "type": "object"
                        },
                        "securityContext": {
                          "additionalProperties": true,
                          "description": "Security context to be added to spire server containers.\nSecurityContext holds pod-level security attributes and common container settings.\nref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
                          "required": [],
                          "title": "securityContext",
                          "type": "object"
                        },
                        "service": {
                          "additionalProperties": true,
                          "properties": {
                            "annotations": {
                              "additionalProperties": true,
                              "description": "Annotations to be added to the SPIRE server service",
                              "required": [],
                              "title": "annotations",
                              "type": "object"
                            },
                            "labels": {
                              "additionalProperties": true,
                              "description": "Labels to be added to the SPIRE server service",
                              "required": [],
                              "title": "labels",
                              "type": "object"
                            },
                            "type": {
                              "default": "ClusterIP",
                              "description": "Service type for the SPIRE server service",
                              "required": [],
                              "title": "type",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "service",
                          "type": "object"
                        },
                        "serviceAccount": {
                          "additionalProperties": true,
                          "description": "SPIRE server service account",
                          "properties": {
                            "create": {
                              "default": true,
                              "required": [],
                              "title": "create",
                              "type": "boolean"
                            },
                            "name": {
                              "default": "spire-server",
                              "required": [],
                              "title": "name",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "serviceAccount",
                          "type": "object"
                        },
                        "tolerations": {
                          "description": "SPIRE server tolerations configuration\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
                          "items": {
                            "required": []
                          },
                          "required": [],
                          "title": "tolerations",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "server",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "install",
                  "type": "object"
                },
                "serverAddress": {
                  "default": "~",
                  "description": "SPIRE server address used by Cilium Operator\n\nIf k8s Service DNS along with port number is used (e.g. \u003cservice-name\u003e.\u003cnamespace\u003e.svc(.*):\u003cport-number\u003e format),\nCilium Operator will resolve its address by looking up the clusterIP from Service resource.\n\nExample values: 10.0.0.1:8081, spire-server.cilium-spire.svc:8081",
                  "required": [],
                  "title": "serverAddress",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "trustDomain": {
                  "default": "spiffe.cilium",
                  "description": "SPIFFE trust domain to use for fetching certificates",
                  "required": [],
                  "title": "trustDomain",
                  "type": "string"
                }
              },
              "required": [],
              "title": "spire",
              "type": "object"
            }
          },
          "required": [],
          "title": "mutual",
          "type": "object"
        },
        "queueSize": {
          "default": 1024,
          "description": "Buffer size of the channel Cilium uses to receive authentication events from the signal map.",
          "required": [],
          "title": "queueSize",
          "type": "integer"
        },
        "rotatedIdentitiesQueueSize": {
          "default": 1024,
          "description": "Buffer size of the channel Cilium uses to receive certificate expiration events from auth handlers.",
          "required": [],
          "title": "rotatedIdentitiesQueueSize",
          "type": "integer"
        }
      },
      "required": [],
      "title": "authentication",
      "type": "object"
    },
    "autoDirectNodeRoutes": {
      "default": false,
      "description": "Enable installation of PodCIDR routes between worker\nnodes if worker nodes share a common L2 network segment.",
      "required": [],
      "title": "autoDirectNodeRoutes",
      "type": [
        "boolean",
        "string"
      ]
    },
    "azure": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable Azure integration.\nNote that this is incompatible with AKS clusters created in BYOCNI mode: use\nAKS BYOCNI integration (`aksbyocni.enabled`) instead.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "azure",
      "type": "object"
    },
    "bandwidthManager": {
      "additionalProperties": true,
      "description": "Enable bandwidth manager to optimize TCP and UDP workloads and allow\nfor rate-limiting traffic from individual Pods with EDT (Earliest Departure\nTime) through the \"kubernetes.io/egress-bandwidth\" Pod annotation.",
      "properties": {
        "bbr": {
          "default": false,
          "description": "Activate BBR TCP congestion control for Pods",
          "required": [],
          "title": "bbr",
          "type": "boolean"
        },
        "bbrHostNamespaceOnly": {
          "default": false,
          "description": "Activate BBR TCP congestion control for Pods in the host namespace only.",
          "required": [],
          "title": "bbrHostNamespaceOnly",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "description": "Enable bandwidth manager infrastructure (also prerequirement for BBR)",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "bandwidthManager",
      "type": "object"
    },
    "bgpControlPlane": {
      "additionalProperties": true,
      "description": "This feature set enables virtual BGP routers to be created via\nCiliumBGPPeeringPolicy CRDs.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enables the BGP control plane.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "legacyOriginAttribute": {
          "additionalProperties": true,
          "description": "Legacy BGP ORIGIN attribute settings (BGPv2 only)",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable/Disable advertising LoadBalancerIP routes with the legacy\nBGP ORIGIN attribute value INCOMPLETE (2) instead of the default IGP (0).\nEnable for compatibility with the legacy behavior of MetalLB integration.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "legacyOriginAttribute",
          "type": "object"
        },
        "routerIDAllocation": {
          "additionalProperties": true,
          "description": "BGP router-id allocation mode",
          "properties": {
            "ipPool": {
              "default": "",
              "description": "IP pool to allocate the BGP router-id from when the mode is ip-pool.",
              "required": [],
              "title": "ipPool",
              "type": "string"
            },
            "mode": {
              "default": "default",
              "description": "BGP router-id allocation mode. In default mode, the router-id is derived from the IPv4 address if it is available, or else it is determined by the lower 32 bits of the MAC address.",
              "required": [],
              "title": "mode",
              "type": "string"
            }
          },
          "required": [],
          "title": "routerIDAllocation",
          "type": "object"
        },
        "secretsNamespace": {
          "additionalProperties": true,
          "description": "SecretsNamespace is the namespace which BGP support will retrieve secrets from.",
          "properties": {
            "create": {
              "default": false,
              "description": "Create secrets namespace for BGP secrets.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "kube-system",
              "description": "The name of the secret namespace to which Cilium agents are given read access",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "secretsNamespace",
          "type": "object"
        },
        "statusReport": {
          "additionalProperties": true,
          "description": "Status reporting settings (BGPv2 only)",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable/Disable BGPv2 status reporting\nIt is recommended to enable status reporting in general, but if you have any issue\nsuch as high API server load, you can disable it by setting this to false.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "statusReport",
          "type": "object"
        }
      },
      "required": [],
      "title": "bgpControlPlane",
      "type": "object"
    },
    "bpf": {
      "additionalProperties": true,
      "properties": {
        "authMapMax": {
          "default": "~",
          "description": "(int) Configure the maximum number of entries in auth map.",
          "required": [],
          "title": "authMapMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "autoMount": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable automatic mount of BPF filesystem\nWhen `autoMount` is enabled, the BPF filesystem is mounted at\n`bpf.root` path on the underlying host and inside the cilium agent pod.\nIf users disable `autoMount`, it's expected that users have mounted\nbpffs filesystem at the specified `bpf.root` volume, and then the\nvolume will be mounted inside the cilium agent pod at the same path.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "autoMount",
          "type": "object"
        },
        "ctAccounting": {
          "default": false,
          "description": "Enable CT accounting for packets and bytes",
          "required": [],
          "title": "ctAccounting",
          "type": "boolean"
        },
        "ctAnyMax": {
          "default": "~",
          "description": "(int) Configure the maximum number of entries for the non-TCP connection\ntracking table.",
          "required": [],
          "title": "ctAnyMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "ctTcpMax": {
          "default": "~",
          "description": "(int) Configure the maximum number of entries in the TCP connection tracking\ntable.",
          "required": [],
          "title": "ctTcpMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "datapathMode": {
          "default": "veth",
          "description": "(string) Mode for Pod devices for the core datapath (veth, netkit, netkit-l2)",
          "required": [],
          "title": "datapathMode",
          "type": "string"
        },
        "disableExternalIPMitigation": {
          "default": false,
          "description": "(bool) Disable ExternalIP mitigation (CVE-2020-8554)",
          "required": [],
          "title": "disableExternalIPMitigation",
          "type": "boolean"
        },
        "distributedLRU": {
          "additionalProperties": true,
          "description": "Control to use a distributed per-CPU backend memory for the core BPF LRU maps\nwhich Cilium uses. This improves performance significantly, but it is also\nrecommended to increase BPF map sizing along with that.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable distributed LRU backend memory. For compatibility with existing\ninstallations it is off by default.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "distributedLRU",
          "type": "object"
        },
        "enableTCX": {
          "default": true,
          "description": "(bool) Attach endpoint programs using tcx instead of legacy tc hooks on\nsupported kernels.",
          "required": [],
          "title": "enableTCX",
          "type": "boolean"
        },
        "events": {
          "additionalProperties": true,
          "description": "Control events generated by the Cilium datapath exposed to Cilium monitor and Hubble.\nHelm configuration for BPF events map rate limiting is experimental and might change\nin upcoming releases.",
          "properties": {
            "default": {
              "additionalProperties": true,
              "description": "Default settings for all types of events except dbg and pcap.",
              "properties": {
                "burstLimit": {
                  "default": "~",
                  "description": "(int) Configure the maximum number of messages that can be written to BPF events\nmap in 1 second. If burstLimit is greater than 0, non-zero value for rateLimit must\nalso be provided lest the configuration is considered invalid. Setting both burstLimit\nand rateLimit to 0 disables BPF events rate limiting.",
                  "required": [],
                  "title": "burstLimit",
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "rateLimit": {
                  "default": "~",
                  "description": "(int) Configure the limit of messages per second that can be written to\nBPF events map. The number of messages is averaged, meaning that if no messages\nwere written to the map over 5 seconds, it's possible to write more events\nin the 6th second. If rateLimit is greater than 0, non-zero value for burstLimit must\nalso be provided lest the configuration is considered invalid. Setting both burstLimit\nand rateLimit to 0 disables BPF events rate limiting.",
                  "required": [],
                  "title": "rateLimit",
                  "type": [
                    "null",
                    "integer"
                  ]
                }
              },
              "required": [],
              "title": "default",
              "type": "object"
            },
            "drop": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable drop events.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "drop",
              "type": "object"
            },
            "policyVerdict": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable policy verdict events.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "policyVerdict",
              "type": "object"
            },
            "trace": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable trace events.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "trace",
              "type": "object"
            }
          },
          "required": [],
          "title": "events",
          "type": "object"
        },
        "hostLegacyRouting": {
          "default": "~",
          "description": "(bool) Configure whether direct routing mode should route traffic via\nhost stack (true) or directly and more efficiently out of BPF (false) if\nthe kernel supports it. The latter has the implication that it will also\nbypass netfilter in the host namespace.",
          "required": [],
          "title": "hostLegacyRouting",
          "type": [
            "null",
            "boolean"
          ]
        },
        "lbAlgorithmAnnotation": {
          "default": false,
          "description": "(bool) Enable the option to define the load balancing algorithm on\na per-service basis through service.cilium.io/lb-algorithm annotation.",
          "required": [],
          "title": "lbAlgorithmAnnotation",
          "type": "boolean"
        },
        "lbExternalClusterIP": {
          "default": false,
          "description": "(bool) Allow cluster external access to ClusterIP services.",
          "required": [],
          "title": "lbExternalClusterIP",
          "type": "boolean"
        },
        "lbMapMax": {
          "default": 65536,
          "description": "Configure the maximum number of service entries in the\nload balancer maps.",
          "required": [],
          "title": "lbMapMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "lbModeAnnotation": {
          "default": false,
          "description": "(bool) Enable the option to define the load balancing mode (SNAT or DSR)\non a per-service basis through service.cilium.io/forwarding-mode annotation.",
          "required": [],
          "title": "lbModeAnnotation",
          "type": "boolean"
        },
        "lbSourceRangeAllTypes": {
          "default": false,
          "description": "(bool) Enable loadBalancerSourceRanges CIDR filtering for all service\ntypes, not just LoadBalancer services. The corresponding NodePort and\nClusterIP (if enabled for cluster-external traffic) will also apply the\nCIDR filter.",
          "required": [],
          "title": "lbSourceRangeAllTypes",
          "type": "boolean"
        },
        "mapDynamicSizeRatio": {
          "default": "~",
          "description": "(float64) Configure auto-sizing for all BPF maps based on available memory.\nref: https://docs.cilium.io/en/stable/network/ebpf/maps/",
          "required": [],
          "title": "mapDynamicSizeRatio",
          "type": [
            "null",
            "number",
            "string"
          ]
        },
        "masquerade": {
          "default": "~",
          "description": "(bool) Enable native IP masquerade support in eBPF",
          "required": [],
          "title": "masquerade",
          "type": [
            "null",
            "boolean"
          ]
        },
        "monitorAggregation": {
          "default": "medium",
          "description": "Configure the level of aggregation for monitor notifications.\nValid options are none, low, medium, maximum.",
          "required": [],
          "title": "monitorAggregation",
          "type": "string"
        },
        "monitorFlags": {
          "default": "all",
          "description": "Configure which TCP flags trigger notifications when seen for the\nfirst time in a connection.",
          "required": [],
          "title": "monitorFlags",
          "type": "string"
        },
        "monitorInterval": {
          "default": "5s",
          "description": "Configure the typical time between monitor notifications for\nactive connections.",
          "required": [],
          "title": "monitorInterval",
          "type": "string"
        },
        "natMax": {
          "default": "~",
          "description": "(int) Configure the maximum number of entries for the NAT table.",
          "required": [],
          "title": "natMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "neighMax": {
          "default": "~",
          "description": "(int) Configure the maximum number of entries for the neighbor table.",
          "required": [],
          "title": "neighMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "nodeMapMax": {
          "default": "~",
          "description": "\n(int) Configures the maximum number of entries for the node table.",
          "required": [],
          "title": "nodeMapMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "policyMapMax": {
          "default": 16384,
          "description": "Configure the maximum number of entries in endpoint policy map (per endpoint).",
          "required": [],
          "title": "policyMapMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "policyStatsMapMax": {
          "default": 65536,
          "description": "Configure the maximum number of entries in global policy stats map.",
          "required": [],
          "title": "policyStatsMapMax",
          "type": [
            "null",
            "integer"
          ]
        },
        "preallocateMaps": {
          "default": false,
          "description": "Enables pre-allocation of eBPF map values. This increases\nmemory usage but can reduce latency.",
          "required": [],
          "title": "preallocateMaps",
          "type": "boolean"
        },
        "root": {
          "default": "/sys/fs/bpf",
          "description": "Configure the mount point for the BPF filesystem",
          "required": [],
          "title": "root",
          "type": "string"
        },
        "tproxy": {
          "default": "~",
          "description": "(bool) Configure the eBPF-based TPROXY (beta) to reduce reliance on iptables rules\nfor implementing Layer 7 policy.",
          "required": [],
          "title": "tproxy",
          "type": [
            "null",
            "boolean"
          ]
        },
        "vlanBypass": {
          "default": "~",
          "description": "(list) Configure explicitly allowed VLAN id's for bpf logic bypass.\n[0] will allow all VLAN id's without any filtering.",
          "required": [],
          "title": "vlanBypass",
          "type": [
            "null",
            "array"
          ]
        }
      },
      "required": [],
      "title": "bpf",
      "type": "object"
    },
    "bpfClockProbe": {
      "default": false,
      "description": "Enable BPF clock source probing for more efficient tick retrieval.",
      "required": [],
      "title": "bpfClockProbe",
      "type": "boolean"
    },
    "certgen": {
      "additionalProperties": true,
      "description": "Configure certificate generation for Hubble integration.\nIf hubble.tls.auto.method=cronJob, these values are used\nfor the Kubernetes CronJob which will be scheduled regularly to\n(re)generate any certificates not provided manually.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for certgen",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to the hubble-certgen initial Job and CronJob",
          "properties": {
            "cronJob": {
              "additionalProperties": true,
              "required": [],
              "title": "cronJob",
              "type": "object"
            },
            "job": {
              "additionalProperties": true,
              "required": [],
              "title": "job",
              "type": "object"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "extraVolumeMounts": {
          "description": "Additional certgen volumeMounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional certgen volumes.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "generateCA": {
          "default": true,
          "description": "When set to true the certificate authority secret is created.",
          "required": [],
          "title": "generateCA",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "digest": {
              "default": "sha256:de7b97b1d19a34b674d0c4bc1da4db999f04ae355923a9a994ac3a81e1a1b5ff",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "override": {
              "default": "~",
              "required": [],
              "title": "override",
              "type": [
                "null",
                "string"
              ]
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/cilium/certgen",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.2.4",
              "required": [],
              "title": "tag",
              "type": "string"
            },
            "useDigest": {
              "default": true,
              "required": [],
              "title": "useDigest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for certgen\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to be added to hubble-certgen pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "Priority class for certgen\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource limits for certgen\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "tolerations": {
          "description": "Node tolerations for pod assignment on nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "ttlSecondsAfterFinished": {
          "default": 1800,
          "description": "Seconds after which the completed job pod will be deleted",
          "required": [],
          "title": "ttlSecondsAfterFinished",
          "type": "integer"
        }
      },
      "required": [],
      "title": "certgen",
      "type": "object"
    },
    "cgroup": {
      "additionalProperties": true,
      "description": "Configure cgroup related configuration",
      "properties": {
        "autoMount": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable auto mount of cgroup2 filesystem.\nWhen `autoMount` is enabled, cgroup2 filesystem is mounted at\n`cgroup.hostRoot` path on the underlying host and inside the cilium agent pod.\nIf users disable `autoMount`, it's expected that users have mounted\ncgroup2 filesystem at the specified `cgroup.hostRoot` volume, and then the\nvolume will be mounted inside the cilium agent pod at the same path.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "resources": {
              "additionalProperties": true,
              "description": "Init Container Cgroup Automount resource limits \u0026 requests",
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "autoMount",
          "type": "object"
        },
        "hostRoot": {
          "default": "/run/cilium/cgroupv2",
          "description": "Configure cgroup root where cgroup2 filesystem is mounted on the host (see also: `cgroup.autoMount`)",
          "required": [],
          "title": "hostRoot",
          "type": "string"
        }
      },
      "required": [],
      "title": "cgroup",
      "type": "object"
    },
    "ciliumEndpointSlice": {
      "additionalProperties": true,
      "description": "CiliumEndpointSlice configuration options.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable Cilium EndpointSlice feature.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "rateLimits": {
          "description": "List of rate limit options to be used for the CiliumEndpointSlice controller.\nEach object in the list must have the following fields:\nnodes: Count of nodes at which to apply the rate limit.\nlimit: The sustained request rate in requests per second. The maximum rate that can be configured is 50.\nburst: The burst request rate in requests per second. The maximum burst that can be configured is 100.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "burst": {
                "default": 100,
                "required": [],
                "title": "burst",
                "type": "integer"
              },
              "limit": {
                "default": 50,
                "required": [],
                "title": "limit",
                "type": "integer"
              },
              "nodes": {
                "default": 100,
                "required": [],
                "title": "nodes",
                "type": "integer"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "rateLimits",
          "type": "array"
        }
      },
      "required": [],
      "title": "ciliumEndpointSlice",
      "type": "object"
    },
    "cleanBpfState": {
      "default": false,
      "description": "Clean all eBPF datapath state from the initContainer of the cilium-agent\nDaemonSet.\n\nWARNING: Use with care!",
      "required": [],
      "title": "cleanBpfState",
      "type": "boolean"
    },
    "cleanState": {
      "default": false,
      "description": "Clean all local Cilium state from the initContainer of the cilium-agent\nDaemonSet. Implies cleanBpfState: true.\n\nWARNING: Use with care!",
      "required": [],
      "title": "cleanState",
      "type": "boolean"
    },
    "cluster": {
      "additionalProperties": true,
      "properties": {
        "id": {
          "default": 0,
          "description": "(int) Unique ID of the cluster. Must be unique across all connected\nclusters and in the range of 1 to 255. Only required for Cluster Mesh,\nmay be 0 if Cluster Mesh is not used.",
          "required": [],
          "title": "id",
          "type": "integer"
        },
        "name": {
          "default": "default",
          "description": "Name of the cluster. Only required for Cluster Mesh and mutual authentication with SPIRE.\nIt must respect the following constraints:\n* It must contain at most 32 characters;\n* It must begin and end with a lower case alphanumeric character;\n* It may contain lower case alphanumeric characters and dashes between.\nThe \"default\" name cannot be used if the Cluster ID is different from 0.",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "cluster",
      "type": "object"
    },
    "clustermesh": {
      "additionalProperties": true,
      "description": "disableEnvoyVersionCheck removes the check for Envoy, which can be useful\non AArch64 as the images do not currently ship a version of Envoy.\ndisableEnvoyVersionCheck: false",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level clustermesh objects (resources under templates/clustermesh-apiserver and templates/clustermesh-config)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "apiserver": {
          "additionalProperties": true,
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Affinity for clustermesh.apiserver",
              "properties": {
                "podAntiAffinity": {
                  "additionalProperties": true,
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "podAffinityTerm": {
                            "additionalProperties": true,
                            "properties": {
                              "labelSelector": {
                                "additionalProperties": true,
                                "properties": {
                                  "matchLabels": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "k8s-app": {
                                        "default": "clustermesh-apiserver",
                                        "required": [],
                                        "title": "k8s-app",
                                        "type": "string"
                                      }
                                    },
                                    "required": [],
                                    "title": "matchLabels",
                                    "type": "object"
                                  }
                                },
                                "required": [],
                                "title": "labelSelector",
                                "type": "object"
                              },
                              "topologyKey": {
                                "default": "kubernetes.io/hostname",
                                "required": [],
                                "title": "topologyKey",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "podAffinityTerm",
                            "type": "object"
                          },
                          "weight": {
                            "default": 100,
                            "required": [],
                            "title": "weight",
                            "type": "integer"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "preferredDuringSchedulingIgnoredDuringExecution",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "podAntiAffinity",
                  "type": "object"
                }
              },
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "etcd": {
              "additionalProperties": true,
              "properties": {
                "init": {
                  "additionalProperties": true,
                  "properties": {
                    "extraArgs": {
                      "description": "Additional arguments to `clustermesh-apiserver etcdinit`.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraArgs",
                      "type": "array"
                    },
                    "extraEnv": {
                      "description": "Additional environment variables to `clustermesh-apiserver etcdinit`.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraEnv",
                      "type": "array"
                    },
                    "resources": {
                      "additionalProperties": true,
                      "description": "Specifies the resources for etcd init container in the apiserver",
                      "required": [],
                      "title": "resources",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "init",
                  "type": "object"
                },
                "lifecycle": {
                  "additionalProperties": true,
                  "description": "lifecycle setting for the etcd container",
                  "required": [],
                  "title": "lifecycle",
                  "type": "object"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "Specifies the resources for etcd container in the apiserver",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "Security context to be added to clustermesh-apiserver etcd containers",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "additionalProperties": true,
                      "properties": {
                        "drop": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "drop",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "capabilities",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                },
                "storageMedium": {
                  "default": "Disk",
                  "description": "Specifies whether etcd data is stored in a temporary volume backed by\nthe node's default medium, such as disk, SSD or network storage (Disk), or\nRAM (Memory). The Memory option enables improved etcd read and write\nperformance at the cost of additional memory usage, which counts against\nthe memory limits of the container.",
                  "enum": [
                    "Disk",
                    "Memory"
                  ],
                  "required": [],
                  "title": "storageMedium"
                }
              },
              "required": [],
              "title": "etcd",
              "type": "object"
            },
            "extraArgs": {
              "description": "Additional clustermesh-apiserver arguments.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "extraEnv": {
              "description": "Additional clustermesh-apiserver environment variables.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnv",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Additional clustermesh-apiserver volumeMounts.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "Additional clustermesh-apiserver volumes.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "healthPort": {
              "default": 9880,
              "description": "TCP port for the clustermesh-apiserver health API.",
              "required": [],
              "title": "healthPort",
              "type": "integer"
            },
            "image": {
              "additionalProperties": true,
              "description": "Clustermesh API server image.",
              "properties": {
                "digest": {
                  "default": "sha256:0d15efc992a85003759232598bf05fb1a4cd3c9fa28fb96bee1789ffe27cc50d",
                  "description": "clustermesh-apiserver-digest",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "override": {
                  "default": "~",
                  "required": [],
                  "title": "override",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "repository": {
                  "default": "quay.io/cilium/clustermesh-apiserver",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v1.18.3",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                },
                "useDigest": {
                  "default": true,
                  "required": [],
                  "title": "useDigest",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "kvstoremesh": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable KVStoreMesh. KVStoreMesh caches the information retrieved\nfrom the remote clusters in the local etcd instance (deprecated - KVStoreMesh will always be enabled once the option is removed).",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "extraArgs": {
                  "description": "Additional KVStoreMesh arguments.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraArgs",
                  "type": "array"
                },
                "extraEnv": {
                  "description": "Additional KVStoreMesh environment variables.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraEnv",
                  "type": "array"
                },
                "extraVolumeMounts": {
                  "description": "Additional KVStoreMesh volumeMounts.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraVolumeMounts",
                  "type": "array"
                },
                "healthPort": {
                  "default": 9881,
                  "description": "TCP port for the KVStoreMesh health API.",
                  "required": [],
                  "title": "healthPort",
                  "type": "integer"
                },
                "kvstoreMode": {
                  "default": "internal",
                  "description": "Specify the KVStore mode when running KVStoreMesh\nSupported values:\n- \"internal\": remote cluster identities are cached in etcd that runs as a sidecar within ``clustermesh-apiserver`` pod.\n- \"external\": ``clustermesh-apiserver`` will sync remote cluster information to the etcd used as kvstore. This can't be enabled with crd identity allocation mode.",
                  "required": [],
                  "title": "kvstoreMode",
                  "type": "string"
                },
                "lifecycle": {
                  "additionalProperties": true,
                  "description": "lifecycle setting for the KVStoreMesh container",
                  "required": [],
                  "title": "lifecycle",
                  "type": "object"
                },
                "readinessProbe": {
                  "additionalProperties": true,
                  "description": "Configuration for the KVStoreMesh readiness probe.",
                  "required": [],
                  "title": "readinessProbe",
                  "type": "object"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "Resource requests and limits for the KVStoreMesh container",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "KVStoreMesh Security context",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "additionalProperties": true,
                      "properties": {
                        "drop": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "drop",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "capabilities",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                }
              },
              "required": [],
              "title": "kvstoremesh",
              "type": "object"
            },
            "lifecycle": {
              "additionalProperties": true,
              "description": "lifecycle setting for the apiserver container",
              "required": [],
              "title": "lifecycle",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": true,
              "description": "clustermesh-apiserver Prometheus metrics configuration",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enables exporting apiserver metrics in OpenMetrics format.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "etcd": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Enables exporting etcd metrics in OpenMetrics format.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "mode": {
                      "default": "basic",
                      "description": "Set level of detail for etcd metrics; specify 'extensive' to include server side gRPC histogram metrics.",
                      "required": [],
                      "title": "mode",
                      "type": "string"
                    },
                    "port": {
                      "default": 9963,
                      "description": "Configure the port the etcd metric server listens on.",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "etcd",
                  "type": "object"
                },
                "kvstoremesh": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Enables exporting KVStoreMesh metrics in OpenMetrics format.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "port": {
                      "default": 9964,
                      "description": "Configure the port the KVStoreMesh metric server listens on.",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "kvstoremesh",
                  "type": "object"
                },
                "port": {
                  "default": 9962,
                  "description": "Configure the port the apiserver metric server listens on.",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "serviceMonitor": {
                  "additionalProperties": true,
                  "properties": {
                    "annotations": {
                      "additionalProperties": true,
                      "description": "Annotations to add to ServiceMonitor clustermesh-apiserver",
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enable service monitor.\nThis requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "etcd": {
                      "additionalProperties": true,
                      "properties": {
                        "interval": {
                          "default": "10s",
                          "description": "Interval for scrape metrics (etcd metrics)",
                          "required": [],
                          "title": "interval",
                          "type": "string"
                        },
                        "metricRelabelings": {
                          "default": "~",
                          "description": "Metrics relabeling configs for the ServiceMonitor clustermesh-apiserver (etcd metrics)",
                          "required": [],
                          "title": "metricRelabelings",
                          "type": [
                            "null",
                            "array"
                          ]
                        },
                        "relabelings": {
                          "default": "~",
                          "description": "Relabeling configs for the ServiceMonitor clustermesh-apiserver (etcd metrics)",
                          "required": [],
                          "title": "relabelings",
                          "type": [
                            "null",
                            "array"
                          ]
                        },
                        "scrapeTimeout": {
                          "default": "~",
                          "description": "Timeout after which scrape is considered to be failed.",
                          "required": [],
                          "title": "scrapeTimeout",
                          "type": [
                            "null",
                            "string"
                          ]
                        }
                      },
                      "required": [],
                      "title": "etcd",
                      "type": "object"
                    },
                    "interval": {
                      "default": "10s",
                      "description": "Interval for scrape metrics (apiserver metrics)",
                      "required": [],
                      "title": "interval",
                      "type": "string"
                    },
                    "kvstoremesh": {
                      "additionalProperties": true,
                      "properties": {
                        "interval": {
                          "default": "10s",
                          "description": "Interval for scrape metrics (KVStoreMesh metrics)",
                          "required": [],
                          "title": "interval",
                          "type": "string"
                        },
                        "metricRelabelings": {
                          "default": "~",
                          "description": "Metrics relabeling configs for the ServiceMonitor clustermesh-apiserver (KVStoreMesh metrics)",
                          "required": [],
                          "title": "metricRelabelings",
                          "type": [
                            "null",
                            "array"
                          ]
                        },
                        "relabelings": {
                          "default": "~",
                          "description": "Relabeling configs for the ServiceMonitor clustermesh-apiserver (KVStoreMesh metrics)",
                          "required": [],
                          "title": "relabelings",
                          "type": [
                            "null",
                            "array"
                          ]
                        },
                        "scrapeTimeout": {
                          "default": "~",
                          "description": "Timeout after which scrape is considered to be failed.",
                          "required": [],
                          "title": "scrapeTimeout",
                          "type": [
                            "null",
                            "string"
                          ]
                        }
                      },
                      "required": [],
                      "title": "kvstoremesh",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": true,
                      "description": "Labels to add to ServiceMonitor clustermesh-apiserver",
                      "required": [],
                      "title": "labels",
                      "type": "object"
                    },
                    "metricRelabelings": {
                      "default": "~",
                      "description": "Metrics relabeling configs for the ServiceMonitor clustermesh-apiserver (apiserver metrics)",
                      "required": [],
                      "title": "metricRelabelings",
                      "type": [
                        "null",
                        "array"
                      ]
                    },
                    "relabelings": {
                      "default": "~",
                      "description": "Relabeling configs for the ServiceMonitor clustermesh-apiserver (apiserver metrics)",
                      "required": [],
                      "title": "relabelings",
                      "type": [
                        "null",
                        "array"
                      ]
                    },
                    "scrapeTimeout": {
                      "default": "~",
                      "description": "Timeout after which scrape is considered to be failed.",
                      "required": [],
                      "title": "scrapeTimeout",
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "title": "serviceMonitor",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node labels for pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
              "properties": {
                "kubernetes.io/os": {
                  "default": "linux",
                  "required": [],
                  "title": "kubernetes.io/os",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to clustermesh-apiserver pods",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": true,
              "description": "PodDisruptionBudget settings",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "enable PodDisruptionBudget\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "default": 1,
                  "description": "Maximum number/percentage of pods that may be made unavailable",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "minAvailable": {
                  "default": "null",
                  "description": "Minimum number/percentage of pods that should remain scheduled.\nWhen it's set, maxUnavailable must be disabled by `maxUnavailable: null`",
                  "required": [],
                  "title": "minAvailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "unhealthyPodEvictionPolicy": {
                  "default": "null",
                  "description": "How are unhealthy, but running, pods counted for eviction",
                  "required": [],
                  "title": "unhealthyPodEvictionPolicy",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "description": "Labels to be added to clustermesh-apiserver pods",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podSecurityContext": {
              "additionalProperties": true,
              "description": "Security context to be added to clustermesh-apiserver pods",
              "properties": {
                "fsGroup": {
                  "default": 65532,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 65532,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 65532,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "The priority class to use for clustermesh-apiserver",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "readinessProbe": {
              "additionalProperties": true,
              "description": "Configuration for the clustermesh-apiserver readiness probe.",
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "replicas": {
              "default": 1,
              "description": "Number of replicas run for the clustermesh-apiserver deployment.",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "description": "Resource requests and limits for the clustermesh-apiserver",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "Security context to be added to clustermesh-apiserver containers",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "properties": {
                    "drop": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations for the clustermesh-apiserver service.\nExample annotations to configure an internal load balancer on different cloud providers:\n* AKS: service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n* EKS: service.beta.kubernetes.io/aws-load-balancer-scheme: \"internal\"\n* GKE: networking.gke.io/load-balancer-type: \"Internal\"",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enableSessionAffinity": {
                  "default": "HAOnly",
                  "description": "Defines when to enable session affinity.\nEach replica in a clustermesh-apiserver deployment runs its own discrete\netcd cluster. Remote clients connect to one of the replicas through a\nshared Kubernetes Service. A client reconnecting to a different backend\nwill require a full resync to ensure data integrity. Session affinity\ncan reduce the likelihood of this happening, but may not be supported\nby all cloud providers.\nPossible values:\n - \"HAOnly\" (default) Only enable session affinity for deployments with more than 1 replica.\n - \"Always\" Always enable session affinity.\n - \"Never\" Never enable session affinity. Useful in environments where\n           session affinity is not supported, but may lead to slightly\n           degraded performance due to more frequent reconnections.",
                  "enum": [
                    "HAOnly",
                    "Always",
                    "Never"
                  ],
                  "required": [],
                  "title": "enableSessionAffinity"
                },
                "externalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "The externalTrafficPolicy of service used for apiserver access.",
                  "enum": [
                    "Local",
                    "Cluster"
                  ],
                  "required": [],
                  "title": "externalTrafficPolicy"
                },
                "internalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "The internalTrafficPolicy of service used for apiserver access.",
                  "enum": [
                    "Local",
                    "Cluster"
                  ],
                  "required": [],
                  "title": "internalTrafficPolicy"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Labels for the clustermesh-apiserver service.",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "loadBalancerClass": {
                  "default": "~",
                  "description": "Configure a loadBalancerClass.\nAllows to configure the loadBalancerClass on the clustermesh-apiserver\nLB service in case the Service type is set to LoadBalancer\n(requires Kubernetes 1.24+).",
                  "required": [],
                  "title": "loadBalancerClass",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "loadBalancerIP": {
                  "default": "~",
                  "description": "Configure a specific loadBalancerIP.\nAllows to configure a specific loadBalancerIP on the clustermesh-apiserver\nLB service in case the Service type is set to LoadBalancer.",
                  "required": [],
                  "title": "loadBalancerIP",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "loadBalancerSourceRanges": {
                  "description": "Configure loadBalancerSourceRanges.\nAllows to configure the source IP ranges allowed to access the\nclustermesh-apiserver LB service in case the Service type is set to LoadBalancer.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "loadBalancerSourceRanges",
                  "type": "array"
                },
                "nodePort": {
                  "default": 32379,
                  "description": "Optional port to use as the node port for apiserver access.\n\nWARNING: make sure to configure a different NodePort in each cluster if\nkube-proxy replacement is enabled, as Cilium is currently affected by a known\nbug (#24692) when NodePorts are handled by the KPR implementation. If a service\nwith the same NodePort exists both in the local and the remote cluster, all\ntraffic originating from inside the cluster and targeting the corresponding\nNodePort will be redirected to a local backend, regardless of whether the\ndestination node belongs to the local or the remote cluster.",
                  "required": [],
                  "title": "nodePort",
                  "type": "integer"
                },
                "type": {
                  "default": "NodePort",
                  "description": "The type of service used for apiserver access.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "terminationGracePeriodSeconds": {
              "default": 30,
              "description": "terminationGracePeriodSeconds for the clustermesh-apiserver deployment",
              "required": [],
              "title": "terminationGracePeriodSeconds",
              "type": "integer"
            },
            "tls": {
              "additionalProperties": true,
              "properties": {
                "admin": {
                  "additionalProperties": true,
                  "description": "base64 encoded PEM values for the clustermesh-apiserver admin certificate and private key.\nUsed if 'auto' is not enabled.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "key": {
                      "default": "",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "admin",
                  "type": "object"
                },
                "authMode": {
                  "default": "legacy",
                  "description": "Configure the clustermesh authentication mode.\nSupported values:\n- legacy:     All clusters access remote clustermesh instances with the same\n              username (i.e., remote). The \"remote\" certificate must be\n              generated with CN=remote if provided manually.\n- migration:  Intermediate mode required to upgrade from legacy to cluster\n              (and vice versa) with no disruption. Specifically, it enables\n              the creation of the per-cluster usernames, while still using\n              the common one for authentication. The \"remote\" certificate must\n              be generated with CN=remote if provided manually (same as legacy).\n- cluster:    Each cluster accesses remote etcd instances with a username\n              depending on the local cluster name (i.e., remote-\u003ccluster-name\u003e).\n              The \"remote\" certificate must be generated with CN=remote-\u003ccluster-name\u003e\n              if provided manually. Cluster mode is meaningful only when the same\n              CA is shared across all clusters part of the mesh.",
                  "required": [],
                  "title": "authMode",
                  "type": "string"
                },
                "auto": {
                  "additionalProperties": true,
                  "description": "Configure automatic TLS certificates generation.\nA Kubernetes CronJob is used the generate any\ncertificates not provided by the user at installation\ntime.",
                  "properties": {
                    "certManagerIssuerRef": {
                      "additionalProperties": true,
                      "description": "[Example]\ncertManagerIssuerRef:\n  group: cert-manager.io\n  kind: ClusterIssuer\n  name: ca-issuer\ncertmanager issuer used when clustermesh.apiserver.tls.auto.method=certmanager.",
                      "required": [],
                      "title": "certManagerIssuerRef",
                      "type": "object"
                    },
                    "certValidityDuration": {
                      "default": 1095,
                      "description": "Generated certificates validity duration in days.",
                      "required": [],
                      "title": "certValidityDuration",
                      "type": "integer"
                    },
                    "enabled": {
                      "default": true,
                      "description": "When set to true, automatically generate a CA and certificates to\nenable mTLS between clustermesh-apiserver and external workload instances.\nIf set to false, the certs to be provided by setting appropriate values below.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "method": {
                      "default": "helm",
                      "description": "Sets the method to auto-generate certificates. Supported values:\n- helm:         This method uses Helm to generate all certificates.\n- cronJob:      This method uses a Kubernetes CronJob the generate any\n                certificates not provided by the user at installation\n                time.\n- certmanager:  This method use cert-manager to generate \u0026 rotate certificates.",
                      "required": [],
                      "title": "method",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "auto",
                  "type": "object"
                },
                "client": {
                  "additionalProperties": true,
                  "description": "base64 encoded PEM values for the clustermesh-apiserver client certificate and private key.\nUsed if 'auto' is not enabled.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "key": {
                      "default": "",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "client",
                  "type": "object"
                },
                "enableSecrets": {
                  "default": true,
                  "description": "Allow users to provide their own certificates\nUsers may need to provide their certificates using\na mechanism that requires they provide their own secrets.\nThis setting does not apply to any of the auto-generated\nmechanisms below, it only restricts the creation of secrets\nvia the `tls-provided` templates.",
                  "required": [],
                  "title": "enableSecrets",
                  "type": "boolean"
                },
                "remote": {
                  "additionalProperties": true,
                  "description": "base64 encoded PEM values for the clustermesh-apiserver remote cluster certificate and private key.\nUsed if 'auto' is not enabled.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "key": {
                      "default": "",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "remote",
                  "type": "object"
                },
                "server": {
                  "additionalProperties": true,
                  "description": "base64 encoded PEM values for the clustermesh-apiserver server certificate and private key.\nUsed if 'auto' is not enabled.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "extraDnsNames": {
                      "description": "Extra DNS names added to certificate when it's auto generated",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraDnsNames",
                      "type": "array"
                    },
                    "extraIpAddresses": {
                      "description": "Extra IP addresses added to certificate when it's auto generated",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraIpAddresses",
                      "type": "array"
                    },
                    "key": {
                      "default": "",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "server",
                  "type": "object"
                }
              },
              "required": [],
              "title": "tls",
              "type": "object"
            },
            "tolerations": {
              "description": "Node tolerations for pod assignment on nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "Pod topology spread constraints for clustermesh-apiserver",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "updateStrategy": {
              "additionalProperties": true,
              "description": "clustermesh-apiserver update strategy",
              "properties": {
                "rollingUpdate": {
                  "additionalProperties": true,
                  "properties": {
                    "maxSurge": {
                      "default": 1,
                      "required": [],
                      "title": "maxSurge",
                      "type": [
                        "integer",
                        "string"
                      ]
                    },
                    "maxUnavailable": {
                      "default": 0,
                      "required": [],
                      "title": "maxUnavailable",
                      "type": [
                        "integer",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "title": "rollingUpdate",
                  "type": "object"
                },
                "type": {
                  "default": "RollingUpdate",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updateStrategy",
              "type": "object"
            }
          },
          "required": [],
          "title": "apiserver",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "description": "Clustermesh explicit configuration.",
          "properties": {
            "clusters": {
              "description": "List of clusters to be peered in the mesh.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "clusters",
              "type": "array"
            },
            "domain": {
              "default": "mesh.cilium.io",
              "description": "Default dns domain for the Clustermesh API servers\nThis is used in the case cluster addresses are not provided\nand IPs are used.",
              "required": [],
              "title": "domain",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable the Clustermesh explicit configuration.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "enableEndpointSliceSynchronization": {
          "default": false,
          "description": "Enable the synchronization of Kubernetes EndpointSlices corresponding to\nthe remote endpoints of appropriately-annotated global services through ClusterMesh",
          "required": [],
          "title": "enableEndpointSliceSynchronization",
          "type": "boolean"
        },
        "enableMCSAPISupport": {
          "default": false,
          "description": "Enable Multi-Cluster Services API support",
          "required": [],
          "title": "enableMCSAPISupport",
          "type": "boolean"
        },
        "maxConnectedClusters": {
          "default": 255,
          "description": "The maximum number of clusters to support in a ClusterMesh. This value\ncannot be changed on running clusters, and all clusters in a ClusterMesh\nmust be configured with the same value. Values \u003e 255 will decrease the\nmaximum allocatable cluster-local identities.\nSupported values are 255 and 511.",
          "required": [],
          "title": "maxConnectedClusters",
          "type": "integer"
        },
        "policyDefaultLocalCluster": {
          "default": false,
          "description": "Control whether policy rules assume by default the local cluster if not explicitly selected",
          "required": [],
          "title": "policyDefaultLocalCluster",
          "type": "boolean"
        },
        "useAPIServer": {
          "default": false,
          "description": "Deploy clustermesh-apiserver for clustermesh",
          "required": [],
          "title": "useAPIServer",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "clustermesh",
      "type": "object"
    },
    "cni": {
      "additionalProperties": true,
      "properties": {
        "binPath": {
          "default": "/opt/cni/bin",
          "description": "Configure the path to the CNI binary directory on the host.",
          "required": [],
          "title": "binPath",
          "type": "string"
        },
        "chainingMode": {
          "default": "~",
          "description": "Configure chaining on top of other CNI plugins. Possible values:\n - none\n - aws-cni\n - flannel\n - generic-veth\n - portmap",
          "required": [],
          "title": "chainingMode",
          "type": [
            "null",
            "string"
          ]
        },
        "chainingTarget": {
          "default": "~",
          "description": "A CNI network name in to which the Cilium plugin should be added as a chained plugin.\nThis will cause the agent to watch for a CNI network with this network name. When it is\nfound, this will be used as the basis for Cilium's CNI configuration file. If this is\nset, it assumes a chaining mode of generic-veth. As a special case, a chaining mode\nof aws-cni implies a chainingTarget of aws-cni.",
          "required": [],
          "title": "chainingTarget",
          "type": [
            "null",
            "string"
          ]
        },
        "confFileMountPath": {
          "default": "/tmp/cni-configuration",
          "description": "Configure the path to where to mount the ConfigMap inside the agent pod.",
          "required": [],
          "title": "confFileMountPath",
          "type": "string"
        },
        "confPath": {
          "default": "/etc/cni/net.d",
          "description": "Configure the path to the CNI configuration directory on the host.",
          "required": [],
          "title": "confPath",
          "type": "string"
        },
        "configMap": {
          "default": "",
          "description": "When defined, configMap will mount the provided value as ConfigMap and\ninterpret the 'cni.configMapKey' value as CNI configuration file and write it\nwhen the agent starts up.",
          "required": [],
          "title": "configMap",
          "type": "string"
        },
        "configMapKey": {
          "default": "cni-config",
          "description": "Configure the key in the CNI ConfigMap to read the contents of\nthe CNI configuration from. For this to be effective, the 'cni.configMap'\nparameter must be specified too.\nNote that the 'cni.configMap' parameter is the name of the ConfigMap, while\n'cni.configMapKey' is the name of the key in the ConfigMap data containing\nthe actual configuration.",
          "required": [],
          "title": "configMapKey",
          "type": "string"
        },
        "customConf": {
          "default": false,
          "description": "Skip writing of the CNI configuration. This can be used if\nwriting of the CNI configuration is performed by external automation.",
          "required": [],
          "title": "customConf",
          "type": "boolean"
        },
        "enableRouteMTUForCNIChaining": {
          "default": false,
          "description": "Enable route MTU for pod netns when CNI chaining is used",
          "required": [],
          "title": "enableRouteMTUForCNIChaining",
          "type": "boolean"
        },
        "exclusive": {
          "default": true,
          "description": "Make Cilium take ownership over the `/etc/cni/net.d` directory on the\nnode, renaming all non-Cilium CNI configurations to `*.cilium_bak`.\nThis ensures no Pods can be scheduled using other CNI plugins during Cilium\nagent downtime.",
          "required": [],
          "title": "exclusive",
          "type": "boolean"
        },
        "hostConfDirMountPath": {
          "default": "/host/etc/cni/net.d",
          "description": "Configure the path to where the CNI configuration directory is mounted\ninside the agent pod.",
          "required": [],
          "title": "hostConfDirMountPath",
          "type": "string"
        },
        "install": {
          "default": true,
          "description": "Install the CNI configuration and binary files into the filesystem.",
          "required": [],
          "title": "install",
          "type": "boolean"
        },
        "iptablesRemoveAWSRules": {
          "default": true,
          "description": "Enable the removal of iptables rules created by the AWS CNI VPC plugin.",
          "required": [],
          "title": "iptablesRemoveAWSRules",
          "type": "boolean"
        },
        "logFile": {
          "default": "/var/run/cilium/cilium-cni.log",
          "description": "Configure the log file for CNI logging with retention policy of 7 days.\nDisable CNI file logging by setting this field to empty explicitly.",
          "required": [],
          "title": "logFile",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Specifies the resources for the cni initContainer",
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "10Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "uninstall": {
          "default": false,
          "description": "Remove the CNI configuration and binary files on agent shutdown. Enable this\nif you're removing Cilium from the cluster. Disable this to prevent the CNI\nconfiguration file from being removed during agent upgrade, which can cause\nnodes to go unmanageable.",
          "required": [],
          "title": "uninstall",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "cni",
      "type": "object"
    },
    "commonLabels": {
      "additionalProperties": true,
      "description": "commonLabels allows users to add common labels for all Cilium resources.",
      "required": [],
      "title": "commonLabels",
      "type": [
        "null",
        "object"
      ]
    },
    "connectivityProbeFrequencyRatio": {
      "default": "~",
      "description": "(float64) Ratio of the connectivity probe frequency vs resource usage, a float in\n[0, 1]. 0 will give more frequent probing, 1 will give less frequent probing. Probing\nfrequency is dynamically adjusted based on the cluster size.",
      "required": [],
      "title": "connectivityProbeFrequencyRatio",
      "type": [
        "null",
        "number"
      ]
    },
    "conntrackGCInterval": {
      "default": "",
      "description": "(string) Configure how frequently garbage collection should occur for the datapath\nconnection tracking table.",
      "required": [],
      "title": "conntrackGCInterval",
      "type": "string"
    },
    "conntrackGCMaxInterval": {
      "default": "",
      "description": "(string) Configure the maximum frequency for the garbage collection of the\nconnection tracking table. Only affects the automatic computation for the frequency\nand has no effect when 'conntrackGCInterval' is set. This can be set to more frequently\nclean up unused identities created from ToFQDN policies.",
      "required": [],
      "title": "conntrackGCMaxInterval",
      "type": "string"
    },
    "crdWaitTimeout": {
      "default": "",
      "description": "(string) Configure timeout in which Cilium will exit if CRDs are not available",
      "required": [],
      "title": "crdWaitTimeout",
      "type": "string"
    },
    "customCalls": {
      "additionalProperties": true,
      "description": "Tail call hooks for custom eBPF programs.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable tail call hooks for custom eBPF programs.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "customCalls",
      "type": "object"
    },
    "daemon": {
      "additionalProperties": true,
      "properties": {
        "allowedConfigOverrides": {
          "default": "~",
          "description": "allowedConfigOverrides is a list of config-map keys that can be overridden.\nThat is to say, if this value is set, config sources (excepting the first one) can\nonly override keys in this list.\n\nThis takes precedence over blockedConfigOverrides.\n\nBy default, all keys may be overridden. To disable overrides, set this to \"none\" or\nchange the configSources variable.",
          "required": [],
          "title": "allowedConfigOverrides",
          "type": [
            "null",
            "string"
          ]
        },
        "blockedConfigOverrides": {
          "default": "~",
          "description": "blockedConfigOverrides is a list of config-map keys that may not be overridden.\nIn other words, if any of these keys appear in a configuration source excepting the\nfirst one, they will be ignored\n\nThis is ignored if allowedConfigOverrides is set.\n\nBy default, all keys may be overridden.",
          "required": [],
          "title": "blockedConfigOverrides",
          "type": [
            "null",
            "string"
          ]
        },
        "configSources": {
          "default": "~",
          "description": "Configure a custom list of possible configuration override sources\nThe default is \"config-map:cilium-config,cilium-node-config\". For supported\nvalues, see the help text for the build-config subcommand.\nNote that this value should be a comma-separated string.",
          "required": [],
          "title": "configSources",
          "type": [
            "null",
            "string"
          ]
        },
        "enableSourceIPVerification": {
          "default": true,
          "description": "enableSourceIPVerification is a boolean flag to enable or disable the Source IP verification\nof endpoints. This flag is useful when Cilium is chained with other CNIs.\n\nBy default, this functionality is enabled",
          "required": [],
          "title": "enableSourceIPVerification",
          "type": [
            "null",
            "boolean"
          ]
        },
        "runPath": {
          "default": "/var/run/cilium",
          "description": "Configure where Cilium runtime state should be stored.",
          "required": [],
          "title": "runPath",
          "type": "string"
        }
      },
      "required": [],
      "title": "daemon",
      "type": "object"
    },
    "dashboards": {
      "additionalProperties": true,
      "description": "Grafana dashboards for cilium-agent\ngrafana can import dashboards based on the label and value\nref: https://github.com/grafana/helm-charts/tree/main/charts/grafana#sidecar-for-dashboards",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "label": {
          "default": "grafana_dashboard",
          "required": [],
          "title": "label",
          "type": "string"
        },
        "labelValue": {
          "default": "1",
          "required": [],
          "title": "labelValue",
          "type": "string"
        },
        "namespace": {
          "default": "~",
          "required": [],
          "title": "namespace",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "required": [],
      "title": "dashboards",
      "type": "object"
    },
    "debug": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable debug logging",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "metricsSamplingInterval": {
          "default": "5m",
          "description": "Set the agent-internal metrics sampling frequency. This sets the\nfrequency of the internal sampling of the agent metrics. These are\navailable via the \"cilium-dbg shell -- metrics -s\" command and are\npart of the metrics HTML page included in the sysdump.",
          "required": [],
          "title": "metricsSamplingInterval",
          "type": [
            "null",
            "string"
          ]
        },
        "verbose": {
          "default": "~",
          "description": "Configure verbosity levels for debug logging\nThis option is used to enable debug messages for operations related to such\nsub-system such as (e.g. kvstore, envoy, datapath or policy), and flow is\nfor enabling debug messages emitted per request, message and connection.\nMultiple values can be set via a space-separated string (e.g. \"datapath envoy\").\n\nApplicable values:\n- flow\n- kvstore\n- envoy\n- datapath\n- policy",
          "required": [],
          "title": "verbose",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "required": [],
      "title": "debug",
      "type": "object"
    },
    "defaultLBServiceIPAM": {
      "default": "lbipam",
      "description": "defaultLBServiceIPAM indicates the default LoadBalancer Service IPAM when\nno LoadBalancer class is set. Applicable values: lbipam, nodeipam, none",
      "required": [],
      "title": "defaultLBServiceIPAM",
      "type": "string"
    },
    "directRoutingSkipUnreachable": {
      "default": false,
      "description": "Enable skipping of PodCIDR routes between worker\nnodes if the worker nodes are in a different L2 network segment.",
      "required": [],
      "title": "directRoutingSkipUnreachable",
      "type": "boolean"
    },
    "disableEndpointCRD": {
      "default": false,
      "description": "Disable the usage of CiliumEndpoint CRD.",
      "required": [],
      "title": "disableEndpointCRD",
      "type": "boolean"
    },
    "dnsPolicy": {
      "default": "",
      "description": "DNS policy for Cilium agent pods.\nRef: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
      "required": [],
      "title": "dnsPolicy",
      "type": "string"
    },
    "dnsProxy": {
      "additionalProperties": true,
      "properties": {
        "dnsRejectResponseCode": {
          "default": "refused",
          "description": "DNS response code for rejecting DNS requests, available options are '[nameError refused]'.",
          "required": [],
          "title": "dnsRejectResponseCode",
          "type": "string"
        },
        "enableDnsCompression": {
          "default": true,
          "description": "Allow the DNS proxy to compress responses to endpoints that are larger than 512 Bytes or the EDNS0 option, if present.",
          "required": [],
          "title": "enableDnsCompression",
          "type": "boolean"
        },
        "endpointMaxIpPerHostname": {
          "default": 1000,
          "description": "Maximum number of IPs to maintain per FQDN name for each endpoint.",
          "required": [],
          "title": "endpointMaxIpPerHostname",
          "type": "integer"
        },
        "idleConnectionGracePeriod": {
          "default": "0s",
          "description": "Time during which idle but previously active connections with expired DNS lookups are still considered alive.",
          "required": [],
          "title": "idleConnectionGracePeriod",
          "type": "string"
        },
        "maxDeferredConnectionDeletes": {
          "default": 10000,
          "description": "Maximum number of IPs to retain for expired DNS lookups with still-active connections.",
          "required": [],
          "title": "maxDeferredConnectionDeletes",
          "type": "integer"
        },
        "minTtl": {
          "default": 0,
          "description": "The minimum time, in seconds, to use DNS data for toFQDNs policies. If\nthe upstream DNS server returns a DNS record with a shorter TTL, Cilium\noverwrites the TTL with this value. Setting this value to zero means that\nCilium will honor the TTLs returned by the upstream DNS server.",
          "required": [],
          "title": "minTtl",
          "type": "integer"
        },
        "preAllocateIdentities": {
          "default": true,
          "description": "DNS proxy operation mode (true/false, or unset to use version dependent defaults)\nenableTransparentMode: true\nPre-allocate ToFQDN identities. This reduces DNS proxy tail latency, at the potential cost of some\nunnecessary policymap entries. Disable this if you have a large (200+) number of unique ToFQDN selectors.",
          "required": [],
          "title": "preAllocateIdentities",
          "type": "boolean"
        },
        "preCache": {
          "default": "",
          "description": "DNS cache data at this path is preloaded on agent startup.",
          "required": [],
          "title": "preCache",
          "type": "string"
        },
        "proxyPort": {
          "default": 0,
          "description": "Global port on which the in-agent DNS proxy should listen. Default 0 is a OS-assigned port.",
          "required": [],
          "title": "proxyPort",
          "type": "integer"
        },
        "proxyResponseMaxDelay": {
          "default": "100ms",
          "description": "The maximum time the DNS proxy holds an allowed DNS response before sending it along. Responses are sent as soon as the datapath is updated with the new IP information.",
          "required": [],
          "title": "proxyResponseMaxDelay",
          "type": "string"
        },
        "socketLingerTimeout": {
          "default": 10,
          "description": "Timeout (in seconds) when closing the connection between the DNS proxy and the upstream server. If set to 0, the connection is closed immediately (with TCP RST). If set to -1, the connection is closed asynchronously in the background.",
          "required": [],
          "title": "socketLingerTimeout",
          "type": "integer"
        }
      },
      "required": [],
      "title": "dnsProxy",
      "type": "object"
    },
    "egressGateway": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enables egress gateway to redirect and SNAT the traffic that leaves the\ncluster.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "reconciliationTriggerInterval": {
          "default": "1s",
          "description": "Time between triggers of egress gateway state reconciliations",
          "required": [],
          "title": "reconciliationTriggerInterval",
          "type": "string"
        }
      },
      "required": [],
      "title": "egressGateway",
      "type": "object"
    },
    "enableCriticalPriorityClass": {
      "default": true,
      "description": "Explicitly enable or disable priority class.\n.Capabilities.KubeVersion is unsettable in `helm template` calls,\nit depends on k8s libraries version that Helm was compiled against.\nThis option allows to explicitly disable setting the priority class, which\nis useful for rendering charts for gke clusters in advance.",
      "required": [],
      "title": "enableCriticalPriorityClass",
      "type": "boolean"
    },
    "enableIPv4BIGTCP": {
      "default": false,
      "description": "Enables IPv4 BIG TCP support which increases maximum IPv4 GSO/GRO limits for nodes and pods",
      "required": [],
      "title": "enableIPv4BIGTCP",
      "type": "boolean"
    },
    "enableIPv4Masquerade": {
      "default": "~",
      "description": "(bool) Enables masquerading of IPv4 traffic leaving the node from endpoints.",
      "required": [],
      "title": "enableIPv4Masquerade",
      "type": [
        "null",
        "boolean"
      ]
    },
    "enableIPv6BIGTCP": {
      "default": false,
      "description": "Enables IPv6 BIG TCP support which increases maximum IPv6 GSO/GRO limits for nodes and pods",
      "required": [],
      "title": "enableIPv6BIGTCP",
      "type": "boolean"
    },
    "enableIPv6Masquerade": {
      "default": true,
      "description": "Enables masquerading of IPv6 traffic leaving the node from endpoints.",
      "required": [],
      "title": "enableIPv6Masquerade",
      "type": "boolean"
    },
    "enableInternalTrafficPolicy": {
      "default": true,
      "description": "Enable Internal Traffic Policy",
      "required": [],
      "title": "enableInternalTrafficPolicy",
      "type": "boolean"
    },
    "enableLBIPAM": {
      "default": true,
      "description": "Enable LoadBalancer IP Address Management",
      "required": [],
      "title": "enableLBIPAM",
      "type": "boolean"
    },
    "enableMasqueradeRouteSource": {
      "default": false,
      "description": "Enables masquerading to the source of the route for traffic leaving the node from endpoints.",
      "required": [],
      "title": "enableMasqueradeRouteSource",
      "type": "boolean"
    },
    "enableNonDefaultDenyPolicies": {
      "default": true,
      "description": "Enable Non-Default-Deny policies",
      "required": [],
      "title": "enableNonDefaultDenyPolicies",
      "type": "boolean"
    },
    "enableXTSocketFallback": {
      "default": true,
      "description": "Enables the fallback compatibility solution for when the xt_socket kernel\nmodule is missing and it is needed for the datapath L7 redirection to work\nproperly. See documentation for details on when this can be disabled:\nhttps://docs.cilium.io/en/stable/operations/system_requirements/#linux-kernel.",
      "required": [],
      "title": "enableXTSocketFallback",
      "type": "boolean"
    },
    "encryption": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable transparent network encryption.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ipsec": {
          "additionalProperties": true,
          "properties": {
            "encryptedOverlay": {
              "default": false,
              "description": "Enable IPsec encrypted overlay",
              "required": [],
              "title": "encryptedOverlay",
              "type": "boolean"
            },
            "interface": {
              "default": "",
              "description": "The interface to use for encrypted traffic.",
              "required": [],
              "title": "interface",
              "type": "string"
            },
            "keyFile": {
              "default": "keys",
              "description": "Name of the key file inside the Kubernetes secret configured via secretName.",
              "required": [],
              "title": "keyFile",
              "type": "string"
            },
            "keyRotationDuration": {
              "default": "5m",
              "description": "Maximum duration of the IPsec key rotation. The previous key will be\nremoved after that delay.",
              "required": [],
              "title": "keyRotationDuration",
              "type": "string"
            },
            "keyWatcher": {
              "default": true,
              "description": "Enable the key watcher. If disabled, a restart of the agent will be\nnecessary on key rotations.",
              "required": [],
              "title": "keyWatcher",
              "type": "boolean"
            },
            "mountPath": {
              "default": "/etc/ipsec",
              "description": "Path to mount the secret inside the Cilium pod.",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "secretName": {
              "default": "cilium-ipsec-keys",
              "description": "Name of the Kubernetes secret containing the encryption keys.",
              "required": [],
              "title": "secretName",
              "type": "string"
            }
          },
          "required": [],
          "title": "ipsec",
          "type": "object"
        },
        "nodeEncryption": {
          "default": false,
          "description": "Enable encryption for pure node to node traffic.\nThis option is only effective when encryption.type is set to \"wireguard\".",
          "required": [],
          "title": "nodeEncryption",
          "type": "boolean"
        },
        "strictMode": {
          "additionalProperties": true,
          "description": "Configure the WireGuard Pod2Pod strict mode.",
          "properties": {
            "allowRemoteNodeIdentities": {
              "default": false,
              "description": "Allow dynamic lookup of remote node identities.\nThis is required when tunneling is used or direct routing is used and the node CIDR and pod CIDR overlap.",
              "required": [],
              "title": "allowRemoteNodeIdentities",
              "type": "boolean"
            },
            "cidr": {
              "default": "",
              "description": "CIDR for the WireGuard Pod2Pod strict mode.",
              "required": [],
              "title": "cidr",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable WireGuard Pod2Pod strict mode.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "strictMode",
          "type": "object"
        },
        "type": {
          "default": "ipsec",
          "description": "Encryption method. Can be either ipsec or wireguard.",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "wireguard": {
          "additionalProperties": true,
          "properties": {
            "persistentKeepalive": {
              "default": "0s",
              "description": "Controls WireGuard PersistentKeepalive option. Set 0s to disable.",
              "required": [],
              "title": "persistentKeepalive",
              "type": "string"
            }
          },
          "required": [],
          "title": "wireguard",
          "type": "object"
        }
      },
      "required": [],
      "title": "encryption",
      "type": "object"
    },
    "endpointHealthChecking": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable connectivity health checking between virtual endpoints.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "endpointHealthChecking",
      "type": "object"
    },
    "endpointLockdownOnMapOverflow": {
      "default": false,
      "description": "Enable endpoint lockdown on policy map overflow.",
      "required": [],
      "title": "endpointLockdownOnMapOverflow",
      "type": "boolean"
    },
    "endpointRoutes": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable use of per endpoint routes instead of routing via\nthe cilium_host interface.",
          "required": [],
          "title": "enabled",
          "type": [
            "boolean",
            "string"
          ]
        }
      },
      "required": [],
      "title": "endpointRoutes",
      "type": "object"
    },
    "eni": {
      "additionalProperties": true,
      "properties": {
        "awsEnablePrefixDelegation": {
          "default": false,
          "description": "Enable ENI prefix delegation",
          "required": [],
          "title": "awsEnablePrefixDelegation",
          "type": "boolean"
        },
        "awsReleaseExcessIPs": {
          "default": false,
          "description": "Release IPs not used from the ENI",
          "required": [],
          "title": "awsReleaseExcessIPs",
          "type": "boolean"
        },
        "ec2APIEndpoint": {
          "default": "",
          "description": "EC2 API endpoint to use",
          "required": [],
          "title": "ec2APIEndpoint",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable Elastic Network Interface (ENI) integration.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "eniTags": {
          "additionalProperties": true,
          "description": "Tags to apply to the newly created ENIs",
          "required": [],
          "title": "eniTags",
          "type": "object"
        },
        "gcInterval": {
          "default": "",
          "description": "Interval for garbage collection of unattached ENIs. Set to \"0s\" to disable.",
          "required": [],
          "title": "gcInterval",
          "type": "string"
        },
        "gcTags": {
          "additionalProperties": true,
          "description": "Additional tags attached to ENIs created by Cilium.\nDangling ENIs with this tag will be garbage collected",
          "required": [],
          "title": "gcTags",
          "type": "object"
        },
        "iamRole": {
          "default": "",
          "description": "If using IAM role for Service Accounts will not try to\ninject identity values from cilium-aws kubernetes secret.\nAdds annotation to service account if managed by Helm.\nSee https://github.com/aws/amazon-eks-pod-identity-webhook",
          "required": [],
          "title": "iamRole",
          "type": "string"
        },
        "instanceTagsFilter": {
          "description": "Filter via AWS EC2 Instance tags (k=v) which will dictate which AWS EC2 Instances\nare going to be used to create new ENIs",
          "items": {
            "required": []
          },
          "required": [],
          "title": "instanceTagsFilter",
          "type": "array"
        },
        "subnetIDsFilter": {
          "description": "Filter via subnet IDs which will dictate which subnets are going to be used to create new ENIs\nImportant note: This requires that each instance has an ENI with a matching subnet attached\nwhen Cilium is deployed. If you only want to control subnets for ENIs attached by Cilium,\nuse the CNI configuration file settings (cni.customConf) instead.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "subnetIDsFilter",
          "type": "array"
        },
        "subnetTagsFilter": {
          "description": "Filter via tags (k=v) which will dictate which subnets are going to be used to create new ENIs\nImportant note: This requires that each instance has an ENI with a matching subnet attached\nwhen Cilium is deployed. If you only want to control subnets for ENIs attached by Cilium,\nuse the CNI configuration file settings (cni.customConf) instead.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "subnetTagsFilter",
          "type": "array"
        }
      },
      "required": [],
      "title": "eni",
      "type": "object"
    },
    "envoy": {
      "additionalProperties": true,
      "description": "Configure Cilium Envoy options.",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for cilium-envoy.",
          "properties": {
            "nodeAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "additionalProperties": true,
                  "properties": {
                    "nodeSelectorTerms": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "key": {
                                  "default": "cilium.io/no-schedule",
                                  "required": [],
                                  "title": "key",
                                  "type": "string"
                                },
                                "operator": {
                                  "default": "NotIn",
                                  "required": [],
                                  "title": "operator",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "required": [],
                                    "type": "string"
                                  },
                                  "required": [],
                                  "title": "values",
                                  "type": "array"
                                }
                              },
                              "required": [],
                              "type": "object"
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "nodeSelectorTerms",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nodeAffinity",
              "type": "object"
            },
            "podAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "k8s-app": {
                                "default": "cilium",
                                "required": [],
                                "title": "k8s-app",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAffinity",
              "type": "object"
            },
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "k8s-app": {
                                "default": "cilium-envoy",
                                "required": [],
                                "title": "k8s-app",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level cilium-envoy objects (resources under templates/cilium-envoy)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "baseID": {
          "default": 0,
          "description": "(int)\nSet Envoy'--base-id' to use when allocating shared memory regions.\nOnly needs to be changed if multiple Envoy instances will run on the same node and may have conflicts. Supported values: 0 - 4294967295. Defaults to '0'",
          "required": [],
          "title": "baseID",
          "type": "integer"
        },
        "bootstrapConfigMap": {
          "default": "~",
          "description": "ADVANCED OPTION: Bring your own custom Envoy bootstrap ConfigMap. Provide the name of a ConfigMap with a `bootstrap-config.json` key.\nWhen specified, Envoy will use this ConfigMap instead of the default provided by the chart.\nWARNING: Use of this setting has the potential to prevent cilium-envoy from starting up, and can cause unexpected behavior (e.g. due to\nsyntax error or semantically incorrect configuration). Before submitting an issue, please ensure you have disabled this feature, as support\ncannot be provided for custom Envoy bootstrap configs.",
          "required": [],
          "title": "bootstrapConfigMap",
          "type": [
            "null",
            "string"
          ]
        },
        "connectTimeoutSeconds": {
          "default": 2,
          "description": "Time in seconds after which a TCP connection attempt times out",
          "required": [],
          "title": "connectTimeoutSeconds",
          "type": "integer"
        },
        "debug": {
          "additionalProperties": true,
          "properties": {
            "admin": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable admin interface for cilium-envoy.\nThis is useful for debugging and should not be enabled in production.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 9901,
                  "description": "Port number (bound to loopback interface).\nkubectl port-forward can be used to access the admin interface.",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "admin",
              "type": "object"
            }
          },
          "required": [],
          "title": "debug",
          "type": "object"
        },
        "dnsPolicy": {
          "default": "~",
          "description": "DNS policy for Cilium envoy pods.\nRef: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "required": [],
          "title": "dnsPolicy",
          "type": [
            "null",
            "string"
          ]
        },
        "enabled": {
          "default": "~",
          "description": "Enable Envoy Proxy in standalone DaemonSet.\nThis field is enabled by default for new installation.",
          "required": [],
          "title": "enabled",
          "type": [
            "null",
            "boolean"
          ]
        },
        "extraArgs": {
          "description": "Additional envoy container arguments.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Additional containers added to the cilium Envoy DaemonSet.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Additional envoy container environment variables.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraHostPathMounts": {
          "description": "Additional envoy hostPath mounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraHostPathMounts",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional envoy volumeMounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional envoy volumes.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "healthPort": {
          "default": 9878,
          "description": "TCP port for the health API.",
          "required": [],
          "title": "healthPort",
          "type": "integer"
        },
        "httpRetryCount": {
          "default": 3,
          "description": "Maximum number of retries for each HTTP request",
          "required": [],
          "title": "httpRetryCount",
          "type": "integer"
        },
        "httpUpstreamLingerTimeout": {
          "default": "null",
          "description": "Time in seconds to block Envoy worker thread while an upstream HTTP connection is closing. If set to 0, the connection is closed immediately (with TCP RST). If set to -1, the connection is closed asynchronously in the background.",
          "required": [],
          "title": "httpUpstreamLingerTimeout",
          "type": "null"
        },
        "idleTimeoutDurationSeconds": {
          "default": 60,
          "description": "Set Envoy upstream HTTP idle connection timeout seconds.\nDoes not apply to connections with pending requests. Default 60s",
          "required": [],
          "title": "idleTimeoutDurationSeconds",
          "type": "integer"
        },
        "image": {
          "additionalProperties": true,
          "description": "Envoy container image.",
          "properties": {
            "digest": {
              "default": "sha256:ca76eb4e9812d114c7f43215a742c00b8bf41200992af0d21b5561d46156fd15",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "override": {
              "default": "~",
              "required": [],
              "title": "override",
              "type": [
                "null",
                "string"
              ]
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/cilium/cilium-envoy",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v1.34.10-1761014632-c360e8557eb41011dfb5210f8fb53fed6c0b3222",
              "required": [],
              "title": "tag",
              "type": "string"
            },
            "useDigest": {
              "default": true,
              "required": [],
              "title": "useDigest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initialFetchTimeoutSeconds": {
          "default": 30,
          "description": "Time in seconds after which the initial fetch on an xDS stream is considered timed out",
          "required": [],
          "title": "initialFetchTimeoutSeconds",
          "type": "integer"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable liveness probe for cilium-envoy",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": 10,
              "description": "failure threshold of liveness probe",
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 30,
              "description": "interval between checks of the liveness probe",
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "log": {
          "additionalProperties": true,
          "properties": {
            "accessLogBufferSize": {
              "default": 4096,
              "description": "Size of the Envoy access log buffer created within the agent in bytes.\nTune this value up if you encounter \"Envoy: Discarded truncated access log message\" errors.\nLarge request/response header sizes (e.g. 16KiB) will require a larger buffer size.",
              "required": [],
              "title": "accessLogBufferSize",
              "type": [
                "null",
                "integer"
              ]
            },
            "defaultLevel": {
              "description": "Default log level of Envoy application log that is configured if Cilium debug / verbose logging isn't enabled.\nThis option allows to have a different log level than the Cilium Agent - e.g. lower it to `critical`.\nPossible values: trace, debug, info, warning, error, critical, off",
              "enum": [
                "trace",
                "debug",
                "info",
                "warning",
                "error",
                "critical",
                "off"
              ],
              "required": [],
              "title": "defaultLevel",
              "type": "null"
            },
            "format": {
              "default": "[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v",
              "description": "The format string to use for laying out the log message metadata of Envoy. If specified, Envoy will use text format output.\nThis setting is mutually exclusive with envoy.log.format_json.",
              "required": [],
              "title": "format",
              "type": [
                "null",
                "string"
              ]
            },
            "format_json": {
              "additionalProperties": true,
              "default": "null",
              "description": "The JSON logging format to use for Envoy. This setting is mutually exclusive with envoy.log.format.\nref: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-field-config-bootstrap-v3-bootstrap-applicationlogconfig-logformat-json-format",
              "required": [],
              "title": "format_json",
              "type": [
                "null",
                "object"
              ]
            },
            "path": {
              "default": "",
              "description": "date: \"%Y-%m-%dT%T.%e\"\nthread_id: \"%t\"\nsource_line: \"%s:%#\"\nlevel: \"%l\"\nlogger: \"%n\"\nmessage: \"%j\"\nPath to a separate Envoy log file, if any. Defaults to /dev/stdout.",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [],
          "title": "log",
          "type": "object"
        },
        "maxConcurrentRetries": {
          "default": 128,
          "description": "Maximum number of concurrent retries on Envoy clusters",
          "required": [],
          "title": "maxConcurrentRetries",
          "type": "integer"
        },
        "maxConnectionDurationSeconds": {
          "default": 0,
          "description": "Set Envoy HTTP option max_connection_duration seconds. Default 0 (disable)",
          "required": [],
          "title": "maxConnectionDurationSeconds",
          "type": "integer"
        },
        "maxRequestsPerConnection": {
          "default": 0,
          "description": "ProxyMaxRequestsPerConnection specifies the max_requests_per_connection setting for Envoy",
          "required": [],
          "title": "maxRequestsPerConnection",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for cilium-envoy.",
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to envoy pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to be added to envoy pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security Context for cilium-envoy pods.",
          "properties": {
            "appArmorProfile": {
              "additionalProperties": true,
              "description": "AppArmorProfile options for the `cilium-agent` and init containers",
              "properties": {
                "type": {
                  "default": "Unconfined",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "appArmorProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "policyRestoreTimeoutDuration": {
          "default": "null",
          "description": "Max duration to wait for endpoint policies to be restored on restart. Default \"3m\".",
          "required": [],
          "title": "policyRestoreTimeoutDuration",
          "type": [
            "null",
            "string"
          ]
        },
        "priorityClassName": {
          "default": "~",
          "description": "The priority class to use for cilium-envoy.",
          "required": [],
          "title": "priorityClassName",
          "type": [
            "null",
            "string"
          ]
        },
        "prometheus": {
          "additionalProperties": true,
          "description": "Configure Cilium Envoy Prometheus options.\nNote that some of these apply to either cilium-agent or cilium-envoy.",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable prometheus metrics for cilium-envoy",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "port": {
              "default": "9964",
              "description": "Serve prometheus metrics for cilium-envoy on the configured port",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "serviceMonitor": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations to add to ServiceMonitor cilium-envoy",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable service monitors.\nThis requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)\nNote that this setting applies to both cilium-envoy _and_ cilium-agent\nwith Envoy enabled.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "interval": {
                  "default": "10s",
                  "description": "Interval for scrape metrics.",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Labels to add to ServiceMonitor cilium-envoy",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "metricRelabelings": {
                  "default": "~",
                  "description": "Metrics relabeling configs for the ServiceMonitor cilium-envoy\nor for cilium-agent with Envoy configured.",
                  "required": [],
                  "title": "metricRelabelings",
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "relabelings": {
                  "description": "Specify the Kubernetes namespace where Prometheus expects to find\nservice monitors configured.\nnamespace: \"\"\nRelabeling configs for the ServiceMonitor cilium-envoy\nor for cilium-agent with Envoy configured.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "action": {
                        "default": "replace",
                        "required": [],
                        "title": "action",
                        "type": "string"
                      },
                      "replacement": {
                        "default": "${1}",
                        "required": [],
                        "title": "replacement",
                        "type": "string"
                      },
                      "sourceLabels": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "sourceLabels",
                        "type": "array"
                      },
                      "targetLabel": {
                        "default": "node",
                        "required": [],
                        "title": "targetLabel",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scrapeTimeout": {
                  "default": "~",
                  "description": "Timeout after which scrape is considered to be failed.",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "properties": {
            "failureThreshold": {
              "default": 3,
              "description": "failure threshold of readiness probe",
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 30,
              "description": "interval between checks of the readiness probe",
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Envoy resource limits \u0026 requests\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rollOutPods": {
          "default": false,
          "description": "Roll out cilium envoy pods automatically when configmap is updated.",
          "required": [],
          "title": "rollOutPods",
          "type": "boolean"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "envoy": {
                  "description": "Capabilities for the `cilium-envoy` container.\nEven though granted to the container, the cilium-envoy-starter wrapper drops\nall capabilities after forking the actual Envoy process.\n`NET_BIND_SERVICE` is the only capability that can be passed to the Envoy process by\nsetting `envoy.securityContext.capabilities.keepNetBindService=true` (in addition to granting the\ncapability to the container).\nNote: In case of embedded envoy, the capability must  be granted to the cilium-agent container.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "envoy",
                  "type": "array"
                },
                "keepCapNetBindService": {
                  "default": false,
                  "description": "Keep capability `NET_BIND_SERVICE` for Envoy process.",
                  "required": [],
                  "title": "keepCapNetBindService",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "privileged": {
              "default": false,
              "description": "User to run the pod with\nrunAsUser: 0\nRun the pod with elevated privileges",
              "required": [],
              "title": "privileged",
              "type": "boolean"
            },
            "seLinuxOptions": {
              "additionalProperties": true,
              "description": "SELinux options for the `cilium-envoy` container",
              "properties": {
                "level": {
                  "default": "s0",
                  "required": [],
                  "title": "level",
                  "type": "string"
                },
                "type": {
                  "default": "spc_t",
                  "description": "Running with spc_t since we have removed the privileged mode.\nUsers can change it to a different type as long as they have the\ntype available on the system.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seLinuxOptions",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "startupProbe": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable startup probe for cilium-envoy",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": 105,
              "description": "failure threshold of startup probe.\n105 x 2s translates to the old behaviour of the readiness probe (120s delay + 30 x 3s)",
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 2,
              "description": "interval between checks of the startup probe",
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "startupProbe",
          "type": "object"
        },
        "streamIdleTimeoutDurationSeconds": {
          "default": 300,
          "description": "Set Envoy the amount of time that the connection manager will allow a stream to exist with no upstream or downstream activity.\ndefault 5 minutes",
          "required": [],
          "title": "streamIdleTimeoutDurationSeconds",
          "type": "integer"
        },
        "terminationGracePeriodSeconds": {
          "default": 1,
          "description": "Configure termination grace period for cilium-envoy DaemonSet.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Node tolerations for envoy scheduling to nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "additionalProperties": true,
            "properties": {
              "operator": {
                "default": "Exists",
                "required": [],
                "title": "operator",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "cilium-envoy update strategy\nref: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#updating-a-daemonset",
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxUnavailable": {
                  "default": 2,
                  "required": [],
                  "title": "maxUnavailable",
                  "type": [
                    "integer",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        },
        "xffNumTrustedHopsL7PolicyEgress": {
          "default": 0,
          "description": "Number of trusted hops regarding the x-forwarded-for and related HTTP headers for the egress L7 policy enforcement Envoy listeners.",
          "required": [],
          "title": "xffNumTrustedHopsL7PolicyEgress",
          "type": "integer"
        },
        "xffNumTrustedHopsL7PolicyIngress": {
          "default": 0,
          "description": "Number of trusted hops regarding the x-forwarded-for and related HTTP headers for the ingress L7 policy enforcement Envoy listeners.",
          "required": [],
          "title": "xffNumTrustedHopsL7PolicyIngress",
          "type": "integer"
        }
      },
      "required": [],
      "title": "envoy",
      "type": "object"
    },
    "envoyConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable CiliumEnvoyConfig CRD\nCiliumEnvoyConfig CRD can also be implicitly enabled by other options.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "retryInterval": {
          "default": "15s",
          "description": "Interval in which an attempt is made to reconcile failed EnvoyConfigs. If the duration is zero, the retry is deactivated.",
          "required": [],
          "title": "retryInterval",
          "type": "string"
        },
        "secretsNamespace": {
          "additionalProperties": true,
          "description": "SecretsNamespace is the namespace in which envoy SDS will retrieve secrets from.",
          "properties": {
            "create": {
              "default": true,
              "description": "Create secrets namespace for CiliumEnvoyConfig CRDs.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-secrets",
              "description": "The name of the secret namespace to which Cilium agents are given read access.",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "secretsNamespace",
          "type": "object"
        }
      },
      "required": [],
      "title": "envoyConfig",
      "type": "object"
    },
    "etcd": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable etcd mode for the agent.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "description": "List of etcd endpoints",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "ssl": {
          "default": false,
          "description": "Enable use of TLS/SSL for connectivity to etcd.",
          "required": [],
          "title": "ssl",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "etcd",
      "type": "object"
    },
    "extraArgs": {
      "description": "Additional agent container arguments.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraArgs",
      "type": "array"
    },
    "extraConfig": {
      "additionalProperties": true,
      "description": "extraConfig allows you to specify additional configuration parameters to be\nincluded in the cilium-config configmap.",
      "required": [],
      "title": "extraConfig",
      "type": "object"
    },
    "extraContainers": {
      "description": "Additional containers added to the cilium DaemonSet.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraContainers",
      "type": "array"
    },
    "extraEnv": {
      "description": "Additional agent container environment variables.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "extraHostPathMounts": {
      "description": "Additional agent hostPath mounts.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraHostPathMounts",
      "type": "array"
    },
    "extraInitContainers": {
      "description": "Additional initContainers added to the cilium Daemonset.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraInitContainers",
      "type": "array"
    },
    "extraVolumeMounts": {
      "description": "Additional agent volumeMounts.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "description": "Additional agent volumes.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "forceDeviceDetection": {
      "default": false,
      "description": "Forces the auto-detection of devices, even if specific devices are explicitly listed",
      "required": [],
      "title": "forceDeviceDetection",
      "type": "boolean"
    },
    "gatewayAPI": {
      "additionalProperties": true,
      "properties": {
        "enableAlpn": {
          "default": false,
          "description": "Enable ALPN for all listeners configured with Gateway API. ALPN will attempt HTTP/2, then HTTP 1.1.\nNote that this will also enable `appProtocol` support, and services that wish to use HTTP/2 will need to indicate that via their `appProtocol`.",
          "required": [],
          "title": "enableAlpn",
          "type": "boolean"
        },
        "enableAppProtocol": {
          "default": false,
          "description": "Enable Backend Protocol selection support (GEP-1911) for Gateway API via appProtocol.",
          "required": [],
          "title": "enableAppProtocol",
          "type": "boolean"
        },
        "enableProxyProtocol": {
          "default": false,
          "description": "Enable proxy protocol for all GatewayAPI listeners. Note that _only_ Proxy protocol traffic will be accepted once this is enabled.",
          "required": [],
          "title": "enableProxyProtocol",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "description": "Enable support for Gateway API in cilium\nThis will automatically set enable-envoy-config as well.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalTrafficPolicy": {
          "default": "Cluster",
          "description": "Control how traffic from external sources is routed to the LoadBalancer Kubernetes Service for all Cilium GatewayAPI Gateway instances. Valid values are \"Cluster\" and \"Local\".\nNote that this value will be ignored when `hostNetwork.enabled == true`.\nref: https://kubernetes.io/docs/reference/networking/virtual-ips/#external-traffic-policy",
          "required": [],
          "title": "externalTrafficPolicy",
          "type": "string"
        },
        "gatewayClass": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": "auto",
              "description": "Enable creation of GatewayClass resource\nThe default value is 'auto' which decides according to presence of gateway.networking.k8s.io/v1/GatewayClass in the cluster.\nOther possible values are 'true' and 'false', which will either always or never create the GatewayClass, respectively.",
              "required": [],
              "title": "create",
              "type": "string"
            }
          },
          "required": [],
          "title": "gatewayClass",
          "type": "object"
        },
        "hostNetwork": {
          "additionalProperties": true,
          "description": "Host Network related configuration",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Configure whether the Envoy listeners should be exposed on the host network.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "nodes": {
              "additionalProperties": true,
              "description": "Specify the nodes where the Ingress listeners should be exposed",
              "properties": {
                "matchLabels": {
                  "additionalProperties": true,
                  "description": "Specify the labels of the nodes where the Ingress listeners should be exposed\n\nmatchLabels:\n  kubernetes.io/os: linux\n  kubernetes.io/hostname: kind-worker",
                  "required": [],
                  "title": "matchLabels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nodes",
              "type": "object"
            }
          },
          "required": [],
          "title": "hostNetwork",
          "type": "object"
        },
        "secretsNamespace": {
          "additionalProperties": true,
          "description": "SecretsNamespace is the namespace in which envoy SDS will retrieve TLS secrets from.",
          "properties": {
            "create": {
              "default": true,
              "description": "Create secrets namespace for Gateway API.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-secrets",
              "description": "Name of Gateway API secret namespace.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "sync": {
              "default": true,
              "description": "Enable secret sync, which will make sure all TLS secrets used by Ingress are synced to secretsNamespace.name.\nIf disabled, TLS secrets must be maintained externally.",
              "required": [],
              "title": "sync",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "secretsNamespace",
          "type": "object"
        },
        "xffNumTrustedHops": {
          "default": 0,
          "description": "The number of additional GatewayAPI proxy hops from the right side of the HTTP header to trust when determining the origin client's IP address.",
          "required": [],
          "title": "xffNumTrustedHops",
          "type": "integer"
        }
      },
      "required": [],
      "title": "gatewayAPI",
      "type": "object"
    },
    "gke": {
      "additionalProperties": true,
      "description": "fragmentTracking enables IPv4 fragment tracking support in the datapath.\nfragmentTracking: true",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable Google Kubernetes Engine integration",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "gke",
      "type": "object"
    },
    "global": {
      "additionalProperties": true,
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "healthCheckICMPFailureThreshold": {
      "default": 3,
      "description": "Number of ICMP requests sent for each health check before marking a node or endpoint unreachable.",
      "required": [],
      "title": "healthCheckICMPFailureThreshold",
      "type": "integer"
    },
    "healthChecking": {
      "default": true,
      "description": "Enable connectivity health checking.",
      "required": [],
      "title": "healthChecking",
      "type": "boolean"
    },
    "healthPort": {
      "default": 9879,
      "description": "TCP port for the agent health API. This is not the port for cilium-health.",
      "required": [],
      "title": "healthPort",
      "type": "integer"
    },
    "hostFirewall": {
      "additionalProperties": true,
      "description": "Configure the host firewall.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enables the enforcement of host policies in the eBPF datapath.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "hostFirewall",
      "type": "object"
    },
    "hubble": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level hubble objects (resources under templates/hubble)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "dropEventEmitter": {
          "additionalProperties": true,
          "description": "Emit v1.Events related to pods on detection of packet drops.\n   This feature is alpha, please provide feedback at https://github.com/cilium/cilium/issues/33975.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "2m",
              "description": "- Minimum time between emitting same events.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "reasons": {
              "description": "- Drop reasons to emit events for.\nref: https://docs.cilium.io/en/stable/_api/v1/flow/README/#dropreason",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "reasons",
              "type": "array"
            }
          },
          "required": [],
          "title": "dropEventEmitter",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "Enable Hubble (true by default).",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "export": {
          "additionalProperties": true,
          "description": "Hubble flows export.",
          "properties": {
            "dynamic": {
              "additionalProperties": true,
              "description": "- Dynamic exporters configuration.\nDynamic exporters may be reconfigured without a need of agent restarts.",
              "properties": {
                "config": {
                  "additionalProperties": true,
                  "properties": {
                    "configMapName": {
                      "default": "cilium-flowlog-config",
                      "description": "-- Name of configmap with configuration that may be altered to reconfigure exporters within a running agents.",
                      "required": [],
                      "title": "configMapName",
                      "type": "string"
                    },
                    "content": {
                      "description": "-- Exporters configuration in YAML format.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "excludeFilters": {
                            "items": {
                              "required": []
                            },
                            "required": [],
                            "title": "excludeFilters",
                            "type": "array"
                          },
                          "fieldMask": {
                            "items": {
                              "required": []
                            },
                            "required": [],
                            "title": "fieldMask",
                            "type": "array"
                          },
                          "fileCompress": {
                            "default": false,
                            "required": [],
                            "title": "fileCompress",
                            "type": "boolean"
                          },
                          "fileMaxBackups": {
                            "default": 5,
                            "required": [],
                            "title": "fileMaxBackups",
                            "type": "integer"
                          },
                          "fileMaxSizeMb": {
                            "default": 10,
                            "required": [],
                            "title": "fileMaxSizeMb",
                            "type": "integer"
                          },
                          "filePath": {
                            "default": "/var/run/cilium/hubble/events.log",
                            "required": [],
                            "title": "filePath",
                            "type": "string"
                          },
                          "includeFilters": {
                            "items": {
                              "required": []
                            },
                            "required": [],
                            "title": "includeFilters",
                            "type": "array"
                          },
                          "name": {
                            "default": "all",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "content",
                      "type": "array"
                    },
                    "createConfigMap": {
                      "default": true,
                      "description": "-- True if helm installer should create config map.\nSwitch to false if you want to self maintain the file content.",
                      "required": [],
                      "title": "createConfigMap",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "config",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "dynamic",
              "type": "object"
            },
            "static": {
              "additionalProperties": true,
              "description": "- Static exporter configuration.\nStatic exporter is bound to agent lifecycle.",
              "properties": {
                "allowList": {
                  "description": "- time\n- source\n- destination\n- verdict",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "allowList",
                  "type": "array"
                },
                "denyList": {
                  "description": "- '{\"verdict\":[\"DROPPED\",\"ERROR\"]}'",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "denyList",
                  "type": "array"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "fieldMask": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "fieldMask",
                  "type": "array"
                },
                "fileCompress": {
                  "default": false,
                  "description": "- Enable compression of rotated files.",
                  "required": [],
                  "title": "fileCompress",
                  "type": "boolean"
                },
                "fileMaxBackups": {
                  "default": 5,
                  "description": "- Defines max number of backup/rotated files.",
                  "required": [],
                  "title": "fileMaxBackups",
                  "type": "integer"
                },
                "fileMaxSizeMb": {
                  "default": 10,
                  "description": "- '{\"source_pod\":[\"kube-system/\"]}'\n- '{\"destination_pod\":[\"kube-system/\"]}'\n- Defines max file size of output file before it gets rotated.",
                  "required": [],
                  "title": "fileMaxSizeMb",
                  "type": "integer"
                },
                "filePath": {
                  "default": "/var/run/cilium/hubble/events.log",
                  "required": [],
                  "title": "filePath",
                  "type": "string"
                }
              },
              "required": [],
              "title": "static",
              "type": "object"
            }
          },
          "required": [],
          "title": "export",
          "type": "object"
        },
        "listenAddress": {
          "default": ":4244",
          "description": "An additional address for Hubble to listen to.\nSet this field \":4244\" if you are enabling Hubble Relay, as it assumes that\nHubble is listening on port 4244.",
          "required": [],
          "title": "listenAddress",
          "type": "string"
        },
        "metrics": {
          "additionalProperties": true,
          "description": "Hubble metrics configuration.\nSee https://docs.cilium.io/en/stable/observability/metrics/#hubble-metrics\nfor more comprehensive documentation about Hubble metrics.",
          "properties": {
            "dashboards": {
              "additionalProperties": true,
              "description": "Grafana dashboards for hubble\ngrafana can import dashboards based on the label and value\nref: https://github.com/grafana/helm-charts/tree/main/charts/grafana#sidecar-for-dashboards",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "label": {
                  "default": "grafana_dashboard",
                  "required": [],
                  "title": "label",
                  "type": "string"
                },
                "labelValue": {
                  "default": "1",
                  "required": [],
                  "title": "labelValue",
                  "type": "string"
                },
                "namespace": {
                  "default": "~",
                  "required": [],
                  "title": "namespace",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "dashboards",
              "type": "object"
            },
            "dynamic": {
              "additionalProperties": true,
              "description": "Dynamic metrics  may be reconfigured without a need of agent restarts.",
              "properties": {
                "config": {
                  "additionalProperties": true,
                  "properties": {
                    "configMapName": {
                      "default": "cilium-dynamic-metrics-config",
                      "description": "-- Name of configmap with configuration that may be altered to reconfigure metric handlers within a running agent.",
                      "required": [],
                      "title": "configMapName",
                      "type": "string"
                    },
                    "content": {
                      "description": "-- Exporters configuration in YAML format.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "content",
                      "type": "array"
                    },
                    "createConfigMap": {
                      "default": true,
                      "description": "-- True if helm installer should create config map.\nSwitch to false if you want to self maintain the file content.",
                      "required": [],
                      "title": "createConfigMap",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "config",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "dynamic",
              "type": "object"
            },
            "enableOpenMetrics": {
              "default": false,
              "description": "Enables exporting hubble metrics in OpenMetrics format.",
              "required": [],
              "title": "enableOpenMetrics",
              "type": "boolean"
            },
            "enabled": {
              "default": "~",
              "description": "Configures the list of metrics to collect. If empty or null, metrics\nare disabled.\nExample:\n\n  enabled:\n  - dns:query;ignoreAAAA\n  - drop\n  - tcp\n  - flow\n  - icmp\n  - http\n\nYou can specify the list of metrics from the helm CLI:\n\n  --set hubble.metrics.enabled=\"{dns:query;ignoreAAAA,drop,tcp,flow,icmp,http}\"\n",
              "required": [],
              "title": "enabled",
              "type": [
                "null",
                "array"
              ]
            },
            "port": {
              "default": 9965,
              "description": "Configure the port the hubble metric server listens on.",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "serviceAnnotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to hubble-metrics service.",
              "required": [],
              "title": "serviceAnnotations",
              "type": "object"
            },
            "serviceMonitor": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations to add to ServiceMonitor hubble",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Create ServiceMonitor resources for Prometheus Operator.\nThis requires the prometheus CRDs to be available.\nref: https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "interval": {
                  "default": "10s",
                  "description": "Interval for scrape metrics.",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "jobLabel": {
                  "default": "",
                  "description": "jobLabel to add for ServiceMonitor hubble",
                  "required": [],
                  "title": "jobLabel",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Labels to add to ServiceMonitor hubble",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "metricRelabelings": {
                  "default": "~",
                  "description": "Metrics relabeling configs for the ServiceMonitor hubble",
                  "required": [],
                  "title": "metricRelabelings",
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "relabelings": {
                  "description": "Relabeling configs for the ServiceMonitor hubble",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "action": {
                        "default": "replace",
                        "required": [],
                        "title": "action",
                        "type": "string"
                      },
                      "replacement": {
                        "default": "${1}",
                        "required": [],
                        "title": "replacement",
                        "type": "string"
                      },
                      "sourceLabels": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "sourceLabels",
                        "type": "array"
                      },
                      "targetLabel": {
                        "default": "node",
                        "required": [],
                        "title": "targetLabel",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scrapeTimeout": {
                  "default": "~",
                  "description": "Timeout after which scrape is considered to be failed.",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "Configure TLS for the ServiceMonitor.\nNote, when using TLS you will either need to specify\ntlsConfig.insecureSkipVerify or specify a CA to use.",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            },
            "tls": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable hubble metrics server TLS.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "server": {
                  "additionalProperties": true,
                  "description": "Configure hubble metrics server TLS.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble metrics server certificate (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "existingSecret": {
                      "default": "",
                      "description": "Name of the Secret containing the certificate and key for the Hubble metrics server.\nIf specified, cert and key are ignored.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "extraDnsNames": {
                      "description": "Extra DNS names added to certificate when it's auto generated",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraDnsNames",
                      "type": "array"
                    },
                    "extraIpAddresses": {
                      "description": "Extra IP addresses added to certificate when it's auto generated",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraIpAddresses",
                      "type": "array"
                    },
                    "key": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble metrics server key (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "mtls": {
                      "additionalProperties": true,
                      "description": "Configure mTLS for the Hubble metrics server.",
                      "properties": {
                        "enabled": {
                          "default": false,
                          "description": "When set to true enforces mutual TLS between Hubble Metrics server and its clients.\nFalse allow non-mutual TLS connections.\nThis option has no effect when TLS is disabled.",
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        },
                        "key": {
                          "default": "ca.crt",
                          "description": "Entry of the ConfigMap containing the CA.",
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "name": {
                          "default": "~",
                          "description": "Name of the ConfigMap containing the CA to validate client certificates against.\nIf mTLS is enabled and this is unspecified, it will default to the\nsame CA used for Hubble metrics server certificates.",
                          "required": [],
                          "title": "name",
                          "type": "null"
                        },
                        "useSecret": {
                          "default": false,
                          "required": [],
                          "title": "useSecret",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "mtls",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "server",
                  "type": "object"
                }
              },
              "required": [],
              "title": "tls",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "networkPolicyCorrelation": {
          "additionalProperties": true,
          "description": "Enables network policy correlation of Hubble flows, i.e. populating `egress_allowed_by`, `ingress_denied_by` fields with policy information.",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "networkPolicyCorrelation",
          "type": "object"
        },
        "peerService": {
          "additionalProperties": true,
          "properties": {
            "clusterDomain": {
              "default": "cluster.local",
              "description": "The cluster domain to use to query the Hubble Peer service. It should\nbe the local cluster.",
              "required": [],
              "title": "clusterDomain",
              "type": "string"
            },
            "targetPort": {
              "default": 4244,
              "description": "Service Port for the Peer service.\nIf not set, it is dynamically assigned to port 443 if TLS is enabled and to\nport 80 if not.\nservicePort: 80\nTarget Port for the Peer service, must match the hubble.listenAddress'\nport.",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "peerService",
          "type": "object"
        },
        "preferIpv6": {
          "default": false,
          "description": "Whether Hubble should prefer to announce IPv6 or IPv4 addresses if both are available.",
          "required": [],
          "title": "preferIpv6",
          "type": "boolean"
        },
        "redact": {
          "additionalProperties": true,
          "description": "Enables redacting sensitive information present in Layer 7 flows.",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "http": {
              "additionalProperties": true,
              "properties": {
                "headers": {
                  "additionalProperties": true,
                  "properties": {
                    "allow": {
                      "description": "List of HTTP headers to allow: headers not matching will be redacted. Note: `allow` and `deny` lists cannot be used both at the same time, only one can be present.\nExample:\n  redact:\n    enabled: true\n    http:\n      headers:\n        allow:\n          - traceparent\n          - tracestate\n          - Cache-Control\n\nYou can specify the options from the helm CLI:\n  --set hubble.redact.enabled=\"true\"\n  --set hubble.redact.http.headers.allow=\"traceparent,tracestate,Cache-Control\"",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "allow",
                      "type": "array"
                    },
                    "deny": {
                      "description": "List of HTTP headers to deny: matching headers will be redacted. Note: `allow` and `deny` lists cannot be used both at the same time, only one can be present.\nExample:\n  redact:\n    enabled: true\n    http:\n      headers:\n        deny:\n          - Authorization\n          - Proxy-Authorization\n\nYou can specify the options from the helm CLI:\n  --set hubble.redact.enabled=\"true\"\n  --set hubble.redact.http.headers.deny=\"Authorization,Proxy-Authorization\"",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "deny",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "headers",
                  "type": "object"
                },
                "urlQuery": {
                  "default": false,
                  "description": "Enables redacting URL query (GET) parameters.\nExample:\n\n  redact:\n    enabled: true\n    http:\n      urlQuery: true\n\nYou can specify the options from the helm CLI:\n\n  --set hubble.redact.enabled=\"true\"\n  --set hubble.redact.http.urlQuery=\"true\"",
                  "required": [],
                  "title": "urlQuery",
                  "type": "boolean"
                },
                "userInfo": {
                  "default": true,
                  "description": "Enables redacting user info, e.g., password when basic auth is used.\nExample:\n\n  redact:\n    enabled: true\n    http:\n      userInfo: true\n\nYou can specify the options from the helm CLI:\n\n  --set hubble.redact.enabled=\"true\"\n  --set hubble.redact.http.userInfo=\"true\"",
                  "required": [],
                  "title": "userInfo",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "http",
              "type": "object"
            },
            "kafka": {
              "additionalProperties": true,
              "properties": {
                "apiKey": {
                  "default": true,
                  "description": "Enables redacting Kafka's API key (deprecated, will be removed in v1.19).\nExample:\n\n  redact:\n    enabled: true\n    kafka:\n      apiKey: true\n\nYou can specify the options from the helm CLI:\n\n  --set hubble.redact.enabled=\"true\"\n  --set hubble.redact.kafka.apiKey=\"true\"",
                  "required": [],
                  "title": "apiKey",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "kafka",
              "type": "object"
            }
          },
          "required": [],
          "title": "redact",
          "type": "object"
        },
        "relay": {
          "additionalProperties": true,
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Affinity for hubble-replay",
              "properties": {
                "podAffinity": {
                  "additionalProperties": true,
                  "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "labelSelector": {
                            "additionalProperties": true,
                            "properties": {
                              "matchLabels": {
                                "additionalProperties": true,
                                "properties": {
                                  "k8s-app": {
                                    "default": "cilium",
                                    "required": [],
                                    "title": "k8s-app",
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "title": "matchLabels",
                                "type": "object"
                              }
                            },
                            "required": [],
                            "title": "labelSelector",
                            "type": "object"
                          },
                          "topologyKey": {
                            "default": "kubernetes.io/hostname",
                            "required": [],
                            "title": "topologyKey",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "requiredDuringSchedulingIgnoredDuringExecution",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "podAffinity",
                  "type": "object"
                }
              },
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to all top-level hubble-relay objects (resources under templates/hubble-relay)",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable Hubble Relay (requires hubble.enabled=true)",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraEnv": {
              "description": "Additional hubble-relay environment variables.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnv",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Additional hubble-relay volumeMounts.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "Additional hubble-relay volumes.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "gops": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable gops for hubble-relay",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 9893,
                  "description": "Configure gops listen port for hubble-relay",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "gops",
              "type": "object"
            },
            "image": {
              "additionalProperties": true,
              "description": "Hubble-relay container image.",
              "properties": {
                "digest": {
                  "default": "sha256:e53e00c47fe4ffb9c086bad0c1c77f23cb968be4385881160683d9e15aa34dc3",
                  "description": "hubble-relay-digest",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "override": {
                  "default": "~",
                  "required": [],
                  "title": "override",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "repository": {
                  "default": "quay.io/cilium/hubble-relay",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v1.18.3",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                },
                "useDigest": {
                  "default": true,
                  "required": [],
                  "title": "useDigest",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "listenHost": {
              "default": "",
              "description": "Host to listen to. Specify an empty string to bind to all the interfaces.",
              "required": [],
              "title": "listenHost",
              "type": "string"
            },
            "listenPort": {
              "default": "4245",
              "description": "Port to listen to.",
              "required": [],
              "title": "listenPort",
              "type": "string"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node labels for pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
              "properties": {
                "kubernetes.io/os": {
                  "default": "linux",
                  "required": [],
                  "title": "kubernetes.io/os",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to hubble-relay pods",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": true,
              "description": "PodDisruptionBudget settings",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "enable PodDisruptionBudget\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "default": 1,
                  "description": "Maximum number/percentage of pods that may be made unavailable",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "minAvailable": {
                  "default": "null",
                  "description": "Minimum number/percentage of pods that should remain scheduled.\nWhen it's set, maxUnavailable must be disabled by `maxUnavailable: null`",
                  "required": [],
                  "title": "minAvailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "unhealthyPodEvictionPolicy": {
                  "default": "null",
                  "description": "How are unhealthy, but running, pods counted for eviction",
                  "required": [],
                  "title": "unhealthyPodEvictionPolicy",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "description": "Labels to be added to hubble-relay pods",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podSecurityContext": {
              "additionalProperties": true,
              "description": "hubble-relay pod security context",
              "properties": {
                "fsGroup": {
                  "default": 65532,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "pprof": {
              "additionalProperties": true,
              "properties": {
                "address": {
                  "default": "localhost",
                  "description": "Configure pprof listen address for hubble-relay",
                  "required": [],
                  "title": "address",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable pprof for hubble-relay",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 6062,
                  "description": "Configure pprof listen port for hubble-relay",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "pprof",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "The priority class to use for hubble-relay",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "prometheus": {
              "additionalProperties": true,
              "description": "Enable prometheus metrics for hubble-relay on the configured port at\n/metrics",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 9966,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "serviceMonitor": {
                  "additionalProperties": true,
                  "properties": {
                    "annotations": {
                      "additionalProperties": true,
                      "description": "Annotations to add to ServiceMonitor hubble-relay",
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enable service monitors.\nThis requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "interval": {
                      "default": "10s",
                      "description": "Interval for scrape metrics.",
                      "required": [],
                      "title": "interval",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": true,
                      "description": "Labels to add to ServiceMonitor hubble-relay",
                      "required": [],
                      "title": "labels",
                      "type": "object"
                    },
                    "metricRelabelings": {
                      "default": "~",
                      "description": "Metrics relabeling configs for the ServiceMonitor hubble-relay",
                      "required": [],
                      "title": "metricRelabelings",
                      "type": [
                        "null",
                        "array"
                      ]
                    },
                    "relabelings": {
                      "default": "~",
                      "description": "Specify the Kubernetes namespace where Prometheus expects to find\nservice monitors configured.\nnamespace: \"\"\nRelabeling configs for the ServiceMonitor hubble-relay",
                      "required": [],
                      "title": "relabelings",
                      "type": [
                        "null",
                        "array"
                      ]
                    },
                    "scrapeTimeout": {
                      "default": "~",
                      "description": "Timeout after which scrape is considered to be failed.",
                      "required": [],
                      "title": "scrapeTimeout",
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "title": "serviceMonitor",
                  "type": "object"
                }
              },
              "required": [],
              "title": "prometheus",
              "type": "object"
            },
            "replicas": {
              "default": 1,
              "description": "Number of replicas run for the hubble-relay deployment.",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "description": "Specifies the resources for the hubble-relay pods",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "retryTimeout": {
              "default": "~",
              "description": "Backoff duration to retry connecting to the local hubble instance in case of failure (e.g. \"30s\").",
              "required": [],
              "title": "retryTimeout",
              "type": [
                "null",
                "string"
              ]
            },
            "rollOutPods": {
              "default": false,
              "description": "Roll out Hubble Relay pods automatically when configmap is updated.",
              "required": [],
              "title": "rollOutPods",
              "type": "boolean"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "hubble-relay container security context",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "description": "readOnlyRootFilesystem: true",
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "properties": {
                    "drop": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "runAsGroup": {
                  "default": 65532,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 65532,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "description": "hubble-relay service configuration.",
              "properties": {
                "nodePort": {
                  "default": 31234,
                  "description": "- The port to use when the service type is set to NodePort.",
                  "required": [],
                  "title": "nodePort",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "- The type of service used for Hubble Relay access, either ClusterIP, NodePort or LoadBalancer.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "sortBufferDrainTimeout": {
              "default": "~",
              "description": "When the per-request flows sort buffer is not full, a flow is drained every\ntime this timeout is reached (only affects requests in follow-mode) (e.g. \"1s\").",
              "required": [],
              "title": "sortBufferDrainTimeout",
              "type": [
                "null",
                "string"
              ]
            },
            "sortBufferLenMax": {
              "default": "~",
              "description": "(int) Max number of flows that can be buffered for sorting before being sent to the\nclient (per request) (e.g. 100).",
              "required": [],
              "title": "sortBufferLenMax",
              "type": [
                "null",
                "integer"
              ]
            },
            "terminationGracePeriodSeconds": {
              "default": 1,
              "description": "Configure termination grace period for hubble relay Deployment.",
              "required": [],
              "title": "terminationGracePeriodSeconds",
              "type": "integer"
            },
            "tls": {
              "additionalProperties": true,
              "description": "TLS configuration for Hubble Relay",
              "properties": {
                "client": {
                  "additionalProperties": true,
                  "description": "The hubble-relay client certificate and private key.\nThis keypair is presented to Hubble server instances for mTLS\nauthentication and is required when hubble.tls.enabled is true.\nThese values need to be set manually if hubble.tls.auto.enabled is false.",
                  "properties": {
                    "cert": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble relay client certificate (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "existingSecret": {
                      "default": "",
                      "description": "Name of the Secret containing the certificate and key for the Hubble metrics server.\nIf specified, cert and key are ignored.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "key": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble relay client key (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "client",
                  "type": "object"
                },
                "server": {
                  "additionalProperties": true,
                  "description": "The hubble-relay server certificate and private key",
                  "properties": {
                    "cert": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble relay server certificate (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "enabled": {
                      "default": false,
                      "description": "When set to true, enable TLS on for Hubble Relay server\n(ie: for clients connecting to the Hubble Relay API).",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "existingSecret": {
                      "default": "",
                      "description": "Name of the Secret containing the certificate and key for the Hubble relay server.\nIf specified, cert and key are ignored.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "extraDnsNames": {
                      "description": "extra DNS names added to certificate when its auto gen",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraDnsNames",
                      "type": "array"
                    },
                    "extraIpAddresses": {
                      "description": "extra IP addresses added to certificate when its auto gen",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "extraIpAddresses",
                      "type": "array"
                    },
                    "key": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble relay server key (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "mtls": {
                      "default": false,
                      "description": "When set to true enforces mutual TLS between Hubble Relay server and its clients.\nFalse allow non-mutual TLS connections.\nThis option has no effect when TLS is disabled.",
                      "required": [],
                      "title": "mtls",
                      "type": "boolean"
                    },
                    "relayName": {
                      "default": "ui.hubble-relay.cilium.io",
                      "description": "DNS name used by the backend to connect to the relay\nThis is a simple workaround as the relay certificates are currently hardcoded to\n*.hubble-relay.cilium.io\nSee https://github.com/cilium/cilium/pull/28709#discussion_r1371792546\nFor GKE Dataplane V2 this should be set to relay.kube-system.svc.cluster.local",
                      "required": [],
                      "title": "relayName",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "server",
                  "type": "object"
                }
              },
              "required": [],
              "title": "tls",
              "type": "object"
            },
            "tolerations": {
              "description": "Node tolerations for pod assignment on nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "Pod topology spread constraints for hubble-relay",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "updateStrategy": {
              "additionalProperties": true,
              "description": "hubble-relay update strategy",
              "properties": {
                "rollingUpdate": {
                  "additionalProperties": true,
                  "properties": {
                    "maxUnavailable": {
                      "default": 1,
                      "required": [],
                      "title": "maxUnavailable",
                      "type": [
                        "integer",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "title": "rollingUpdate",
                  "type": "object"
                },
                "type": {
                  "default": "RollingUpdate",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updateStrategy",
              "type": "object"
            }
          },
          "required": [],
          "title": "relay",
          "type": "object"
        },
        "skipUnknownCGroupIDs": {
          "default": "~",
          "description": "(bool) Skip Hubble events with unknown cgroup ids",
          "required": [],
          "title": "skipUnknownCGroupIDs",
          "type": [
            "null",
            "boolean"
          ]
        },
        "socketPath": {
          "default": "/var/run/cilium/hubble.sock",
          "description": "Unix domain socket path to listen to when Hubble is enabled.",
          "required": [],
          "title": "socketPath",
          "type": "string"
        },
        "tls": {
          "additionalProperties": true,
          "description": "TLS configuration for Hubble",
          "properties": {
            "auto": {
              "additionalProperties": true,
              "description": "Configure automatic TLS certificates generation.",
              "properties": {
                "certManagerIssuerRef": {
                  "additionalProperties": true,
                  "description": "[Example]\ncertManagerIssuerRef:\n  group: cert-manager.io\n  kind: ClusterIssuer\n  name: ca-issuer\ncertmanager issuer used when hubble.tls.auto.method=certmanager.",
                  "required": [],
                  "title": "certManagerIssuerRef",
                  "type": "object"
                },
                "certValidityDuration": {
                  "default": 365,
                  "description": "Generated certificates validity duration in days.\n\nDefaults to 365 days (1 year) because MacOS does not accept\nself-signed certificates with expirations \u003e 825 days.",
                  "required": [],
                  "title": "certValidityDuration",
                  "type": "integer"
                },
                "enabled": {
                  "default": true,
                  "description": "Auto-generate certificates.\nWhen set to true, automatically generate a CA and certificates to\nenable mTLS between Hubble server and Hubble Relay instances. If set to\nfalse, the certs for Hubble server need to be provided by setting\nappropriate values below.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "method": {
                  "default": "helm",
                  "description": "Set the method to auto-generate certificates. Supported values:\n- helm:         This method uses Helm to generate all certificates.\n- cronJob:      This method uses a Kubernetes CronJob the generate any\n                certificates not provided by the user at installation\n                time.\n- certmanager:  This method use cert-manager to generate \u0026 rotate certificates.",
                  "required": [],
                  "title": "method",
                  "type": "string"
                },
                "schedule": {
                  "default": "0 0 1 */4 *",
                  "description": "Schedule for certificates regeneration (regardless of their expiration date).\nOnly used if method is \"cronJob\". If nil, then no recurring job will be created.\nInstead, only the one-shot job is deployed to generate the certificates at\ninstallation time.\n\nDefaults to midnight of the first day of every fourth month. For syntax, see\nhttps://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-syntax",
                  "required": [],
                  "title": "schedule",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auto",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Enable mutual TLS for listenAddress. Setting this value to false is\nhighly discouraged as the Hubble API provides access to potentially\nsensitive network flow metadata and is exposed on the host network.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "server": {
              "additionalProperties": true,
              "description": "The Hubble server certificate and private key",
              "properties": {
                "cert": {
                  "default": "",
                  "description": "base64 encoded PEM values for the Hubble server certificate (deprecated).\nUse existingSecret instead.",
                  "required": [],
                  "title": "cert",
                  "type": "string"
                },
                "existingSecret": {
                  "default": "",
                  "description": "Name of the Secret containing the certificate and key for the Hubble server.\nIf specified, cert and key are ignored.",
                  "required": [],
                  "title": "existingSecret",
                  "type": "string"
                },
                "extraDnsNames": {
                  "description": "Extra DNS names added to certificate when it's auto generated",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraDnsNames",
                  "type": "array"
                },
                "extraIpAddresses": {
                  "description": "Extra IP addresses added to certificate when it's auto generated",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraIpAddresses",
                  "type": "array"
                },
                "key": {
                  "default": "",
                  "description": "base64 encoded PEM values for the Hubble server key (deprecated).\nUse existingSecret instead.",
                  "required": [],
                  "title": "key",
                  "type": "string"
                }
              },
              "required": [],
              "title": "server",
              "type": "object"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "ui": {
          "additionalProperties": true,
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Affinity for hubble-ui",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to all top-level hubble-ui objects (resources under templates/hubble-ui)",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "backend": {
              "additionalProperties": true,
              "properties": {
                "extraEnv": {
                  "description": "Additional hubble-ui backend environment variables.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraEnv",
                  "type": "array"
                },
                "extraVolumeMounts": {
                  "description": "Additional hubble-ui backend volumeMounts.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraVolumeMounts",
                  "type": "array"
                },
                "extraVolumes": {
                  "description": "Additional hubble-ui backend volumes.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraVolumes",
                  "type": "array"
                },
                "image": {
                  "additionalProperties": true,
                  "description": "Hubble-ui backend image.",
                  "properties": {
                    "digest": {
                      "default": "sha256:db1454e45dc39ca41fbf7cad31eec95d99e5b9949c39daaad0fa81ef29d56953",
                      "required": [],
                      "title": "digest",
                      "type": "string"
                    },
                    "override": {
                      "default": "~",
                      "required": [],
                      "title": "override",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "repository": {
                      "default": "quay.io/cilium/hubble-ui-backend",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "tag": {
                      "default": "v0.13.3",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    },
                    "useDigest": {
                      "default": true,
                      "required": [],
                      "title": "useDigest",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "image",
                  "type": "object"
                },
                "livenessProbe": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enable liveness probe for Hubble-ui backend (requires Hubble-ui 0.12+)",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "livenessProbe",
                  "type": "object"
                },
                "readinessProbe": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enable readiness probe for Hubble-ui backend (requires Hubble-ui 0.12+)",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "readinessProbe",
                  "type": "object"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "Resource requests and limits for the 'backend' container of the 'hubble-ui' deployment.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "Hubble-ui backend security context.",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                }
              },
              "required": [],
              "title": "backend",
              "type": "object"
            },
            "baseUrl": {
              "default": "/",
              "description": "Defines base url prefix for all hubble-ui http requests.\nIt needs to be changed in case if ingress for hubble-ui is configured under some sub-path.\nTrailing `/` is required for custom path, ex. `/service-map/`",
              "required": [],
              "title": "baseUrl",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Whether to enable the Hubble UI.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "frontend": {
              "additionalProperties": true,
              "properties": {
                "extraEnv": {
                  "description": "Additional hubble-ui frontend environment variables.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraEnv",
                  "type": "array"
                },
                "extraVolumeMounts": {
                  "description": "Additional hubble-ui frontend volumeMounts.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraVolumeMounts",
                  "type": "array"
                },
                "extraVolumes": {
                  "description": "Additional hubble-ui frontend volumes.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraVolumes",
                  "type": "array"
                },
                "image": {
                  "additionalProperties": true,
                  "description": "Hubble-ui frontend image.",
                  "properties": {
                    "digest": {
                      "default": "sha256:661d5de7050182d495c6497ff0b007a7a1e379648e60830dd68c4d78ae21761d",
                      "required": [],
                      "title": "digest",
                      "type": "string"
                    },
                    "override": {
                      "default": "~",
                      "required": [],
                      "title": "override",
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "repository": {
                      "default": "quay.io/cilium/hubble-ui",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "tag": {
                      "default": "v0.13.3",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    },
                    "useDigest": {
                      "default": true,
                      "required": [],
                      "title": "useDigest",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "image",
                  "type": "object"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "Resource requests and limits for the 'frontend' container of the 'hubble-ui' deployment.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "Hubble-ui frontend security context.",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                },
                "server": {
                  "additionalProperties": true,
                  "description": "  limits:\n    cpu: 1000m\n    memory: 1024M\n  requests:\n    cpu: 100m\n    memory: 64Mi",
                  "properties": {
                    "ipv6": {
                      "additionalProperties": true,
                      "description": "Controls server listener for ipv6",
                      "properties": {
                        "enabled": {
                          "default": true,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "ipv6",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "server",
                  "type": "object"
                }
              },
              "required": [],
              "title": "frontend",
              "type": "object"
            },
            "ingress": {
              "additionalProperties": true,
              "description": "hubble-ui ingress configuration.",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "className": {
                  "default": "",
                  "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
                  "required": [],
                  "title": "className",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hosts": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "hosts",
                  "type": "array"
                },
                "labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "tls": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "ingress",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional labels to be added to 'hubble-ui' deployment object",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "Node labels for pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
              "properties": {
                "kubernetes.io/os": {
                  "default": "linux",
                  "required": [],
                  "title": "kubernetes.io/os",
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "Annotations to be added to hubble-ui pods",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": true,
              "description": "PodDisruptionBudget settings",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "enable PodDisruptionBudget\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "default": 1,
                  "description": "Maximum number/percentage of pods that may be made unavailable",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "minAvailable": {
                  "default": "null",
                  "description": "Minimum number/percentage of pods that should remain scheduled.\nWhen it's set, maxUnavailable must be disabled by `maxUnavailable: null`",
                  "required": [],
                  "title": "minAvailable",
                  "type": [
                    "null",
                    "integer",
                    "string"
                  ]
                },
                "unhealthyPodEvictionPolicy": {
                  "default": "null",
                  "description": "How are unhealthy, but running, pods counted for eviction",
                  "required": [],
                  "title": "unhealthyPodEvictionPolicy",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "description": "Labels to be added to hubble-ui pods",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "The priority class to use for hubble-ui",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "replicas": {
              "default": 1,
              "description": "The number of replicas of Hubble UI to deploy.",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "rollOutPods": {
              "default": false,
              "description": "Roll out Hubble-ui pods automatically when configmap is updated.",
              "required": [],
              "title": "rollOutPods",
              "type": "boolean"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "Security context to be added to Hubble UI pods",
              "properties": {
                "fsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "description": "hubble-ui service configuration.",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations to be added for the Hubble UI service",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Labels to be added for the Hubble UI service",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "nodePort": {
                  "default": 31235,
                  "description": "- The port to use when the service type is set to NodePort.",
                  "required": [],
                  "title": "nodePort",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "- The type of service used for Hubble UI access, either ClusterIP or NodePort.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "standalone": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "When true, it will allow installing the Hubble UI only, without checking dependencies.\nIt is useful if a cluster already has cilium and Hubble relay installed and you just\nwant Hubble UI to be deployed.\nWhen installed via helm, installing UI should be done via `helm upgrade` and when installed via the cilium cli, then `cilium hubble enable --ui`",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "tls": {
                  "additionalProperties": true,
                  "properties": {
                    "certsVolume": {
                      "additionalProperties": true,
                      "description": "When deploying Hubble UI in standalone, with tls enabled for Hubble relay, it is required\nto provide a volume for mounting the client certificates.",
                      "required": [],
                      "title": "certsVolume",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "tls",
                  "type": "object"
                }
              },
              "required": [],
              "title": "standalone",
              "type": "object"
            },
            "tls": {
              "additionalProperties": true,
              "properties": {
                "client": {
                  "additionalProperties": true,
                  "properties": {
                    "cert": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble UI client certificate (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "cert",
                      "type": "string"
                    },
                    "existingSecret": {
                      "default": "",
                      "description": "Name of the Secret containing the client certificate and key for Hubble UI\nIf specified, cert and key are ignored.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "key": {
                      "default": "",
                      "description": "base64 encoded PEM values for the Hubble UI client key (deprecated).\nUse existingSecret instead.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "client",
                  "type": "object"
                }
              },
              "required": [],
              "title": "tls",
              "type": "object"
            },
            "tolerations": {
              "description": "Node tolerations for pod assignment on nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "Pod topology spread constraints for hubble-ui",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "updateStrategy": {
              "additionalProperties": true,
              "description": "hubble-ui update strategy.",
              "properties": {
                "rollingUpdate": {
                  "additionalProperties": true,
                  "properties": {
                    "maxUnavailable": {
                      "default": 1,
                      "required": [],
                      "title": "maxUnavailable",
                      "type": [
                        "integer",
                        "string"
                      ]
                    }
                  },
                  "required": [],
                  "title": "rollingUpdate",
                  "type": "object"
                },
                "type": {
                  "default": "RollingUpdate",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updateStrategy",
              "type": "object"
            }
          },
          "required": [],
          "title": "ui",
          "type": "object"
        }
      },
      "required": [],
      "title": "hubble",
      "type": "object"
    },
    "identityAllocationMode": {
      "default": "crd",
      "description": "Method to use for identity allocation (`crd`, `kvstore` or `doublewrite-readkvstore` / `doublewrite-readcrd` for migrating between identity backends).",
      "required": [],
      "title": "identityAllocationMode",
      "type": "string"
    },
    "identityChangeGracePeriod": {
      "default": "",
      "description": "(string) Time to wait before using new identity on endpoint identity change.",
      "required": [],
      "title": "identityChangeGracePeriod",
      "type": "string"
    },
    "identityManagementMode": {
      "default": "agent",
      "description": "Control whether CiliumIdentities are created by the agent (\"agent\"), the operator (\"operator\") or both (\"both\").\n\"Both\" should be used only to migrate between \"agent\" and \"operator\".\nOperator-managed identities is a beta feature.",
      "enum": [
        "agent",
        "operator",
        "both"
      ],
      "required": [],
      "title": "identityManagementMode"
    },
    "image": {
      "additionalProperties": true,
      "description": "Agent container image.",
      "properties": {
        "digest": {
          "default": "sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15",
          "description": "cilium-digest",
          "required": [],
          "title": "digest",
          "type": "string"
        },
        "override": {
          "default": "~",
          "required": [],
          "title": "override",
          "type": [
            "null",
            "string"
          ]
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "quay.io/cilium/cilium",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "v1.18.3",
          "required": [],
          "title": "tag",
          "type": "string"
        },
        "useDigest": {
          "default": true,
          "required": [],
          "title": "useDigest",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "Configure image pull secrets for pulling container images",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingressController": {
      "additionalProperties": true,
      "properties": {
        "default": {
          "default": false,
          "description": "Set cilium ingress controller to be the default ingress controller\nThis will let cilium ingress controller route entries without ingress class set",
          "required": [],
          "title": "default",
          "type": "boolean"
        },
        "defaultSecretName": {
          "default": "",
          "description": "Default secret name for ingresses without .spec.tls[].secretName set.",
          "required": [],
          "title": "defaultSecretName",
          "type": [
            "null",
            "string"
          ]
        },
        "defaultSecretNamespace": {
          "default": "",
          "description": "Default secret namespace for ingresses without .spec.tls[].secretName set.",
          "required": [],
          "title": "defaultSecretNamespace",
          "type": [
            "null",
            "string"
          ]
        },
        "enableProxyProtocol": {
          "default": false,
          "description": "Enable proxy protocol for all Ingress listeners. Note that _only_ Proxy protocol traffic will be accepted once this is enabled.",
          "required": [],
          "title": "enableProxyProtocol",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "description": "Enable cilium ingress controller\nThis will automatically set enable-envoy-config as well.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "enforceHttps": {
          "default": true,
          "description": "Enforce https for host having matching TLS host in Ingress.\nIncoming traffic to http listener will return 308 http error code with respective location in header.",
          "required": [],
          "title": "enforceHttps",
          "type": "boolean"
        },
        "hostNetwork": {
          "additionalProperties": true,
          "description": "Host Network related configuration",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Configure whether the Envoy listeners should be exposed on the host network.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "nodes": {
              "additionalProperties": true,
              "description": "Specify the nodes where the Ingress listeners should be exposed",
              "properties": {
                "matchLabels": {
                  "additionalProperties": true,
                  "description": "Specify the labels of the nodes where the Ingress listeners should be exposed\n\nmatchLabels:\n  kubernetes.io/os: linux\n  kubernetes.io/hostname: kind-worker",
                  "required": [],
                  "title": "matchLabels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "nodes",
              "type": "object"
            },
            "sharedListenerPort": {
              "default": 8080,
              "description": "Configure a specific port on the host network that gets used for the shared listener.",
              "required": [],
              "title": "sharedListenerPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "hostNetwork",
          "type": "object"
        },
        "ingressLBAnnotationPrefixes": {
          "description": "IngressLBAnnotations are the annotation and label prefixes, which are used to filter annotations and/or labels to propagate from Ingress to the Load Balancer service",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "ingressLBAnnotationPrefixes",
          "type": "array"
        },
        "loadbalancerMode": {
          "default": "dedicated",
          "description": "Default ingress load balancer mode\nSupported values: shared, dedicated\nFor granular control, use the following annotations on the ingress resource:\n\"ingress.cilium.io/loadbalancer-mode: dedicated\" (or \"shared\").",
          "required": [],
          "title": "loadbalancerMode",
          "type": "string"
        },
        "secretsNamespace": {
          "additionalProperties": true,
          "description": "SecretsNamespace is the namespace in which envoy SDS will retrieve TLS secrets from.",
          "properties": {
            "create": {
              "default": true,
              "description": "Create secrets namespace for Ingress.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-secrets",
              "description": "Name of Ingress secret namespace.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "sync": {
              "default": true,
              "description": "Enable secret sync, which will make sure all TLS secrets used by Ingress are synced to secretsNamespace.name.\nIf disabled, TLS secrets must be maintained externally.",
              "required": [],
              "title": "sync",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "secretsNamespace",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "Load-balancer service in shared mode.\nThis is a single load-balancer service for all Ingress resources.",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "default": "~",
              "description": "Configure if node port allocation is required for LB service\nref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation",
              "required": [],
              "title": "allocateLoadBalancerNodePorts",
              "type": [
                "null",
                "boolean"
              ]
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to be added for the shared LB service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "Control how traffic from external sources is routed to the LoadBalancer Kubernetes Service for Cilium Ingress in shared mode.\nValid values are \"Cluster\" and \"Local\".\nref: https://kubernetes.io/docs/reference/networking/virtual-ips/#external-traffic-policy",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "insecureNodePort": {
              "default": "~",
              "description": "Configure a specific nodePort for insecure HTTP traffic on the shared LB service",
              "required": [],
              "title": "insecureNodePort",
              "type": [
                "null",
                "integer"
              ]
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels to be added for the shared LB service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerClass": {
              "default": "~",
              "description": "Configure a specific loadBalancerClass on the shared LB service (requires Kubernetes 1.24+)",
              "required": [],
              "title": "loadBalancerClass",
              "type": [
                "null",
                "string"
              ]
            },
            "loadBalancerIP": {
              "default": "~",
              "description": "Configure a specific loadBalancerIP on the shared LB service",
              "required": [],
              "title": "loadBalancerIP",
              "type": [
                "null",
                "string"
              ]
            },
            "name": {
              "default": "cilium-ingress",
              "description": "Service name",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "secureNodePort": {
              "default": "~",
              "description": "Configure a specific nodePort for secure HTTPS traffic on the shared LB service",
              "required": [],
              "title": "secureNodePort",
              "type": [
                "null",
                "integer"
              ]
            },
            "type": {
              "default": "LoadBalancer",
              "description": "Service type for the shared LB service",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "ingressController",
      "type": "object"
    },
    "initResources": {
      "additionalProperties": true,
      "description": "resources \u0026 limits for the agent init containers",
      "required": [],
      "title": "initResources",
      "type": "object"
    },
    "installNoConntrackIptablesRules": {
      "default": false,
      "description": "Install Iptables rules to skip netfilter connection tracking on all pod\ntraffic. This option is only effective when Cilium is running in direct\nrouting and full KPR mode. Moreover, this option cannot be enabled when Cilium\nis running in a managed Kubernetes environment or in a chained CNI setup.",
      "required": [],
      "title": "installNoConntrackIptablesRules",
      "type": "boolean"
    },
    "ipMasqAgent": {
      "additionalProperties": true,
      "description": "Configure the eBPF-based ip-masq-agent",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "ipMasqAgent",
      "type": "object"
    },
    "ipam": {
      "additionalProperties": true,
      "properties": {
        "ciliumNodeUpdateRate": {
          "default": "15s",
          "description": "Maximum rate at which the CiliumNode custom resource is updated.",
          "required": [],
          "title": "ciliumNodeUpdateRate",
          "type": "string"
        },
        "installUplinkRoutesForDelegatedIPAM": {
          "default": false,
          "description": "Install ingress/egress routes through uplink on host for Pods when working with delegated IPAM plugin.",
          "required": [],
          "title": "installUplinkRoutesForDelegatedIPAM",
          "type": "boolean"
        },
        "mode": {
          "default": "cluster-pool",
          "description": "Configure IP Address Management mode.\nref: https://docs.cilium.io/en/stable/network/concepts/ipam/",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "multiPoolPreAllocation": {
          "default": "",
          "description": "Pre-allocation settings for IPAM in Multi-Pool mode",
          "required": [],
          "title": "multiPoolPreAllocation",
          "type": "string"
        },
        "operator": {
          "additionalProperties": true,
          "properties": {
            "autoCreateCiliumPodIPPools": {
              "additionalProperties": true,
              "description": "IP pools to auto-create in multi-pool IPAM mode.",
              "required": [],
              "title": "autoCreateCiliumPodIPPools",
              "type": "object"
            },
            "clusterPoolIPv4MaskSize": {
              "default": 24,
              "description": "IPv4 CIDR mask size to delegate to individual nodes for IPAM.",
              "required": [],
              "title": "clusterPoolIPv4MaskSize",
              "type": "integer"
            },
            "clusterPoolIPv4PodCIDRList": {
              "description": "IPv4 CIDR list range to delegate to individual nodes for IPAM.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "clusterPoolIPv4PodCIDRList",
              "type": [
                "array",
                "string"
              ]
            },
            "clusterPoolIPv6MaskSize": {
              "default": 120,
              "description": "IPv6 CIDR mask size to delegate to individual nodes for IPAM.",
              "required": [],
              "title": "clusterPoolIPv6MaskSize",
              "type": "integer"
            },
            "clusterPoolIPv6PodCIDRList": {
              "description": "IPv6 CIDR list range to delegate to individual nodes for IPAM.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "clusterPoolIPv6PodCIDRList",
              "type": [
                "array",
                "string"
              ]
            },
            "externalAPILimitBurstSize": {
              "default": "~",
              "description": "  default:\n    ipv4:\n      cidrs:\n        - 10.10.0.0/8\n      maskSize: 24\n  other:\n    ipv6:\n      cidrs:\n        - fd00:100::/80\n      maskSize: 96\n(int) The maximum burst size when rate limiting access to external APIs.\nAlso known as the token bucket capacity.",
              "required": [],
              "title": "externalAPILimitBurstSize",
              "type": [
                "null",
                "integer"
              ]
            },
            "externalAPILimitQPS": {
              "default": "~",
              "description": "(float) The maximum queries per second when rate limiting access to\nexternal APIs. Also known as the bucket refill rate, which is used to\nrefill the bucket up to the burst size capacity.",
              "required": [],
              "title": "externalAPILimitQPS",
              "type": [
                "null",
                "number"
              ]
            }
          },
          "required": [],
          "title": "operator",
          "type": "object"
        }
      },
      "required": [],
      "title": "ipam",
      "type": "object"
    },
    "iptablesRandomFully": {
      "default": false,
      "description": "Configure iptables--random-fully. Disabled by default. View https://github.com/cilium/cilium/issues/13037 for more information.",
      "required": [],
      "title": "iptablesRandomFully",
      "type": "boolean"
    },
    "ipv4": {
      "additionalProperties": true,
      "description": "iptablesLockTimeout defines the iptables \"--wait\" option when invoked from Cilium.\niptablesLockTimeout: \"5s\"",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable IPv4 support.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "ipv4",
      "type": "object"
    },
    "ipv4NativeRoutingCIDR": {
      "default": "",
      "description": "(string) Allows to explicitly specify the IPv4 CIDR for native routing.\nWhen specified, Cilium assumes networking for this CIDR is preconfigured and\nhands traffic destined for that range to the Linux network stack without\napplying any SNAT.\nGenerally speaking, specifying a native routing CIDR implies that Cilium can\ndepend on the underlying networking stack to route packets to their\ndestination. To offer a concrete example, if Cilium is configured to use\ndirect routing and the Kubernetes CIDR is included in the native routing CIDR,\nthe user must configure the routes to reach pods, either manually or by\nsetting the auto-direct-node-routes flag.",
      "required": [],
      "title": "ipv4NativeRoutingCIDR",
      "type": "string"
    },
    "ipv6": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable IPv6 support.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "ipv6",
      "type": "object"
    },
    "ipv6NativeRoutingCIDR": {
      "default": "",
      "description": "(string) Allows to explicitly specify the IPv6 CIDR for native routing.\nWhen specified, Cilium assumes networking for this CIDR is preconfigured and\nhands traffic destined for that range to the Linux network stack without\napplying any SNAT.\nGenerally speaking, specifying a native routing CIDR implies that Cilium can\ndepend on the underlying networking stack to route packets to their\ndestination. To offer a concrete example, if Cilium is configured to use\ndirect routing and the Kubernetes CIDR is included in the native routing CIDR,\nthe user must configure the routes to reach pods, either manually or by\nsetting the auto-direct-node-routes flag.",
      "required": [],
      "title": "ipv6NativeRoutingCIDR",
      "type": "string"
    },
    "k8s": {
      "additionalProperties": true,
      "description": "Configure Kubernetes specific configuration",
      "properties": {
        "requireIPv4PodCIDR": {
          "default": false,
          "description": "requireIPv4PodCIDR enables waiting for Kubernetes to provide the PodCIDR\nrange via the Kubernetes node resource",
          "required": [],
          "title": "requireIPv4PodCIDR",
          "type": "boolean"
        },
        "requireIPv6PodCIDR": {
          "default": false,
          "description": "requireIPv6PodCIDR enables waiting for Kubernetes to provide the PodCIDR\nrange via the Kubernetes node resource",
          "required": [],
          "title": "requireIPv6PodCIDR",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "k8s",
      "type": "object"
    },
    "k8sClientExponentialBackoff": {
      "additionalProperties": true,
      "description": "Configure exponential backoff for client-go in Cilium agent.",
      "properties": {
        "backoffBaseSeconds": {
          "default": 1,
          "description": "Configure base (in seconds) for exponential backoff.",
          "required": [],
          "title": "backoffBaseSeconds",
          "type": "integer"
        },
        "backoffMaxDurationSeconds": {
          "default": 120,
          "description": "Configure maximum duration (in seconds) for exponential backoff.",
          "required": [],
          "title": "backoffMaxDurationSeconds",
          "type": "integer"
        },
        "enabled": {
          "default": true,
          "description": "Enable exponential backoff for client-go in Cilium agent.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "k8sClientExponentialBackoff",
      "type": "object"
    },
    "k8sClientRateLimit": {
      "additionalProperties": true,
      "description": "Configure the client side rate limit for the agent\n\nIf the amount of requests to the Kubernetes API server exceeds the configured\nrate limit, the agent will start to throttle requests by delaying\nthem until there is budget or the request times out.",
      "properties": {
        "burst": {
          "default": "",
          "description": "(int) The burst request rate in requests per second.\nThe rate limiter will allow short bursts with a higher rate.",
          "required": [],
          "title": "burst",
          "type": [
            "null",
            "integer"
          ]
        },
        "operator": {
          "additionalProperties": true,
          "description": "Configure the client side rate limit for the Cilium Operator",
          "properties": {
            "burst": {
              "default": "",
              "description": "(int) The burst request rate in requests per second.\nThe rate limiter will allow short bursts with a higher rate.",
              "required": [],
              "title": "burst",
              "type": [
                "null",
                "integer"
              ]
            },
            "qps": {
              "default": "",
              "description": "(int) The sustained request rate in requests per second.",
              "required": [],
              "title": "qps",
              "type": [
                "null",
                "integer"
              ]
            }
          },
          "required": [],
          "title": "operator",
          "type": "object"
        },
        "qps": {
          "default": "",
          "description": "(int) The sustained request rate in requests per second.",
          "required": [],
          "title": "qps",
          "type": [
            "null",
            "integer"
          ]
        }
      },
      "required": [],
      "title": "k8sClientRateLimit",
      "type": "object"
    },
    "k8sNetworkPolicy": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable support for K8s NetworkPolicy",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "k8sNetworkPolicy",
      "type": "object"
    },
    "k8sServiceHost": {
      "default": "",
      "description": "(string) Kubernetes service host - use \"auto\" for automatic lookup from the cluster-info ConfigMap",
      "required": [],
      "title": "k8sServiceHost",
      "type": "string"
    },
    "k8sServiceHostRef": {
      "additionalProperties": true,
      "description": "Configure the Kubernetes service endpoint dynamically using a ConfigMap. Mutually exclusive with `k8sServiceHost`.",
      "properties": {
        "key": {
          "default": "",
          "description": "(string) Key in the ConfigMap containing the Kubernetes service endpoint",
          "required": [],
          "title": "key",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "default": "",
          "description": "(string) name of the ConfigMap containing the Kubernetes service endpoint",
          "required": [],
          "title": "name",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "title": "k8sServiceHostRef",
      "type": "object"
    },
    "k8sServiceLookupConfigMapName": {
      "default": "",
      "description": "(string) When `k8sServiceHost=auto`, allows to customize the configMap name. It defaults to `cluster-info`.",
      "required": [],
      "title": "k8sServiceLookupConfigMapName",
      "type": [
        "null",
        "string"
      ]
    },
    "k8sServiceLookupNamespace": {
      "default": "",
      "description": "(string) When `k8sServiceHost=auto`, allows to customize the namespace that contains `k8sServiceLookupConfigMapName`. It defaults to `kube-public`.",
      "required": [],
      "title": "k8sServiceLookupNamespace",
      "type": [
        "null",
        "string"
      ]
    },
    "k8sServicePort": {
      "default": "",
      "description": "(string) Kubernetes service port",
      "required": [],
      "title": "k8sServicePort",
      "type": [
        "string",
        "integer"
      ]
    },
    "keepDeprecatedLabels": {
      "default": false,
      "description": "Keep the deprecated selector labels when deploying Cilium DaemonSet.",
      "required": [],
      "title": "keepDeprecatedLabels",
      "type": "boolean"
    },
    "keepDeprecatedProbes": {
      "default": false,
      "description": "Keep the deprecated probes when deploying Cilium DaemonSet",
      "required": [],
      "title": "keepDeprecatedProbes",
      "type": "boolean"
    },
    "kubeConfigPath": {
      "default": "",
      "description": "(string) Kubernetes config path",
      "required": [],
      "title": "kubeConfigPath",
      "type": "string"
    },
    "kubeProxyReplacement": {
      "default": false,
      "description": "Configure the kube-proxy replacement in Cilium BPF datapath\nValid options are \"true\" or \"false\".\nref: https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/",
      "required": [],
      "title": "kubeProxyReplacement",
      "type": [
        "string",
        "boolean"
      ]
    },
    "kubeProxyReplacementHealthzBindAddr": {
      "default": "",
      "description": "healthz server bind address for the kube-proxy replacement.\nTo enable set the value to '0.0.0.0:10256' for all ipv4\naddresses and this '[::]:10256' for all ipv6 addresses.\nBy default it is disabled.",
      "required": [],
      "title": "kubeProxyReplacementHealthzBindAddr",
      "type": "string"
    },
    "l2NeighDiscovery": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable L2 neighbor discovery in the agent",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "l2NeighDiscovery",
      "type": "object"
    },
    "l2announcements": {
      "additionalProperties": true,
      "description": "Configure L2 announcements",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable L2 announcements",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "l2announcements",
      "type": "object"
    },
    "l2podAnnouncements": {
      "additionalProperties": true,
      "description": "Configure L2 pod announcements",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable L2 pod announcements",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interface": {
          "default": "eth0",
          "description": "Interface used for sending Gratuitous ARP pod announcements",
          "required": [],
          "title": "interface",
          "type": "string"
        }
      },
      "required": [],
      "title": "l2podAnnouncements",
      "type": "object"
    },
    "l7Proxy": {
      "default": true,
      "description": "Enable Layer 7 network policy.",
      "required": [],
      "title": "l7Proxy",
      "type": "boolean"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "properties": {
        "failureThreshold": {
          "default": 10,
          "description": "failure threshold of liveness probe",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "description": "interval between checks of the liveness probe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "requireK8sConnectivity": {
          "default": false,
          "description": "whether to require k8s connectivity as part of the check.",
          "required": [],
          "title": "requireK8sConnectivity",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "livenessProbe",
      "type": "object"
    },
    "loadBalancer": {
      "additionalProperties": true,
      "description": "Configure service load balancing",
      "properties": {
        "acceleration": {
          "default": "disabled",
          "description": "acceleration is the option to accelerate service handling via XDP\nApplicable values can be: disabled (do not use XDP), native (XDP BPF\nprogram is run directly out of the networking driver's early receive\npath), or best-effort (use native mode XDP acceleration on devices\nthat support it).",
          "required": [],
          "title": "acceleration",
          "type": "string"
        },
        "l7": {
          "additionalProperties": true,
          "description": "L7 LoadBalancer",
          "properties": {
            "algorithm": {
              "default": "round_robin",
              "description": "Default LB algorithm\nThe default LB algorithm to be used for services, which can be overridden by the\nservice annotation (e.g. service.cilium.io/lb-l7-algorithm)\nApplicable values: round_robin, least_request, random",
              "required": [],
              "title": "algorithm",
              "type": "string"
            },
            "backend": {
              "default": "disabled",
              "description": "Enable L7 service load balancing via envoy proxy.\nThe request to a k8s service, which has specific annotation e.g. service.cilium.io/lb-l7,\nwill be forwarded to the local backend proxy to be load balanced to the service endpoints.\nPlease refer to docs for supported annotations for more configuration.\n\nApplicable values:\n  - envoy: Enable L7 load balancing via envoy proxy. This will automatically set enable-envoy-config as well.\n  - disabled: Disable L7 load balancing by way of service annotation.",
              "required": [],
              "title": "backend",
              "type": "string"
            },
            "ports": {
              "description": "List of ports from service to be automatically redirected to above backend.\nAny service exposing one of these ports will be automatically redirected.\nFine-grained control can be achieved by using the service annotation.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "ports",
              "type": "array"
            }
          },
          "required": [],
          "title": "l7",
          "type": "object"
        }
      },
      "required": [],
      "title": "loadBalancer",
      "type": "object"
    },
    "localRedirectPolicies": {
      "additionalProperties": true,
      "properties": {
        "addressMatcherCIDRs": {
          "default": "~",
          "description": "Limit the allowed addresses in Address Matcher rule of\nLocal Redirect Policies to the given CIDRs.",
          "required": [],
          "title": "addressMatcherCIDRs",
          "type": [
            "null",
            "array"
          ]
        },
        "enabled": {
          "default": false,
          "description": "Enable local redirect policies.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "localRedirectPolicies",
      "type": "object"
    },
    "localRedirectPolicy": {
      "default": false,
      "description": "Enable Local Redirect Policy (deprecated, please use 'localRedirectPolicies.enabled' instead)",
      "required": [],
      "title": "localRedirectPolicy",
      "type": "boolean"
    },
    "logSystemLoad": {
      "default": false,
      "description": "Enables periodic logging of system load",
      "required": [],
      "title": "logSystemLoad",
      "type": "boolean"
    },
    "maglev": {
      "additionalProperties": true,
      "description": "Configure maglev consistent hashing",
      "required": [],
      "title": "maglev",
      "type": "object"
    },
    "monitor": {
      "additionalProperties": true,
      "description": "cilium-monitor sidecar.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable the cilium-monitor sidecar.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "monitor",
      "type": "object"
    },
    "name": {
      "default": "cilium",
      "description": "Agent daemonset name.",
      "required": [],
      "title": "name",
      "type": "string"
    },
    "namespaceOverride": {
      "default": "",
      "description": "namespaceOverride allows to override the destination namespace for Cilium resources.\nThis property allows to use Cilium as part of an Umbrella Chart with different targets.",
      "required": [],
      "title": "namespaceOverride",
      "type": [
        "null",
        "string"
      ]
    },
    "nat": {
      "additionalProperties": true,
      "properties": {
        "mapStatsEntries": {
          "default": 32,
          "description": "Number of the top-k SNAT map connections to track in Cilium statedb.",
          "required": [],
          "title": "mapStatsEntries",
          "type": "integer"
        },
        "mapStatsInterval": {
          "default": "30s",
          "description": "Interval between how often SNAT map is counted for stats.",
          "required": [],
          "title": "mapStatsInterval",
          "type": "string"
        }
      },
      "required": [],
      "title": "nat",
      "type": "object"
    },
    "nat46x64Gateway": {
      "additionalProperties": true,
      "description": "Configure standalone NAT46/NAT64 gateway",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable RFC6052-prefixed translation",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nat46x64Gateway",
      "type": "object"
    },
    "nodeIPAM": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Configure Node IPAM\nref: https://docs.cilium.io/en/stable/network/node-ipam/",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nodeIPAM",
      "type": "object"
    },
    "nodePort": {
      "additionalProperties": true,
      "description": "Configure N-S k8s service loadbalancing",
      "properties": {
        "addresses": {
          "default": "~",
          "description": "List of CIDRs for choosing which IP addresses assigned to native devices are used for NodePort load-balancing.\nBy default this is empty and the first suitable, preferably private, IPv4 and IPv6 address assigned to each device is used.\n\nExample:\n\n  addresses: [\"192.168.1.0/24\", \"2001::/64\"]\n",
          "required": [],
          "title": "addresses",
          "type": [
            "null",
            "string",
            "array"
          ]
        },
        "autoProtectPortRange": {
          "default": true,
          "description": "Append NodePort range to ip_local_reserved_ports if clash with ephemeral\nports is detected.",
          "required": [],
          "title": "autoProtectPortRange",
          "type": "boolean"
        },
        "bindProtection": {
          "default": true,
          "description": "Set to true to prevent applications binding to service ports.",
          "required": [],
          "title": "bindProtection",
          "type": "boolean"
        },
        "enableHealthCheck": {
          "default": true,
          "description": "Enable healthcheck nodePort server for NodePort services",
          "required": [],
          "title": "enableHealthCheck",
          "type": "boolean"
        },
        "enableHealthCheckLoadBalancerIP": {
          "default": false,
          "description": "Enable access of the healthcheck nodePort on the LoadBalancerIP. Needs\nEnableHealthCheck to be enabled",
          "required": [],
          "title": "enableHealthCheckLoadBalancerIP",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "description": "Enable the Cilium NodePort service implementation.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "nodePort",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "Node selector for cilium-agent.",
      "properties": {
        "kubernetes.io/os": {
          "default": "linux",
          "required": [],
          "title": "kubernetes.io/os",
          "type": "string"
        }
      },
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "nodeSelectorLabels": {
      "default": false,
      "description": "Enable/Disable use of node label based identity",
      "required": [],
      "title": "nodeSelectorLabels",
      "type": "boolean"
    },
    "nodeinit": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for cilium-nodeinit",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level nodeinit objects (resources under templates/cilium-nodeinit)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "bootstrapFile": {
          "default": "/tmp/cilium-bootstrap.d/cilium-bootstrap-time",
          "description": "bootstrapFile is the location of the file where the bootstrap timestamp is\nwritten by the node-init DaemonSet",
          "required": [],
          "title": "bootstrapFile",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable the node initialization DaemonSet",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraEnv": {
          "description": "Additional nodeinit environment variables.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional nodeinit volumeMounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional nodeinit volumes.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": "node-init image.",
          "properties": {
            "digest": {
              "default": "sha256:5bdca3c2dec2c79f58d45a7a560bf1098c2126350c901379fe850b7f78d3d757",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "override": {
              "default": "~",
              "required": [],
              "title": "override",
              "type": [
                "null",
                "string"
              ]
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/cilium/startup-script",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1755531540-60ee83e",
              "required": [],
              "title": "tag",
              "type": "string"
            },
            "useDigest": {
              "default": true,
              "required": [],
              "title": "useDigest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for nodeinit pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to node-init pods.",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to be added to node-init pods.",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security Context for cilium-node-init pods.",
          "properties": {
            "appArmorProfile": {
              "additionalProperties": true,
              "description": "AppArmorProfile options for the `cilium-node-init` and init containers",
              "properties": {
                "type": {
                  "default": "Unconfined",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "appArmorProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "prestop": {
          "additionalProperties": true,
          "description": "prestop offers way to customize prestop nodeinit script (pre and post position)",
          "properties": {
            "postScript": {
              "default": "",
              "required": [],
              "title": "postScript",
              "type": "string"
            },
            "preScript": {
              "default": "",
              "required": [],
              "title": "preScript",
              "type": "string"
            }
          },
          "required": [],
          "title": "prestop",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "The priority class to use for the nodeinit pod.",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "description": "nodeinit resource limits \u0026 requests\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "100Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to be added to nodeinit pods.",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "add": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "add",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "privileged": {
              "default": false,
              "required": [],
              "title": "privileged",
              "type": "boolean"
            },
            "seLinuxOptions": {
              "additionalProperties": true,
              "properties": {
                "level": {
                  "default": "s0",
                  "required": [],
                  "title": "level",
                  "type": "string"
                },
                "type": {
                  "default": "spc_t",
                  "description": "Running with spc_t since we have removed the privileged mode.\nUsers can change it to a different type as long as they have the\ntype available on the system.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seLinuxOptions",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "startup": {
          "additionalProperties": true,
          "description": "startup offers way to customize startup nodeinit script (pre and post position)",
          "properties": {
            "postScript": {
              "default": "",
              "required": [],
              "title": "postScript",
              "type": "string"
            },
            "preScript": {
              "default": "",
              "required": [],
              "title": "preScript",
              "type": "string"
            }
          },
          "required": [],
          "title": "startup",
          "type": "object"
        },
        "tolerations": {
          "description": "Node tolerations for nodeinit scheduling to nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "additionalProperties": true,
            "properties": {
              "operator": {
                "default": "Exists",
                "required": [],
                "title": "operator",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "node-init update strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "nodeinit",
      "type": "object"
    },
    "operator": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for cilium-operator",
          "properties": {
            "podAntiAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "io.cilium/app": {
                                "default": "operator",
                                "required": [],
                                "title": "io.cilium/app",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAntiAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level cilium-operator objects (resources under templates/cilium-operator)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "dashboards": {
          "additionalProperties": true,
          "description": "Grafana dashboards for cilium-operator\ngrafana can import dashboards based on the label and value\nref: https://github.com/grafana/helm-charts/tree/main/charts/grafana#sidecar-for-dashboards",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "label": {
              "default": "grafana_dashboard",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "1",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "namespace": {
              "default": "~",
              "required": [],
              "title": "namespace",
              "type": [
                "null",
                "string"
              ]
            }
          },
          "required": [],
          "title": "dashboards",
          "type": "object"
        },
        "dnsPolicy": {
          "default": "",
          "description": "DNS policy for Cilium operator pods.\nRef: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "required": [],
          "title": "dnsPolicy",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Enable the cilium-operator component (required).",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpointGCInterval": {
          "default": "5m0s",
          "description": "Interval for endpoint garbage collection.",
          "required": [],
          "title": "endpointGCInterval",
          "type": "string"
        },
        "extraArgs": {
          "description": "Additional cilium-operator container arguments.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Additional cilium-operator environment variables.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraHostPathMounts": {
          "description": "Additional cilium-operator hostPath mounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraHostPathMounts",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional cilium-operator volumeMounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional cilium-operator volumes.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostNetwork": {
          "default": true,
          "description": "HostNetwork setting",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "identityGCInterval": {
          "default": "15m0s",
          "description": "Interval for identity garbage collection.",
          "required": [],
          "title": "identityGCInterval",
          "type": "string"
        },
        "identityHeartbeatTimeout": {
          "default": "30m0s",
          "description": "Timeout for identity heartbeats.",
          "required": [],
          "title": "identityHeartbeatTimeout",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "description": "cilium-operator image.",
          "properties": {
            "alibabacloudDigest": {
              "default": "sha256:df8b6830ef0545199cffc5fb9fbf14c9dc8d92093b0e6355d8659705227f89ef",
              "description": "operator-alibabacloud-digest",
              "required": [],
              "title": "alibabacloudDigest",
              "type": "string"
            },
            "awsDigest": {
              "default": "sha256:ef39d61183b3bdf0e235650461b6c4d9ec7aa5f61a6c770f33c47a6bc5165e24",
              "description": "operator-aws-digest",
              "required": [],
              "title": "awsDigest",
              "type": "string"
            },
            "azureDigest": {
              "default": "sha256:10a8a83ca6f0b02432c1ca0e67af98a48fdbefb684af44a399f58184ab174143",
              "description": "operator-azure-digest",
              "required": [],
              "title": "azureDigest",
              "type": "string"
            },
            "genericDigest": {
              "default": "sha256:b5a0138e1a38e4437c5215257ff4e35373619501f4877dbaf92c89ecfad81797",
              "description": "operator-generic-digest",
              "required": [],
              "title": "genericDigest",
              "type": "string"
            },
            "override": {
              "default": "~",
              "required": [],
              "title": "override",
              "type": [
                "null",
                "string"
              ]
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/cilium/operator",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "suffix": {
              "default": "",
              "required": [],
              "title": "suffix",
              "type": "string"
            },
            "tag": {
              "default": "v1.18.3",
              "required": [],
              "title": "tag",
              "type": "string"
            },
            "useDigest": {
              "default": true,
              "required": [],
              "title": "useDigest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "nodeGCInterval": {
          "default": "5m0s",
          "description": "Interval for cilium node garbage collection.",
          "required": [],
          "title": "nodeGCInterval",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for cilium-operator pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to cilium-operator pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "PodDisruptionBudget settings",
          "properties": {
            "enabled": {
              "default": false,
              "description": "enable PodDisruptionBudget\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 1,
              "description": "Maximum number/percentage of pods that may be made unavailable",
              "required": [],
              "title": "maxUnavailable",
              "type": [
                "null",
                "integer",
                "string"
              ]
            },
            "minAvailable": {
              "default": "null",
              "description": "Minimum number/percentage of pods that should remain scheduled.\nWhen it's set, maxUnavailable must be disabled by `maxUnavailable: null`",
              "required": [],
              "title": "minAvailable",
              "type": [
                "null",
                "integer",
                "string"
              ]
            },
            "unhealthyPodEvictionPolicy": {
              "default": "null",
              "description": "How are unhealthy, but running, pods counted for eviction",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": [
                "null",
                "string"
              ]
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to be added to cilium-operator pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security context to be added to cilium-operator pods",
          "properties": {
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "pprof": {
          "additionalProperties": true,
          "properties": {
            "address": {
              "default": "localhost",
              "description": "Configure pprof listen address for cilium-operator",
              "required": [],
              "title": "address",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable pprof for cilium-operator",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "port": {
              "default": 6061,
              "description": "Configure pprof listen port for cilium-operator",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "pprof",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "The priority class to use for cilium-operator",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "prometheus": {
          "additionalProperties": true,
          "description": "Enable prometheus metrics for cilium-operator on the configured port at\n/metrics",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "metricsService": {
              "default": false,
              "required": [],
              "title": "metricsService",
              "type": "boolean"
            },
            "port": {
              "default": 9963,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "serviceMonitor": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Annotations to add to ServiceMonitor cilium-operator",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable service monitors.\nThis requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "interval": {
                  "default": "10s",
                  "description": "Interval for scrape metrics.",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "jobLabel": {
                  "default": "",
                  "description": "jobLabel to add for ServiceMonitor cilium-operator",
                  "required": [],
                  "title": "jobLabel",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "Labels to add to ServiceMonitor cilium-operator",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "metricRelabelings": {
                  "default": "~",
                  "description": "Metrics relabeling configs for the ServiceMonitor cilium-operator",
                  "required": [],
                  "title": "metricRelabelings",
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "relabelings": {
                  "default": "~",
                  "description": "Relabeling configs for the ServiceMonitor cilium-operator",
                  "required": [],
                  "title": "relabelings",
                  "type": [
                    "null",
                    "array"
                  ]
                },
                "scrapeTimeout": {
                  "default": "~",
                  "description": "Timeout after which scrape is considered to be failed.",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": [
                    "null",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "removeNodeTaints": {
          "default": true,
          "description": "Remove Cilium node taint from Kubernetes nodes that have a healthy Cilium\npod running.",
          "required": [],
          "title": "removeNodeTaints",
          "type": "boolean"
        },
        "replicas": {
          "default": 2,
          "description": "Number of replicas to run for the cilium-operator deployment",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "cilium-operator resource limits \u0026 requests\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rollOutPods": {
          "default": false,
          "description": "Roll out cilium-operator pods automatically when configmap is updated.",
          "required": [],
          "title": "rollOutPods",
          "type": "boolean"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to be added to cilium-operator pods",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "setNodeNetworkStatus": {
          "default": true,
          "description": "Set Node condition NetworkUnavailable to 'false' with the reason\n'CiliumIsUp' for nodes that have a healthy Cilium pod.",
          "required": [],
          "title": "setNodeNetworkStatus",
          "type": "boolean"
        },
        "setNodeTaints": {
          "default": "~",
          "description": "Taint nodes where Cilium is scheduled but not running. This prevents pods\nfrom being scheduled to nodes where Cilium is not the default CNI provider.",
          "required": [],
          "title": "setNodeTaints",
          "type": [
            "null",
            "boolean"
          ]
        },
        "skipCRDCreation": {
          "default": false,
          "description": "Skip CRDs creation for cilium-operator",
          "required": [],
          "title": "skipCRDCreation",
          "type": "boolean"
        },
        "tolerations": {
          "description": "Node tolerations for cilium-operator scheduling to nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\nToleration for agentNotReadyTaintKey taint is always added to cilium-operator pods.",
          "items": {
            "additionalProperties": true,
            "properties": {
              "key": {
                "default": "node.cloudprovider.kubernetes.io/uninitialized",
                "required": [],
                "title": "key",
                "type": "string"
              },
              "operator": {
                "default": "Exists",
                "required": [],
                "title": "operator",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": [
            "null",
            "array"
          ]
        },
        "topologySpreadConstraints": {
          "description": "Pod topology spread constraints for cilium-operator",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "unmanagedPodWatcher": {
          "additionalProperties": true,
          "properties": {
            "intervalSeconds": {
              "default": 15,
              "description": "Interval, in seconds, to check if there are any pods that are not\nmanaged by Cilium.",
              "required": [],
              "title": "intervalSeconds",
              "type": "integer"
            },
            "restart": {
              "default": true,
              "description": "Restart any pod that are not managed by Cilium.",
              "required": [],
              "title": "restart",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "unmanagedPodWatcher",
          "type": "object"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "cilium-operator update strategy",
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxSurge": {
                  "default": "25%",
                  "required": [],
                  "title": "maxSurge",
                  "type": [
                    "integer",
                    "string"
                  ]
                },
                "maxUnavailable": {
                  "default": "50%",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": [
                    "integer",
                    "string"
                  ]
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        }
      },
      "required": [],
      "title": "operator",
      "type": "object"
    },
    "pmtuDiscovery": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable path MTU discovery to send ICMP fragmentation-needed replies to\nthe client.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "pmtuDiscovery",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to agent pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "Labels to be added to agent pods",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": true,
      "description": "Security Context for cilium-agent pods.",
      "properties": {
        "appArmorProfile": {
          "additionalProperties": true,
          "description": "AppArmorProfile options for the `cilium-agent` and init containers",
          "properties": {
            "type": {
              "default": "Unconfined",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "appArmorProfile",
          "type": "object"
        },
        "seccompProfile": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "Unconfined",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seccompProfile",
          "type": "object"
        }
      },
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "policyCIDRMatchMode": {
      "default": "",
      "description": "policyCIDRMatchMode is a list of entities that may be selected by CIDR selector.\nThe possible value is \"nodes\".",
      "required": [],
      "title": "policyCIDRMatchMode",
      "type": [
        "null",
        "string",
        "array"
      ]
    },
    "policyEnforcementMode": {
      "default": "default",
      "description": "The agent can be put into one of the three policy enforcement modes:\ndefault, always and never.\nref: https://docs.cilium.io/en/stable/security/policy/intro/#policy-enforcement-modes",
      "required": [],
      "title": "policyEnforcementMode",
      "type": "string"
    },
    "pprof": {
      "additionalProperties": true,
      "properties": {
        "address": {
          "default": "localhost",
          "description": "Configure pprof listen address for cilium-agent",
          "required": [],
          "title": "address",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable pprof for cilium-agent",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "port": {
          "default": 6060,
          "description": "Configure pprof listen port for cilium-agent",
          "required": [],
          "title": "port",
          "type": "integer"
        }
      },
      "required": [],
      "title": "pprof",
      "type": "object"
    },
    "preflight": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for cilium-preflight",
          "properties": {
            "podAffinity": {
              "additionalProperties": true,
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "k8s-app": {
                                "default": "cilium",
                                "required": [],
                                "title": "k8s-app",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podAffinity",
              "type": "object"
            }
          },
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to all top-level preflight objects (resources under templates/cilium-preflight)",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable Cilium pre-flight resources (required for upgrade)",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "envoy": {
          "additionalProperties": true,
          "properties": {
            "image": {
              "additionalProperties": true,
              "description": "Envoy pre-flight image.",
              "properties": {
                "digest": {
                  "default": "sha256:ca76eb4e9812d114c7f43215a742c00b8bf41200992af0d21b5561d46156fd15",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "override": {
                  "default": "~",
                  "required": [],
                  "title": "override",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "repository": {
                  "default": "quay.io/cilium/cilium-envoy",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "v1.34.10-1761014632-c360e8557eb41011dfb5210f8fb53fed6c0b3222",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                },
                "useDigest": {
                  "default": true,
                  "required": [],
                  "title": "useDigest",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            }
          },
          "required": [],
          "title": "envoy",
          "type": "object"
        },
        "extraEnv": {
          "description": "Additional preflight environment variables.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Additional preflight volumeMounts.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Additional preflight volumes.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": "Cilium pre-flight image.",
          "properties": {
            "digest": {
              "default": "sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15",
              "description": "cilium-digest",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "override": {
              "default": "~",
              "required": [],
              "title": "override",
              "type": [
                "null",
                "string"
              ]
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "quay.io/cilium/cilium",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v1.18.3",
              "required": [],
              "title": "tag",
              "type": "string"
            },
            "useDigest": {
              "default": true,
              "required": [],
              "title": "useDigest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for preflight pod assignment\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
          "properties": {
            "kubernetes.io/os": {
              "default": "linux",
              "required": [],
              "title": "kubernetes.io/os",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations to be added to preflight pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "PodDisruptionBudget settings",
          "properties": {
            "enabled": {
              "default": false,
              "description": "enable PodDisruptionBudget\nref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 1,
              "description": "Maximum number/percentage of pods that may be made unavailable",
              "required": [],
              "title": "maxUnavailable",
              "type": [
                "null",
                "integer",
                "string"
              ]
            },
            "minAvailable": {
              "default": "null",
              "description": "Minimum number/percentage of pods that should remain scheduled.\nWhen it's set, maxUnavailable must be disabled by `maxUnavailable: null`",
              "required": [],
              "title": "minAvailable",
              "type": [
                "null",
                "integer",
                "string"
              ]
            },
            "unhealthyPodEvictionPolicy": {
              "default": "null",
              "description": "How are unhealthy, but running, pods counted for eviction",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": [
                "null",
                "string"
              ]
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels to be added to the preflight pod.",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Security context to be added to preflight pods.",
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "priorityClassName": {
          "default": "",
          "description": "The priority class to use for the preflight pod.",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "properties": {
            "initialDelaySeconds": {
              "default": 5,
              "description": "For how long kubelet should wait before performing the first probe",
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "description": "interval between checks of the readiness probe",
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "preflight resource limits \u0026 requests\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Security context to be added to preflight pods",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 1,
          "description": "Configure termination grace period for preflight Deployment and DaemonSet.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tofqdnsPreCache": {
          "default": "",
          "description": "Path to write the `--tofqdns-pre-cache` file to.",
          "required": [],
          "title": "tofqdnsPreCache",
          "type": "string"
        },
        "tolerations": {
          "description": "Node tolerations for preflight scheduling to nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
          "items": {
            "additionalProperties": true,
            "properties": {
              "operator": {
                "default": "Exists",
                "required": [],
                "title": "operator",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "updateStrategy": {
          "additionalProperties": true,
          "description": "preflight update strategy",
          "properties": {
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "updateStrategy",
          "type": "object"
        },
        "validateCNPs": {
          "default": true,
          "description": "By default we should always validate the installed CNPs before upgrading\nCilium. This will make sure the user will have the policies deployed in the\ncluster with the right schema.",
          "required": [],
          "title": "validateCNPs",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "preflight",
      "type": "object"
    },
    "priorityClassName": {
      "default": "",
      "description": "The priority class to use for cilium-agent.",
      "required": [],
      "title": "priorityClassName",
      "type": "string"
    },
    "prometheus": {
      "additionalProperties": true,
      "description": "Configure prometheus metrics on the configured port at /metrics",
      "properties": {
        "controllerGroupMetrics": {
          "description": "- Enable controller group metrics for monitoring specific Cilium\nsubsystems. The list is a list of controller group names. The special\nvalues of \"all\" and \"none\" are supported. The set of controller\ngroup names is not guaranteed to be stable between Cilium versions.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "controllerGroupMetrics",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "metrics": {
          "default": "~",
          "description": "Metrics that should be enabled or disabled from the default metric list.\nThe list is expected to be separated by a space. (+metric_foo to enable\nmetric_foo , -metric_bar to disable metric_bar).\nref: https://docs.cilium.io/en/stable/observability/metrics/",
          "required": [],
          "title": "metrics",
          "type": [
            "null",
            "array"
          ]
        },
        "metricsService": {
          "default": false,
          "required": [],
          "title": "metricsService",
          "type": "boolean"
        },
        "port": {
          "default": 9962,
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to add to ServiceMonitor cilium-agent",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable service monitors.\nThis requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "10s",
              "description": "Interval for scrape metrics.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "",
              "description": "jobLabel to add for ServiceMonitor cilium-agent",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels to add to ServiceMonitor cilium-agent",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "metricRelabelings": {
              "default": "~",
              "description": "Metrics relabeling configs for the ServiceMonitor cilium-agent",
              "required": [],
              "title": "metricRelabelings",
              "type": [
                "null",
                "array"
              ]
            },
            "relabelings": {
              "description": "Specify the Kubernetes namespace where Prometheus expects to find\nservice monitors configured.\nnamespace: \"\"\nRelabeling configs for the ServiceMonitor cilium-agent",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "replace",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "replacement": {
                    "default": "${1}",
                    "required": [],
                    "title": "replacement",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  },
                  "targetLabel": {
                    "default": "node",
                    "required": [],
                    "title": "targetLabel",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scrapeTimeout": {
              "default": "~",
              "description": "Timeout after which scrape is considered to be failed.",
              "required": [],
              "title": "scrapeTimeout",
              "type": [
                "null",
                "string"
              ]
            },
            "trustCRDsExist": {
              "default": false,
              "description": "Set to `true` and helm will not check for monitoring.coreos.com/v1 CRDs before deploying",
              "required": [],
              "title": "trustCRDsExist",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "prometheus",
      "type": "object"
    },
    "rbac": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": true,
          "description": "Enable creation of Resource-Based Access Control configuration.",
          "required": [],
          "title": "create",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "rbac",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": true,
      "properties": {
        "failureThreshold": {
          "default": 3,
          "description": "failure threshold of readiness probe",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "description": "interval between checks of the readiness probe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "readinessProbe",
      "type": "object"
    },
    "resourceQuotas": {
      "additionalProperties": true,
      "description": "Enable resource quotas for priority classes used in the cluster.",
      "properties": {
        "cilium": {
          "additionalProperties": true,
          "properties": {
            "hard": {
              "additionalProperties": true,
              "properties": {
                "pods": {
                  "default": "10k",
                  "description": "5k nodes * 2 DaemonSets (Cilium and cilium node init)",
                  "required": [],
                  "title": "pods",
                  "type": "string"
                }
              },
              "required": [],
              "title": "hard",
              "type": "object"
            }
          },
          "required": [],
          "title": "cilium",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "operator": {
          "additionalProperties": true,
          "properties": {
            "hard": {
              "additionalProperties": true,
              "properties": {
                "pods": {
                  "default": "15",
                  "description": "15 \"clusterwide\" Cilium Operator pods for HA",
                  "required": [],
                  "title": "pods",
                  "type": "string"
                }
              },
              "required": [],
              "title": "hard",
              "type": "object"
            }
          },
          "required": [],
          "title": "operator",
          "type": "object"
        }
      },
      "required": [],
      "title": "resourceQuotas",
      "type": "object"
    },
    "resources": {
      "additionalProperties": true,
      "description": "Agent resource limits \u0026 requests\nref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "rollOutCiliumPods": {
      "default": false,
      "description": "Roll out cilium agent pods automatically when configmap is updated.",
      "required": [],
      "title": "rollOutCiliumPods",
      "type": "boolean"
    },
    "routingMode": {
      "default": "",
      "description": "Enable native-routing mode or tunneling mode.\nPossible values:\n  - \"\"\n  - native\n  - tunnel",
      "required": [],
      "title": "routingMode",
      "type": "string"
    },
    "scheduling": {
      "additionalProperties": true,
      "description": "Scheduling configurations for cilium pods",
      "properties": {
        "mode": {
          "default": "anti-affinity",
          "description": "Mode specifies how Cilium daemonset pods should be scheduled to Nodes.\n`anti-affinity` mode applies a pod anti-affinity rule to the cilium daemonset.\nPod anti-affinity may significantly impact scheduling throughput for large clusters.\nSee: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n`kube-scheduler` mode forgoes the anti-affinity rule for full scheduling throughput.\nKube-scheduler avoids host port conflict when scheduling pods.",
          "enum": [
            "anti-affinity",
            "kube-scheduler"
          ],
          "required": [],
          "title": "mode"
        }
      },
      "required": [],
      "title": "scheduling",
      "type": "object"
    },
    "sctp": {
      "additionalProperties": true,
      "description": "SCTP Configuration Values",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable SCTP support. NOTE: Currently, SCTP support does not support rewriting ports or multihoming.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "sctp",
      "type": "object"
    },
    "secretsNamespaceAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to all cilium-secret namespaces (resources under templates/cilium-secrets-namespace)",
      "required": [],
      "title": "secretsNamespaceAnnotations",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": true,
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "description": "User to run the pod with\nrunAsUser: 0\ndisable privilege escalation",
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "additionalProperties": true,
          "properties": {
            "applySysctlOverwrites": {
              "description": "capabilities for the `apply-sysctl-overwrites` init container",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "applySysctlOverwrites",
              "type": "array"
            },
            "ciliumAgent": {
              "description": "Capabilities for the `cilium-agent` container",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "ciliumAgent",
              "type": "array"
            },
            "cleanCiliumState": {
              "description": "Capabilities for the `clean-cilium-state` init container",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "cleanCiliumState",
              "type": "array"
            },
            "mountCgroup": {
              "description": "Capabilities for the `mount-cgroup` init container",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "mountCgroup",
              "type": "array"
            }
          },
          "required": [],
          "title": "capabilities",
          "type": "object"
        },
        "privileged": {
          "default": false,
          "description": "Run the pod with elevated privileges",
          "required": [],
          "title": "privileged",
          "type": "boolean"
        },
        "seLinuxOptions": {
          "additionalProperties": true,
          "description": "SELinux options for the `cilium-agent` and init containers",
          "properties": {
            "level": {
              "default": "s0",
              "required": [],
              "title": "level",
              "type": "string"
            },
            "type": {
              "default": "spc_t",
              "description": "Running with spc_t since we have removed the privileged mode.\nUsers can change it to a different type as long as they have the\ntype available on the system.",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seLinuxOptions",
          "type": "object"
        }
      },
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "serviceAccounts": {
      "additionalProperties": true,
      "description": "Define serviceAccount names for components.",
      "properties": {
        "cilium": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "cilium",
          "type": "object"
        },
        "clustermeshApiserver": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "clustermesh-apiserver",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "clustermeshApiserver",
          "type": "object"
        },
        "clustermeshcertgen": {
          "additionalProperties": true,
          "description": "Clustermeshcertgen is used if clustermesh.apiserver.tls.auto.method=cronJob",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "clustermesh-apiserver-generate-certs",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "clustermeshcertgen",
          "type": "object"
        },
        "envoy": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-envoy",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "envoy",
          "type": "object"
        },
        "hubblecertgen": {
          "additionalProperties": true,
          "description": "Hubblecertgen is used if hubble.tls.auto.method=cronJob",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "hubble-generate-certs",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "hubblecertgen",
          "type": "object"
        },
        "nodeinit": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enabled is temporary until https://github.com/cilium/cilium-cli/issues/1396 is implemented.\nCilium CLI doesn't create the SAs for node-init, thus the workaround. Helm is not affected by\nthis issue. Name and automount can be configured, if enabled is set to true.\nOtherwise, they are ignored. Enabled can be removed once the issue is fixed.\nCilium-nodeinit DS must also be fixed.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-nodeinit",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "nodeinit",
          "type": "object"
        },
        "operator": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-operator",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "operator",
          "type": "object"
        },
        "preflight": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-pre-flight",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "preflight",
          "type": "object"
        },
        "relay": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": false,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "hubble-relay",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "relay",
          "type": "object"
        },
        "ui": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "hubble-ui",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "ui",
          "type": "object"
        }
      },
      "required": [],
      "title": "serviceAccounts",
      "type": "object"
    },
    "serviceNoBackendResponse": {
      "default": "reject",
      "description": "Configure what the response should be to traffic for a service without backends.\nPossible values:\n - reject (default)\n - drop",
      "required": [],
      "title": "serviceNoBackendResponse",
      "type": "string"
    },
    "sleepAfterInit": {
      "default": false,
      "description": "Do not run Cilium agent when running with clean mode. Useful to completely\nuninstall Cilium as it will stop Cilium from starting and create artifacts\nin the node.",
      "required": [],
      "title": "sleepAfterInit",
      "type": "boolean"
    },
    "socketLB": {
      "additionalProperties": true,
      "description": "Configure socket LB",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable socket LB",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "socketLB",
      "type": "object"
    },
    "startupProbe": {
      "additionalProperties": true,
      "properties": {
        "failureThreshold": {
          "default": 300,
          "description": "failure threshold of startup probe.\nAllow Cilium to take up to 600s to start up (300 attempts with 2s between attempts).",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 2,
          "description": "interval between checks of the startup probe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "startupProbe",
      "type": "object"
    },
    "svcSourceRangeCheck": {
      "default": true,
      "description": "Enable check of service source ranges (currently, only for LoadBalancer).",
      "required": [],
      "title": "svcSourceRangeCheck",
      "type": "boolean"
    },
    "synchronizeK8sNodes": {
      "default": true,
      "description": "Synchronize Kubernetes nodes to kvstore and perform CNP GC.",
      "required": [],
      "title": "synchronizeK8sNodes",
      "type": "boolean"
    },
    "sysctlfix": {
      "additionalProperties": true,
      "description": "Configure sysctl override described in #20072.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable the sysctl override. When enabled, the init container will mount the /proc of the host so that the `sysctlfix` utility can execute.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "sysctlfix",
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "default": 1,
      "description": "Configure termination grace period for cilium-agent DaemonSet.",
      "required": [],
      "title": "terminationGracePeriodSeconds",
      "type": "integer"
    },
    "tls": {
      "additionalProperties": true,
      "description": "Configure TLS configuration in the agent.",
      "properties": {
        "ca": {
          "additionalProperties": true,
          "description": "Base64 encoded PEM values for the CA certificate and private key.\nThis can be used as common CA to generate certificates used by hubble and clustermesh components.\nIt is neither required nor used when cert-manager is used to generate the certificates.",
          "properties": {
            "cert": {
              "default": "",
              "description": "Optional CA cert. If it is provided, it will be used by cilium to\ngenerate all other certificates. Otherwise, an ephemeral CA is generated.",
              "required": [],
              "title": "cert",
              "type": "string"
            },
            "certValidityDuration": {
              "default": 1095,
              "description": "Generated certificates validity duration in days. This will be used for auto generated CA.",
              "required": [],
              "title": "certValidityDuration",
              "type": "integer"
            },
            "key": {
              "default": "",
              "description": "Optional CA private key. If it is provided, it will be used by cilium to\ngenerate all other certificates. Otherwise, an ephemeral CA is generated.",
              "required": [],
              "title": "key",
              "type": "string"
            }
          },
          "required": [],
          "title": "ca",
          "type": "object"
        },
        "caBundle": {
          "additionalProperties": true,
          "description": "Configure the CA trust bundle used for the validation of the certificates\nleveraged by hubble and clustermesh. When enabled, it overrides the content of the\n'ca.crt' field of the respective certificates, allowing for CA rotation with no down-time.",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable the use of the CA trust bundle.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "key": {
              "default": "ca.crt",
              "description": "Entry of the ConfigMap containing the CA trust bundle.",
              "required": [],
              "title": "key",
              "type": "string"
            },
            "name": {
              "default": "cilium-root-ca.crt",
              "description": "Name of the ConfigMap containing the CA trust bundle.",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "useSecret": {
              "default": false,
              "description": "Use a Secret instead of a ConfigMap.",
              "required": [],
              "title": "useSecret",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "caBundle",
          "type": "object"
        },
        "readSecretsOnlyFromSecretsNamespace": {
          "default": "~",
          "description": "Configure if the Cilium Agent will only look in `tls.secretsNamespace` for\n   CiliumNetworkPolicy relevant Secrets.\n   If false, the Cilium Agent will be granted READ (GET/LIST/WATCH) access\n   to _all_ secrets in the entire cluster. This is not recommended and is\n   included for backwards compatibility.\n   This value obsoletes `tls.secretsBackend`, with `true` == `local` in the old\n   setting, and `false` == `k8s`.",
          "required": [],
          "title": "readSecretsOnlyFromSecretsNamespace",
          "type": [
            "null",
            "boolean"
          ]
        },
        "secretSync": {
          "additionalProperties": true,
          "description": "Configures settings for synchronization of TLS Interception Secrets",
          "properties": {
            "enabled": {
              "default": "~",
              "description": "Enable synchronization of Secrets for TLS Interception. If disabled and\ntls.readSecretsOnlyFromSecretsNamespace is set to 'false', then secrets will be read directly by the agent.",
              "required": [],
              "title": "enabled",
              "type": [
                "null",
                "boolean"
              ]
            }
          },
          "required": [],
          "title": "secretSync",
          "type": "object"
        },
        "secretsBackend": {
          "default": "~",
          "description": "This configures how the Cilium agent loads the secrets used TLS-aware CiliumNetworkPolicies\n(namely the secrets referenced by terminatingTLS and originatingTLS).\nThis value is DEPRECATED and will be removed in a future version.\nUse `tls.readSecretsOnlyFromSecretsNamespace` instead.\nPossible values:\n  - local\n  - k8s",
          "required": [],
          "title": "secretsBackend",
          "type": [
            "null",
            "string"
          ]
        },
        "secretsNamespace": {
          "additionalProperties": true,
          "description": "Configures where secrets used in CiliumNetworkPolicies will be looked for",
          "properties": {
            "create": {
              "default": true,
              "description": "Create secrets namespace for TLS Interception secrets.",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "cilium-secrets",
              "description": "Name of TLS Interception secret namespace.",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "secretsNamespace",
          "type": "object"
        }
      },
      "required": [],
      "title": "tls",
      "type": "object"
    },
    "tolerations": {
      "description": "Node tolerations for agent scheduling to nodes with taints\nref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
      "items": {
        "additionalProperties": true,
        "properties": {
          "operator": {
            "default": "Exists",
            "required": [],
            "title": "operator",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "tunnelPort": {
      "default": 0,
      "description": "Configure VXLAN and Geneve tunnel port.",
      "required": [],
      "title": "tunnelPort",
      "type": "integer"
    },
    "tunnelProtocol": {
      "default": "",
      "description": "Tunneling protocol to use in tunneling mode and for ad-hoc tunnels.\nPossible values:\n  - \"\"\n  - vxlan\n  - geneve",
      "required": [],
      "title": "tunnelProtocol",
      "type": "string"
    },
    "tunnelSourcePortRange": {
      "default": "0-0",
      "description": "Configure VXLAN and Geneve tunnel source port range hint.",
      "required": [],
      "title": "tunnelSourcePortRange",
      "type": "string"
    },
    "underlayProtocol": {
      "default": "",
      "description": "IP family for the underlay.",
      "required": [],
      "title": "underlayProtocol",
      "type": "string"
    },
    "updateStrategy": {
      "additionalProperties": true,
      "description": "Cilium agent update strategy",
      "properties": {
        "rollingUpdate": {
          "additionalProperties": true,
          "properties": {
            "maxUnavailable": {
              "default": 2,
              "required": [],
              "title": "maxUnavailable",
              "type": [
                "integer",
                "string"
              ]
            }
          },
          "required": [],
          "title": "rollingUpdate",
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "updateStrategy",
      "type": "object"
    },
    "upgradeCompatibility": {
      "default": "null",
      "description": "upgradeCompatibility helps users upgrading to ensure that the configMap for\nCilium will not change critical values to ensure continued operation\nThis flag is not required for new installations.\nFor example: '1.7', '1.8', '1.9'",
      "required": [],
      "title": "upgradeCompatibility",
      "type": [
        "null",
        "string"
      ]
    },
    "vtep": {
      "additionalProperties": true,
      "properties": {
        "cidr": {
          "default": "",
          "description": "A space separated list of VTEP device CIDRs, for example \"1.1.1.0/24 1.1.2.0/24\"",
          "required": [],
          "title": "cidr",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enables VXLAN Tunnel Endpoint (VTEP) Integration (beta) to allow\nCilium-managed pods to talk to third party VTEP devices over Cilium tunnel.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoint": {
          "default": "",
          "description": "A space separated list of VTEP device endpoint IPs, for example \"1.1.1.1  1.1.2.1\"",
          "required": [],
          "title": "endpoint",
          "type": "string"
        },
        "mac": {
          "default": "",
          "description": "A space separated list of VTEP device MAC addresses (VTEP MAC), for example \"x:x:x:x:x:x  y:y:y:y:y:y:y\"",
          "required": [],
          "title": "mac",
          "type": "string"
        },
        "mask": {
          "default": "",
          "description": "VTEP CIDRs Mask that applies to all VTEP CIDRs, for example \"255.255.255.0\"",
          "required": [],
          "title": "mask",
          "type": "string"
        }
      },
      "required": [],
      "title": "vtep",
      "type": "object"
    },
    "waitForKubeProxy": {
      "default": false,
      "description": "Wait for KUBE-PROXY-CANARY iptables rule to appear in \"wait-for-kube-proxy\"\ninit container before launching cilium-agent.\nMore context can be found in the commit message of below PR\nhttps://github.com/cilium/cilium/pull/20123",
      "required": [],
      "title": "waitForKubeProxy",
      "type": "boolean"
    },
    "wellKnownIdentities": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable the use of well-known identities.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "wellKnownIdentities",
      "type": "object"
    }
  },
  "required": [],
  "type": "object"
}