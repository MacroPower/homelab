"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema Order:
    r"""
    Order is a type to represent an Order with an ACME server

    Attributes
    ----------
    apiVersion : str, default is "acme.cert-manager.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Order", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : AcmeCertManagerIoV1OrderSpec, default is Undefined, required
        spec
    status : AcmeCertManagerIoV1OrderStatus, default is Undefined, optional
        status
    """
    apiVersion: "acme.cert-manager.io/v1" = "acme.cert-manager.io/v1"

    kind: "Order" = "Order"

    metadata: v1.ObjectMeta

    spec: AcmeCertManagerIoV1OrderSpec

    status?: AcmeCertManagerIoV1OrderStatus

schema AcmeCertManagerIoV1OrderSpec:
    r"""
    acme cert manager io v1 order spec

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        CommonName is the common name as specified on the DER encoded CSR.
        If specified, this value must also be present in `dnsNames` or `ipAddresses`.
        This field must match the corresponding field on the DER encoded CSR.
    dnsNames : [str], default is Undefined, optional
        DNSNames is a list of DNS names that should be included as part of the Order
        validation process.
        This field must match the corresponding field on the DER encoded CSR.
    duration : str, default is Undefined, optional
        Duration is the duration for the not after date for the requested certificate.
        this is set on order creation as pe the ACME spec.
    ipAddresses : [str], default is Undefined, optional
        IPAddresses is a list of IP addresses that should be included as part of the Order
        validation process.
        This field must match the corresponding field on the DER encoded CSR.
    issuerRef : AcmeCertManagerIoV1OrderSpecIssuerRef, default is Undefined, required
        issuer ref
    profile : str, default is Undefined, optional
        Profile allows requesting a certificate profile from the ACME server.
        Supported profiles are listed by the server's ACME directory URL.
    request : str, default is Undefined, required
        Certificate signing request bytes in DER encoding.
        This will be used when finalizing the order.
        This field must be set on the order.
    """
    commonName?: str
    dnsNames?: [str]
    duration?: str
    ipAddresses?: [str]
    issuerRef: AcmeCertManagerIoV1OrderSpecIssuerRef

    profile?: str
    request: str

schema AcmeCertManagerIoV1OrderSpecIssuerRef:
    r"""
    IssuerRef references a properly configured ACME-type Issuer which should
    be used to create this Order.
    If the Issuer does not exist, processing will be retried.
    If the Issuer is not an 'ACME' Issuer, an error will be returned and the
    Order will be marked as failed.

    Attributes
    ----------
    group : str, default is "cert-manager.io", optional
        Group of the issuer being referred to.
    kind : str, default is "Issuer", optional
        Kind of the issuer being referred to.
    name : str, default is Undefined, required
        Name of the issuer being referred to.
    """
    group?: str = "cert-manager.io"
    kind?: str = "Issuer"
    name: str

schema AcmeCertManagerIoV1OrderStatus:
    r"""
    acme cert manager io v1 order status

    Attributes
    ----------
    authorizations : [AcmeCertManagerIoV1OrderStatusAuthorizationsItems0], default is Undefined, optional
        Authorizations contains data returned from the ACME server on what
        authorizations must be completed in order to validate the DNS names
        specified on the Order.
    certificate : str, default is Undefined, optional
        Certificate is a copy of the PEM encoded certificate for this Order.
        This field will be populated after the order has been successfully
        finalized with the ACME server, and the order has transitioned to the
        'valid' state.
    failureTime : str, default is Undefined, optional
        FailureTime stores the time that this order failed.
        This is used to influence garbage collection and back-off.
    finalizeURL : str, default is Undefined, optional
        FinalizeURL of the Order.
        This is used to obtain certificates for this order once it has been completed.
    reason : str, default is Undefined, optional
        Reason optionally provides more information about a why the order is in
        the current state.
    state : str, default is Undefined, optional
        State contains the current state of this Order resource.
        States 'success' and 'expired' are 'final'
    url : str, default is Undefined, optional
        URL of the Order.
        This will initially be empty when the resource is first created.
        The Order controller will populate this field when the Order is first processed.
        This field will be immutable after it is initially set.
    """
    authorizations?: [AcmeCertManagerIoV1OrderStatusAuthorizationsItems0]
    certificate?: str
    failureTime?: str
    finalizeURL?: str
    reason?: str
    state?: "valid" | "ready" | "pending" | "processing" | "invalid" | "expired" | "errored"
    url?: str

schema AcmeCertManagerIoV1OrderStatusAuthorizationsItems0:
    r"""
    ACMEAuthorization contains data returned from the ACME server on an
    authorization that must be completed in order validate a DNS name on an ACME
    Order resource.

    Attributes
    ----------
    challenges : [AcmeCertManagerIoV1OrderStatusAuthorizationsItems0ChallengesItems0], default is Undefined, optional
        Challenges specifies the challenge types offered by the ACME server.
        One of these challenge types will be selected when validating the DNS
        name and an appropriate Challenge resource will be created to perform
        the ACME challenge process.
    identifier : str, default is Undefined, optional
        Identifier is the DNS name to be validated as part of this authorization
    initialState : str, default is Undefined, optional
        InitialState is the initial state of the ACME authorization when first
        fetched from the ACME server.
        If an Authorization is already 'valid', the Order controller will not
        create a Challenge resource for the authorization. This will occur when
        working with an ACME server that enables 'authz reuse' (such as Let's
        Encrypt's production endpoint).
        If not set and 'identifier' is set, the state is assumed to be pending
        and a Challenge will be created.
    url : str, default is Undefined, required
        URL is the URL of the Authorization that must be completed
    wildcard : bool, default is Undefined, optional
        Wildcard will be true if this authorization is for a wildcard DNS name.
        If this is true, the identifier will be the *non-wildcard* version of
        the DNS name.
        For example, if '*.example.com' is the DNS name being validated, this
        field will be 'true' and the 'identifier' field will be 'example.com'.
    """
    challenges?: [AcmeCertManagerIoV1OrderStatusAuthorizationsItems0ChallengesItems0]
    identifier?: str
    initialState?: "valid" | "ready" | "pending" | "processing" | "invalid" | "expired" | "errored"
    url: str

    wildcard?: bool

schema AcmeCertManagerIoV1OrderStatusAuthorizationsItems0ChallengesItems0:
    r"""
    Challenge specifies a challenge offered by the ACME server for an Order.
    An appropriate Challenge resource can be created to perform the ACME
    challenge process.

    Attributes
    ----------
    token : str, default is Undefined, required
        Token is the token that must be presented for this challenge.
        This is used to compute the 'key' that must also be presented.
    $type : str, default is Undefined, required
        Type is the type of challenge being offered, e.g., 'http-01', 'dns-01',
        'tls-sni-01', etc.
        This is the raw value retrieved from the ACME server.
        Only 'http-01' and 'dns-01' are supported by cert-manager, other values
        will be ignored.
    url : str, default is Undefined, required
        URL is the URL of this challenge. It can be used to retrieve additional
        metadata about the Challenge from the ACME server.
    """
    token: str

    $type: str

    url: str

