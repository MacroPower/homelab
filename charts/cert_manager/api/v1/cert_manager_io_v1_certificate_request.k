"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import k8s.apimachinery.pkg.apis.meta.v1

schema CertificateRequest:
    r"""
    A CertificateRequest is used to request a signed certificate from one of the
    configured issuers.

    All fields within the CertificateRequest's `spec` are immutable after creation.
    A CertificateRequest will either succeed or fail, as denoted by its `Ready` status
    condition and its `status.failureTime` field.

    A CertificateRequest is a one-shot resource, meaning it represents a single
    point in time request for a certificate and cannot be re-used.

    Attributes
    ----------
    apiVersion : str, default is "cert-manager.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CertificateRequest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CertManagerIoV1CertificateRequestSpec, default is Undefined, optional
        spec
    status : CertManagerIoV1CertificateRequestStatus, default is Undefined, optional
        status
    """
    apiVersion: "cert-manager.io/v1" = "cert-manager.io/v1"

    kind: "CertificateRequest" = "CertificateRequest"

    metadata?: v1.ObjectMeta
    spec?: CertManagerIoV1CertificateRequestSpec
    status?: CertManagerIoV1CertificateRequestStatus

schema CertManagerIoV1CertificateRequestSpec:
    r"""
    Specification of the desired state of the CertificateRequest resource.
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
        issuer may choose to ignore the requested duration, just like any other
        requested attribute.
    extra : {str:[str]}, default is Undefined, optional
        Extra contains extra attributes of the user that created the CertificateRequest.
        Populated by the cert-manager webhook on creation and immutable.
    groups : [str], default is Undefined, optional
        Groups contains group membership of the user that created the CertificateRequest.
        Populated by the cert-manager webhook on creation and immutable.
    isCA : bool, default is Undefined, optional
        Requested basic constraints isCA value. Note that the issuer may choose
        to ignore the requested isCA value, just like any other requested attribute.

        NOTE: If the CSR in the `Request` field has a BasicConstraints extension,
        it must have the same isCA value as specified here.

        If true, this will automatically add the `cert sign` usage to the list
        of requested `usages`.
    issuerRef : CertManagerIoV1CertificateRequestSpecIssuerRef, default is Undefined, required
        issuer ref
    request : str, default is Undefined, required
        The PEM-encoded X.509 certificate signing request to be submitted to the
        issuer for signing.

        If the CSR has a BasicConstraints extension, its isCA attribute must
        match the `isCA` value of this CertificateRequest.
        If the CSR has a KeyUsage extension, its key usages must match the
        key usages in the `usages` field of this CertificateRequest.
        If the CSR has a ExtKeyUsage extension, its extended key usages
        must match the extended key usages in the `usages` field of this
        CertificateRequest.
    uid : str, default is Undefined, optional
        UID contains the uid of the user that created the CertificateRequest.
        Populated by the cert-manager webhook on creation and immutable.
    usages : [str], default is Undefined, optional
        Requested key usages and extended key usages.

        NOTE: If the CSR in the `Request` field has uses the KeyUsage or
        ExtKeyUsage extension, these extensions must have the same values
        as specified here without any additional values.

        If unset, defaults to `digital signature` and `key encipherment`.
    username : str, default is Undefined, optional
        Username contains the name of the user that created the CertificateRequest.
        Populated by the cert-manager webhook on creation and immutable.
    """
    duration?: str
    extra?: {str:[str]}
    groups?: [str]
    isCA?: bool
    issuerRef: CertManagerIoV1CertificateRequestSpecIssuerRef

    request: str

    uid?: str
    usages?: [str]
    username?: str

schema CertManagerIoV1CertificateRequestSpecIssuerRef:
    r"""
    Reference to the issuer responsible for issuing the certificate.
    If the issuer is namespace-scoped, it must be in the same namespace
    as the Certificate. If the issuer is cluster-scoped, it can be used
    from any namespace.

    The `name` field of the reference must always be specified.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group of the issuer being referred to.
        Defaults to 'cert-manager.io'.
    kind : str, default is Undefined, optional
        Kind of the issuer being referred to.
        Defaults to 'Issuer'.
    name : str, default is Undefined, required
        Name of the issuer being referred to.
    """
    group?: str
    kind?: str
    name: str

schema CertManagerIoV1CertificateRequestStatus:
    r"""
    Status of the CertificateRequest.
    This is set and managed automatically.
    Read-only.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    ca : str, default is Undefined, optional
        The PEM encoded X.509 certificate of the signer, also known as the CA
        (Certificate Authority).
        This is set on a best-effort basis by different issuers.
        If not set, the CA is assumed to be unknown/not available.
    certificate : str, default is Undefined, optional
        The PEM encoded X.509 certificate resulting from the certificate
        signing request.
        If not set, the CertificateRequest has either not been completed or has
        failed. More information on failure can be found by checking the
        `conditions` field.
    conditions : [CertManagerIoV1CertificateRequestStatusConditionsItems0], default is Undefined, optional
        List of status conditions to indicate the status of a CertificateRequest.
        Known condition types are `Ready`, `InvalidRequest`, `Approved` and `Denied`.
    failureTime : str, default is Undefined, optional
        FailureTime stores the time that this CertificateRequest failed. This is
        used to influence garbage collection and back-off.
    """
    ca?: str
    certificate?: str
    conditions?: [CertManagerIoV1CertificateRequestStatusConditionsItems0]
    failureTime?: str

schema CertManagerIoV1CertificateRequestStatusConditionsItems0:
    r"""
    CertificateRequestCondition contains condition information for a CertificateRequest.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the timestamp corresponding to the last status
        change of this condition.
    message : str, default is Undefined, optional
        Message is a human readable description of the details of the last
        transition, complementing reason.
    reason : str, default is Undefined, optional
        Reason is a brief machine readable explanation for the condition's last
        transition.
    status : str, default is Undefined, required
        Status of the condition, one of (`True`, `False`, `Unknown`).
    $type : str, default is Undefined, required
        Type of the condition, known values are (`Ready`, `InvalidRequest`,
        `Approved`, `Denied`).
    """
    lastTransitionTime?: str
    message?: str
    reason?: str
    status: "True" | "False" | "Unknown"

    $type: str

