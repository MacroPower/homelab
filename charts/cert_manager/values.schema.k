"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    acmesolver : ValuesAcmesolver, optional
        +docs:section=ACME Solver
    affinity : ValuesAffinity, optional
        A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

        For example:
          affinity:
            nodeAffinity:
             requiredDuringSchedulingIgnoredDuringExecution:
               nodeSelectorTerms:
               - matchExpressions:
                 - key: foo.bar.com/role
                   operator: In
                   values:
                   - master
    approveSignerNames : [str], optional
        List of signer names that cert-manager will approve by default. CertificateRequests
        referencing these signer names will be auto-approved by cert-manager. Defaults to just
        approving the cert-manager.io Issuer and ClusterIssuer issuers. When set to an empty
        array, ALL issuers will be auto-approved by cert-manager. To disable the auto-approval,
        because eg. you are using approver-policy, you can enable 'disableAutoApproval'.
        ref: https://cert-manager.io/docs/concepts/certificaterequest/#approval
        +docs:property
    cainjector : ValuesCainjector, optional
        +docs:section=CA Injector
    clusterResourceNamespace : str, optional, default is ""
        Override the namespace used to store DNS provider credentials etc. for ClusterIssuer
        resources. By default, the same namespace as cert-manager is deployed within is
        used. This namespace will not be automatically created by the Helm chart.
    config : ValuesConfig, optional
        This property is used to configure options for the controller pod.
        This allows setting options that would usually be provided using flags.

        If `apiVersion` and `kind` are unspecified they default to the current latest
        version (currently `controller.config.cert-manager.io/v1alpha1`). You can pin
        the version by specifying the `apiVersion` yourself.

        For example:
         config:
           apiVersion: controller.config.cert-manager.io/v1alpha1
           kind: ControllerConfiguration
           logging:
             verbosity: 2
             format: text
           leaderElectionConfig:
             namespace: kube-system
           kubernetesAPIQPS: 9000
           kubernetesAPIBurst: 9000
           numberOfConcurrentWorkers: 200
           enableGatewayAPI: true
           # Feature gates as of v1.17.0. Listed with their default values.
           # See https://cert-manager.io/docs/cli/controller/
           featureGates:
             AdditionalCertificateOutputFormats: true # BETA - default=true
             AllAlpha: false # ALPHA - default=false
             AllBeta: false # BETA - default=false
             ExperimentalCertificateSigningRequestControllers: false # ALPHA - default=false
             ExperimentalGatewayAPISupport: true # BETA - default=true
             LiteralCertificateSubject: true # BETA - default=true
             NameConstraints: true # BETA - default=true
             OtherNames: false # ALPHA - default=false
             SecretsFilteredCaching: true # BETA - default=true
             ServerSideApply: false # ALPHA - default=false
             StableCertificateRequestName: true # BETA - default=true
             UseCertificateRequestBasicConstraints: false # ALPHA - default=false
             UseDomainQualifiedFinalizer: true # BETA - default=false
             ValidateCAA: false # ALPHA - default=false
           # Configure the metrics server for TLS
           # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
           metricsTLSConfig:
             dynamic:
               secretNamespace: "cert-manager"
               secretName: "cert-manager-metrics-ca"
               dnsNames:
               - cert-manager-metrics
    containerSecurityContext : ValuesContainerSecurityContext, optional
        Container Security Context to be set on the controller component container.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    crds : ValuesCrds, optional
    creator : str, optional, default is "helm"
        Field used by our release pipeline to produce the static manifests.
        The field defaults to "helm" but is set to "static" when we render
        the static YAML manifests.
        +docs:hidden
    disableAutoApproval : bool, optional, default is False
        Option to disable cert-manager's build-in auto-approver. The auto-approver
        approves all CertificateRequests that reference issuers matching the 'approveSignerNames'
        option. This 'disableAutoApproval' option is useful when you want to make all approval decisions
        using a different approver (like approver-policy - https://github.com/cert-manager/approver-policy).
    dns01RecursiveNameservers : str, optional, default is ""
        A comma-separated string with the host and port of the recursive nameservers cert-manager should query.
    dns01RecursiveNameserversOnly : bool, optional, default is False
        Forces cert-manager to use only the recursive nameservers for verification.
        Enabling this option could cause the DNS01 self check to take longer owing to caching performed by the recursive nameservers.
    enableCertificateOwnerRef : bool, optional, default is False
        When this flag is enabled, secrets will be automatically removed when the certificate resource is deleted.
    enableServiceLinks : bool, optional, default is False
        enableServiceLinks indicates whether information about services should be
        injected into the pod's environment variables, matching the syntax of Docker
        links.
    enabled : bool, optional, default is True
        Field that can be used as a condition when cert-manager is a dependency.
        This definition is only here as a placeholder such that it is included in
        the json schema.
        See https://helm.sh/docs/chart_best_practices/dependencies/#conditions-and-tags
        for more info.
        +docs:hidden
    extraArgs : [any], optional
        Additional command line flags to pass to cert-manager controller binary.
        To see all available flags run `docker run quay.io/jetstack/cert-manager-controller:<version> --help`.

        Use this flag to enable or disable arbitrary controllers. For example, to disable the CertificateRequests approver.

        For example:
         extraArgs:
           - --controllers=*,-certificaterequests-approver
    extraEnv : [any], optional
        Additional environment variables to pass to cert-manager controller binary.
        For example:
         extraEnv:
         - name: SOME_VAR
           value: 'some value'
    extraObjects : [any], optional
        Create dynamic manifests via values.

        For example:
        extraObjects:
          - |
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: '{{ template "cert-manager.fullname" . }}-extra-configmap'
    featureGates : str, optional, default is ""
        A comma-separated list of feature gates that should be enabled on the
        controller pod.
    global : ValuesGlobal, optional
        Default values for cert-manager.
        This is a YAML-formatted file.
        Declare variables to be passed into your templates.
    hostAliases : [any], optional
        Optional hostAliases for cert-manager-controller pods. May be useful when performing ACME DNS-01 self checks.
    image : ValuesImage, optional
    ingressShim : ValuesIngressShim, optional
        +docs:ignore
    installCRDs : bool, optional, default is False
        This option is equivalent to setting crds.enabled=true and crds.keep=true.
        Deprecated: use crds.enabled and crds.keep instead.
    livenessProbe : ValuesLivenessProbe, optional
        LivenessProbe settings for the controller container of the controller Pod.

        This is enabled by default, in order to enable the clock-skew liveness probe that
        restarts the controller in case of a skew between the system clock and the monotonic clock.
        LivenessProbe durations and thresholds are based on those used for the Kubernetes
        controller-manager. For more information see the following on the
        [Kubernetes GitHub repository](https://github.com/kubernetes/kubernetes/blob/806b30170c61a38fedd54cc9ede4cd6275a1ad3b/cmd/kubeadm/app/util/staticpod/utils.go#L241-L245)
        +docs:property
    maxConcurrentChallenges : int, optional, default is 60
        The maximum number of challenges that can be scheduled as 'processing' at once.
    namespace : str, optional, default is ""
        This namespace allows you to define where the services are installed into.
        If not set then they use the namespace of the release.
        This is helpful when installing cert manager as a chart dependency (sub chart).
    nodeSelector : ValuesNodeSelector, optional
        The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
        matching labels.
        For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

        This default ensures that Pods are only scheduled to Linux nodes.
        It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
        +docs:property
    podDisruptionBudget : ValuesPodDisruptionBudget, optional
    podLabels : ValuesPodLabels, optional
        Optional additional labels to add to the controller Pods.
    prometheus : ValuesPrometheus, optional
        +docs:section=Prometheus
    replicaCount : int, optional, default is 1
        The number of replicas of the cert-manager controller to run.

        The default is 1, but in production set this to 2 or 3 to provide high
        availability.

        If `replicas > 1`, consider setting `podDisruptionBudget.enabled=true`.

        Note that cert-manager uses leader election to ensure that there can
        only be a single instance active at a time.
    resources : ValuesResources, optional
        Resources to provide to the cert-manager controller pod.

        For example:
         requests:
           cpu: 10m
           memory: 32Mi

        For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    securityContext : ValuesSecurityContext, optional
        Pod Security Context.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    serviceAccount : ValuesServiceAccount, optional
        Override the "cert-manager.name" value, which is used to annotate some of
        the resources that are created by this Chart (using "app.kubernetes.io/name").
        NOTE: There are some inconsistencies in the Helm chart when it comes to
        these annotations (some resources use eg. "cainjector.name" which resolves
        to the value "cainjector").
        +docs:property
        nameOverride: "my-cert-manager"
    startupapicheck : ValuesStartupapicheck, optional
        +docs:section=Startup API Check
        This startupapicheck is a Helm post-install hook that waits for the webhook
        endpoints to become available.
        The check is implemented using a Kubernetes Job - if you are injecting mesh
        sidecar proxies into cert-manager pods, ensure that they
        are not injected into this Job's pod. Otherwise, the installation may time out
        owing to the Job never being completed because the sidecar proxy does not exit.
        For more information, see [this note](https://github.com/cert-manager/cert-manager/pull/4414).
    strategy : ValuesStrategy, optional
        Deployment update strategy for the cert-manager controller deployment.
        For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).

        For example:
         strategy:
           type: RollingUpdate
           rollingUpdate:
             maxSurge: 0
             maxUnavailable: 1
    tolerations : [any], optional
        A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).

        For example:
          tolerations:
          - key: foo.bar.com/role
            operator: Equal
            value: master
            effect: NoSchedule
    topologySpreadConstraints : [any], optional
        A list of Kubernetes TopologySpreadConstraints, if required. For more information, see [Topology spread constraint v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#topologyspreadconstraint-v1-core

        For example:
          topologySpreadConstraints:
          - maxSkew: 2
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: cert-manager
                app.kubernetes.io/component: controller
    volumeMounts : [any], optional
        Additional volume mounts to add to the cert-manager controller container.
    volumes : [any], optional
        Additional volumes to add to the cert-manager controller pod.
    webhook : ValuesWebhook, optional
        +docs:section=Webhook
    """
    [...str]: any
    acmesolver?: ValuesAcmesolver
    affinity?: ValuesAffinity
    approveSignerNames?: [str]
    cainjector?: ValuesCainjector
    clusterResourceNamespace?: str
    config?: ValuesConfig
    containerSecurityContext?: ValuesContainerSecurityContext
    crds?: ValuesCrds
    creator?: str
    disableAutoApproval?: bool
    dns01RecursiveNameservers?: str
    dns01RecursiveNameserversOnly?: bool
    enableCertificateOwnerRef?: bool
    enableServiceLinks?: bool
    enabled?: bool
    extraArgs?: [any]
    extraEnv?: [any]
    extraObjects?: [any]
    featureGates?: str
    global?: ValuesGlobal
    hostAliases?: [any]
    image?: ValuesImage
    ingressShim?: ValuesIngressShim
    installCRDs?: bool
    livenessProbe?: ValuesLivenessProbe
    maxConcurrentChallenges?: int
    namespace?: str
    nodeSelector?: ValuesNodeSelector
    podDisruptionBudget?: ValuesPodDisruptionBudget
    podLabels?: ValuesPodLabels
    prometheus?: ValuesPrometheus
    replicaCount?: int
    resources?: ValuesResources
    securityContext?: ValuesSecurityContext
    serviceAccount?: ValuesServiceAccount
    startupapicheck?: ValuesStartupapicheck
    strategy?: ValuesStrategy
    tolerations?: [any]
    topologySpreadConstraints?: [any]
    volumeMounts?: [any]
    volumes?: [any]
    webhook?: ValuesWebhook

schema ValuesAcmesolver:
    r"""
    +docs:section=ACME Solver

    Attributes
    ----------
    image : ValuesAcmesolverImage, optional
    """
    [...str]: any
    image?: ValuesAcmesolverImage

schema ValuesAcmesolverImage:
    r"""
    ValuesAcmesolverImage

    Attributes
    ----------
    pullPolicy : str, optional, default is "IfNotPresent"
        Kubernetes imagePullPolicy on Deployment.
    repository : str, optional, default is "quay.io/jetstack/cert-manager-acmesolver"
        The container image for the cert-manager acmesolver.
        +docs:property
    """
    [...str]: any
    pullPolicy?: str
    repository?: str

schema ValuesAffinity:
    r"""
    A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

    For example:
      affinity:
        nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: foo.bar.com/role
               operator: In
               values:
               - master
    """
    [...str]: any

schema ValuesCainjector:
    r"""
    +docs:section=CA Injector

    Attributes
    ----------
    affinity : ValuesCainjectorAffinity, optional
        A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

        For example:
          affinity:
            nodeAffinity:
             requiredDuringSchedulingIgnoredDuringExecution:
               nodeSelectorTerms:
               - matchExpressions:
                 - key: foo.bar.com/role
                   operator: In
                   values:
                   - master
    config : ValuesCainjectorConfig, optional
        This is used to configure options for the cainjector pod.
        It allows setting options that are usually provided via flags.

        If `apiVersion` and `kind` are unspecified they default to the current latest
        version (currently `cainjector.config.cert-manager.io/v1alpha1`). You can pin
        the version by specifying the `apiVersion` yourself.

        For example:
         apiVersion: cainjector.config.cert-manager.io/v1alpha1
         kind: CAInjectorConfiguration
         logging:
          verbosity: 2
          format: text
         leaderElectionConfig:
          namespace: kube-system
         # Configure the metrics server for TLS
         # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
         metricsTLSConfig:
           dynamic:
             secretNamespace: "cert-manager"
             secretName: "cert-manager-metrics-ca"
             dnsNames:
             - cert-manager-metrics
    containerSecurityContext : ValuesCainjectorContainerSecurityContext, optional
        Container Security Context to be set on the cainjector component container
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    enableServiceLinks : bool, optional, default is False
        enableServiceLinks indicates whether information about services should be
        injected into the pod's environment variables, matching the syntax of Docker
        links.
    enabled : bool, optional, default is True
        Create the CA Injector deployment
    extraArgs : [any], optional
        Additional command line flags to pass to cert-manager cainjector binary.
        To see all available flags run `docker run quay.io/jetstack/cert-manager-cainjector:<version> --help`.
    extraEnv : [any], optional
        Additional environment variables to pass to cert-manager cainjector binary.
        For example:
         extraEnv:
         - name: SOME_VAR
           value: 'some value'
    featureGates : str, optional, default is ""
        Comma separated list of feature gates that should be enabled on the
        cainjector pod.
    image : ValuesCainjectorImage, optional
    nodeSelector : ValuesCainjectorNodeSelector, optional
        The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
        matching labels.
        For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

        This default ensures that Pods are only scheduled to Linux nodes.
        It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
        +docs:property
    podDisruptionBudget : ValuesCainjectorPodDisruptionBudget, optional
    podLabels : ValuesCainjectorPodLabels, optional
        Optional additional labels to add to the CA Injector Pods.
    replicaCount : int, optional, default is 1
        The number of replicas of the cert-manager cainjector to run.

        The default is 1, but in production set this to 2 or 3 to provide high
        availability.

        If `replicas > 1`, consider setting `cainjector.podDisruptionBudget.enabled=true`.

        Note that cert-manager uses leader election to ensure that there can
        only be a single instance active at a time.
    resources : ValuesCainjectorResources, optional
        Resources to provide to the cert-manager cainjector pod.

        For example:
         requests:
           cpu: 10m
           memory: 32Mi

        For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    securityContext : ValuesCainjectorSecurityContext, optional
        Pod Security Context to be set on the cainjector component Pod
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    serviceAccount : ValuesCainjectorServiceAccount, optional
    serviceLabels : ValuesCainjectorServiceLabels, optional
        Optional additional labels to add to the CA Injector metrics Service.
    strategy : ValuesCainjectorStrategy, optional
        Deployment update strategy for the cert-manager cainjector deployment.
        For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).

        For example:
         strategy:
           type: RollingUpdate
           rollingUpdate:
             maxSurge: 0
             maxUnavailable: 1
    tolerations : [any], optional
        A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).

        For example:
          tolerations:
          - key: foo.bar.com/role
            operator: Equal
            value: master
            effect: NoSchedule
    topologySpreadConstraints : [any], optional
        A list of Kubernetes TopologySpreadConstraints, if required. For more information, see [Topology spread constraint v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#topologyspreadconstraint-v1-core).

        For example:
          topologySpreadConstraints:
          - maxSkew: 2
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: cert-manager
                app.kubernetes.io/component: controller
    volumeMounts : [any], optional
        Additional volume mounts to add to the cert-manager controller container.
    volumes : [any], optional
        Additional volumes to add to the cert-manager controller pod.
    """
    [...str]: any
    affinity?: ValuesCainjectorAffinity
    config?: ValuesCainjectorConfig
    containerSecurityContext?: ValuesCainjectorContainerSecurityContext
    enableServiceLinks?: bool
    enabled?: bool
    extraArgs?: [any]
    extraEnv?: [any]
    featureGates?: str
    image?: ValuesCainjectorImage
    nodeSelector?: ValuesCainjectorNodeSelector
    podDisruptionBudget?: ValuesCainjectorPodDisruptionBudget
    podLabels?: ValuesCainjectorPodLabels
    replicaCount?: int
    resources?: ValuesCainjectorResources
    securityContext?: ValuesCainjectorSecurityContext
    serviceAccount?: ValuesCainjectorServiceAccount
    serviceLabels?: ValuesCainjectorServiceLabels
    strategy?: ValuesCainjectorStrategy
    tolerations?: [any]
    topologySpreadConstraints?: [any]
    volumeMounts?: [any]
    volumes?: [any]

schema ValuesCainjectorAffinity:
    r"""
    A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

    For example:
      affinity:
        nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: foo.bar.com/role
               operator: In
               values:
               - master
    """
    [...str]: any

schema ValuesCainjectorConfig:
    r"""
    This is used to configure options for the cainjector pod.
    It allows setting options that are usually provided via flags.

    If `apiVersion` and `kind` are unspecified they default to the current latest
    version (currently `cainjector.config.cert-manager.io/v1alpha1`). You can pin
    the version by specifying the `apiVersion` yourself.

    For example:
     apiVersion: cainjector.config.cert-manager.io/v1alpha1
     kind: CAInjectorConfiguration
     logging:
      verbosity: 2
      format: text
     leaderElectionConfig:
      namespace: kube-system
     # Configure the metrics server for TLS
     # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
     metricsTLSConfig:
       dynamic:
         secretNamespace: "cert-manager"
         secretName: "cert-manager-metrics-ca"
         dnsNames:
         - cert-manager-metrics
    """
    [...str]: any

schema ValuesCainjectorContainerSecurityContext:
    r"""
    Container Security Context to be set on the cainjector component container
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
    capabilities : ValuesCainjectorContainerSecurityContextCapabilities, optional
    readOnlyRootFilesystem : bool, optional, default is True
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    capabilities?: ValuesCainjectorContainerSecurityContextCapabilities
    readOnlyRootFilesystem?: bool

schema ValuesCainjectorContainerSecurityContextCapabilities:
    r"""
    ValuesCainjectorContainerSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], optional
    """
    [...str]: any
    drop?: [str]

schema ValuesCainjectorImage:
    r"""
    ValuesCainjectorImage

    Attributes
    ----------
    pullPolicy : str, optional, default is "IfNotPresent"
        Kubernetes imagePullPolicy on Deployment.
    repository : str, optional, default is "quay.io/jetstack/cert-manager-cainjector"
        The container image for the cert-manager cainjector
        +docs:property
    """
    [...str]: any
    pullPolicy?: str
    repository?: str

schema ValuesCainjectorNodeSelector:
    r"""
    The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
    matching labels.
    For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

    This default ensures that Pods are only scheduled to Linux nodes.
    It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
    +docs:property

    Attributes
    ----------
    "kubernetes.io/os" : str, optional, default is "linux"
    """
    [...str]: any
    "kubernetes.io/os"?: str

schema ValuesCainjectorPodDisruptionBudget:
    r"""
    ValuesCainjectorPodDisruptionBudget

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enable or disable the PodDisruptionBudget resource.

        This prevents downtime during voluntary disruptions such as during a Node upgrade.
        For example, the PodDisruptionBudget will block `kubectl drain`
        if it is used on the Node where the only remaining cert-manager
        Pod is currently running.
    """
    [...str]: any
    enabled?: bool

schema ValuesCainjectorPodLabels:
    r"""
    Optional additional labels to add to the CA Injector Pods.
    """
    [...str]: any

schema ValuesCainjectorResources:
    r"""
    Resources to provide to the cert-manager cainjector pod.

    For example:
     requests:
       cpu: 10m
       memory: 32Mi

    For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    """
    [...str]: any

schema ValuesCainjectorSecurityContext:
    r"""
    Pod Security Context to be set on the cainjector component Pod
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    runAsNonRoot : bool, optional, default is True
    seccompProfile : ValuesCainjectorSecurityContextSeccompProfile, optional
    """
    [...str]: any
    runAsNonRoot?: bool
    seccompProfile?: ValuesCainjectorSecurityContextSeccompProfile

schema ValuesCainjectorSecurityContextSeccompProfile:
    r"""
    ValuesCainjectorSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, optional, default is "RuntimeDefault"
    """
    [...str]: any
    $type?: str

schema ValuesCainjectorServiceAccount:
    r"""
    ValuesCainjectorServiceAccount

    Attributes
    ----------
    automountServiceAccountToken : bool, optional, default is True
        Automount API credentials for a Service Account.
    create : bool, optional, default is True
        Specifies whether a service account should be created.
    """
    [...str]: any
    automountServiceAccountToken?: bool
    create?: bool

schema ValuesCainjectorServiceLabels:
    r"""
    Optional additional labels to add to the CA Injector metrics Service.
    """
    [...str]: any

schema ValuesCainjectorStrategy:
    r"""
    Deployment update strategy for the cert-manager cainjector deployment.
    For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).

    For example:
     strategy:
       type: RollingUpdate
       rollingUpdate:
         maxSurge: 0
         maxUnavailable: 1
    """
    [...str]: any

schema ValuesConfig:
    r"""
    This property is used to configure options for the controller pod.
    This allows setting options that would usually be provided using flags.

    If `apiVersion` and `kind` are unspecified they default to the current latest
    version (currently `controller.config.cert-manager.io/v1alpha1`). You can pin
    the version by specifying the `apiVersion` yourself.

    For example:
     config:
       apiVersion: controller.config.cert-manager.io/v1alpha1
       kind: ControllerConfiguration
       logging:
         verbosity: 2
         format: text
       leaderElectionConfig:
         namespace: kube-system
       kubernetesAPIQPS: 9000
       kubernetesAPIBurst: 9000
       numberOfConcurrentWorkers: 200
       enableGatewayAPI: true
       # Feature gates as of v1.17.0. Listed with their default values.
       # See https://cert-manager.io/docs/cli/controller/
       featureGates:
         AdditionalCertificateOutputFormats: true # BETA - default=true
         AllAlpha: false # ALPHA - default=false
         AllBeta: false # BETA - default=false
         ExperimentalCertificateSigningRequestControllers: false # ALPHA - default=false
         ExperimentalGatewayAPISupport: true # BETA - default=true
         LiteralCertificateSubject: true # BETA - default=true
         NameConstraints: true # BETA - default=true
         OtherNames: false # ALPHA - default=false
         SecretsFilteredCaching: true # BETA - default=true
         ServerSideApply: false # ALPHA - default=false
         StableCertificateRequestName: true # BETA - default=true
         UseCertificateRequestBasicConstraints: false # ALPHA - default=false
         UseDomainQualifiedFinalizer: true # BETA - default=false
         ValidateCAA: false # ALPHA - default=false
       # Configure the metrics server for TLS
       # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
       metricsTLSConfig:
         dynamic:
           secretNamespace: "cert-manager"
           secretName: "cert-manager-metrics-ca"
           dnsNames:
           - cert-manager-metrics
    """
    [...str]: any

schema ValuesContainerSecurityContext:
    r"""
    Container Security Context to be set on the controller component container.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
    capabilities : ValuesContainerSecurityContextCapabilities, optional
    readOnlyRootFilesystem : bool, optional, default is True
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    capabilities?: ValuesContainerSecurityContextCapabilities
    readOnlyRootFilesystem?: bool

schema ValuesContainerSecurityContextCapabilities:
    r"""
    ValuesContainerSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], optional
    """
    [...str]: any
    drop?: [str]

schema ValuesCrds:
    r"""
    ValuesCrds

    Attributes
    ----------
    enabled : bool, optional, default is False
        This option decides if the CRDs should be installed
        as part of the Helm installation.
    keep : bool, optional, default is True
        This option makes it so that the "helm.sh/resource-policy": keep
        annotation is added to the CRD. This will prevent Helm from uninstalling
        the CRD when the Helm release is uninstalled.
        WARNING: when the CRDs are removed, all cert-manager custom resources
        (Certificates, Issuers, ...) will be removed too by the garbage collector.
    """
    [...str]: any
    enabled?: bool
    keep?: bool

schema ValuesGlobal:
    r"""
    Default values for cert-manager.
    This is a YAML-formatted file.
    Declare variables to be passed into your templates.

    Attributes
    ----------
    commonLabels : ValuesGlobalCommonLabels, optional
        Labels to apply to all resources.
        Please note that this does not add labels to the resources created dynamically by the controllers.
        For these resources, you have to add the labels in the template in the cert-manager custom resource:
        For example, podTemplate/ ingressTemplate in ACMEChallengeSolverHTTP01Ingress
        For more information, see the [cert-manager documentation](https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEChallengeSolverHTTP01Ingress).
        For example, secretTemplate in CertificateSpec
        For more information, see the [cert-manager documentation](https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec).
    imagePullSecrets : [any], optional
        Reference to one or more secrets to be used when pulling images.
        For more information, see [Pull an Image from a Private Registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).

        For example:
         imagePullSecrets:
           - name: "image-pull-secret"
    leaderElection : ValuesGlobalLeaderElection, optional
    logLevel : int, optional, default is 2
        Set the verbosity of cert-manager. A range of 0 - 6, with 6 being the most verbose.
    podSecurityPolicy : ValuesGlobalPodSecurityPolicy, optional
    priorityClassName : str, optional, default is ""
        The optional priority class to be used for the cert-manager pods.
    rbac : ValuesGlobalRbac, optional
    """
    [...str]: any
    commonLabels?: ValuesGlobalCommonLabels
    imagePullSecrets?: [any]
    leaderElection?: ValuesGlobalLeaderElection
    logLevel?: int
    podSecurityPolicy?: ValuesGlobalPodSecurityPolicy
    priorityClassName?: str
    rbac?: ValuesGlobalRbac

schema ValuesGlobalCommonLabels:
    r"""
    Labels to apply to all resources.
    Please note that this does not add labels to the resources created dynamically by the controllers.
    For these resources, you have to add the labels in the template in the cert-manager custom resource:
    For example, podTemplate/ ingressTemplate in ACMEChallengeSolverHTTP01Ingress
    For more information, see the [cert-manager documentation](https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEChallengeSolverHTTP01Ingress).
    For example, secretTemplate in CertificateSpec
    For more information, see the [cert-manager documentation](https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec).
    """
    [...str]: any

schema ValuesGlobalLeaderElection:
    r"""
    ValuesGlobalLeaderElection

    Attributes
    ----------
    namespace : str, optional, default is "kube-system"
        Override the namespace used for the leader election lease.
    """
    [...str]: any
    namespace?: str

schema ValuesGlobalPodSecurityPolicy:
    r"""
    ValuesGlobalPodSecurityPolicy

    Attributes
    ----------
    enabled : bool, optional, default is False
        Create PodSecurityPolicy for cert-manager.

        Note that PodSecurityPolicy was deprecated in Kubernetes 1.21 and removed in Kubernetes 1.25.
    useAppArmor : bool, optional, default is True
        Configure the PodSecurityPolicy to use AppArmor.
    """
    [...str]: any
    enabled?: bool
    useAppArmor?: bool

schema ValuesGlobalRbac:
    r"""
    ValuesGlobalRbac

    Attributes
    ----------
    aggregateClusterRoles : bool, optional, default is True
        Aggregate ClusterRoles to Kubernetes default user-facing roles. For more information, see [User-facing roles](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles)
    create : bool, optional, default is True
        Create required ClusterRoles and ClusterRoleBindings for cert-manager.
    """
    [...str]: any
    aggregateClusterRoles?: bool
    create?: bool

schema ValuesImage:
    r"""
    ValuesImage

    Attributes
    ----------
    pullPolicy : str, optional, default is "IfNotPresent"
        Kubernetes imagePullPolicy on Deployment.
    repository : str, optional, default is "quay.io/jetstack/cert-manager-controller"
        The container image for the cert-manager controller.
        +docs:property
    """
    [...str]: any
    pullPolicy?: str
    repository?: str

schema ValuesIngressShim:
    r"""
    +docs:ignore
    """
    [...str]: any

schema ValuesLivenessProbe:
    r"""
    LivenessProbe settings for the controller container of the controller Pod.

    This is enabled by default, in order to enable the clock-skew liveness probe that
    restarts the controller in case of a skew between the system clock and the monotonic clock.
    LivenessProbe durations and thresholds are based on those used for the Kubernetes
    controller-manager. For more information see the following on the
    [Kubernetes GitHub repository](https://github.com/kubernetes/kubernetes/blob/806b30170c61a38fedd54cc9ede4cd6275a1ad3b/cmd/kubeadm/app/util/staticpod/utils.go#L241-L245)
    +docs:property

    Attributes
    ----------
    enabled : bool, optional, default is True
    failureThreshold : int, optional, default is 8
    initialDelaySeconds : int, optional, default is 10
    periodSeconds : int, optional, default is 10
    successThreshold : int, optional, default is 1
    timeoutSeconds : int, optional, default is 15
    """
    [...str]: any
    enabled?: bool
    failureThreshold?: int
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    timeoutSeconds?: int

schema ValuesNodeSelector:
    r"""
    The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
    matching labels.
    For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

    This default ensures that Pods are only scheduled to Linux nodes.
    It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
    +docs:property

    Attributes
    ----------
    "kubernetes.io/os" : str, optional, default is "linux"
    """
    [...str]: any
    "kubernetes.io/os"?: str

schema ValuesPodDisruptionBudget:
    r"""
    ValuesPodDisruptionBudget

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enable or disable the PodDisruptionBudget resource.

        This prevents downtime during voluntary disruptions such as during a Node upgrade.
        For example, the PodDisruptionBudget will block `kubectl drain`
        if it is used on the Node where the only remaining cert-manager
        Pod is currently running.
    """
    [...str]: any
    enabled?: bool

schema ValuesPodLabels:
    r"""
    Optional additional labels to add to the controller Pods.
    """
    [...str]: any

schema ValuesPrometheus:
    r"""
    +docs:section=Prometheus

    Attributes
    ----------
    enabled : bool, optional, default is True
        Enable Prometheus monitoring for the cert-manager controller and webhook.
        If you use the Prometheus Operator, set prometheus.podmonitor.enabled or
        prometheus.servicemonitor.enabled, to create a PodMonitor or a
        ServiceMonitor resource.
        Otherwise, 'prometheus.io' annotations are added to the cert-manager and
        cert-manager-webhook Deployments.
        Note that you can not enable both PodMonitor and ServiceMonitor as they are
        mutually exclusive. Enabling both will result in an error.
    podmonitor : ValuesPrometheusPodmonitor, optional
        Note that you can not enable both PodMonitor and ServiceMonitor as they are mutually exclusive. Enabling both will result in an error.
    servicemonitor : ValuesPrometheusServicemonitor, optional
    """
    [...str]: any
    enabled?: bool
    podmonitor?: ValuesPrometheusPodmonitor
    servicemonitor?: ValuesPrometheusServicemonitor

schema ValuesPrometheusPodmonitor:
    r"""
    Note that you can not enable both PodMonitor and ServiceMonitor as they are mutually exclusive. Enabling both will result in an error.

    Attributes
    ----------
    annotations : ValuesPrometheusPodmonitorAnnotations, optional
        Additional annotations to add to the PodMonitor.
    enabled : bool, optional, default is False
        Create a PodMonitor to add cert-manager to Prometheus.
    endpointAdditionalProperties : ValuesPrometheusPodmonitorEndpointAdditionalProperties, optional
        EndpointAdditionalProperties allows setting additional properties on the
        endpoint such as relabelings, metricRelabelings etc.

        For example:
         endpointAdditionalProperties:
          relabelings:
          - action: replace
            sourceLabels:
            - __meta_kubernetes_pod_node_name
            targetLabel: instance
          # Configure the PodMonitor for TLS connections
          # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
          scheme: https
          tlsConfig:
            serverName: cert-manager-metrics
            ca:
              secret:
                name: cert-manager-metrics-ca
                key: "tls.crt"

        +docs:property
    honorLabels : bool, optional, default is False
        Keep labels from scraped data, overriding server-side labels.
    interval : str, optional, default is "60s"
        The interval to scrape metrics.
    labels : ValuesPrometheusPodmonitorLabels, optional
        Additional labels to add to the PodMonitor.
    path : str, optional, default is "/metrics"
        The path to scrape for metrics.
    prometheusInstance : str, optional, default is "default"
        Specifies the `prometheus` label on the created PodMonitor. This is
        used when different Prometheus instances have label selectors matching
        different PodMonitors.
    scrapeTimeout : str, optional, default is "30s"
        The timeout before a metrics scrape fails.
    """
    [...str]: any
    annotations?: ValuesPrometheusPodmonitorAnnotations
    enabled?: bool
    endpointAdditionalProperties?: ValuesPrometheusPodmonitorEndpointAdditionalProperties
    honorLabels?: bool
    interval?: str
    labels?: ValuesPrometheusPodmonitorLabels
    path?: str
    prometheusInstance?: str
    scrapeTimeout?: str

schema ValuesPrometheusPodmonitorAnnotations:
    r"""
    Additional annotations to add to the PodMonitor.
    """
    [...str]: any

schema ValuesPrometheusPodmonitorEndpointAdditionalProperties:
    r"""
    EndpointAdditionalProperties allows setting additional properties on the
    endpoint such as relabelings, metricRelabelings etc.

    For example:
     endpointAdditionalProperties:
      relabelings:
      - action: replace
        sourceLabels:
        - __meta_kubernetes_pod_node_name
        targetLabel: instance
      # Configure the PodMonitor for TLS connections
      # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
      scheme: https
      tlsConfig:
        serverName: cert-manager-metrics
        ca:
          secret:
            name: cert-manager-metrics-ca
            key: "tls.crt"

    +docs:property
    """
    [...str]: any

schema ValuesPrometheusPodmonitorLabels:
    r"""
    Additional labels to add to the PodMonitor.
    """
    [...str]: any

schema ValuesPrometheusServicemonitor:
    r"""
    ValuesPrometheusServicemonitor

    Attributes
    ----------
    annotations : ValuesPrometheusServicemonitorAnnotations, optional
        Additional annotations to add to the ServiceMonitor.
    enabled : bool, optional, default is False
        Create a ServiceMonitor to add cert-manager to Prometheus.
    endpointAdditionalProperties : ValuesPrometheusServicemonitorEndpointAdditionalProperties, optional
        EndpointAdditionalProperties allows setting additional properties on the
        endpoint such as relabelings, metricRelabelings etc.

        For example:
         endpointAdditionalProperties:
          relabelings:
          - action: replace
            sourceLabels:
            - __meta_kubernetes_pod_node_name
            targetLabel: instance

        +docs:property
    honorLabels : bool, optional, default is False
        Keep labels from scraped data, overriding server-side labels.
    interval : str, optional, default is "60s"
        The interval to scrape metrics.
    labels : ValuesPrometheusServicemonitorLabels, optional
        Additional labels to add to the ServiceMonitor.
    path : str, optional, default is "/metrics"
        The path to scrape for metrics.
    prometheusInstance : str, optional, default is "default"
        Specifies the `prometheus` label on the created ServiceMonitor. This is
        used when different Prometheus instances have label selectors matching
        different ServiceMonitors.
    scrapeTimeout : str, optional, default is "30s"
        The timeout before a metrics scrape fails.
    targetPort : int, optional, default is 9402
        The target port to set on the ServiceMonitor. This must match the port that the
        cert-manager controller is listening on for metrics.
    """
    [...str]: any
    annotations?: ValuesPrometheusServicemonitorAnnotations
    enabled?: bool
    endpointAdditionalProperties?: ValuesPrometheusServicemonitorEndpointAdditionalProperties
    honorLabels?: bool
    interval?: str
    labels?: ValuesPrometheusServicemonitorLabels
    path?: str
    prometheusInstance?: str
    scrapeTimeout?: str
    targetPort?: int

schema ValuesPrometheusServicemonitorAnnotations:
    r"""
    Additional annotations to add to the ServiceMonitor.
    """
    [...str]: any

schema ValuesPrometheusServicemonitorEndpointAdditionalProperties:
    r"""
    EndpointAdditionalProperties allows setting additional properties on the
    endpoint such as relabelings, metricRelabelings etc.

    For example:
     endpointAdditionalProperties:
      relabelings:
      - action: replace
        sourceLabels:
        - __meta_kubernetes_pod_node_name
        targetLabel: instance

    +docs:property
    """
    [...str]: any

schema ValuesPrometheusServicemonitorLabels:
    r"""
    Additional labels to add to the ServiceMonitor.
    """
    [...str]: any

schema ValuesResources:
    r"""
    Resources to provide to the cert-manager controller pod.

    For example:
     requests:
       cpu: 10m
       memory: 32Mi

    For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    """
    [...str]: any

schema ValuesSecurityContext:
    r"""
    Pod Security Context.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    runAsNonRoot : bool, optional, default is True
    seccompProfile : ValuesSecurityContextSeccompProfile, optional
    """
    [...str]: any
    runAsNonRoot?: bool
    seccompProfile?: ValuesSecurityContextSeccompProfile

schema ValuesSecurityContextSeccompProfile:
    r"""
    ValuesSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, optional, default is "RuntimeDefault"
    """
    [...str]: any
    $type?: str

schema ValuesServiceAccount:
    r"""
    Override the "cert-manager.name" value, which is used to annotate some of
    the resources that are created by this Chart (using "app.kubernetes.io/name").
    NOTE: There are some inconsistencies in the Helm chart when it comes to
    these annotations (some resources use eg. "cainjector.name" which resolves
    to the value "cainjector").
    +docs:property
    nameOverride: "my-cert-manager"

    Attributes
    ----------
    automountServiceAccountToken : bool, optional, default is True
        Automount API credentials for a Service Account.
    create : bool, optional, default is True
        Specifies whether a service account should be created.
    """
    [...str]: any
    automountServiceAccountToken?: bool
    create?: bool

schema ValuesStartupapicheck:
    r"""
    +docs:section=Startup API Check
    This startupapicheck is a Helm post-install hook that waits for the webhook
    endpoints to become available.
    The check is implemented using a Kubernetes Job - if you are injecting mesh
    sidecar proxies into cert-manager pods, ensure that they
    are not injected into this Job's pod. Otherwise, the installation may time out
    owing to the Job never being completed because the sidecar proxy does not exit.
    For more information, see [this note](https://github.com/cert-manager/cert-manager/pull/4414).

    Attributes
    ----------
    affinity : ValuesStartupapicheckAffinity, optional
        A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).
        For example:
          affinity:
            nodeAffinity:
             requiredDuringSchedulingIgnoredDuringExecution:
               nodeSelectorTerms:
               - matchExpressions:
                 - key: foo.bar.com/role
                   operator: In
                   values:
                   - master
    backoffLimit : int, optional, default is 4
        Job backoffLimit
    containerSecurityContext : ValuesStartupapicheckContainerSecurityContext, optional
        Container Security Context to be set on the controller component container.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    enableServiceLinks : bool, optional, default is False
        enableServiceLinks indicates whether information about services should be
        injected into pod's environment variables, matching the syntax of Docker
        links.
    enabled : bool, optional, default is True
        Enables the startup api check.
    extraArgs : [str], optional
        Additional command line flags to pass to startupapicheck binary.
        To see all available flags run `docker run quay.io/jetstack/cert-manager-startupapicheck:<version> --help`.

        Verbose logging is enabled by default so that if startupapicheck fails, you
        can know what exactly caused the failure. Verbose logs include details of
        the webhook URL, IP address and TCP connect errors for example.
        +docs:property
    extraEnv : [any], optional
        Additional environment variables to pass to cert-manager startupapicheck binary.
        For example:
         extraEnv:
         - name: SOME_VAR
           value: 'some value'
    image : ValuesStartupapicheckImage, optional
    jobAnnotations : ValuesStartupapicheckJobAnnotations, optional
        Optional additional annotations to add to the startupapicheck Job.
        +docs:property
    nodeSelector : ValuesStartupapicheckNodeSelector, optional
        The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
        matching labels.
        For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

        This default ensures that Pods are only scheduled to Linux nodes.
        It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
        +docs:property
    podLabels : ValuesStartupapicheckPodLabels, optional
        Optional additional labels to add to the startupapicheck Pods.
    rbac : ValuesStartupapicheckRbac, optional
    resources : ValuesStartupapicheckResources, optional
        Resources to provide to the cert-manager controller pod.

        For example:
         requests:
           cpu: 10m
           memory: 32Mi

        For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    securityContext : ValuesStartupapicheckSecurityContext, optional
        Pod Security Context to be set on the startupapicheck component Pod.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    serviceAccount : ValuesStartupapicheckServiceAccount, optional
        Automounting API credentials for a particular pod.
        +docs:property
        automountServiceAccountToken: true
    timeout : str, optional, default is "1m"
        Timeout for 'kubectl check api' command.
    tolerations : [any], optional
        A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).

        For example:
          tolerations:
          - key: foo.bar.com/role
            operator: Equal
            value: master
            effect: NoSchedule
    volumeMounts : [any], optional
        Additional volume mounts to add to the cert-manager controller container.
    volumes : [any], optional
        Additional volumes to add to the cert-manager controller pod.
    """
    [...str]: any
    affinity?: ValuesStartupapicheckAffinity
    backoffLimit?: int
    containerSecurityContext?: ValuesStartupapicheckContainerSecurityContext
    enableServiceLinks?: bool
    enabled?: bool
    extraArgs?: [str]
    extraEnv?: [any]
    image?: ValuesStartupapicheckImage
    jobAnnotations?: ValuesStartupapicheckJobAnnotations
    nodeSelector?: ValuesStartupapicheckNodeSelector
    podLabels?: ValuesStartupapicheckPodLabels
    rbac?: ValuesStartupapicheckRbac
    resources?: ValuesStartupapicheckResources
    securityContext?: ValuesStartupapicheckSecurityContext
    serviceAccount?: ValuesStartupapicheckServiceAccount
    timeout?: str
    tolerations?: [any]
    volumeMounts?: [any]
    volumes?: [any]

schema ValuesStartupapicheckAffinity:
    r"""
    A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).
    For example:
      affinity:
        nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: foo.bar.com/role
               operator: In
               values:
               - master
    """
    [...str]: any

schema ValuesStartupapicheckContainerSecurityContext:
    r"""
    Container Security Context to be set on the controller component container.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
    capabilities : ValuesStartupapicheckContainerSecurityContextCapabilities, optional
    readOnlyRootFilesystem : bool, optional, default is True
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    capabilities?: ValuesStartupapicheckContainerSecurityContextCapabilities
    readOnlyRootFilesystem?: bool

schema ValuesStartupapicheckContainerSecurityContextCapabilities:
    r"""
    ValuesStartupapicheckContainerSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], optional
    """
    [...str]: any
    drop?: [str]

schema ValuesStartupapicheckImage:
    r"""
    ValuesStartupapicheckImage

    Attributes
    ----------
    pullPolicy : str, optional, default is "IfNotPresent"
        Kubernetes imagePullPolicy on Deployment.
    repository : str, optional, default is "quay.io/jetstack/cert-manager-startupapicheck"
        The container image for the cert-manager startupapicheck.
        +docs:property
    """
    [...str]: any
    pullPolicy?: str
    repository?: str

schema ValuesStartupapicheckJobAnnotations:
    r"""
    Optional additional annotations to add to the startupapicheck Job.
    +docs:property

    Attributes
    ----------
    "helm.sh/hook" : str, optional, default is "post-install"
    "helm.sh/hook-delete-policy" : str, optional, default is "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight" : str, optional, default is "1"
    """
    [...str]: any
    "helm.sh/hook"?: str
    "helm.sh/hook-delete-policy"?: str
    "helm.sh/hook-weight"?: str

schema ValuesStartupapicheckNodeSelector:
    r"""
    The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
    matching labels.
    For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

    This default ensures that Pods are only scheduled to Linux nodes.
    It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
    +docs:property

    Attributes
    ----------
    "kubernetes.io/os" : str, optional, default is "linux"
    """
    [...str]: any
    "kubernetes.io/os"?: str

schema ValuesStartupapicheckPodLabels:
    r"""
    Optional additional labels to add to the startupapicheck Pods.
    """
    [...str]: any

schema ValuesStartupapicheckRbac:
    r"""
    ValuesStartupapicheckRbac

    Attributes
    ----------
    annotations : ValuesStartupapicheckRbacAnnotations, optional
        annotations for the startup API Check job RBAC and PSP resources.
        +docs:property
    """
    [...str]: any
    annotations?: ValuesStartupapicheckRbacAnnotations

schema ValuesStartupapicheckRbacAnnotations:
    r"""
    annotations for the startup API Check job RBAC and PSP resources.
    +docs:property

    Attributes
    ----------
    "helm.sh/hook" : str, optional, default is "post-install"
    "helm.sh/hook-delete-policy" : str, optional, default is "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight" : str, optional, default is "-5"
    """
    [...str]: any
    "helm.sh/hook"?: str
    "helm.sh/hook-delete-policy"?: str
    "helm.sh/hook-weight"?: str

schema ValuesStartupapicheckResources:
    r"""
    Resources to provide to the cert-manager controller pod.

    For example:
     requests:
       cpu: 10m
       memory: 32Mi

    For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    """
    [...str]: any

schema ValuesStartupapicheckSecurityContext:
    r"""
    Pod Security Context to be set on the startupapicheck component Pod.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    runAsNonRoot : bool, optional, default is True
    seccompProfile : ValuesStartupapicheckSecurityContextSeccompProfile, optional
    """
    [...str]: any
    runAsNonRoot?: bool
    seccompProfile?: ValuesStartupapicheckSecurityContextSeccompProfile

schema ValuesStartupapicheckSecurityContextSeccompProfile:
    r"""
    ValuesStartupapicheckSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, optional, default is "RuntimeDefault"
    """
    [...str]: any
    $type?: str

schema ValuesStartupapicheckServiceAccount:
    r"""
    Automounting API credentials for a particular pod.
    +docs:property
    automountServiceAccountToken: true

    Attributes
    ----------
    annotations : ValuesStartupapicheckServiceAccountAnnotations, optional
        Optional additional annotations to add to the Job's Service Account.
        +docs:property
    automountServiceAccountToken : bool, optional, default is True
        Automount API credentials for a Service Account.
        +docs:property
    create : bool, optional, default is True
        Specifies whether a service account should be created.
    """
    [...str]: any
    annotations?: ValuesStartupapicheckServiceAccountAnnotations
    automountServiceAccountToken?: bool
    create?: bool

schema ValuesStartupapicheckServiceAccountAnnotations:
    r"""
    Optional additional annotations to add to the Job's Service Account.
    +docs:property

    Attributes
    ----------
    "helm.sh/hook" : str, optional, default is "post-install"
    "helm.sh/hook-delete-policy" : str, optional, default is "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight" : str, optional, default is "-5"
    """
    [...str]: any
    "helm.sh/hook"?: str
    "helm.sh/hook-delete-policy"?: str
    "helm.sh/hook-weight"?: str

schema ValuesStrategy:
    r"""
    Deployment update strategy for the cert-manager controller deployment.
    For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).

    For example:
     strategy:
       type: RollingUpdate
       rollingUpdate:
         maxSurge: 0
         maxUnavailable: 1
    """
    [...str]: any

schema ValuesWebhook:
    r"""
    +docs:section=Webhook

    Attributes
    ----------
    affinity : ValuesWebhookAffinity, optional
        A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

        For example:
          affinity:
            nodeAffinity:
             requiredDuringSchedulingIgnoredDuringExecution:
               nodeSelectorTerms:
               - matchExpressions:
                 - key: foo.bar.com/role
                   operator: In
                   values:
                   - master
    config : ValuesWebhookConfig, optional
        This is used to configure options for the webhook pod.
        This allows setting options that would usually be provided using flags.

        If `apiVersion` and `kind` are unspecified they default to the current latest
        version (currently `webhook.config.cert-manager.io/v1alpha1`). You can pin
        the version by specifying the `apiVersion` yourself.

        For example:
         apiVersion: webhook.config.cert-manager.io/v1alpha1
         kind: WebhookConfiguration
         # The port that the webhook listens on for requests.
         # In GKE private clusters, by default Kubernetes apiservers are allowed to
         # talk to the cluster nodes only on 443 and 10250. Configuring
         # securePort: 10250 therefore will work out-of-the-box without needing to add firewall
         # rules or requiring NET_BIND_SERVICE capabilities to bind port numbers < 1000.
         # This should be uncommented and set as a default by the chart once
         # the apiVersion of WebhookConfiguration graduates beyond v1alpha1.
         securePort: 10250
         # Configure the metrics server for TLS
         # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
         metricsTLSConfig:
           dynamic:
             secretNamespace: "cert-manager"
             secretName: "cert-manager-metrics-ca"
             dnsNames:
             - cert-manager-metrics
    containerSecurityContext : ValuesWebhookContainerSecurityContext, optional
        Container Security Context to be set on the webhook component container.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    enableServiceLinks : bool, optional, default is False
        enableServiceLinks indicates whether information about services should be
        injected into the pod's environment variables, matching the syntax of Docker
        links.
    extraArgs : [any], optional
        Additional command line flags to pass to cert-manager webhook binary.
        To see all available flags run `docker run quay.io/jetstack/cert-manager-webhook:<version> --help`.
    extraEnv : [any], optional
        Additional environment variables to pass to cert-manager webhook binary.
        For example:
         extraEnv:
         - name: SOME_VAR
           value: 'some value'
    featureGates : str, optional, default is ""
        Comma separated list of feature gates that should be enabled on the
        webhook pod.
    hostNetwork : bool, optional, default is False
        Specifies if the webhook should be started in hostNetwork mode.

        Required for use in some managed kubernetes clusters (such as AWS EKS) with custom
        CNI (such as calico), because control-plane managed by AWS cannot communicate
        with pods' IP CIDR and admission webhooks are not working

        Since the default port for the webhook conflicts with kubelet on the host
        network, `webhook.securePort` should be changed to an available port if
        running in hostNetwork mode.
    image : ValuesWebhookImage, optional
    livenessProbe : ValuesWebhookLivenessProbe, optional
        Liveness probe values.
        For more information, see [Container probes](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).

        +docs:property
    mutatingWebhookConfiguration : ValuesWebhookMutatingWebhookConfiguration, optional
    networkPolicy : ValuesWebhookNetworkPolicy, optional
        Enables default network policies for webhooks.
    nodeSelector : ValuesWebhookNodeSelector, optional
        The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
        matching labels.
        For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

        This default ensures that Pods are only scheduled to Linux nodes.
        It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
        +docs:property
    podDisruptionBudget : ValuesWebhookPodDisruptionBudget, optional
    podLabels : ValuesWebhookPodLabels, optional
        Optional additional labels to add to the Webhook Pods.
    readinessProbe : ValuesWebhookReadinessProbe, optional
        Readiness probe values.
        For more information, see [Container probes](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).

        +docs:property
    replicaCount : int, optional, default is 1
        Number of replicas of the cert-manager webhook to run.

        The default is 1, but in production set this to 2 or 3 to provide high
        availability.

        If `replicas > 1`, consider setting `webhook.podDisruptionBudget.enabled=true`.
    resources : ValuesWebhookResources, optional
        Resources to provide to the cert-manager webhook pod.

        For example:
         requests:
           cpu: 10m
           memory: 32Mi

        For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    securePort : int, optional, default is 10250
        The port that the webhook listens on for requests.
        In GKE private clusters, by default Kubernetes apiservers are allowed to
        talk to the cluster nodes only on 443 and 10250. Configuring
        securePort: 10250, therefore will work out-of-the-box without needing to add firewall
        rules or requiring NET_BIND_SERVICE capabilities to bind port numbers <1000.
    securityContext : ValuesWebhookSecurityContext, optional
        Pod Security Context to be set on the webhook component Pod.
        For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
        +docs:property
    serviceAccount : ValuesWebhookServiceAccount, optional
    serviceIPFamilies : [any], optional
        Optionally set the IP families for the controller Service that should be supported, in the order in which they should be applied to ClusterIP. Can be IPv4 and/or IPv6.
    serviceIPFamilyPolicy : str, optional, default is ""
        Optionally set the IP family policy for the controller Service to configure dual-stack; see [Configure dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services).
    serviceLabels : ValuesWebhookServiceLabels, optional
        Optional additional labels to add to the Webhook Service.
    serviceType : str, optional, default is "ClusterIP"
        Specifies how the service should be handled. Useful if you want to expose the
        webhook outside of the cluster. In some cases, the control plane cannot
        reach internal services.
    strategy : ValuesWebhookStrategy, optional
        The update strategy for the cert-manager webhook deployment.
        For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)

        For example:
         strategy:
           type: RollingUpdate
           rollingUpdate:
             maxSurge: 0
             maxUnavailable: 1
    timeoutSeconds : int, optional, default is 30
        The number of seconds the API server should wait for the webhook to respond before treating the call as a failure.
        The value must be between 1 and 30 seconds. For more information, see
        [Validating webhook configuration v1](https://kubernetes.io/docs/reference/kubernetes-api/extend-resources/validating-webhook-configuration-v1/).

        The default is set to the maximum value of 30 seconds as
        users sometimes report that the connection between the K8S API server and
        the cert-manager webhook server times out.
        If *this* timeout is reached, the error message will be "context deadline exceeded",
        which doesn't help the user diagnose what phase of the HTTPS connection timed out.
        For example, it could be during DNS resolution, TCP connection, TLS
        negotiation, HTTP negotiation, or slow HTTP response from the webhook
        server.
        By setting this timeout to its maximum value the underlying timeout error
        message has more chance of being returned to the end user.
    tolerations : [any], optional
        A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).

        For example:
          tolerations:
          - key: foo.bar.com/role
            operator: Equal
            value: master
            effect: NoSchedule
    topologySpreadConstraints : [any], optional
        A list of Kubernetes TopologySpreadConstraints, if required. For more information, see [Topology spread constraint v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#topologyspreadconstraint-v1-core).

        For example:
          topologySpreadConstraints:
          - maxSkew: 2
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: cert-manager
                app.kubernetes.io/component: controller
    url : ValuesWebhookUrl, optional
        Overrides the mutating webhook and validating webhook so they reach the webhook
        service using the `url` field instead of a service.
    validatingWebhookConfiguration : ValuesWebhookValidatingWebhookConfiguration, optional
        Optional additional annotations to add to the webhook ValidatingWebhookConfiguration.
        +docs:property
        validatingWebhookConfigurationAnnotations: {}
    volumeMounts : [any], optional
        Additional volume mounts to add to the cert-manager controller container.
    volumes : [any], optional
        Additional volumes to add to the cert-manager controller pod.
    """
    [...str]: any
    affinity?: ValuesWebhookAffinity
    config?: ValuesWebhookConfig
    containerSecurityContext?: ValuesWebhookContainerSecurityContext
    enableServiceLinks?: bool
    extraArgs?: [any]
    extraEnv?: [any]
    featureGates?: str
    hostNetwork?: bool
    image?: ValuesWebhookImage
    livenessProbe?: ValuesWebhookLivenessProbe
    mutatingWebhookConfiguration?: ValuesWebhookMutatingWebhookConfiguration
    networkPolicy?: ValuesWebhookNetworkPolicy
    nodeSelector?: ValuesWebhookNodeSelector
    podDisruptionBudget?: ValuesWebhookPodDisruptionBudget
    podLabels?: ValuesWebhookPodLabels
    readinessProbe?: ValuesWebhookReadinessProbe
    replicaCount?: int
    resources?: ValuesWebhookResources
    securePort?: int
    securityContext?: ValuesWebhookSecurityContext
    serviceAccount?: ValuesWebhookServiceAccount
    serviceIPFamilies?: [any]
    serviceIPFamilyPolicy?: str
    serviceLabels?: ValuesWebhookServiceLabels
    serviceType?: str
    strategy?: ValuesWebhookStrategy
    timeoutSeconds?: int
    tolerations?: [any]
    topologySpreadConstraints?: [any]
    url?: ValuesWebhookUrl
    validatingWebhookConfiguration?: ValuesWebhookValidatingWebhookConfiguration
    volumeMounts?: [any]
    volumes?: [any]

schema ValuesWebhookAffinity:
    r"""
    A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).

    For example:
      affinity:
        nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: foo.bar.com/role
               operator: In
               values:
               - master
    """
    [...str]: any

schema ValuesWebhookConfig:
    r"""
    This is used to configure options for the webhook pod.
    This allows setting options that would usually be provided using flags.

    If `apiVersion` and `kind` are unspecified they default to the current latest
    version (currently `webhook.config.cert-manager.io/v1alpha1`). You can pin
    the version by specifying the `apiVersion` yourself.

    For example:
     apiVersion: webhook.config.cert-manager.io/v1alpha1
     kind: WebhookConfiguration
     # The port that the webhook listens on for requests.
     # In GKE private clusters, by default Kubernetes apiservers are allowed to
     # talk to the cluster nodes only on 443 and 10250. Configuring
     # securePort: 10250 therefore will work out-of-the-box without needing to add firewall
     # rules or requiring NET_BIND_SERVICE capabilities to bind port numbers < 1000.
     # This should be uncommented and set as a default by the chart once
     # the apiVersion of WebhookConfiguration graduates beyond v1alpha1.
     securePort: 10250
     # Configure the metrics server for TLS
     # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
     metricsTLSConfig:
       dynamic:
         secretNamespace: "cert-manager"
         secretName: "cert-manager-metrics-ca"
         dnsNames:
         - cert-manager-metrics
    """
    [...str]: any

schema ValuesWebhookContainerSecurityContext:
    r"""
    Container Security Context to be set on the webhook component container.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    allowPrivilegeEscalation : bool, optional, default is False
    capabilities : ValuesWebhookContainerSecurityContextCapabilities, optional
    readOnlyRootFilesystem : bool, optional, default is True
    """
    [...str]: any
    allowPrivilegeEscalation?: bool
    capabilities?: ValuesWebhookContainerSecurityContextCapabilities
    readOnlyRootFilesystem?: bool

schema ValuesWebhookContainerSecurityContextCapabilities:
    r"""
    ValuesWebhookContainerSecurityContextCapabilities

    Attributes
    ----------
    drop : [str], optional
    """
    [...str]: any
    drop?: [str]

schema ValuesWebhookImage:
    r"""
    ValuesWebhookImage

    Attributes
    ----------
    pullPolicy : str, optional, default is "IfNotPresent"
        Kubernetes imagePullPolicy on Deployment.
    repository : str, optional, default is "quay.io/jetstack/cert-manager-webhook"
        The container image for the cert-manager webhook
        +docs:property
    """
    [...str]: any
    pullPolicy?: str
    repository?: str

schema ValuesWebhookLivenessProbe:
    r"""
    Liveness probe values.
    For more information, see [Container probes](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).

    +docs:property

    Attributes
    ----------
    failureThreshold : int, optional, default is 3
    initialDelaySeconds : int, optional, default is 60
    periodSeconds : int, optional, default is 10
    successThreshold : int, optional, default is 1
    timeoutSeconds : int, optional, default is 1
    """
    [...str]: any
    failureThreshold?: int
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    timeoutSeconds?: int

schema ValuesWebhookMutatingWebhookConfiguration:
    r"""
    ValuesWebhookMutatingWebhookConfiguration

    Attributes
    ----------
    namespaceSelector : ValuesWebhookMutatingWebhookConfigurationNamespaceSelector, optional
        Configure spec.namespaceSelector for mutating webhooks.
        +docs:property
    """
    [...str]: any
    namespaceSelector?: ValuesWebhookMutatingWebhookConfigurationNamespaceSelector

schema ValuesWebhookMutatingWebhookConfigurationNamespaceSelector:
    r"""
    Configure spec.namespaceSelector for mutating webhooks.
    +docs:property
    """
    [...str]: any

schema ValuesWebhookNetworkPolicy:
    r"""
    Enables default network policies for webhooks.

    Attributes
    ----------
    egress : [ValuesWebhookNetworkPolicyEgressItems0], optional
        Egress rule for the webhook network policy. By default, it allows all
        outbound traffic to ports 80 and 443, as well as DNS ports.
        +docs:property
    enabled : bool, optional, default is False
        Create network policies for the webhooks.
    ingress : [ValuesWebhookNetworkPolicyIngressItems0], optional
        Ingress rule for the webhook network policy. By default, it allows all
        inbound traffic.
        +docs:property
    """
    [...str]: any
    egress?: [ValuesWebhookNetworkPolicyEgressItems0]
    enabled?: bool
    ingress?: [ValuesWebhookNetworkPolicyIngressItems0]

schema ValuesWebhookNetworkPolicyEgressItems0:
    r"""
    ValuesWebhookNetworkPolicyEgressItems0

    Attributes
    ----------
    ports : [ValuesWebhookNetworkPolicyEgressItems0PortsItems0], optional
    to : [ValuesWebhookNetworkPolicyEgressItems0ToItems0], optional
    """
    [...str]: any
    ports?: [ValuesWebhookNetworkPolicyEgressItems0PortsItems0]
    to?: [ValuesWebhookNetworkPolicyEgressItems0ToItems0]

schema ValuesWebhookNetworkPolicyEgressItems0PortsItems0:
    r"""
    ValuesWebhookNetworkPolicyEgressItems0PortsItems0

    Attributes
    ----------
    port : int, optional, default is 6443
    $protocol : str, optional, default is "TCP"
    """
    [...str]: any
    port?: int
    $protocol?: str

schema ValuesWebhookNetworkPolicyEgressItems0ToItems0:
    r"""
    ValuesWebhookNetworkPolicyEgressItems0ToItems0

    Attributes
    ----------
    ipBlock : ValuesWebhookNetworkPolicyEgressItems0ToItems0IpBlock, optional
    """
    [...str]: any
    ipBlock?: ValuesWebhookNetworkPolicyEgressItems0ToItems0IpBlock

schema ValuesWebhookNetworkPolicyEgressItems0ToItems0IpBlock:
    r"""
    ValuesWebhookNetworkPolicyEgressItems0ToItems0IpBlock

    Attributes
    ----------
    cidr : str, optional, default is "0.0.0.0/0"
    """
    [...str]: any
    cidr?: str

schema ValuesWebhookNetworkPolicyIngressItems0:
    r"""
    ValuesWebhookNetworkPolicyIngressItems0

    Attributes
    ----------
    from : [ValuesWebhookNetworkPolicyIngressItems0FromItems0], optional
    """
    [...str]: any
    from?: [ValuesWebhookNetworkPolicyIngressItems0FromItems0]

schema ValuesWebhookNetworkPolicyIngressItems0FromItems0:
    r"""
    ValuesWebhookNetworkPolicyIngressItems0FromItems0

    Attributes
    ----------
    ipBlock : ValuesWebhookNetworkPolicyIngressItems0FromItems0IpBlock, optional
    """
    [...str]: any
    ipBlock?: ValuesWebhookNetworkPolicyIngressItems0FromItems0IpBlock

schema ValuesWebhookNetworkPolicyIngressItems0FromItems0IpBlock:
    r"""
    ValuesWebhookNetworkPolicyIngressItems0FromItems0IpBlock

    Attributes
    ----------
    cidr : str, optional, default is "0.0.0.0/0"
    """
    [...str]: any
    cidr?: str

schema ValuesWebhookNodeSelector:
    r"""
    The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
    matching labels.
    For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).

    This default ensures that Pods are only scheduled to Linux nodes.
    It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
    +docs:property

    Attributes
    ----------
    "kubernetes.io/os" : str, optional, default is "linux"
    """
    [...str]: any
    "kubernetes.io/os"?: str

schema ValuesWebhookPodDisruptionBudget:
    r"""
    ValuesWebhookPodDisruptionBudget

    Attributes
    ----------
    enabled : bool, optional, default is False
        Enable or disable the PodDisruptionBudget resource.

        This prevents downtime during voluntary disruptions such as during a Node upgrade.
        For example, the PodDisruptionBudget will block `kubectl drain`
        if it is used on the Node where the only remaining cert-manager
        Pod is currently running.
    """
    [...str]: any
    enabled?: bool

schema ValuesWebhookPodLabels:
    r"""
    Optional additional labels to add to the Webhook Pods.
    """
    [...str]: any

schema ValuesWebhookReadinessProbe:
    r"""
    Readiness probe values.
    For more information, see [Container probes](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes).

    +docs:property

    Attributes
    ----------
    failureThreshold : int, optional, default is 3
    initialDelaySeconds : int, optional, default is 5
    periodSeconds : int, optional, default is 5
    successThreshold : int, optional, default is 1
    timeoutSeconds : int, optional, default is 1
    """
    [...str]: any
    failureThreshold?: int
    initialDelaySeconds?: int
    periodSeconds?: int
    successThreshold?: int
    timeoutSeconds?: int

schema ValuesWebhookResources:
    r"""
    Resources to provide to the cert-manager webhook pod.

    For example:
     requests:
       cpu: 10m
       memory: 32Mi

    For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    """
    [...str]: any

schema ValuesWebhookSecurityContext:
    r"""
    Pod Security Context to be set on the webhook component Pod.
    For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
    +docs:property

    Attributes
    ----------
    runAsNonRoot : bool, optional, default is True
    seccompProfile : ValuesWebhookSecurityContextSeccompProfile, optional
    """
    [...str]: any
    runAsNonRoot?: bool
    seccompProfile?: ValuesWebhookSecurityContextSeccompProfile

schema ValuesWebhookSecurityContextSeccompProfile:
    r"""
    ValuesWebhookSecurityContextSeccompProfile

    Attributes
    ----------
    $type : str, optional, default is "RuntimeDefault"
    """
    [...str]: any
    $type?: str

schema ValuesWebhookServiceAccount:
    r"""
    ValuesWebhookServiceAccount

    Attributes
    ----------
    automountServiceAccountToken : bool, optional, default is True
        Automount API credentials for a Service Account.
    create : bool, optional, default is True
        Specifies whether a service account should be created.
    """
    [...str]: any
    automountServiceAccountToken?: bool
    create?: bool

schema ValuesWebhookServiceLabels:
    r"""
    Optional additional labels to add to the Webhook Service.
    """
    [...str]: any

schema ValuesWebhookStrategy:
    r"""
    The update strategy for the cert-manager webhook deployment.
    For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)

    For example:
     strategy:
       type: RollingUpdate
       rollingUpdate:
         maxSurge: 0
         maxUnavailable: 1
    """
    [...str]: any

schema ValuesWebhookUrl:
    r"""
    Overrides the mutating webhook and validating webhook so they reach the webhook
    service using the `url` field instead of a service.
    """
    [...str]: any

schema ValuesWebhookValidatingWebhookConfiguration:
    r"""
    Optional additional annotations to add to the webhook ValidatingWebhookConfiguration.
    +docs:property
    validatingWebhookConfigurationAnnotations: {}

    Attributes
    ----------
    namespaceSelector : ValuesWebhookValidatingWebhookConfigurationNamespaceSelector, optional
        Configure spec.namespaceSelector for validating webhooks.
        +docs:property
    """
    [...str]: any
    namespaceSelector?: ValuesWebhookValidatingWebhookConfigurationNamespaceSelector

schema ValuesWebhookValidatingWebhookConfigurationNamespaceSelector:
    r"""
    Configure spec.namespaceSelector for validating webhooks.
    +docs:property

    Attributes
    ----------
    matchExpressions : [ValuesWebhookValidatingWebhookConfigurationNamespaceSelectorMatchExpressionsItems0], optional
    """
    [...str]: any
    matchExpressions?: [ValuesWebhookValidatingWebhookConfigurationNamespaceSelectorMatchExpressionsItems0]

schema ValuesWebhookValidatingWebhookConfigurationNamespaceSelectorMatchExpressionsItems0:
    r"""
    ValuesWebhookValidatingWebhookConfigurationNamespaceSelectorMatchExpressionsItems0

    Attributes
    ----------
    key : str, optional, default is "cert-manager.io/disable-validation"
    operator : str, optional, default is "NotIn"
    values : [str], optional
    """
    [...str]: any
    key?: str
    operator?: str
    values?: [str]

