"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema Backend:
    r"""
    Backend allows the user to configure the endpoints of a backend and
    the behavior of the connection from Envoy Proxy to the backend.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Backend", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1BackendSpec, default is Undefined, required
        spec
    status : GatewayEnvoyproxyIoV1alpha1BackendStatus, default is Undefined, optional
        status
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "Backend" = "Backend"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1BackendSpec

    status?: GatewayEnvoyproxyIoV1alpha1BackendStatus

schema GatewayEnvoyproxyIoV1alpha1BackendSpec:
    r"""
    Spec defines the desired state of Backend.

    Attributes
    ----------
    appProtocols : [str], default is Undefined, optional
        AppProtocols defines the application protocols to be supported when connecting to the backend.
    endpoints : [GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0], default is Undefined, optional
        Endpoints defines the endpoints to be used when connecting to the backend.
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    tls : GatewayEnvoyproxyIoV1alpha1BackendSpecTLS, default is Undefined, optional
        tls
    $type : str, default is "Endpoints", optional
        Type defines the type of the backend. Defaults to "Endpoints"
    """
    appProtocols?: [str]
    endpoints?: [GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0]
    fallback?: bool
    tls?: GatewayEnvoyproxyIoV1alpha1BackendSpecTLS
    $type?: "Endpoints" | "DynamicResolver" = "Endpoints"

    check:
        len(endpoints) >= 1 if endpoints
        len(endpoints) <= 64 if endpoints

schema GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0:
    r"""
    BackendEndpoint describes a backend endpoint, which can be either a fully-qualified domain name, IP address or unix domain socket
    corresponding to Envoy's Address: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#config-core-v3-address

    Attributes
    ----------
    fqdn : GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Fqdn, default is Undefined, optional
        fqdn
    hostname : str, default is Undefined, optional
        Hostname defines an optional hostname for the backend endpoint.
    ip : GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0IP, default is Undefined, optional
        ip
    unix : GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Unix, default is Undefined, optional
        unix
    zone : str, default is Undefined, optional
        Zone defines the service zone of the backend endpoint.
    """
    fqdn?: GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Fqdn
    hostname?: str
    ip?: GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0IP
    unix?: GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Unix
    zone?: str

    check:
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname

schema GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Fqdn:
    r"""
    FQDN defines a FQDN endpoint

    Attributes
    ----------
    hostname : str, default is Undefined, required
        Hostname defines the FQDN hostname of the backend endpoint.
    port : int, default is Undefined, required
        Port defines the port of the backend endpoint.
    """
    hostname: str

    port: int

    check:
        len(hostname) <= 253
        len(hostname) >= 1
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        port <= 65535
        port >= 0

schema GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0IP:
    r"""
    IP defines an IP endpoint. Supports both IPv4 and IPv6 addresses.

    Attributes
    ----------
    address : str, default is Undefined, required
        Address defines the IP address of the backend endpoint.
        Supports both IPv4 and IPv6 addresses.
    port : int, default is Undefined, required
        Port defines the port of the backend endpoint.
    """
    address: str

    port: int

    check:
        len(address) <= 45
        len(address) >= 3
        _regex_match(str(address), r"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([0-9a-fA-F]{1,4}:){1,7}[0-9a-fA-F]{1,4}|::|(([0-9a-fA-F]{1,4}:){0,5})?(:[0-9a-fA-F]{1,4}){1,2})$")
        port <= 65535
        port >= 0

schema GatewayEnvoyproxyIoV1alpha1BackendSpecEndpointsItems0Unix:
    r"""
    Unix defines the unix domain socket endpoint

    Attributes
    ----------
    path : str, default is Undefined, required
        Path defines the unix domain socket path of the backend endpoint.
        The path length must not exceed 108 characters.
    """
    path: str

schema GatewayEnvoyproxyIoV1alpha1BackendSpecTLS:
    r"""
    TLS defines the TLS settings for the backend.
    If TLS is specified here and a BackendTLSPolicy is also configured for the backend, the final TLS settings will
    be a merge of both configurations. In case of overlapping fields, the values defined in the BackendTLSPolicy will
    take precedence.

    Attributes
    ----------
    caCertificateRefs : [GatewayEnvoyproxyIoV1alpha1BackendSpecTLSCaCertificateRefsItems0], default is Undefined, optional
        CACertificateRefs contains one or more references to Kubernetes objects that
        contain TLS certificates of the Certificate Authorities that can be used
        as a trust anchor to validate the certificates presented by the backend.

        A single reference to a Kubernetes ConfigMap or a Kubernetes Secret,
        with the CA certificate in a key named `ca.crt` is currently supported.

        If CACertificateRefs is empty or unspecified, then WellKnownCACertificates must be
        specified. Only one of CACertificateRefs or WellKnownCACertificates may be specified,
        not both.
    insecureSkipVerify : bool, default is Undefined, optional
        InsecureSkipVerify indicates whether the upstream's certificate verification
        should be skipped. Defaults to "false".
    wellKnownCACertificates : str, default is Undefined, optional
        WellKnownCACertificates specifies whether system CA certificates may be used in
        the TLS handshake between the gateway and backend pod.

        If WellKnownCACertificates is unspecified or empty (""), then CACertificateRefs
        must be specified with at least one entry for a valid configuration. Only one of
        CACertificateRefs or WellKnownCACertificates may be specified, not both.
    """
    caCertificateRefs?: [GatewayEnvoyproxyIoV1alpha1BackendSpecTLSCaCertificateRefsItems0]
    insecureSkipVerify?: bool = False
    wellKnownCACertificates?: "System"

    check:
        len(caCertificateRefs) <= 8 if caCertificateRefs

schema GatewayEnvoyproxyIoV1alpha1BackendSpecTLSCaCertificateRefsItems0:
    r"""
    LocalObjectReference identifies an API object within the namespace of the
    referrer.
    The API object must be valid in the cluster; the Group and Kind must
    be registered in the cluster for this reference to be valid.

    References to objects with invalid Group and Kind are not valid, and must
    be rejected by the implementation, with appropriate Conditions set
    on the containing object.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is Undefined, required
        Kind is kind of the referent. For example "HTTPRoute" or "Service".
    name : str, default is Undefined, required
        Name is the name of the referent.
    """
    group: str

    kind: str

    name: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1BackendStatus:
    r"""
    Status defines the current status of Backend.

    Attributes
    ----------
    conditions : [GatewayEnvoyproxyIoV1alpha1BackendStatusConditionsItems0], default is Undefined, optional
        Conditions describe the current conditions of the Backend.
    """
    conditions?: [GatewayEnvoyproxyIoV1alpha1BackendStatusConditionsItems0]

    check:
        len(conditions) <= 8 if conditions

schema GatewayEnvoyproxyIoV1alpha1BackendStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

