"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema ClientTrafficPolicy:
    r"""
    ClientTrafficPolicy allows the user to configure the behavior of the connection
    between the downstream client and Envoy Proxy listener.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClientTrafficPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpec, default is Undefined, required
        spec
    status : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatus, default is Undefined, optional
        status
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "ClientTrafficPolicy" = "ClientTrafficPolicy"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpec

    status?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatus

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpec:
    r"""
    Spec defines the desired state of ClientTrafficPolicy.

    Attributes
    ----------
    clientIPDetection : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetection, default is Undefined, optional
        client IP detection
    connection : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnection, default is Undefined, optional
        connection
    enableProxyProtocol : bool, default is Undefined, optional
        EnableProxyProtocol interprets the ProxyProtocol header and adds the
        Client Address into the X-Forwarded-For header.
        Note Proxy Protocol must be present when this field is set, else the connection
        is closed.

        Deprecated: Use ProxyProtocol instead.
    headers : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeaders, default is Undefined, optional
        headers
    healthCheck : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHealthCheck, default is Undefined, optional
        health check
    http1 : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1, default is Undefined, optional
        http1
    http2 : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp2, default is Undefined, optional
        http2
    http3 : any, default is Undefined, optional
        HTTP3 provides HTTP/3 configuration on the listener.
    path : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecPath, default is Undefined, optional
        path
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecProxyProtocol, default is Undefined, optional
        proxy protocol
    targetRef : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRef, default is Undefined, optional
        target ref
    targetRefs : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRefsItems0], default is Undefined, optional
        TargetRefs are the names of the Gateway resources this policy
        is being attached to.
    targetSelectors : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0], default is Undefined, optional
        TargetSelectors allow targeting resources for this policy based on labels
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeout, default is Undefined, optional
        timeout
    tls : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLS, default is Undefined, optional
        tls
    """
    clientIPDetection?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetection
    connection?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnection
    enableProxyProtocol?: bool
    headers?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeaders
    healthCheck?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHealthCheck
    http1?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1
    http2?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp2
    http3?: any
    path?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecPath
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecProxyProtocol
    targetRef?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRef
    targetRefs?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRefsItems0]
    targetSelectors?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0]
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeout
    tls?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLS

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetection:
    r"""
    ClientIPDetectionSettings provides configuration for determining the original client IP address for requests.

    Attributes
    ----------
    customHeader : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionCustomHeader, default is Undefined, optional
        custom header
    xForwardedFor : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionXForwardedFor, default is Undefined, optional
        x forwarded for
    """
    customHeader?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionCustomHeader
    xForwardedFor?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionXForwardedFor

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionCustomHeader:
    r"""
    CustomHeader provides configuration for determining the client IP address for a request based on
    a trusted custom HTTP header. This uses the custom_header original IP detection extension.
    Refer to https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/http/original_ip_detection/custom_header/v3/custom_header.proto
    for more details.

    Attributes
    ----------
    failClosed : bool, default is Undefined, optional
        FailClosed is a switch used to control the flow of traffic when client IP detection
        fails. If set to true, the listener will respond with 403 Forbidden when the client
        IP address cannot be determined.
    name : str, default is Undefined, required
        Name of the header containing the original downstream remote address, if present.
    """
    failClosed?: bool
    name: str

    check:
        len(name) <= 255
        len(name) >= 1
        _regex_match(str(name), r"^[A-Za-z0-9-]+$")

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecClientIPDetectionXForwardedFor:
    r"""
    XForwardedForSettings provides configuration for using X-Forwarded-For headers for determining the client IP address.

    Attributes
    ----------
    numTrustedHops : int, default is Undefined, optional
        NumTrustedHops controls the number of additional ingress proxy hops from the right side of XFF HTTP
        headers to trust when determining the origin client's IP address.
        Only one of NumTrustedHops and TrustedCIDRs must be set.
    trustedCIDRs : [str], default is Undefined, optional
        TrustedCIDRs is a list of CIDR ranges to trust when evaluating
        the remote IP address to determine the original clientâ€™s IP address.
        When the remote IP address matches a trusted CIDR and the x-forwarded-for header was sent,
        each entry in the x-forwarded-for header is evaluated from right to left
        and the first public non-trusted address is used as the original client address.
        If all addresses in x-forwarded-for are within the trusted list, the first (leftmost) entry is used.
        Only one of NumTrustedHops and TrustedCIDRs must be set.
    """
    numTrustedHops?: int
    trustedCIDRs?: [str]

    check:
        len(trustedCIDRs) >= 1 if trustedCIDRs
        all trustedCIDRs in trustedCIDRs {_regex_match(str(trustedCIDRs), r"((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]+))|((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/([0-9]+))") if trustedCIDRs} if trustedCIDRs

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnection:
    r"""
    Connection includes client connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit provides configuration for the maximum buffer size in bytes for each incoming connection.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
        Default: 32768 bytes.
    connectionLimit : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnectionConnectionLimit, default is Undefined, optional
        connection limit
    maxAcceptPerSocketEvent : int, default is 1, optional
        MaxAcceptPerSocketEvent provides configuration for the maximum number of connections to accept from the kernel
        per socket event. If there are more than MaxAcceptPerSocketEvent connections pending accept, connections over
        this threshold will be accepted in later event loop iterations.
        Defaults to 1 and can be disabled by setting to 0 for allowing unlimited accepted connections.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each incoming socket.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    connectionLimit?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnectionConnectionLimit
    maxAcceptPerSocketEvent?: int = 1
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecConnectionConnectionLimit:
    r"""
    ConnectionLimit defines limits related to connections

    Attributes
    ----------
    closeDelay : str, default is Undefined, optional
        CloseDelay defines the delay to use before closing connections that are rejected
        once the limit value is reached.
        Default: none.
    value : int, default is Undefined, required
        Value of the maximum concurrent connections limit.
        When the limit is reached, incoming connections will be closed after the CloseDelay duration.
    """
    closeDelay?: str
    value: int

    check:
        _regex_match(str(closeDelay), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if closeDelay
        value >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeaders:
    r"""
    HeaderSettings provides configuration for header management.

    Attributes
    ----------
    disableRateLimitHeaders : bool, default is Undefined, optional
        DisableRateLimitHeaders configures Envoy Proxy to omit the "X-RateLimit-" response headers
        when rate limiting is enabled.
    earlyRequestHeaders : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeaders, default is Undefined, optional
        early request headers
    enableEnvoyHeaders : bool, default is Undefined, optional
        EnableEnvoyHeaders configures Envoy Proxy to add the "X-Envoy-" headers to requests
        and responses.
    preserveXRequestID : bool, default is Undefined, optional
        PreserveXRequestID configures Envoy to keep the X-Request-ID header if passed for a request that is edge
        (Edge request is the request from external clients to front Envoy) and not reset it, which is the current Envoy behaviour.
        Defaults to false and cannot be combined with RequestID.
        Deprecated: use RequestID=Preserve instead
    requestID : str, default is Undefined, optional
        RequestID configures Envoy's behavior for handling the `X-Request-ID` header.
        Defaults to `Generate` and builds the `X-Request-ID` for every request and ignores pre-existing values from the edge.
        (An "edge request" refers to a request from an external client to the Envoy entrypoint.)
    withUnderscoresAction : str, default is Undefined, optional
        WithUnderscoresAction configures the action to take when an HTTP header with underscores
        is encountered. The default action is to reject the request.
    xForwardedClientCert : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersXForwardedClientCert, default is Undefined, optional
        x forwarded client cert
    """
    disableRateLimitHeaders?: bool
    earlyRequestHeaders?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeaders
    enableEnvoyHeaders?: bool
    preserveXRequestID?: bool
    requestID?: "PreserveOrGenerate" | "Preserve" | "Generate" | "Disable"
    withUnderscoresAction?: "Allow" | "RejectRequest" | "DropHeader"
    xForwardedClientCert?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersXForwardedClientCert

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeaders:
    r"""
    EarlyRequestHeaders defines settings for early request header modification, before envoy performs
    routing, tracing and built-in header manipulation.

    Attributes
    ----------
    add : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersAddItems0], default is Undefined, optional
        Add adds the given header(s) (name, value) to the request
        before the action. It appends to any existing values associated
        with the header name.

        Input:
          GET /foo HTTP/1.1
          my-header: foo

        Config:
          add:
          - name: "my-header"
            value: "bar,baz"

        Output:
          GET /foo HTTP/1.1
          my-header: foo,bar,baz
    remove : [str], default is Undefined, optional
        Remove the given header(s) from the HTTP request before the action. The
        value of Remove is a list of HTTP header names. Note that the header
        names are case-insensitive (see
        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

        Input:
          GET /foo HTTP/1.1
          my-header1: foo
          my-header2: bar
          my-header3: baz

        Config:
          remove: ["my-header1", "my-header3"]

        Output:
          GET /foo HTTP/1.1
          my-header2: bar
    set : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersSetItems0], default is Undefined, optional
        Set overwrites the request with the given header (name, value)
        before the action.

        Input:
          GET /foo HTTP/1.1
          my-header: foo

        Config:
          set:
          - name: "my-header"
            value: "bar"

        Output:
          GET /foo HTTP/1.1
          my-header: bar
    """
    add?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersAddItems0]
    remove?: [str]
    set?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersSetItems0]

    check:
        len(add) <= 64 if add
        len(remove) <= 64 if remove
        len(set) <= 64 if set

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersAddItems0:
    r"""
    HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the HTTP Header to be matched. Name matching MUST be
        case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

        If multiple entries specify equivalent header names, the first entry with
        an equivalent name MUST be considered for a match. Subsequent entries
        with an equivalent header name MUST be ignored. Due to the
        case-insensitivity of header names, "foo" and "Foo" are considered
        equivalent.
    value : str, default is Undefined, required
        Value is the value of HTTP Header to be matched.
    """
    name: str

    value: str

    check:
        len(name) <= 256
        len(name) >= 1
        _regex_match(str(name), r"^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$")
        len(value) <= 4096
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersEarlyRequestHeadersSetItems0:
    r"""
    HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the HTTP Header to be matched. Name matching MUST be
        case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

        If multiple entries specify equivalent header names, the first entry with
        an equivalent name MUST be considered for a match. Subsequent entries
        with an equivalent header name MUST be ignored. Due to the
        case-insensitivity of header names, "foo" and "Foo" are considered
        equivalent.
    value : str, default is Undefined, required
        Value is the value of HTTP Header to be matched.
    """
    name: str

    value: str

    check:
        len(name) <= 256
        len(name) >= 1
        _regex_match(str(name), r"^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$")
        len(value) <= 4096
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHeadersXForwardedClientCert:
    r"""
    XForwardedClientCert configures how Envoy Proxy handle the x-forwarded-client-cert (XFCC) HTTP header.

    x-forwarded-client-cert (XFCC) is an HTTP header used to forward the certificate
    information of part or all of the clients or proxies that a request has flowed through,
    on its way from the client to the server.

    Envoy proxy may choose to sanitize/append/forward the XFCC header before proxying the request.

    If not set, the default behavior is sanitizing the XFCC header.

    Attributes
    ----------
    certDetailsToAdd : [str], default is Undefined, optional
        CertDetailsToAdd specifies the fields in the client certificate to be forwarded in the XFCC header.

        Hash(the SHA 256 digest of the current client certificate) and By(the Subject Alternative Name)
        are always included if the client certificate is forwarded.

        This field is only applicable when the mode is set to `AppendForward` or
        `SanitizeSet` and the client connection is mTLS.
    mode : str, default is Undefined, optional
        Mode defines how XFCC header is handled by Envoy Proxy.
        If not set, the default mode is `Sanitize`.
    """
    certDetailsToAdd?: [str]
    mode?: "Sanitize" | "ForwardOnly" | "AppendForward" | "SanitizeSet" | "AlwaysForwardOnly"

    check:
        len(certDetailsToAdd) <= 5 if certDetailsToAdd

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHealthCheck:
    r"""
    HealthCheck provides configuration for determining whether the HTTP/HTTPS listener is healthy.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path specifies the HTTP path to match on for health check requests.
    """
    path: str

    check:
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1:
    r"""
    HTTP1 provides HTTP/1 configuration on the listener.

    Attributes
    ----------
    enableTrailers : bool, default is Undefined, optional
        EnableTrailers defines if HTTP/1 trailers should be proxied by Envoy.
    http10 : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1Http10, default is Undefined, optional
        http10
    preserveHeaderCase : bool, default is Undefined, optional
        PreserveHeaderCase defines if Envoy should preserve the letter case of headers.
        By default, Envoy will lowercase all the headers.
    """
    enableTrailers?: bool
    http10?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1Http10
    preserveHeaderCase?: bool

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp1Http10:
    r"""
    HTTP10 turns on support for HTTP/1.0 and HTTP/0.9 requests.

    Attributes
    ----------
    useDefaultHost : bool, default is Undefined, optional
        UseDefaultHost defines if the HTTP/1.0 request is missing the Host header,
        then the hostname associated with the listener should be injected into the
        request.
        If this is not set and an HTTP/1.0 request arrives without a host, then
        it will be rejected.
    """
    useDefaultHost?: bool

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration on the listener.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecPath:
    r"""
    Path enables managing how the incoming path set by clients can be normalized.

    Attributes
    ----------
    disableMergeSlashes : bool, default is Undefined, optional
        DisableMergeSlashes allows disabling the default configuration of merging adjacent
        slashes in the path.
        Note that slash merging is not part of the HTTP spec and is provided for convenience.
    escapedSlashesAction : str, default is Undefined, optional
        EscapedSlashesAction determines how %2f, %2F, %5c, or %5C sequences in the path URI
        should be handled.
        The default is UnescapeAndRedirect.
    """
    disableMergeSlashes?: bool
    escapedSlashesAction?: "KeepUnchanged" | "RejectRequest" | "UnescapeAndForward" | "UnescapeAndRedirect"

protocol GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecProxyProtocol:
    r"""
    ProxyProtocol configures the Proxy Protocol settings. When configured,
    the Proxy Protocol header will be interpreted and the Client Address
    will be added into the X-Forwarded-For header.
    If both EnableProxyProtocol and ProxyProtocol are set, ProxyProtocol takes precedence.

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Optional allows requests without a Proxy Protocol header to be proxied.
        If set to true, the listener will accept requests without a Proxy Protocol header.
        If set to false, the listener will reject requests without a Proxy Protocol header.
        If not set, the default behavior is to reject requests without a Proxy Protocol header.
        Warning: Optional breaks conformance with the specification. Only enable if ALL traffic to the listener comes from a trusted source.
        For more information on security implications, see haproxy.org/download/2.1/doc/proxy-protocol.txt
    """
    optional?: bool

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the downstream client connection.
    If defined, sets SO_KEEPALIVE on the listener socket to enable TCP Keepalives.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLS:
    r"""
    TLS settings configure TLS termination settings with the downstream client.

    Attributes
    ----------
    alpnProtocols : [str], default is Undefined, optional
        ALPNProtocols supplies the list of ALPN protocols that should be
        exposed by the listener or used by the proxy to connect to the backend.
        Defaults:
        1. HTTPS Routes: h2 and http/1.1 are enabled in listener context.
        2. Other Routes: ALPN is disabled.
        3. Backends: proxy uses the appropriate ALPN options for the backend protocol.
        When an empty list is provided, the ALPN TLS extension is disabled.
        Supported values are:
        - http/1.0
        - http/1.1
        - h2
    ciphers : [str], default is Undefined, optional
        Ciphers specifies the set of cipher suites supported when
        negotiating TLS 1.0 - 1.2. This setting has no effect for TLS 1.3.
        In non-FIPS Envoy Proxy builds the default cipher list is:
        - [ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]
        - [ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]
        - ECDHE-ECDSA-AES256-GCM-SHA384
        - ECDHE-RSA-AES256-GCM-SHA384
        In builds using BoringSSL FIPS the default cipher list is:
        - ECDHE-ECDSA-AES128-GCM-SHA256
        - ECDHE-RSA-AES128-GCM-SHA256
        - ECDHE-ECDSA-AES256-GCM-SHA384
        - ECDHE-RSA-AES256-GCM-SHA384
    clientValidation : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidation, default is Undefined, optional
        client validation
    ecdhCurves : [str], default is Undefined, optional
        ECDHCurves specifies the set of supported ECDH curves.
        In non-FIPS Envoy Proxy builds the default curves are:
        - X25519
        - P-256
        In builds using BoringSSL FIPS the default curve is:
        - P-256
    maxVersion : str, default is Undefined, optional
        Max specifies the maximal TLS protocol version to allow
        The default is TLS 1.3 if this is not specified.
    minVersion : str, default is Undefined, optional
        Min specifies the minimal TLS protocol version to allow.
        The default is TLS 1.2 if this is not specified.
    session : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSession, default is Undefined, optional
        session
    signatureAlgorithms : [str], default is Undefined, optional
        SignatureAlgorithms specifies which signature algorithms the listener should
        support.
    """
    alpnProtocols?: [str]
    ciphers?: [str]
    clientValidation?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidation
    ecdhCurves?: [str]
    maxVersion?: "Auto" | "1.0" | "1.1" | "1.2" | "1.3"
    minVersion?: "Auto" | "1.0" | "1.1" | "1.2" | "1.3"
    session?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSession
    signatureAlgorithms?: [str]

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidation:
    r"""
    ClientValidation specifies the configuration to validate the client
    initiating the TLS connection to the Gateway listener.

    Attributes
    ----------
    caCertificateRefs : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationCaCertificateRefsItems0], default is Undefined, optional
        CACertificateRefs contains one or more references to
        Kubernetes objects that contain TLS certificates of
        the Certificate Authorities that can be used
        as a trust anchor to validate the certificates presented by the client.

        A single reference to a Kubernetes ConfigMap or a Kubernetes Secret,
        with the CA certificate in a key named `ca.crt` is currently supported.

        References to a resource in different namespace are invalid UNLESS there
        is a ReferenceGrant in the target namespace that allows the certificate
        to be attached.
    certificateHashes : [str], default is Undefined, optional
        An optional list of hex-encoded SHA-256 hashes. If specified, Envoy will
        verify that the SHA-256 of the DER-encoded presented certificate matches
        one of the specified values.
    optional : bool, default is Undefined, optional
        Optional set to true accepts connections even when a client doesn't present a certificate.
        Defaults to false, which rejects connections without a valid client certificate.
    spkiHashes : [str], default is Undefined, optional
        An optional list of base64-encoded SHA-256 hashes. If specified, Envoy will
        verify that the SHA-256 of the DER-encoded Subject Public Key Information
        (SPKI) of the presented certificate matches one of the specified values.
    subjectAltNames : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNames, default is Undefined, optional
        subject alt names
    """
    caCertificateRefs?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationCaCertificateRefsItems0]
    certificateHashes?: [str]
    optional?: bool
    spkiHashes?: [str]
    subjectAltNames?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNames

    check:
        len(caCertificateRefs) <= 8 if caCertificateRefs

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationCaCertificateRefsItems0:
    r"""
    SecretObjectReference identifies an API object including its namespace,
    defaulting to Secret.

    The API object must be valid in the cluster; the Group and Kind must
    be registered in the cluster for this reference to be valid.

    References to objects with invalid Group and Kind are not valid, and must
    be rejected by the implementation, with appropriate Conditions set
    on the containing object.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNames:
    r"""
    An optional list of Subject Alternative name matchers. If specified, Envoy
    will verify that the Subject Alternative Name of the presented certificate
    matches one of the specified matchers

    Attributes
    ----------
    dnsNames : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesDNSNamesItems0], default is Undefined, optional
        DNS names matchers
    emailAddresses : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesEmailAddressesItems0], default is Undefined, optional
        Email addresses matchers
    ipAddresses : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesIPAddressesItems0], default is Undefined, optional
        IP addresses matchers
    otherNames : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesOtherNamesItems0], default is Undefined, optional
        Other names matchers
    uris : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesUrisItems0], default is Undefined, optional
        URIs matchers
    """
    dnsNames?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesDNSNamesItems0]
    emailAddresses?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesEmailAddressesItems0]
    ipAddresses?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesIPAddressesItems0]
    otherNames?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesOtherNamesItems0]
    uris?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesUrisItems0]

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesDNSNamesItems0:
    r"""
    StringMatch defines how to match any strings.
    This is a general purpose match condition that can be used by other EG APIs
    that need to match against a string.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesEmailAddressesItems0:
    r"""
    StringMatch defines how to match any strings.
    This is a general purpose match condition that can be used by other EG APIs
    that need to match against a string.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesIPAddressesItems0:
    r"""
    StringMatch defines how to match any strings.
    This is a general purpose match condition that can be used by other EG APIs
    that need to match against a string.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesOtherNamesItems0:
    r"""
    gateway envoyproxy io v1alpha1 client traffic policy spec TLS client validation subject alt names other names items0

    Attributes
    ----------
    oid : str, default is Undefined, required
        OID Value
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    oid: str

    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSClientValidationSubjectAltNamesUrisItems0:
    r"""
    StringMatch defines how to match any strings.
    This is a general purpose match condition that can be used by other EG APIs
    that need to match against a string.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSession:
    r"""
    Session defines settings related to TLS session management.

    Attributes
    ----------
    resumption : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSessionResumption, default is Undefined, optional
        resumption
    """
    resumption?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSessionResumption

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTLSSessionResumption:
    r"""
    Resumption determines the proxy's supported TLS session resumption option.
    By default, Envoy Gateway does not enable session resumption. Use sessionResumption to
    enable stateful and stateless session resumption. Users should consider security impacts
    of different resumption methods. Performance gains from resumption are diminished when
    Envoy proxy is deployed with more than one replica.

    Attributes
    ----------
    stateful : any, default is Undefined, optional
        Stateful defines setting for stateful (session-id based) session resumption
    stateless : any, default is Undefined, optional
        Stateless defines setting for stateless (session-ticket based) session resumption
    """
    stateful?: any
    stateless?: any

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRef:
    r"""
    TargetRef is the name of the resource this policy is being attached to.
    This policy and the TargetRef MUST be in the same namespace for this
    Policy to have effect

    Deprecated: use targetRefs/targetSelectors instead

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetRefsItems0:
    r"""
    LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
    direct policy to. This should be used as part of Policy resources that can
    target single resources. For more information on how this policy attachment
    mode works, and a sample Policy resource, refer to the policy attachment
    documentation for Gateway API.

    Note: This should only be used for direct policy attachment when references
    to SectionName are actually needed. In all other cases,
    LocalPolicyTargetReference should be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0:
    r"""
    gateway envoyproxy io v1alpha1 client traffic policy spec target selectors items0

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group that this selector targets. Defaults to gateway.networking.k8s.io
    kind : str, default is Undefined, required
        Kind is the resource kind that this selector targets.
    matchExpressions : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        MatchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels are the set of label selectors for identifying the targeted resource
    """
    group?: str = "gateway.networking.k8s.io"
    kind: str

    matchExpressions?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0]
    matchLabels?: {str:str}

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeout:
    r"""
    Timeout settings for the client connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    idleTimeout : str, default is Undefined, optional
        IdleTimeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    requestReceivedTimeout : str, default is Undefined, optional
        RequestReceivedTimeout is the duration envoy waits for the complete request reception. This timer starts upon request
        initiation and stops when either the last byte of the request is sent upstream or when the response begins.
    streamIdleTimeout : str, default is Undefined, optional
         The stream idle timeout defines the amount of time a stream can exist without any upstream or downstream activity.
         Default: 5 minutes.
    """
    idleTimeout?: str
    requestReceivedTimeout?: str
    streamIdleTimeout?: str

    check:
        _regex_match(str(idleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTimeout
        _regex_match(str(requestReceivedTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestReceivedTimeout
        _regex_match(str(streamIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if streamIdleTimeout

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicySpecTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    idleTimeout : str, default is Undefined, optional
        IdleTimeout for a TCP connection. Idle time is defined as a period in which there are no
        bytes sent or received on either the upstream or downstream connection.
        Default: 1 hour.
    """
    idleTimeout?: str

    check:
        _regex_match(str(idleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTimeout

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatus:
    r"""
    Status defines the current status of ClientTrafficPolicy.

    Attributes
    ----------
    ancestors : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0], default is Undefined, required
        Ancestors is a list of ancestor resources (usually Gateways) that are
        associated with the policy, and the status of the policy with respect to
        each ancestor. When this policy attaches to a parent, the controller that
        manages the parent and the ancestors MUST add an entry to this list when
        the controller first sees the policy and SHOULD update the entry as
        appropriate when the relevant ancestor is modified.

        Note that choosing the relevant ancestor is left to the Policy designers;
        an important part of Policy design is designing the right object level at
        which to namespace this status.

        Note also that implementations MUST ONLY populate ancestor status for
        the Ancestor resources they are responsible for. Implementations MUST
        use the ControllerName field to uniquely identify the entries in this list
        that they are responsible for.

        Note that to achieve this, the list of PolicyAncestorStatus structs
        MUST be treated as a map with a composite key, made up of the AncestorRef
        and ControllerName fields combined.

        A maximum of 16 ancestors will be represented in this list. An empty list
        means the Policy is not relevant for any ancestors.

        If this slice is full, implementations MUST NOT add further entries.
        Instead they MUST consider the policy unimplementable and signal that
        on any related resources such as the ancestor that would be referenced
        here. For example, if this list was full on BackendTLSPolicy, no
        additional Gateways would be able to reference the Service targeted by
        the BackendTLSPolicy.
    """
    ancestors: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0]

    check:
        len(ancestors) <= 16

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0:
    r"""
    PolicyAncestorStatus describes the status of a route with respect to an
    associated Ancestor.

    Ancestors refer to objects that are either the Target of a policy or above it
    in terms of object hierarchy. For example, if a policy targets a Service, the
    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
    useful object to place Policy status on, so we recommend that implementations
    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
    have a _very_ good reason otherwise.

    In the context of policy attachment, the Ancestor is used to distinguish which
    resource results in a distinct application of this policy. For example, if a policy
    targets a Service, it may have a distinct result per attached Gateway.

    Policies targeting the same resource may have different effects depending on the
    ancestors of those resources. For example, different Gateways targeting the same
    Service may have different capabilities, especially if they have different underlying
    implementations.

    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
    used as a backend in a HTTPRoute that is itself attached to a Gateway.
    In this case, the relevant object for status is the Gateway, and that is the
    ancestor object referred to in this status.

    Note that a parent is also an ancestor, so for objects where the parent is the
    relevant object for status, this struct SHOULD still be used.

    This struct is intended to be used in a slice that's effectively a map,
    with a composite key made up of the AncestorRef and the ControllerName.

    Attributes
    ----------
    ancestorRef : GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0AncestorRef, default is Undefined, required
        ancestor ref
    conditions : [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0ConditionsItems0], default is Undefined, optional
        Conditions describes the status of the Policy with respect to the given Ancestor.
    controllerName : str, default is Undefined, required
        ControllerName is a domain/path string that indicates the name of the
        controller that wrote this status. This corresponds with the
        controllerName field on GatewayClass.

        Example: "example.net/gateway-controller".

        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
        valid Kubernetes names
        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

        Controllers MUST populate this field when writing status. Controllers should ensure that
        entries to status populated with their ControllerName are cleaned up when they are no
        longer necessary.
    """
    ancestorRef: GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0AncestorRef

    conditions?: [GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0ConditionsItems0]
    controllerName: str

    check:
        len(conditions) >= 1 if conditions
        len(conditions) <= 8 if conditions
        len(controllerName) <= 253
        len(controllerName) >= 1
        _regex_match(str(controllerName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$")

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0AncestorRef:
    r"""
    AncestorRef corresponds with a ParentRef in the spec that this
    PolicyAncestorStatus struct describes the status of.

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group of the referent.
        When unspecified, "gateway.networking.k8s.io" is inferred.
        To set the core API group (such as for a "Service" kind referent),
        Group must be explicitly set to "" (empty string).

        Support: Core
    kind : str, default is "Gateway", optional
        Kind is kind of the referent.

        There are two kinds of parent resources with "Core" support:

        * Gateway (Gateway conformance profile)
        * Service (Mesh conformance profile, ClusterIP Services only)

        Support for other resources is Implementation-Specific.
    name : str, default is Undefined, required
        Name is the name of the referent.

        Support: Core
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referent. When unspecified, this refers
        to the local namespace of the Route.

        Note that there are specific rules for ParentRefs which cross namespace
        boundaries. Cross-namespace references are only valid if they are explicitly
        allowed by something in the namespace they are referring to. For example:
        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
        generic way to enable any other kind of cross-namespace reference.

        <gateway:experimental:description>
        ParentRefs from a Route to a Service in the same namespace are "producer"
        routes, which apply default routing rules to inbound connections from
        any namespace to the Service.

        ParentRefs from a Route to a Service in a different namespace are
        "consumer" routes, and these routing rules are only applied to outbound
        connections originating from the same namespace as the Route, for which
        the intended destination of the connections are a Service targeted as a
        ParentRef of the Route.
        </gateway:experimental:description>

        Support: Core
    port : int, default is Undefined, optional
        Port is the network port this Route targets. It can be interpreted
        differently based on the type of parent resource.

        When the parent resource is a Gateway, this targets all listeners
        listening on the specified port that also support this kind of Route(and
        select this Route). It's not recommended to set `Port` unless the
        networking behaviors specified in a Route must apply to a specific port
        as opposed to a listener(s) whose port(s) may be changed. When both Port
        and SectionName are specified, the name and port of the selected listener
        must match both specified values.

        <gateway:experimental:description>
        When the parent resource is a Service, this targets a specific port in the
        Service spec. When both Port (experimental) and SectionName are specified,
        the name and port of the selected port must match both specified values.
        </gateway:experimental:description>

        Implementations MAY choose to support other parent resources.
        Implementations supporting other types of parent resources MUST clearly
        document how/if Port is interpreted.

        For the purpose of status, an attachment is considered successful as
        long as the parent resource accepts it partially. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
        from the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route,
        the Route MUST be considered detached from the Gateway.

        Support: Extended
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. In the
        following resources, SectionName is interpreted as the following:

        * Gateway: Listener name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.
        * Service: Port name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.

        Implementations MAY choose to support attaching Routes to other resources.
        If that is the case, they MUST clearly document how SectionName is
        interpreted.

        When unspecified (empty string), this will reference the entire resource.
        For the purpose of status, an attachment is considered successful if at
        least one section in the parent resource accepts it. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
        the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route, the
        Route MUST be considered detached from the Gateway.

        Support: Core
    """
    group?: str = "gateway.networking.k8s.io"
    kind?: str = "Gateway"
    name: str

    namespace?: str
    port?: int
    sectionName?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1ClientTrafficPolicyStatusAncestorsItems0ConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

