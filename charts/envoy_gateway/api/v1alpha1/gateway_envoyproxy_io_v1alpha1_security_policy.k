"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema SecurityPolicy:
    r"""
    SecurityPolicy allows the user to configure various security settings for a
    Gateway.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpec, default is Undefined, required
        spec
    status : GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatus, default is Undefined, optional
        status
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "SecurityPolicy" = "SecurityPolicy"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpec

    status?: GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatus

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpec:
    r"""
    Spec defines the desired state of SecurityPolicy.

    Attributes
    ----------
    apiKeyAuth : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuth, default is Undefined, optional
        api key auth
    authorization : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorization, default is Undefined, optional
        authorization
    basicAuth : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuth, default is Undefined, optional
        basic auth
    cors : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecCors, default is Undefined, optional
        cors
    extAuth : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuth, default is Undefined, optional
        ext auth
    jwt : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwt, default is Undefined, optional
        jwt
    oidc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidc, default is Undefined, optional
        oidc
    targetRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRef, default is Undefined, optional
        target ref
    targetRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRefsItems0], default is Undefined, optional
        TargetRefs are the names of the Gateway resources this policy
        is being attached to.
    targetSelectors : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0], default is Undefined, optional
        TargetSelectors allow targeting resources for this policy based on labels
    """
    apiKeyAuth?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuth
    authorization?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorization
    basicAuth?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuth
    cors?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecCors
    extAuth?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuth
    jwt?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwt
    oidc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidc
    targetRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRef
    targetRefs?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRefsItems0]
    targetSelectors?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuth:
    r"""
    APIKeyAuth defines the configuration for the API Key Authentication.

    Attributes
    ----------
    credentialRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthCredentialRefsItems0], default is Undefined, required
        CredentialRefs is the Kubernetes secret which contains the API keys.
        This is an Opaque secret.
        Each API key is stored in the key representing the client id.
        If the secrets have a key for a duplicated client, the first one will be used.
    extractFrom : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthExtractFromItems0], default is Undefined, required
        ExtractFrom is where to fetch the key from the coming request.
        The value from the first source that has a key will be used.
    forwardClientIDHeader : str, default is Undefined, optional
        ForwardClientIDHeader is the name of the header to forward the client identity to the backend
        service. The header will be added to the request with the client id as the value.
    sanitize : bool, default is Undefined, optional
        Sanitize indicates whether to remove the API key from the request before forwarding it to the backend service.
    """
    credentialRefs: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthCredentialRefsItems0]

    extractFrom: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthExtractFromItems0]

    forwardClientIDHeader?: str
    sanitize?: bool

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthCredentialRefsItems0:
    r"""
    SecretObjectReference identifies an API object including its namespace,
    defaulting to Secret.

    The API object must be valid in the cluster; the Group and Kind must
    be registered in the cluster for this reference to be valid.

    References to objects with invalid Group and Kind are not valid, and must
    be rejected by the implementation, with appropriate Conditions set
    on the containing object.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAPIKeyAuthExtractFromItems0:
    r"""
    ExtractFrom is where to fetch the key from the coming request.
    Only one of header, param or cookie is supposed to be specified.

    Attributes
    ----------
    cookies : [str], default is Undefined, optional
        Cookies is the names of the cookie to fetch the key from.
        If multiple cookies are specified, envoy will look for the api key in the order of the list.
        This field is optional, but only one of headers, params or cookies is supposed to be specified.
    headers : [str], default is Undefined, optional
        Headers is the names of the header to fetch the key from.
        If multiple headers are specified, envoy will look for the api key in the order of the list.
        This field is optional, but only one of headers, params or cookies is supposed to be specified.
    params : [str], default is Undefined, optional
        Params is the names of the query parameter to fetch the key from.
        If multiple params are specified, envoy will look for the api key in the order of the list.
        This field is optional, but only one of headers, params or cookies is supposed to be specified.
    """
    cookies?: [str]
    headers?: [str]
    params?: [str]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorization:
    r"""
    Authorization defines the authorization configuration.

    Attributes
    ----------
    defaultAction : str, default is Undefined, optional
        DefaultAction defines the default action to be taken if no rules match.
        If not specified, the default action is Deny.
    rules : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0], default is Undefined, optional
        Rules defines a list of authorization rules.
        These rules are evaluated in order, the first matching rule will be applied,
        and the rest will be skipped.

        For example, if there are two rules: the first rule allows the request
        and the second rule denies it, when a request matches both rules, it will be allowed.
    """
    defaultAction?: "Allow" | "Deny"
    rules?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0:
    r"""
    AuthorizationRule defines a single authorization rule.

    Attributes
    ----------
    action : str, default is Undefined, required
        Action defines the action to be taken if the rule matches.
    name : str, default is Undefined, optional
        Name is a user-friendly name for the rule.
        If not specified, Envoy Gateway will generate a unique name for the rule.
    operation : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Operation, default is Undefined, optional
        operation
    principal : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Principal, default is Undefined, required
        principal
    """
    action: "Allow" | "Deny"

    name?: str
    operation?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Operation
    principal: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Principal

    check:
        len(name) <= 253 if name
        len(name) >= 1 if name

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Operation:
    r"""
    Operation specifies the operation of a request, such as HTTP methods.
    If not specified, all operations are matched on.

    Attributes
    ----------
    methods : [str], default is Undefined, required
        Methods are the HTTP methods of the request.
        If multiple methods are specified, all specified methods are allowed or denied, based on the action of the rule.
    """
    methods: [str]

    check:
        len(methods) >= 1
        len(methods) <= 16

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0Principal:
    r"""
    Principal specifies the client identity of a request.
    If there are multiple principal types, all principals must match for the rule to match.
    For example, if there are two principals: one for client IP and one for JWT claim,
    the rule will match only if both the client IP and the JWT claim match.

    Attributes
    ----------
    clientCIDRs : [str], default is Undefined, optional
        ClientCIDRs are the IP CIDR ranges of the client.
        Valid examples are "192.168.1.0/24" or "2001:db8::/64"

        If multiple CIDR ranges are specified, one of the CIDR ranges must match
        the client IP for the rule to match.

        The client IP is inferred from the X-Forwarded-For header, a custom header,
        or the proxy protocol.
        You can use the `ClientIPDetection` or the `ProxyProtocol` field in
        the `ClientTrafficPolicy` to configure how the client IP is detected.
    headers : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalHeadersItems0], default is Undefined, optional
        Headers authorize the request based on user identity extracted from custom headers.
        If multiple headers are specified, all headers must match for the rule to match.
    jwt : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwt, default is Undefined, optional
        jwt
    """
    clientCIDRs?: [str]
    headers?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalHeadersItems0]
    jwt?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwt

    check:
        len(clientCIDRs) >= 1 if clientCIDRs
        all clientCIDRs in clientCIDRs {_regex_match(str(clientCIDRs), r"((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]+))|((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/([0-9]+))") if clientCIDRs} if clientCIDRs
        len(headers) >= 1 if headers
        len(headers) <= 256 if headers

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalHeadersItems0:
    r"""
    AuthorizationHeaderMatch specifies how to match against the value of an HTTP header within a authorization rule.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the HTTP header.
        The header name is case-insensitive unless PreserveHeaderCase is set to true.
        For example, "Foo" and "foo" are considered the same header.
    values : [str], default is Undefined, required
        Values are the values that the header must match.
        If multiple values are specified, the rule will match if any of the values match.
    """
    name: str

    values: [str]

    check:
        len(name) <= 256
        len(name) >= 1
        len(values) >= 1
        len(values) <= 256

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwt:
    r"""
    JWT authorize the request based on the JWT claims and scopes.
    Note: in order to use JWT claims for authorization, you must configure the
    JWT authentication in the same `SecurityPolicy`.

    Attributes
    ----------
    claims : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwtClaimsItems0], default is Undefined, optional
        Claims are the claims in a JWT token.

        If multiple claims are specified, all claims must match for the rule to match.
        For example, if there are two claims: one for the audience and one for the issuer,
        the rule will match only if both the audience and the issuer match.
    provider : str, default is Undefined, required
        Provider is the name of the JWT provider that used to verify the JWT token.
        In order to use JWT claims for authorization, you must configure the JWT
        authentication with the same provider in the same `SecurityPolicy`.
    scopes : [str], default is Undefined, optional
        Scopes are a special type of claim in a JWT token that represents the permissions of the client.

        The value of the scopes field should be a space delimited string that is expected in the scope parameter,
        as defined in RFC 6749: https://datatracker.ietf.org/doc/html/rfc6749#page-23.

        If multiple scopes are specified, all scopes must match for the rule to match.
    """
    claims?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwtClaimsItems0]
    provider: str

    scopes?: [str]

    check:
        len(claims) >= 1 if claims
        len(claims) <= 16 if claims
        len(provider) <= 253
        len(provider) >= 1
        len(scopes) >= 1 if scopes
        len(scopes) <= 16 if scopes
        all scopes in scopes {len(scopes) <= 253 if scopes not in [None, Undefined]} if scopes
        all scopes in scopes {len(scopes) >= 1 if scopes not in [None, Undefined]} if scopes

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecAuthorizationRulesItems0PrincipalJwtClaimsItems0:
    r"""
    JWTClaim specifies a claim in a JWT token.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the claim.
        If it is a nested claim, use a dot (.) separated string as the name to
        represent the full path to the claim.
        For example, if the claim is in the "department" field in the "organization" field,
        the name should be "organization.department".
    valueType : str, default is "String", optional
        ValueType is the type of the claim value.
        Only String and StringArray types are supported for now.
    values : [str], default is Undefined, required
        Values are the values that the claim must match.
        If the claim is a string type, the specified value must match exactly.
        If the claim is a string array type, the specified value must match one of the values in the array.
        If multiple values are specified, one of the values must match for the rule to match.
    """
    name: str

    valueType?: "String" | "StringArray" = "String"
    values: [str]

    check:
        len(name) <= 253
        len(name) >= 1
        len(values) >= 1
        len(values) <= 16

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuth:
    r"""
    BasicAuth defines the configuration for the HTTP Basic Authentication.

    Attributes
    ----------
    forwardUsernameHeader : str, default is Undefined, optional
        This field specifies the header name to forward a successfully authenticated user to
        the backend. The header will be added to the request with the username as the value.

        If it is not specified, the username will not be forwarded.
    users : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuthUsers, default is Undefined, required
        users
    """
    forwardUsernameHeader?: str
    users: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuthUsers

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecBasicAuthUsers:
    r"""
    The Kubernetes secret which contains the username-password pairs in
    htpasswd format, used to verify user credentials in the "Authorization"
    header.

    This is an Opaque secret. The username-password pairs should be stored in
    the key ".htpasswd". As the key name indicates, the value needs to be the
    htpasswd format, for example: "user1:{SHA}hashed_user1_password".
    Right now, only SHA hash algorithm is supported.
    Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html
    for more details.

    Note: The secret must be in the same namespace as the SecurityPolicy.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecCors:
    r"""
    CORS defines the configuration for Cross-Origin Resource Sharing (CORS).

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        AllowCredentials indicates whether a request can include user credentials
        like cookies, authentication headers, or TLS client certificates.
        It specifies the value in the Access-Control-Allow-Credentials CORS response header.
    allowHeaders : [str], default is Undefined, optional
        AllowHeaders defines the headers that are allowed to be sent with requests.
        It specifies the allowed headers in the Access-Control-Allow-Headers CORS response header..
        The value "*" allows any header to be sent.
    allowMethods : [str], default is Undefined, optional
        AllowMethods defines the methods that are allowed to make requests.
        It specifies the allowed methods in the Access-Control-Allow-Methods CORS response header..
        The value "*" allows any method to be used.
    allowOrigins : [str], default is Undefined, optional
        AllowOrigins defines the origins that are allowed to make requests.
        It specifies the allowed origins in the Access-Control-Allow-Origin CORS response header.
        The value "*" allows any origin to make requests.
    exposeHeaders : [str], default is Undefined, optional
        ExposeHeaders defines which response headers should be made accessible to
        scripts running in the browser.
        It specifies the headers in the Access-Control-Expose-Headers CORS response header..
        The value "*" allows any header to be exposed.
    maxAge : str, default is Undefined, optional
        MaxAge defines how long the results of a preflight request can be cached.
        It specifies the value in the Access-Control-Max-Age CORS response header..
    """
    allowCredentials?: bool
    allowHeaders?: [str]
    allowMethods?: [str]
    allowOrigins?: [str]
    exposeHeaders?: [str]
    maxAge?: str

    check:
        all allowOrigins in allowOrigins {len(allowOrigins) <= 253 if allowOrigins not in [None, Undefined]} if allowOrigins
        all allowOrigins in allowOrigins {len(allowOrigins) >= 1 if allowOrigins not in [None, Undefined]} if allowOrigins
        all allowOrigins in allowOrigins {_regex_match(str(allowOrigins), r"^(\*|https?:\/\/(\*|(\*\.)?(([\w-]+\.?)+)?[\w-]+)(:\d{1,5})?)$") if allowOrigins} if allowOrigins
        _regex_match(str(maxAge), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxAge

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuth:
    r"""
    ExtAuth defines the configuration for External Authorization.

    Attributes
    ----------
    bodyToExtAuth : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthBodyToExtAuth, default is Undefined, optional
        body to ext auth
    failOpen : bool, default is Undefined, optional
        FailOpen is a switch used to control the behavior when a response from the External Authorization service cannot be obtained.
        If FailOpen is set to true, the system allows the traffic to pass through.
        Otherwise, if it is set to false or not set (defaulting to false),
        the system blocks the traffic and returns a HTTP 5xx error, reflecting a fail-closed approach.
        This setting determines whether to prioritize accessibility over strict security in case of authorization service failure.

        If set to true, the External Authorization will also be bypassed if its configuration is invalid.
    grpc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpc, default is Undefined, optional
        grpc
    headersToExtAuth : [str], default is Undefined, optional
        HeadersToExtAuth defines the client request headers that will be included
        in the request to the external authorization service.
        Note: If not specified, the default behavior for gRPC and HTTP external
        authorization services is different due to backward compatibility reasons.
        All headers will be included in the check request to a gRPC authorization server.
        Only the following headers will be included in the check request to an HTTP
        authorization server: Host, Method, Path, Content-Length, and Authorization.
        And these headers will always be included to the check request to an HTTP
        authorization server by default, no matter whether they are specified
        in HeadersToExtAuth or not.
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTP, default is Undefined, optional
        http
    recomputeRoute : bool, default is Undefined, optional
        RecomputeRoute clears the route cache and recalculates the routing decision.
        This field must be enabled if the headers added or modified by the ExtAuth are used for
        route matching decisions. If the recomputation selects a new route, features targeting
        the new matched route will be applied.
    """
    bodyToExtAuth?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthBodyToExtAuth
    failOpen?: bool = False
    grpc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpc
    headersToExtAuth?: [str]
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTP
    recomputeRoute?: bool

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthBodyToExtAuth:
    r"""
    BodyToExtAuth defines the Body to Ext Auth configuration.

    Attributes
    ----------
    maxRequestBytes : int, default is Undefined, required
        MaxRequestBytes is the maximum size of a message body that the filter will hold in memory.
        Envoy will return HTTP 413 and will not initiate the authorization process when buffer
        reaches the number set in this field.
        Note that this setting will have precedence over failOpen mode.
    """
    maxRequestBytes: int

    check:
        maxRequestBytes >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpc:
    r"""
    GRPC defines the gRPC External Authorization service.
    Either GRPCService or HTTPService must be specified,
    and only one of them can be provided.

    Attributes
    ----------
    backendRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRef, default is Undefined, optional
        backend ref
    backendRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRefsItems0], default is Undefined, optional
        BackendRefs references a Kubernetes object that represents the
        backend server to which the authorization request will be sent.
    backendSettings : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettings, default is Undefined, optional
        backend settings
    """
    backendRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRef
    backendRefs?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRefsItems0]
    backendSettings?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettings

    check:
        len(backendRefs) <= 16 if backendRefs

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRef:
    r"""
    BackendRef references a Kubernetes object that represents the
    backend server to which the authorization request will be sent.

    Deprecated: Use BackendRefs instead.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendRefsItems0:
    r"""
    BackendRef defines how an ObjectReference that is specific to BackendRef.

    Attributes
    ----------
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        Multiple fallback backends can be configured.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    fallback?: bool
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettings:
    r"""
    BackendSettings holds configuration for managing the connection
    to the backend.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreaker, default is Undefined, optional
        circuit breaker
    connection : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsDNS, default is Undefined, optional
        dns
    healthCheck : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHttp2, default is Undefined, optional
        http2
    loadBalancer : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancer, default is Undefined, optional
        load balancer
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsProxyProtocol, default is Undefined, optional
        proxy protocol
    retry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetry, default is Undefined, optional
        retry
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeout, default is Undefined, optional
        timeout
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreaker
    connection?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsConnection
    dns?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsDNS
    healthCheck?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHttp2
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancer
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsProxyProtocol
    retry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetry
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses < 600 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes < 600 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthGrpcBackendSettingsTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTP:
    r"""
    HTTP defines the HTTP External Authorization service.
    Either GRPCService or HTTPService must be specified,
    and only one of them can be provided.

    Attributes
    ----------
    backendRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRef, default is Undefined, optional
        backend ref
    backendRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRefsItems0], default is Undefined, optional
        BackendRefs references a Kubernetes object that represents the
        backend server to which the authorization request will be sent.
    backendSettings : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettings, default is Undefined, optional
        backend settings
    headersToBackend : [str], default is Undefined, optional
        HeadersToBackend are the authorization response headers that will be added
        to the original client request before sending it to the backend server.
        Note that coexisting headers will be overridden.
        If not specified, no authorization response headers will be added to the
        original client request.
    path : str, default is Undefined, optional
        Path is the path of the HTTP External Authorization service.
        If path is specified, the authorization request will be sent to that path,
        or else the authorization request will use the path of the original request.

        Please note that the original request path will be appended to the path specified here.
        For example, if the original request path is "/hello", and the path specified here is "/auth",
        then the path of the authorization request will be "/auth/hello". If the path is not specified,
        the path of the authorization request will be "/hello".
    """
    backendRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRef
    backendRefs?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRefsItems0]
    backendSettings?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettings
    headersToBackend?: [str]
    path?: str

    check:
        len(backendRefs) <= 16 if backendRefs

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRef:
    r"""
    BackendRef references a Kubernetes object that represents the
    backend server to which the authorization request will be sent.

    Deprecated: Use BackendRefs instead.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendRefsItems0:
    r"""
    BackendRef defines how an ObjectReference that is specific to BackendRef.

    Attributes
    ----------
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        Multiple fallback backends can be configured.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    fallback?: bool
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettings:
    r"""
    BackendSettings holds configuration for managing the connection
    to the backend.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreaker, default is Undefined, optional
        circuit breaker
    connection : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsDNS, default is Undefined, optional
        dns
    healthCheck : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHttp2, default is Undefined, optional
        http2
    loadBalancer : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancer, default is Undefined, optional
        load balancer
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsProxyProtocol, default is Undefined, optional
        proxy protocol
    retry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetry, default is Undefined, optional
        retry
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeout, default is Undefined, optional
        timeout
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreaker
    connection?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsConnection
    dns?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsDNS
    healthCheck?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHttp2
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancer
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsProxyProtocol
    retry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetry
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses < 600 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes < 600 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecExtAuthHTTPBackendSettingsTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwt:
    r"""
    JWT defines the configuration for JSON Web Token (JWT) authentication.

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Optional determines whether a missing JWT is acceptable, defaulting to false if not specified.
        Note: Even if optional is set to true, JWT authentication will still fail if an invalid JWT is presented.
    providers : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0], default is Undefined, required
        Providers defines the JSON Web Token (JWT) authentication provider type.
        When multiple JWT providers are specified, the JWT is considered valid if
        any of the providers successfully validate the JWT. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
    """
    optional?: bool
    providers: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0]

    check:
        len(providers) >= 1
        len(providers) <= 4

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0:
    r"""
    JWTProvider defines how a JSON Web Token (JWT) can be verified.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audiences is a list of JWT audiences allowed access. For additional details, see
        https://tools.ietf.org/html/rfc7519#section-4.1.3. If not provided, JWT audiences
        are not checked.
    claimToHeaders : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ClaimToHeadersItems0], default is Undefined, optional
        ClaimToHeaders is a list of JWT claims that must be extracted into HTTP request headers
        For examples, following config:
        The claim must be of type; string, int, double, bool. Array type claims are not supported
    extractFrom : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFrom, default is Undefined, optional
        extract from
    issuer : str, default is Undefined, optional
        Issuer is the principal that issued the JWT and takes the form of a URL or email address.
        For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.1 for
        URL format and https://rfc-editor.org/rfc/rfc5322.html for email format. If not provided,
        the JWT issuer is not checked.
    localJWKS : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKS, default is Undefined, optional
        local j w k s
    name : str, default is Undefined, required
        Name defines a unique name for the JWT provider. A name can have a variety of forms,
        including RFC1123 subdomains, RFC 1123 labels, or RFC 1035 labels.
    recomputeRoute : bool, default is Undefined, optional
        RecomputeRoute clears the route cache and recalculates the routing decision.
        This field must be enabled if the headers generated from the claim are used for
        route matching decisions. If the recomputation selects a new route, features targeting
        the new matched route will be applied.
    remoteJWKS : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKS, default is Undefined, optional
        remote j w k s
    """
    audiences?: [str]
    claimToHeaders?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ClaimToHeadersItems0]
    extractFrom?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFrom
    issuer?: str
    localJWKS?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKS
    name: str

    recomputeRoute?: bool
    remoteJWKS?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKS

    check:
        len(audiences) <= 8 if audiences
        len(issuer) <= 253 if issuer
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ClaimToHeadersItems0:
    r"""
    ClaimToHeader defines a configuration to convert JWT claims into HTTP headers

    Attributes
    ----------
    claim : str, default is Undefined, required
        Claim is the JWT Claim that should be saved into the header : it can be a nested claim of type
        (eg. "claim.nested.key", "sub"). The nested claim name must use dot "."
        to separate the JSON name path.
    header : str, default is Undefined, required
        Header defines the name of the HTTP request header that the JWT Claim will be saved into.
    """
    claim: str

    header: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFrom:
    r"""
    ExtractFrom defines different ways to extract the JWT token from HTTP request.
    If empty, it defaults to extract JWT token from the Authorization HTTP request header using Bearer schema
    or access_token from query parameters.

    Attributes
    ----------
    cookies : [str], default is Undefined, optional
        Cookies represents a list of cookie names to extract the JWT token from.
    headers : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFromHeadersItems0], default is Undefined, optional
        Headers represents a list of HTTP request headers to extract the JWT token from.
    params : [str], default is Undefined, optional
        Params represents a list of query parameters to extract the JWT token from.
    """
    cookies?: [str]
    headers?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFromHeadersItems0]
    params?: [str]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0ExtractFromHeadersItems0:
    r"""
    JWTHeaderExtractor defines an HTTP header location to extract JWT token

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the HTTP header name to retrieve the token
    valuePrefix : str, default is Undefined, optional
        ValuePrefix is the prefix that should be stripped before extracting the token.
        The format would be used by Envoy like "{ValuePrefix}<TOKEN>".
        For example, "Authorization: Bearer <TOKEN>", then the ValuePrefix="Bearer " with a space at the end.
    """
    name: str

    valuePrefix?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKS:
    r"""
    LocalJWKS defines how to get the JSON Web Key Sets (JWKS) from a local source.

    Attributes
    ----------
    inline : str, default is Undefined, optional
        Inline contains the value as an inline string.
    $type : str, default is "Inline", required
        Type is the type of method to use to read the body value.
        Valid values are Inline and ValueRef, default is Inline.
    valueRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKSValueRef, default is Undefined, optional
        value ref
    """
    inline?: str
    $type: "Inline" | "ValueRef" = "Inline"

    valueRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKSValueRef

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0LocalJWKSValueRef:
    r"""
    ValueRef is a reference to a local ConfigMap that contains the JSON Web Key Sets (JWKS).

    The value of key `jwks` in the ConfigMap will be used.
    If the key is not found, the first value in the ConfigMap will be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is Undefined, required
        Kind is kind of the referent. For example "HTTPRoute" or "Service".
    name : str, default is Undefined, required
        Name is the name of the referent.
    """
    group: str

    kind: str

    name: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKS:
    r"""
    RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote
    HTTP/HTTPS endpoint.

    Attributes
    ----------
    backendRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRef, default is Undefined, optional
        backend ref
    backendRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRefsItems0], default is Undefined, optional
        BackendRefs references a Kubernetes object that represents the
        backend server to which the authorization request will be sent.
    backendSettings : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettings, default is Undefined, optional
        backend settings
    uri : str, default is Undefined, required
        URI is the HTTPS URI to fetch the JWKS. Envoy's system trust bundle is used to validate the server certificate.
        If a custom trust bundle is needed, it can be specified in a BackendTLSConfig resource and target the BackendRefs.
    """
    backendRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRef
    backendRefs?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRefsItems0]
    backendSettings?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettings
    uri: str

    check:
        len(backendRefs) <= 16 if backendRefs
        len(uri) <= 253
        len(uri) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRef:
    r"""
    BackendRef references a Kubernetes object that represents the
    backend server to which the authorization request will be sent.

    Deprecated: Use BackendRefs instead.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendRefsItems0:
    r"""
    BackendRef defines how an ObjectReference that is specific to BackendRef.

    Attributes
    ----------
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        Multiple fallback backends can be configured.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    fallback?: bool
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettings:
    r"""
    BackendSettings holds configuration for managing the connection
    to the backend.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreaker, default is Undefined, optional
        circuit breaker
    connection : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsDNS, default is Undefined, optional
        dns
    healthCheck : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHttp2, default is Undefined, optional
        http2
    loadBalancer : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancer, default is Undefined, optional
        load balancer
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsProxyProtocol, default is Undefined, optional
        proxy protocol
    retry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetry, default is Undefined, optional
        retry
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeout, default is Undefined, optional
        timeout
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreaker
    connection?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsConnection
    dns?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsDNS
    healthCheck?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHttp2
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancer
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsProxyProtocol
    retry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetry
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses < 600 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes < 600 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecJwtProvidersItems0RemoteJWKSBackendSettingsTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidc:
    r"""
    OIDC defines the configuration for the OpenID Connect (OIDC) authentication.

    Attributes
    ----------
    clientID : str, default is Undefined, optional
        The client ID to be used in the OIDC
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).

        Only one of clientID or clientIDRef must be set.
    clientIDRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientIDRef, default is Undefined, optional
        client ID ref
    clientSecret : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientSecret, default is Undefined, required
        client secret
    cookieConfig : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieConfig, default is Undefined, optional
        cookie config
    cookieDomain : str, default is Undefined, optional
        The optional domain to set the access and ID token cookies on.
        If not set, the cookies will default to the host of the request, not including the subdomains.
        If set, the cookies will be set on the specified domain and all subdomains.
        This means that requests to any subdomain will not require reauthentication after users log in to the parent domain.
    cookieNames : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieNames, default is Undefined, optional
        cookie names
    defaultRefreshTokenTTL : str, default is Undefined, optional
        DefaultRefreshTokenTTL is the default lifetime of the refresh token.
        This field is only used when the exp (expiration time) claim is omitted in
        the refresh token or the refresh token is not JWT.

        If not specified, defaults to 604800s (one week).
        Note: this field is only applicable when the "refreshToken" field is set to true.
    defaultTokenTTL : str, default is Undefined, optional
        DefaultTokenTTL is the default lifetime of the id token and access token.
        Please note that Envoy will always use the expiry time from the response
        of the authorization server if it is provided. This field is only used when
        the expiry time is not provided by the authorization.

        If not specified, defaults to 0. In this case, the "expires_in" field in
        the authorization response must be set by the authorization server, or the
        OAuth flow will fail.
    denyRedirect : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirect, default is Undefined, optional
        deny redirect
    forwardAccessToken : bool, default is Undefined, optional
        ForwardAccessToken indicates whether the Envoy should forward the access token
        via the Authorization header Bearer scheme to the upstream.
        If not specified, defaults to false.
    logoutPath : str, default is Undefined, optional
        The path to log a user out, clearing their credential cookies.

        If not specified, uses a default logout path "/logout"
    passThroughAuthHeader : bool, default is Undefined, optional
        Skips OIDC authentication when the request contains a header that will be extracted by the JWT filter. Unless
        explicitly stated otherwise in the extractFrom field, this will be the "Authorization: Bearer ..." header.

        The passThroughAuthHeader option is typically used for non-browser clients that may not be able to handle OIDC
        redirects and wish to directly supply a token instead.

        If not specified, defaults to false.
    provider : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProvider, default is Undefined, required
        provider
    redirectURL : str, default is Undefined, optional
        The redirect URL to be used in the OIDC
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
        If not specified, uses the default redirect URI "%REQ(x-forwarded-proto)%://%REQ(:authority)%/oauth2/callback"
    refreshToken : bool, default is Undefined, optional
        RefreshToken indicates whether the Envoy should automatically refresh the
        id token and access token when they expire.
        When set to true, the Envoy will use the refresh token to get a new id token
        and access token when they expire.

        If not specified, defaults to false.
    resources : [str], default is Undefined, optional
        The OIDC resources to be used in the
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
    scopes : [str], default is Undefined, optional
        The OIDC scopes to be used in the
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
        The "openid" scope is always added to the list of scopes if not already
        specified.
    """
    clientID?: str
    clientIDRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientIDRef
    clientSecret: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientSecret

    cookieConfig?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieConfig
    cookieDomain?: str
    cookieNames?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieNames
    defaultRefreshTokenTTL?: str
    defaultTokenTTL?: str
    denyRedirect?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirect
    forwardAccessToken?: bool
    logoutPath?: str
    passThroughAuthHeader?: bool
    provider: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProvider

    redirectURL?: str
    refreshToken?: bool
    resources?: [str]
    scopes?: [str]

    check:
        len(clientID) >= 1 if clientID
        _regex_match(str(cookieDomain), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9]))*$") if cookieDomain
        _regex_match(str(defaultRefreshTokenTTL), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if defaultRefreshTokenTTL
        _regex_match(str(defaultTokenTTL), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if defaultTokenTTL

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientIDRef:
    r"""
    The Kubernetes secret which contains the client ID to be used in the
    [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
    Exactly one of clientID or clientIDRef must be set.
    This is an Opaque secret. The client ID should be stored in the key "client-id".

    Only one of clientID or clientIDRef must be set.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcClientSecret:
    r"""
    The Kubernetes secret which contains the OIDC client secret to be used in the
    [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).

    This is an Opaque secret. The client secret should be stored in the key
    "client-secret".

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieConfig:
    r"""
    CookieConfigs allows setting the SameSite attribute for OIDC cookies.
    By default, its unset.

    Attributes
    ----------
    sameSite : str, default is "Strict", optional
        same site
    """
    sameSite?: "Lax" | "Strict" | "None" = "Strict"

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcCookieNames:
    r"""
    The optional cookie name overrides to be used for Bearer and IdToken cookies in the
    [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
    If not specified, uses a randomly generated suffix

    Attributes
    ----------
    accessToken : str, default is Undefined, optional
        The name of the cookie used to store the AccessToken in the
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
        If not specified, defaults to "AccessToken-(randomly generated uid)"
    idToken : str, default is Undefined, optional
        The name of the cookie used to store the IdToken in the
        [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
        If not specified, defaults to "IdToken-(randomly generated uid)"
    """
    accessToken?: str
    idToken?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirect:
    r"""
    Any request that matches any of the provided matchers (with either tokens that are expired or missing tokens) will not be redirected to the OIDC Provider.
    This behavior can be useful for AJAX or machine requests.

    Attributes
    ----------
    headers : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirectHeadersItems0], default is Undefined, required
        Defines the headers to match against the request to deny redirect to the OIDC Provider.
    """
    headers: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirectHeadersItems0]

    check:
        len(headers) >= 1
        len(headers) <= 16

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcDenyRedirectHeadersItems0:
    r"""
    OIDCDenyRedirectHeader defines how a header is matched

    Attributes
    ----------
    name : str, default is Undefined, required
        Specifies the name of the header in the request.
    $type : str, default is "Exact", optional
        Type specifies how to match against a string.
    value : str, default is Undefined, required
        Value specifies the string value that the match must have.
    """
    name: str

    $type?: "Exact" | "Prefix" | "Suffix" | "RegularExpression" = "Exact"
    value: str

    check:
        len(name) >= 1
        len(value) <= 1024
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProvider:
    r"""
    The OIDC Provider configuration.

    Attributes
    ----------
    authorizationEndpoint : str, default is Undefined, optional
        The OIDC Provider's [authorization endpoint](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).
        If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
    backendRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRef, default is Undefined, optional
        backend ref
    backendRefs : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRefsItems0], default is Undefined, optional
        BackendRefs references a Kubernetes object that represents the
        backend server to which the authorization request will be sent.
    backendSettings : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettings, default is Undefined, optional
        backend settings
    endSessionEndpoint : str, default is Undefined, optional
        The OIDC Provider's [end session endpoint](https://openid.net/specs/openid-connect-core-1_0.html#RPLogout).

        If the end session endpoint is provided, EG will use it to log out the user from the OIDC Provider when the user accesses the logout path.
        EG will also try to discover the end session endpoint from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse) when authorizationEndpoint or tokenEndpoint is not provided.
    issuer : str, default is Undefined, required
        The OIDC Provider's [issuer identifier](https://openid.net/specs/openid-connect-discovery-1_0.html#IssuerDiscovery).
        Issuer MUST be a URI RFC 3986 [RFC3986] with a scheme component that MUST
        be https, a host component, and optionally, port and path components and
        no query or fragment components.
    tokenEndpoint : str, default is Undefined, optional
        The OIDC Provider's [token endpoint](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint).
        If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
    """
    authorizationEndpoint?: str
    backendRef?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRef
    backendRefs?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRefsItems0]
    backendSettings?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettings
    endSessionEndpoint?: str
    issuer: str

    tokenEndpoint?: str

    check:
        len(backendRefs) <= 16 if backendRefs
        len(issuer) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRef:
    r"""
    BackendRef references a Kubernetes object that represents the
    backend server to which the authorization request will be sent.

    Deprecated: Use BackendRefs instead.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendRefsItems0:
    r"""
    BackendRef defines how an ObjectReference that is specific to BackendRef.

    Attributes
    ----------
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        Multiple fallback backends can be configured.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    fallback?: bool
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettings:
    r"""
    BackendSettings holds configuration for managing the connection
    to the backend.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreaker, default is Undefined, optional
        circuit breaker
    connection : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsDNS, default is Undefined, optional
        dns
    healthCheck : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHttp2, default is Undefined, optional
        http2
    loadBalancer : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancer, default is Undefined, optional
        load balancer
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsProxyProtocol, default is Undefined, optional
        proxy protocol
    retry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetry, default is Undefined, optional
        retry
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeout, default is Undefined, optional
        timeout
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreaker
    connection?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsConnection
    dns?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsDNS
    healthCheck?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHttp2
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancer
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsProxyProtocol
    retry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetry
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses < 600 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes < 600 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecOidcProviderBackendSettingsTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRef:
    r"""
    TargetRef is the name of the resource this policy is being attached to.
    This policy and the TargetRef MUST be in the same namespace for this
    Policy to have effect

    Deprecated: use targetRefs/targetSelectors instead

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetRefsItems0:
    r"""
    LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
    direct policy to. This should be used as part of Policy resources that can
    target single resources. For more information on how this policy attachment
    mode works, and a sample Policy resource, refer to the policy attachment
    documentation for Gateway API.

    Note: This should only be used for direct policy attachment when references
    to SectionName are actually needed. In all other cases,
    LocalPolicyTargetReference should be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0:
    r"""
    gateway envoyproxy io v1alpha1 security policy spec target selectors items0

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group that this selector targets. Defaults to gateway.networking.k8s.io
    kind : str, default is Undefined, required
        Kind is the resource kind that this selector targets.
    matchExpressions : [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        MatchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels are the set of label selectors for identifying the targeted resource
    """
    group?: str = "gateway.networking.k8s.io"
    kind: str

    matchExpressions?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0MatchExpressionsItems0]
    matchLabels?: {str:str}

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicySpecTargetSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatus:
    r"""
    Status defines the current status of SecurityPolicy.

    Attributes
    ----------
    ancestors : [GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0], default is Undefined, required
        Ancestors is a list of ancestor resources (usually Gateways) that are
        associated with the policy, and the status of the policy with respect to
        each ancestor. When this policy attaches to a parent, the controller that
        manages the parent and the ancestors MUST add an entry to this list when
        the controller first sees the policy and SHOULD update the entry as
        appropriate when the relevant ancestor is modified.

        Note that choosing the relevant ancestor is left to the Policy designers;
        an important part of Policy design is designing the right object level at
        which to namespace this status.

        Note also that implementations MUST ONLY populate ancestor status for
        the Ancestor resources they are responsible for. Implementations MUST
        use the ControllerName field to uniquely identify the entries in this list
        that they are responsible for.

        Note that to achieve this, the list of PolicyAncestorStatus structs
        MUST be treated as a map with a composite key, made up of the AncestorRef
        and ControllerName fields combined.

        A maximum of 16 ancestors will be represented in this list. An empty list
        means the Policy is not relevant for any ancestors.

        If this slice is full, implementations MUST NOT add further entries.
        Instead they MUST consider the policy unimplementable and signal that
        on any related resources such as the ancestor that would be referenced
        here. For example, if this list was full on BackendTLSPolicy, no
        additional Gateways would be able to reference the Service targeted by
        the BackendTLSPolicy.
    """
    ancestors: [GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0]

    check:
        len(ancestors) <= 16

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0:
    r"""
    PolicyAncestorStatus describes the status of a route with respect to an
    associated Ancestor.

    Ancestors refer to objects that are either the Target of a policy or above it
    in terms of object hierarchy. For example, if a policy targets a Service, the
    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
    useful object to place Policy status on, so we recommend that implementations
    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
    have a _very_ good reason otherwise.

    In the context of policy attachment, the Ancestor is used to distinguish which
    resource results in a distinct application of this policy. For example, if a policy
    targets a Service, it may have a distinct result per attached Gateway.

    Policies targeting the same resource may have different effects depending on the
    ancestors of those resources. For example, different Gateways targeting the same
    Service may have different capabilities, especially if they have different underlying
    implementations.

    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
    used as a backend in a HTTPRoute that is itself attached to a Gateway.
    In this case, the relevant object for status is the Gateway, and that is the
    ancestor object referred to in this status.

    Note that a parent is also an ancestor, so for objects where the parent is the
    relevant object for status, this struct SHOULD still be used.

    This struct is intended to be used in a slice that's effectively a map,
    with a composite key made up of the AncestorRef and the ControllerName.

    Attributes
    ----------
    ancestorRef : GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0AncestorRef, default is Undefined, required
        ancestor ref
    conditions : [GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0ConditionsItems0], default is Undefined, optional
        Conditions describes the status of the Policy with respect to the given Ancestor.
    controllerName : str, default is Undefined, required
        ControllerName is a domain/path string that indicates the name of the
        controller that wrote this status. This corresponds with the
        controllerName field on GatewayClass.

        Example: "example.net/gateway-controller".

        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
        valid Kubernetes names
        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

        Controllers MUST populate this field when writing status. Controllers should ensure that
        entries to status populated with their ControllerName are cleaned up when they are no
        longer necessary.
    """
    ancestorRef: GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0AncestorRef

    conditions?: [GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0ConditionsItems0]
    controllerName: str

    check:
        len(conditions) >= 1 if conditions
        len(conditions) <= 8 if conditions
        len(controllerName) <= 253
        len(controllerName) >= 1
        _regex_match(str(controllerName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$")

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0AncestorRef:
    r"""
    AncestorRef corresponds with a ParentRef in the spec that this
    PolicyAncestorStatus struct describes the status of.

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group of the referent.
        When unspecified, "gateway.networking.k8s.io" is inferred.
        To set the core API group (such as for a "Service" kind referent),
        Group must be explicitly set to "" (empty string).

        Support: Core
    kind : str, default is "Gateway", optional
        Kind is kind of the referent.

        There are two kinds of parent resources with "Core" support:

        * Gateway (Gateway conformance profile)
        * Service (Mesh conformance profile, ClusterIP Services only)

        Support for other resources is Implementation-Specific.
    name : str, default is Undefined, required
        Name is the name of the referent.

        Support: Core
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referent. When unspecified, this refers
        to the local namespace of the Route.

        Note that there are specific rules for ParentRefs which cross namespace
        boundaries. Cross-namespace references are only valid if they are explicitly
        allowed by something in the namespace they are referring to. For example:
        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
        generic way to enable any other kind of cross-namespace reference.

        <gateway:experimental:description>
        ParentRefs from a Route to a Service in the same namespace are "producer"
        routes, which apply default routing rules to inbound connections from
        any namespace to the Service.

        ParentRefs from a Route to a Service in a different namespace are
        "consumer" routes, and these routing rules are only applied to outbound
        connections originating from the same namespace as the Route, for which
        the intended destination of the connections are a Service targeted as a
        ParentRef of the Route.
        </gateway:experimental:description>

        Support: Core
    port : int, default is Undefined, optional
        Port is the network port this Route targets. It can be interpreted
        differently based on the type of parent resource.

        When the parent resource is a Gateway, this targets all listeners
        listening on the specified port that also support this kind of Route(and
        select this Route). It's not recommended to set `Port` unless the
        networking behaviors specified in a Route must apply to a specific port
        as opposed to a listener(s) whose port(s) may be changed. When both Port
        and SectionName are specified, the name and port of the selected listener
        must match both specified values.

        <gateway:experimental:description>
        When the parent resource is a Service, this targets a specific port in the
        Service spec. When both Port (experimental) and SectionName are specified,
        the name and port of the selected port must match both specified values.
        </gateway:experimental:description>

        Implementations MAY choose to support other parent resources.
        Implementations supporting other types of parent resources MUST clearly
        document how/if Port is interpreted.

        For the purpose of status, an attachment is considered successful as
        long as the parent resource accepts it partially. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
        from the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route,
        the Route MUST be considered detached from the Gateway.

        Support: Extended
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. In the
        following resources, SectionName is interpreted as the following:

        * Gateway: Listener name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.
        * Service: Port name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.

        Implementations MAY choose to support attaching Routes to other resources.
        If that is the case, they MUST clearly document how SectionName is
        interpreted.

        When unspecified (empty string), this will reference the entire resource.
        For the purpose of status, an attachment is considered successful if at
        least one section in the parent resource accepts it. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
        the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route, the
        Route MUST be considered detached from the Gateway.

        Support: Core
    """
    group?: str = "gateway.networking.k8s.io"
    kind?: str = "Gateway"
    name: str

    namespace?: str
    port?: int
    sectionName?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1SecurityPolicyStatusAncestorsItems0ConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

