"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema BackendTrafficPolicy:
    r"""
    BackendTrafficPolicy allows the user to configure the behavior of the connection
    between the Envoy Proxy listener and the backend service.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BackendTrafficPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpec, default is Undefined, required
        spec
    status : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatus, default is Undefined, optional
        status
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "BackendTrafficPolicy" = "BackendTrafficPolicy"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpec

    status?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatus

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpec:
    r"""
    spec defines the desired state of BackendTrafficPolicy.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreaker, default is Undefined, optional
        circuit breaker
    compression : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCompressionItems0], default is Undefined, optional
        The compression config for the http streams.
    connection : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecDNS, default is Undefined, optional
        dns
    faultInjection : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjection, default is Undefined, optional
        fault injection
    healthCheck : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHttp2, default is Undefined, optional
        http2
    httpUpgrade : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0], default is Undefined, optional
        HTTPUpgrade defines the configuration for HTTP protocol upgrades.
        If not specified, the default upgrade configuration(websocket) will be used.
    loadBalancer : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancer, default is Undefined, optional
        load balancer
    mergeType : str, default is Undefined, optional
        MergeType determines how this configuration is merged with existing BackendTrafficPolicy
        configurations targeting a parent resource. When set, this configuration will be merged
        into a parent BackendTrafficPolicy (i.e. the one targeting a Gateway or Listener).
        This field cannot be set when targeting a parent resource (Gateway).
        If unset, no merging occurs, and only the most specific configuration takes effect.
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecProxyProtocol, default is Undefined, optional
        proxy protocol
    rateLimit : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimit, default is Undefined, optional
        rate limit
    requestBuffer : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRequestBuffer, default is Undefined, optional
        request buffer
    responseOverride : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0], default is Undefined, optional
        ResponseOverride defines the configuration to override specific responses with a custom one.
        If multiple configurations are specified, the first one to match wins.
    retry : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetry, default is Undefined, optional
        retry
    targetRef : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRef, default is Undefined, optional
        target ref
    targetRefs : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRefsItems0], default is Undefined, optional
        TargetRefs are the names of the Gateway resources this policy
        is being attached to.
    targetSelectors : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0], default is Undefined, optional
        TargetSelectors allow targeting resources for this policy based on labels
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTCPKeepalive, default is Undefined, optional
        tcp keepalive
    telemetry : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetry, default is Undefined, optional
        telemetry
    timeout : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeout, default is Undefined, optional
        timeout
    useClientProtocol : bool, default is Undefined, optional
        UseClientProtocol configures Envoy to prefer sending requests to backends using
        the same HTTP protocol that the incoming request used. Defaults to false, which means
        that Envoy will use the protocol indicated by the attached BackendRef.
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreaker
    compression?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCompressionItems0]
    connection?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecConnection
    dns?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecDNS
    faultInjection?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjection
    healthCheck?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHttp2
    httpUpgrade?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0]
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancer
    mergeType?: str
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecProxyProtocol
    rateLimit?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimit
    requestBuffer?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRequestBuffer
    responseOverride?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0]
    retry?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetry
    targetRef?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRef
    targetRefs?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRefsItems0]
    targetSelectors?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0]
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTCPKeepalive
    telemetry?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetry
    timeout?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeout
    useClientProtocol?: bool

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecCompressionItems0:
    r"""
    Compression defines the config of enabling compression.
    This can help reduce the bandwidth at the expense of higher CPU.

    Attributes
    ----------
    brotli : any, default is Undefined, optional
        The configuration for Brotli compressor.
    gzip : any, default is Undefined, optional
        The configuration for GZIP compressor.
    $type : str, default is Undefined, required
        CompressorType defines the compressor type to use for compression.
    """
    brotli?: any
    gzip?: any
    $type: "Gzip" | "Brotli"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjection:
    r"""
    FaultInjection defines the fault injection policy to be applied. This configuration can be used to
    inject delays and abort requests to mimic failure scenarios such as service failures and overloads

    Attributes
    ----------
    abort : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionAbort, default is Undefined, optional
        abort
    delay : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionDelay, default is Undefined, optional
        delay
    """
    abort?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionAbort
    delay?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionDelay

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionAbort:
    r"""
    If specified, the request will be aborted if it meets the configuration criteria.

    Attributes
    ----------
    grpcStatus : int, default is Undefined, optional
        GrpcStatus specifies the GRPC status code to be returned
    httpStatus : int, default is Undefined, optional
        StatusCode specifies the HTTP status code to be returned
    percentage : float, default is 100, optional
        Percentage specifies the percentage of requests to be aborted. Default 100%, if set 0, no requests will be aborted. Accuracy to 0.0001%.
    """
    grpcStatus?: int
    httpStatus?: int
    percentage?: float = 100

    check:
        httpStatus <= 600 if httpStatus not in [None, Undefined]
        httpStatus >= 200 if httpStatus not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecFaultInjectionDelay:
    r"""
    If specified, a delay will be injected into the request.

    Attributes
    ----------
    fixedDelay : str, default is Undefined, required
        FixedDelay specifies the fixed delay duration
    percentage : float, default is 100, optional
        Percentage specifies the percentage of requests to be delayed. Default 100%, if set 0, no requests will be delayed. Accuracy to 0.0001%.
    """
    fixedDelay: str

    percentage?: float = 100

    check:
        _regex_match(str(fixedDelay), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0:
    r"""
    ProtocolUpgradeConfig specifies the configuration for protocol upgrades.

    Attributes
    ----------
    connect : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0Connect, default is Undefined, optional
        connect
    $type : str, default is Undefined, required
        Type is the case-insensitive type of protocol upgrade.
        e.g. `websocket`, `CONNECT`, `spdy/3.1` etc.
    """
    connect?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0Connect
    $type: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHTTPUpgradeItems0Connect:
    r"""
    Connect specifies the configuration for the CONNECT config.
    This is allowed only when type is CONNECT.

    Attributes
    ----------
    terminate : bool, default is Undefined, optional
        Terminate the CONNECT request, and forwards the payload as raw TCP data.
    """
    terminate?: bool

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses <= 599 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimit:
    r"""
    RateLimit allows the user to limit the number of incoming requests
    to a predefined value based on attributes within the traffic flow.

    Attributes
    ----------
    global : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobal, default is Undefined, optional
        global
    local : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocal, default is Undefined, optional
        local
    $type : str, default is Undefined, required
        Type decides the scope for the RateLimits.
        Valid RateLimitType values are "Global" or "Local".
    """
    global?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobal
    local?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocal
    $type: "Global" | "Local"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobal:
    r"""
    Global defines global rate limit configuration.

    Attributes
    ----------
    rules : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0], default is Undefined, required
        Rules are a list of RateLimit selectors and limits. Each rule and its
        associated limit is applied in a mutually exclusive way. If a request
        matches multiple rules, each of their associated limits get applied, so a
        single request might increase the rate limit counters for multiple rules
        if selected. The rate limit service will return a logical OR of the individual
        rate limit decisions of all matching rules. For example, if a request
        matches two rules, one rate limited and one not, the final decision will be
        to rate limit the request.
    """
    rules: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0]

    check:
        len(rules) <= 64

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0:
    r"""
    RateLimitRule defines the semantics for matching attributes
    from the incoming requests, and setting limits for them.

    Attributes
    ----------
    clientSelectors : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0], default is Undefined, optional
        ClientSelectors holds the list of select conditions to select
        specific clients using attributes from the traffic flow.
        All individual select conditions must hold True for this rule
        and its limit to be applied.

        If no client selectors are specified, the rule applies to all traffic of
        the targeted Route.

        If the policy targets a Gateway, the rule applies to each Route of the Gateway.
        Please note that each Route has its own rate limit counters. For example,
        if a Gateway has two Routes, and the policy has a rule with limit 10rps,
        each Route will have its own 10rps limit.
    cost : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Cost, default is Undefined, optional
        cost
    limit : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Limit, default is Undefined, required
        limit
    shared : bool, default is Undefined, optional
        Shared determines whether this rate limit rule applies across all the policy targets.
        If set to true, the rule is treated as a common bucket and is shared across all policy targets (xRoutes).
        Default: false.
    """
    clientSelectors?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0]
    cost?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Cost
    limit: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Limit

    shared?: bool

    check:
        len(clientSelectors) <= 8 if clientSelectors

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0:
    r"""
    RateLimitSelectCondition specifies the attributes within the traffic flow that can
    be used to select a subset of clients to be ratelimited.
    All the individual conditions must hold True for the overall condition to hold True.

    Attributes
    ----------
    headers : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0HeadersItems0], default is Undefined, optional
        Headers is a list of request headers to match. Multiple header values are ANDed together,
        meaning, a request MUST match all the specified headers.
        At least one of headers or sourceCIDR condition must be specified.
    sourceCIDR : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0SourceCIDR, default is Undefined, optional
        source c ID r
    """
    headers?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0HeadersItems0]
    sourceCIDR?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0SourceCIDR

    check:
        len(headers) <= 16 if headers

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0HeadersItems0:
    r"""
    HeaderMatch defines the match attributes within the HTTP Headers of the request.

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        Invert specifies whether the value match result will be inverted.
        Do not set this field when Type="Distinct", implying matching on any/all unique
        values within the header.
    name : str, default is Undefined, required
        Name of the HTTP header.
        The header name is case-insensitive unless PreserveHeaderCase is set to true.
        For example, "Foo" and "foo" are considered the same header.
    $type : str, default is "Exact", optional
        Type specifies how to match against the value of the header.
    value : str, default is Undefined, optional
        Value within the HTTP header.
        Do not set this field when Type="Distinct", implying matching on any/all unique
        values within the header.
    """
    invert?: bool = False
    name: str

    $type?: "Exact" | "RegularExpression" | "Distinct" = "Exact"
    value?: str

    check:
        len(name) <= 256
        len(name) >= 1
        len(value) <= 1024 if value

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0ClientSelectorsItems0SourceCIDR:
    r"""
    SourceCIDR is the client IP Address range to match on.
    At least one of headers or sourceCIDR condition must be specified.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        type
    value : str, default is Undefined, required
        Value is the IP CIDR that represents the range of Source IP Addresses of the client.
        These could also be the intermediate addresses through which the request has flown through and is part of the  `X-Forwarded-For` header.
        For example, `192.168.0.1/32`, `192.168.0.0/24`, `001:db8::/64`.
    """
    $type?: "Exact" | "Distinct" = "Exact"
    value: str

    check:
        len(value) <= 256
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Cost:
    r"""
    Cost specifies the cost of requests and responses for the rule.

    This is optional and if not specified, the default behavior is to reduce the rate limit counters by 1 on
    the request path and do not reduce the rate limit counters on the response path.

    Attributes
    ----------
    request : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequest, default is Undefined, optional
        request
    response : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponse, default is Undefined, optional
        response
    """
    request?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequest
    response?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponse

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequest:
    r"""
    Request specifies the number to reduce the rate limit counters
    on the request path. If this is not specified, the default behavior
    is to reduce the rate limit counters by 1.

    When Envoy receives a request that matches the rule, it tries to reduce the
    rate limit counters by the specified number. If the counter doesn't have
    enough capacity, the request is rate limited.

    Attributes
    ----------
    from : str, default is Undefined, required
        From specifies where to get the rate limit cost. Currently, only "Number" and "Metadata" are supported.
    metadata : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequestMetadata, default is Undefined, optional
        metadata
    number : int, default is Undefined, optional
        Number specifies the fixed usage number to reduce the rate limit counters.
        Using zero can be used to only check the rate limit counters without reducing them.
    """
    from: "Number" | "Metadata"

    metadata?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequestMetadata
    number?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostRequestMetadata:
    r"""
    Metadata specifies the per-request metadata to retrieve the usage number from.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key to retrieve the usage number from the filter metadata.
    namespace : str, default is Undefined, required
        Namespace is the namespace of the dynamic metadata.
    """
    key: str

    namespace: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponse:
    r"""
    Response specifies the number to reduce the rate limit counters
    after the response is sent back to the client or the request stream is closed.

    The cost is used to reduce the rate limit counters for the matching requests.
    Since the reduction happens after the request stream is complete, the rate limit
    won't be enforced for the current request, but for the subsequent matching requests.

    This is optional and if not specified, the rate limit counters are not reduced
    on the response path.

    Currently, this is only supported for HTTP Global Rate Limits.

    Attributes
    ----------
    from : str, default is Undefined, required
        From specifies where to get the rate limit cost. Currently, only "Number" and "Metadata" are supported.
    metadata : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponseMetadata, default is Undefined, optional
        metadata
    number : int, default is Undefined, optional
        Number specifies the fixed usage number to reduce the rate limit counters.
        Using zero can be used to only check the rate limit counters without reducing them.
    """
    from: "Number" | "Metadata"

    metadata?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponseMetadata
    number?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0CostResponseMetadata:
    r"""
    Metadata specifies the per-request metadata to retrieve the usage number from.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key to retrieve the usage number from the filter metadata.
    namespace : str, default is Undefined, required
        Namespace is the namespace of the dynamic metadata.
    """
    key: str

    namespace: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitGlobalRulesItems0Limit:
    r"""
    Limit holds the rate limit values.
    This limit is applied for traffic flows when the selectors
    compute to True, causing the request to be counted towards the limit.
    The limit is enforced and the request is ratelimited, i.e. a response with
    429 HTTP status code is sent back to the client when
    the selected requests have reached the limit.

    Attributes
    ----------
    requests : int, default is Undefined, required
        requests
    unit : str, default is Undefined, required
        RateLimitUnit specifies the intervals for setting rate limits.
        Valid RateLimitUnit values are "Second", "Minute", "Hour", "Day", "Month" and "Year".
    """
    requests: int

    unit: "Second" | "Minute" | "Hour" | "Day" | "Month" | "Year"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocal:
    r"""
    Local defines local rate limit configuration.

    Attributes
    ----------
    rules : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0], default is Undefined, optional
        Rules are a list of RateLimit selectors and limits. If a request matches
        multiple rules, the strictest limit is applied. For example, if a request
        matches two rules, one with 10rps and one with 20rps, the final limit will
        be based on the rule with 10rps.
    """
    rules?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0]

    check:
        len(rules) <= 16 if rules

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0:
    r"""
    RateLimitRule defines the semantics for matching attributes
    from the incoming requests, and setting limits for them.

    Attributes
    ----------
    clientSelectors : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0], default is Undefined, optional
        ClientSelectors holds the list of select conditions to select
        specific clients using attributes from the traffic flow.
        All individual select conditions must hold True for this rule
        and its limit to be applied.

        If no client selectors are specified, the rule applies to all traffic of
        the targeted Route.

        If the policy targets a Gateway, the rule applies to each Route of the Gateway.
        Please note that each Route has its own rate limit counters. For example,
        if a Gateway has two Routes, and the policy has a rule with limit 10rps,
        each Route will have its own 10rps limit.
    cost : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Cost, default is Undefined, optional
        cost
    limit : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Limit, default is Undefined, required
        limit
    shared : bool, default is Undefined, optional
        Shared determines whether this rate limit rule applies across all the policy targets.
        If set to true, the rule is treated as a common bucket and is shared across all policy targets (xRoutes).
        Default: false.
    """
    clientSelectors?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0]
    cost?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Cost
    limit: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Limit

    shared?: bool

    check:
        len(clientSelectors) <= 8 if clientSelectors

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0:
    r"""
    RateLimitSelectCondition specifies the attributes within the traffic flow that can
    be used to select a subset of clients to be ratelimited.
    All the individual conditions must hold True for the overall condition to hold True.

    Attributes
    ----------
    headers : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0HeadersItems0], default is Undefined, optional
        Headers is a list of request headers to match. Multiple header values are ANDed together,
        meaning, a request MUST match all the specified headers.
        At least one of headers or sourceCIDR condition must be specified.
    sourceCIDR : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0SourceCIDR, default is Undefined, optional
        source c ID r
    """
    headers?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0HeadersItems0]
    sourceCIDR?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0SourceCIDR

    check:
        len(headers) <= 16 if headers

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0HeadersItems0:
    r"""
    HeaderMatch defines the match attributes within the HTTP Headers of the request.

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        Invert specifies whether the value match result will be inverted.
        Do not set this field when Type="Distinct", implying matching on any/all unique
        values within the header.
    name : str, default is Undefined, required
        Name of the HTTP header.
        The header name is case-insensitive unless PreserveHeaderCase is set to true.
        For example, "Foo" and "foo" are considered the same header.
    $type : str, default is "Exact", optional
        Type specifies how to match against the value of the header.
    value : str, default is Undefined, optional
        Value within the HTTP header.
        Do not set this field when Type="Distinct", implying matching on any/all unique
        values within the header.
    """
    invert?: bool = False
    name: str

    $type?: "Exact" | "RegularExpression" | "Distinct" = "Exact"
    value?: str

    check:
        len(name) <= 256
        len(name) >= 1
        len(value) <= 1024 if value

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0ClientSelectorsItems0SourceCIDR:
    r"""
    SourceCIDR is the client IP Address range to match on.
    At least one of headers or sourceCIDR condition must be specified.

    Attributes
    ----------
    $type : str, default is "Exact", optional
        type
    value : str, default is Undefined, required
        Value is the IP CIDR that represents the range of Source IP Addresses of the client.
        These could also be the intermediate addresses through which the request has flown through and is part of the  `X-Forwarded-For` header.
        For example, `192.168.0.1/32`, `192.168.0.0/24`, `001:db8::/64`.
    """
    $type?: "Exact" | "Distinct" = "Exact"
    value: str

    check:
        len(value) <= 256
        len(value) >= 1

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Cost:
    r"""
    Cost specifies the cost of requests and responses for the rule.

    This is optional and if not specified, the default behavior is to reduce the rate limit counters by 1 on
    the request path and do not reduce the rate limit counters on the response path.

    Attributes
    ----------
    request : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequest, default is Undefined, optional
        request
    response : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponse, default is Undefined, optional
        response
    """
    request?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequest
    response?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponse

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequest:
    r"""
    Request specifies the number to reduce the rate limit counters
    on the request path. If this is not specified, the default behavior
    is to reduce the rate limit counters by 1.

    When Envoy receives a request that matches the rule, it tries to reduce the
    rate limit counters by the specified number. If the counter doesn't have
    enough capacity, the request is rate limited.

    Attributes
    ----------
    from : str, default is Undefined, required
        From specifies where to get the rate limit cost. Currently, only "Number" and "Metadata" are supported.
    metadata : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequestMetadata, default is Undefined, optional
        metadata
    number : int, default is Undefined, optional
        Number specifies the fixed usage number to reduce the rate limit counters.
        Using zero can be used to only check the rate limit counters without reducing them.
    """
    from: "Number" | "Metadata"

    metadata?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequestMetadata
    number?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostRequestMetadata:
    r"""
    Metadata specifies the per-request metadata to retrieve the usage number from.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key to retrieve the usage number from the filter metadata.
    namespace : str, default is Undefined, required
        Namespace is the namespace of the dynamic metadata.
    """
    key: str

    namespace: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponse:
    r"""
    Response specifies the number to reduce the rate limit counters
    after the response is sent back to the client or the request stream is closed.

    The cost is used to reduce the rate limit counters for the matching requests.
    Since the reduction happens after the request stream is complete, the rate limit
    won't be enforced for the current request, but for the subsequent matching requests.

    This is optional and if not specified, the rate limit counters are not reduced
    on the response path.

    Currently, this is only supported for HTTP Global Rate Limits.

    Attributes
    ----------
    from : str, default is Undefined, required
        From specifies where to get the rate limit cost. Currently, only "Number" and "Metadata" are supported.
    metadata : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponseMetadata, default is Undefined, optional
        metadata
    number : int, default is Undefined, optional
        Number specifies the fixed usage number to reduce the rate limit counters.
        Using zero can be used to only check the rate limit counters without reducing them.
    """
    from: "Number" | "Metadata"

    metadata?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponseMetadata
    number?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0CostResponseMetadata:
    r"""
    Metadata specifies the per-request metadata to retrieve the usage number from.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key to retrieve the usage number from the filter metadata.
    namespace : str, default is Undefined, required
        Namespace is the namespace of the dynamic metadata.
    """
    key: str

    namespace: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRateLimitLocalRulesItems0Limit:
    r"""
    Limit holds the rate limit values.
    This limit is applied for traffic flows when the selectors
    compute to True, causing the request to be counted towards the limit.
    The limit is enforced and the request is ratelimited, i.e. a response with
    429 HTTP status code is sent back to the client when
    the selected requests have reached the limit.

    Attributes
    ----------
    requests : int, default is Undefined, required
        requests
    unit : str, default is Undefined, required
        RateLimitUnit specifies the intervals for setting rate limits.
        Valid RateLimitUnit values are "Second", "Minute", "Hour", "Day", "Month" and "Year".
    """
    requests: int

    unit: "Second" | "Minute" | "Hour" | "Day" | "Month" | "Year"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRequestBuffer:
    r"""
    RequestBuffer allows the gateway to buffer and fully receive each request from a client before continuing to send the request
    upstream to the backends. This can be helpful to shield your backend servers from slow clients, and also to enforce a maximum size per request
    as any requests larger than the buffer size will be rejected.

    This can have a negative performance impact so should only be enabled when necessary.

    When enabling this option, you should also configure your connection buffer size to account for these request buffers. There will also be an
    increase in memory usage for Envoy that should be accounted for in your deployment settings.

    Attributes
    ----------
    limit : int | str, default is Undefined, optional
        Limit specifies the maximum allowed size in bytes for each incoming request buffer.
        If exceeded, the request will be rejected with HTTP 413 Content Too Large.

        Accepts values in resource.Quantity format (e.g., "10Mi", "500Ki").
    """
    limit?: int | str

    check:
        _regex_match(str(limit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limit
        _regex_match(str(limit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if limit

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0:
    r"""
    ResponseOverride defines the configuration to override specific responses with a custom one.

    Attributes
    ----------
    match : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Match, default is Undefined, required
        match
    redirect : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Redirect, default is Undefined, optional
        redirect
    response : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Response, default is Undefined, optional
        response
    """
    match: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Match

    redirect?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Redirect
    response?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Response

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Match:
    r"""
    Match configuration.

    Attributes
    ----------
    statusCodes : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0], default is Undefined, required
        Status code to match on. The match evaluates to true if any of the matches are successful.
    """
    statusCodes: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0]

    check:
        len(statusCodes) >= 1
        len(statusCodes) <= 50

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0:
    r"""
    StatusCodeMatch defines the configuration for matching a status code.

    Attributes
    ----------
    range : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0Range, default is Undefined, optional
        range
    $type : str, default is "Value", required
        Type is the type of value.
        Valid values are Value and Range, default is Value.
    value : int, default is Undefined, optional
        Value contains the value of the status code.
    """
    range?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0Range
    $type: str = "Value"

    value?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0MatchStatusCodesItems0Range:
    r"""
    Range contains the range of status codes.

    Attributes
    ----------
    end : int, default is Undefined, required
        End of the range, including the end value.
    start : int, default is Undefined, required
        Start of the range, including the start value.
    """
    end: int

    start: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Redirect:
    r"""
    Redirect configuration

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        Hostname is the hostname to be used in the value of the `Location`
        header in the response.
        When empty, the hostname in the `Host` header of the request is used.
    path : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0RedirectPath, default is Undefined, optional
        path
    port : int, default is Undefined, optional
        Port is the port to be used in the value of the `Location`
        header in the response.

        If redirect scheme is not-empty, the well-known port associated with the redirect scheme will be used.
        Specifically "http" to port 80 and "https" to port 443. If the redirect scheme does not have a
        well-known port or redirect scheme is empty, the listener port of the Gateway will be used.

        Port will not be added in the 'Location' header if scheme is HTTP and port is 80
        or scheme is HTTPS and port is 443.
    scheme : str, default is Undefined, optional
        Scheme is the scheme to be used in the value of the `Location` header in
        the response. When empty, the scheme of the request is used.
    statusCode : int, default is 302, optional
        StatusCode is the HTTP status code to be used in response.
    """
    hostname?: str
    path?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0RedirectPath
    port?: int
    scheme?: "http" | "https"
    statusCode?: 301 | 302 = 302

    check:
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0RedirectPath:
    r"""
    Path defines parameters used to modify the path of the incoming request.
    The modified path is then used to construct the `Location` header. When
    empty, the request path is used as-is.
    Only ReplaceFullPath path modifier is supported currently.

    Attributes
    ----------
    replaceFullPath : str, default is Undefined, optional
        ReplaceFullPath specifies the value with which to replace the full path
        of a request during a rewrite or redirect.
    replacePrefixMatch : str, default is Undefined, optional
        ReplacePrefixMatch specifies the value with which to replace the prefix
        match of a request during a rewrite or redirect. For example, a request
        to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
        of "/xyz" would be modified to "/xyz/bar".

        Note that this matches the behavior of the PathPrefix match type. This
        matches full path elements. A path element refers to the list of labels
        in the path split by the `/` separator. When specified, a trailing `/` is
        ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
        match the prefix `/abc`, but the path `/abcd` would not.

        ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
        Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
        the implementation setting the Accepted Condition for the Route to `status: False`.

        Request Path | Prefix Match | Replace Prefix | Modified Path
    $type : str, default is Undefined, required
        Type defines the type of path modifier. Additional types may be
        added in a future release of the API.

        Note that values may be added to this enum, implementations
        must ensure that unknown values will not cause a crash.

        Unknown values here must result in the implementation setting the
        Accepted Condition for the Route to `status: False`, with a
        Reason of `UnsupportedValue`.
    """
    replaceFullPath?: str
    replacePrefixMatch?: str
    $type: "ReplaceFullPath" | "ReplacePrefixMatch"

    check:
        len(replaceFullPath) <= 1024 if replaceFullPath
        len(replacePrefixMatch) <= 1024 if replacePrefixMatch

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0Response:
    r"""
    Response configuration.

    Attributes
    ----------
    body : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBody, default is Undefined, optional
        body
    contentType : str, default is Undefined, optional
        Content Type of the response. This will be set in the Content-Type header.
    statusCode : int, default is Undefined, optional
        Status Code of the Custom Response
        If unset, does not override the status of response.
    """
    body?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBody
    contentType?: str
    statusCode?: int

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBody:
    r"""
    Body of the Custom Response
    Supports Envoy command operators for dynamic content (see https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators).

    Attributes
    ----------
    inline : str, default is Undefined, optional
        Inline contains the value as an inline string.
    $type : str, default is "Inline", required
        Type is the type of method to use to read the body value.
        Valid values are Inline and ValueRef, default is Inline.
    valueRef : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBodyValueRef, default is Undefined, optional
        value ref
    """
    inline?: str
    $type: str = "Inline"

    valueRef?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBodyValueRef

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecResponseOverrideItems0ResponseBodyValueRef:
    r"""
    ValueRef contains the contents of the body
    specified as a local object reference.
    Only a reference to ConfigMap is supported.

    The value of key `response.body` in the ConfigMap will be used as the response body.
    If the key is not found, the first value in the ConfigMap will be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is Undefined, required
        Kind is kind of the referent. For example "HTTPRoute" or "Service".
    name : str, default is Undefined, required
        Name is the name of the referent.
    """
    group: str

    kind: str

    name: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes <= 599 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRef:
    r"""
    TargetRef is the name of the resource this policy is being attached to.
    This policy and the TargetRef MUST be in the same namespace for this
    Policy to have effect

    Deprecated: use targetRefs/targetSelectors instead

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetRefsItems0:
    r"""
    LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
    direct policy to. This should be used as part of Policy resources that can
    target single resources. For more information on how this policy attachment
    mode works, and a sample Policy resource, refer to the policy attachment
    documentation for Gateway API.

    Note: This should only be used for direct policy attachment when references
    to SectionName are actually needed. In all other cases,
    LocalPolicyTargetReference should be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0:
    r"""
    gateway envoyproxy io v1alpha1 backend traffic policy spec target selectors items0

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group that this selector targets. Defaults to gateway.networking.k8s.io
    kind : str, default is Undefined, required
        Kind is the resource kind that this selector targets.
    matchExpressions : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        MatchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels are the set of label selectors for identifying the targeted resource
    """
    group?: str = "gateway.networking.k8s.io"
    kind: str

    matchExpressions?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0]
    matchLabels?: {str:str}

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTargetSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetry:
    r"""
    Telemetry configures the telemetry settings for the policy target (Gateway or xRoute).
    This will override the telemetry settings in the EnvoyProxy resource.

    Attributes
    ----------
    tracing : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracing, default is Undefined, optional
        tracing
    """
    tracing?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracing

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracing:
    r"""
    Tracing configures the tracing settings for the backend or HTTPRoute.

    Attributes
    ----------
    customTags : {str:GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnon}, default is Undefined, optional
        CustomTags defines the custom tags to add to each span.
        If provider is kubernetes, pod name and namespace are added by default.
    samplingFraction : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingSamplingFraction, default is Undefined, optional
        sampling fraction
    """
    customTags?: {str:GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnon}
    samplingFraction?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingSamplingFraction

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnon:
    r"""
    gateway envoyproxy io v1alpha1 backend traffic policy spec telemetry tracing custom tags anon

    Attributes
    ----------
    environment : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonEnvironment, default is Undefined, optional
        environment
    literal : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonLiteral, default is Undefined, optional
        literal
    requestHeader : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonRequestHeader, default is Undefined, optional
        request header
    $type : str, default is "Literal", required
        Type defines the type of custom tag.
    """
    environment?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonEnvironment
    literal?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonLiteral
    requestHeader?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonRequestHeader
    $type: "Literal" | "Environment" | "RequestHeader" = "Literal"

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonEnvironment:
    r"""
    Environment adds value from environment variable to each span.
    It's required when the type is "Environment".

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        DefaultValue defines the default value to use if the environment variable is not set.
    name : str, default is Undefined, required
        Name defines the name of the environment variable which to extract the value from.
    """
    defaultValue?: str
    name: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonLiteral:
    r"""
    Literal adds hard-coded value to each span.
    It's required when the type is "Literal".

    Attributes
    ----------
    value : str, default is Undefined, required
        Value defines the hard-coded value to add to each span.
    """
    value: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingCustomTagsAnonRequestHeader:
    r"""
    RequestHeader adds value from request header to each span.
    It's required when the type is "RequestHeader".

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        DefaultValue defines the default value to use if the request header is not set.
    name : str, default is Undefined, required
        Name defines the name of the request header which to extract the value from.
    """
    defaultValue?: str
    name: str

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTelemetryTracingSamplingFraction:
    r"""
    SamplingFraction represents the fraction of requests that should be
    selected for tracing if no prior sampling decision has been made.

    This will take precedence over sampling fraction on EnvoyProxy if set.

    Attributes
    ----------
    denominator : int, default is 100, optional
        denominator
    numerator : int, default is Undefined, required
        numerator
    """
    denominator?: int = 100
    numerator: int

    check:
        denominator >= 1 if denominator not in [None, Undefined]
        numerator >= 0

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicySpecTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatus:
    r"""
    status defines the current status of BackendTrafficPolicy.

    Attributes
    ----------
    ancestors : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0], default is Undefined, required
        Ancestors is a list of ancestor resources (usually Gateways) that are
        associated with the policy, and the status of the policy with respect to
        each ancestor. When this policy attaches to a parent, the controller that
        manages the parent and the ancestors MUST add an entry to this list when
        the controller first sees the policy and SHOULD update the entry as
        appropriate when the relevant ancestor is modified.

        Note that choosing the relevant ancestor is left to the Policy designers;
        an important part of Policy design is designing the right object level at
        which to namespace this status.

        Note also that implementations MUST ONLY populate ancestor status for
        the Ancestor resources they are responsible for. Implementations MUST
        use the ControllerName field to uniquely identify the entries in this list
        that they are responsible for.

        Note that to achieve this, the list of PolicyAncestorStatus structs
        MUST be treated as a map with a composite key, made up of the AncestorRef
        and ControllerName fields combined.

        A maximum of 16 ancestors will be represented in this list. An empty list
        means the Policy is not relevant for any ancestors.

        If this slice is full, implementations MUST NOT add further entries.
        Instead they MUST consider the policy unimplementable and signal that
        on any related resources such as the ancestor that would be referenced
        here. For example, if this list was full on BackendTLSPolicy, no
        additional Gateways would be able to reference the Service targeted by
        the BackendTLSPolicy.
    """
    ancestors: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0]

    check:
        len(ancestors) <= 16

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0:
    r"""
    PolicyAncestorStatus describes the status of a route with respect to an
    associated Ancestor.

    Ancestors refer to objects that are either the Target of a policy or above it
    in terms of object hierarchy. For example, if a policy targets a Service, the
    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
    useful object to place Policy status on, so we recommend that implementations
    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
    have a _very_ good reason otherwise.

    In the context of policy attachment, the Ancestor is used to distinguish which
    resource results in a distinct application of this policy. For example, if a policy
    targets a Service, it may have a distinct result per attached Gateway.

    Policies targeting the same resource may have different effects depending on the
    ancestors of those resources. For example, different Gateways targeting the same
    Service may have different capabilities, especially if they have different underlying
    implementations.

    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
    used as a backend in a HTTPRoute that is itself attached to a Gateway.
    In this case, the relevant object for status is the Gateway, and that is the
    ancestor object referred to in this status.

    Note that a parent is also an ancestor, so for objects where the parent is the
    relevant object for status, this struct SHOULD still be used.

    This struct is intended to be used in a slice that's effectively a map,
    with a composite key made up of the AncestorRef and the ControllerName.

    Attributes
    ----------
    ancestorRef : GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0AncestorRef, default is Undefined, required
        ancestor ref
    conditions : [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0ConditionsItems0], default is Undefined, optional
        Conditions describes the status of the Policy with respect to the given Ancestor.
    controllerName : str, default is Undefined, required
        ControllerName is a domain/path string that indicates the name of the
        controller that wrote this status. This corresponds with the
        controllerName field on GatewayClass.

        Example: "example.net/gateway-controller".

        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
        valid Kubernetes names
        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

        Controllers MUST populate this field when writing status. Controllers should ensure that
        entries to status populated with their ControllerName are cleaned up when they are no
        longer necessary.
    """
    ancestorRef: GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0AncestorRef

    conditions?: [GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0ConditionsItems0]
    controllerName: str

    check:
        len(conditions) >= 1 if conditions
        len(conditions) <= 8 if conditions
        len(controllerName) <= 253
        len(controllerName) >= 1
        _regex_match(str(controllerName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$")

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0AncestorRef:
    r"""
    AncestorRef corresponds with a ParentRef in the spec that this
    PolicyAncestorStatus struct describes the status of.

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group of the referent.
        When unspecified, "gateway.networking.k8s.io" is inferred.
        To set the core API group (such as for a "Service" kind referent),
        Group must be explicitly set to "" (empty string).

        Support: Core
    kind : str, default is "Gateway", optional
        Kind is kind of the referent.

        There are two kinds of parent resources with "Core" support:

        * Gateway (Gateway conformance profile)
        * Service (Mesh conformance profile, ClusterIP Services only)

        Support for other resources is Implementation-Specific.
    name : str, default is Undefined, required
        Name is the name of the referent.

        Support: Core
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referent. When unspecified, this refers
        to the local namespace of the Route.

        Note that there are specific rules for ParentRefs which cross namespace
        boundaries. Cross-namespace references are only valid if they are explicitly
        allowed by something in the namespace they are referring to. For example:
        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
        generic way to enable any other kind of cross-namespace reference.

        <gateway:experimental:description>
        ParentRefs from a Route to a Service in the same namespace are "producer"
        routes, which apply default routing rules to inbound connections from
        any namespace to the Service.

        ParentRefs from a Route to a Service in a different namespace are
        "consumer" routes, and these routing rules are only applied to outbound
        connections originating from the same namespace as the Route, for which
        the intended destination of the connections are a Service targeted as a
        ParentRef of the Route.
        </gateway:experimental:description>

        Support: Core
    port : int, default is Undefined, optional
        Port is the network port this Route targets. It can be interpreted
        differently based on the type of parent resource.

        When the parent resource is a Gateway, this targets all listeners
        listening on the specified port that also support this kind of Route(and
        select this Route). It's not recommended to set `Port` unless the
        networking behaviors specified in a Route must apply to a specific port
        as opposed to a listener(s) whose port(s) may be changed. When both Port
        and SectionName are specified, the name and port of the selected listener
        must match both specified values.

        <gateway:experimental:description>
        When the parent resource is a Service, this targets a specific port in the
        Service spec. When both Port (experimental) and SectionName are specified,
        the name and port of the selected port must match both specified values.
        </gateway:experimental:description>

        Implementations MAY choose to support other parent resources.
        Implementations supporting other types of parent resources MUST clearly
        document how/if Port is interpreted.

        For the purpose of status, an attachment is considered successful as
        long as the parent resource accepts it partially. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
        from the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route,
        the Route MUST be considered detached from the Gateway.

        Support: Extended
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. In the
        following resources, SectionName is interpreted as the following:

        * Gateway: Listener name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.
        * Service: Port name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.

        Implementations MAY choose to support attaching Routes to other resources.
        If that is the case, they MUST clearly document how SectionName is
        interpreted.

        When unspecified (empty string), this will reference the entire resource.
        For the purpose of status, an attachment is considered successful if at
        least one section in the parent resource accepts it. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
        the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route, the
        Route MUST be considered detached from the Gateway.

        Support: Core
    """
    group?: str = "gateway.networking.k8s.io"
    kind?: str = "Gateway"
    name: str

    namespace?: str
    port?: int
    sectionName?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1BackendTrafficPolicyStatusAncestorsItems0ConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

