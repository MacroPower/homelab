"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema EnvoyExtensionPolicy:
    r"""
    EnvoyExtensionPolicy allows the user to configure various envoy extensibility options for the Gateway.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EnvoyExtensionPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpec, default is Undefined, required
        spec
    status : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatus, default is Undefined, optional
        status
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "EnvoyExtensionPolicy" = "EnvoyExtensionPolicy"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpec

    status?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatus

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpec:
    r"""
    Spec defines the desired state of EnvoyExtensionPolicy.

    Attributes
    ----------
    extProc : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0], default is Undefined, optional
        ExtProc is an ordered list of external processing filters
        that should be added to the envoy filter chain
    lua : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0], default is Undefined, optional
        Lua is an ordered list of Lua filters
        that should be added to the envoy filter chain
    targetRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRef, default is Undefined, optional
        target ref
    targetRefs : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRefsItems0], default is Undefined, optional
        TargetRefs are the names of the Gateway resources this policy
        is being attached to.
    targetSelectors : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0], default is Undefined, optional
        TargetSelectors allow targeting resources for this policy based on labels
    wasm : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0], default is Undefined, optional
        Wasm is a list of Wasm extensions to be loaded by the Gateway.
        Order matters, as the extensions will be loaded in the order they are
        defined in this list.
    """
    extProc?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0]
    lua?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0]
    targetRef?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRef
    targetRefs?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRefsItems0]
    targetSelectors?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0]
    wasm?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0]

    check:
        len(extProc) <= 16 if extProc
        len(lua) <= 16 if lua
        len(wasm) <= 16 if wasm

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0:
    r"""
    ExtProc defines the configuration for External Processing filter.

    Attributes
    ----------
    backendRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRef, default is Undefined, optional
        backend ref
    backendRefs : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRefsItems0], default is Undefined, optional
        BackendRefs references a Kubernetes object that represents the
        backend server to which the authorization request will be sent.
    backendSettings : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettings, default is Undefined, optional
        backend settings
    failOpen : bool, default is Undefined, optional
        FailOpen is a switch used to control the behavior when failing to call the external processor.

        If FailOpen is set to true, the system bypasses the ExtProc extension and
        allows the traffic to pass through. If it is set to false or
        not set (defaulting to false), the system blocks the traffic and returns
        an HTTP 5xx error.

        If set to true, the ExtProc extension will also be bypassed if the configuration is invalid.
    messageTimeout : str, default is Undefined, optional
        MessageTimeout is the timeout for a response to be returned from the external processor
        Default: 200ms
    metadata : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0Metadata, default is Undefined, optional
        metadata
    processingMode : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingMode, default is Undefined, optional
        processing mode
    """
    backendRef?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRef
    backendRefs?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRefsItems0]
    backendSettings?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettings
    failOpen?: bool = False
    messageTimeout?: str
    metadata?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0Metadata
    processingMode?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingMode

    check:
        len(backendRefs) <= 16 if backendRefs
        _regex_match(str(messageTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if messageTimeout

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRef:
    r"""
    BackendRef references a Kubernetes object that represents the
    backend server to which the authorization request will be sent.

    Deprecated: Use BackendRefs instead.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendRefsItems0:
    r"""
    BackendRef defines how an ObjectReference that is specific to BackendRef.

    Attributes
    ----------
    fallback : bool, default is Undefined, optional
        Fallback indicates whether the backend is designated as a fallback.
        Multiple fallback backends can be configured.
        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
        the health of the active backends falls below 72%.
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Service", optional
        Kind is the Kubernetes resource kind of the referent. For example
        "Service".

        Defaults to "Service" when not specified.

        ExternalName services can refer to CNAME DNS records that may live
        outside of the cluster and as such are difficult to reason about in
        terms of conformance. They also may not be safe to forward to (see
        CVE-2021-25740 for more information). Implementations SHOULD NOT
        support ExternalName Services.

        Support: Core (Services with a type other than ExternalName)

        Support: Implementation-specific (Services with type ExternalName)
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the backend. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    port : int, default is Undefined, optional
        Port specifies the destination port number to use for this resource.
        Port is required when the referent is a Kubernetes Service. In this
        case, the port number is the service port number, not the target port.
        For other resources, destination port might be derived from the referent
        resource or this field.
    """
    fallback?: bool
    group?: str = ""
    kind?: str = "Service"
    name: str

    namespace?: str
    port?: int

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettings:
    r"""
    BackendSettings holds configuration for managing the connection
    to the backend.

    Attributes
    ----------
    circuitBreaker : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreaker, default is Undefined, optional
        circuit breaker
    connection : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsConnection, default is Undefined, optional
        connection
    dns : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsDNS, default is Undefined, optional
        dns
    healthCheck : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheck, default is Undefined, optional
        health check
    http2 : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHttp2, default is Undefined, optional
        http2
    loadBalancer : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancer, default is Undefined, optional
        load balancer
    proxyProtocol : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsProxyProtocol, default is Undefined, optional
        proxy protocol
    retry : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetry, default is Undefined, optional
        retry
    tcpKeepalive : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTCPKeepalive, default is Undefined, optional
        tcp keepalive
    timeout : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeout, default is Undefined, optional
        timeout
    """
    circuitBreaker?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreaker
    connection?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsConnection
    dns?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsDNS
    healthCheck?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheck
    http2?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHttp2
    loadBalancer?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancer
    proxyProtocol?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsProxyProtocol
    retry?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetry
    tcpKeepalive?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTCPKeepalive
    timeout?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeout

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreaker:
    r"""
    Circuit Breaker settings for the upstream connections and requests.
    If not set, circuit breakers will be enabled with the default thresholds

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        The maximum number of connections that Envoy will establish to the referenced backend defined within a xRoute rule.
    maxParallelRequests : int, default is 1024, optional
        The maximum number of parallel requests that Envoy will make to the referenced backend defined within a xRoute rule.
    maxParallelRetries : int, default is 1024, optional
        The maximum number of parallel retries that Envoy will make to the referenced backend defined within a xRoute rule.
    maxPendingRequests : int, default is 1024, optional
        The maximum number of pending requests that Envoy will queue to the referenced backend defined within a xRoute rule.
    maxRequestsPerConnection : int, default is Undefined, optional
        The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
        Default: unlimited.
    perEndpoint : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreakerPerEndpoint, default is Undefined, optional
        per endpoint
    """
    maxConnections?: int = 1024
    maxParallelRequests?: int = 1024
    maxParallelRetries?: int = 1024
    maxPendingRequests?: int = 1024
    maxRequestsPerConnection?: int
    perEndpoint?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreakerPerEndpoint

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]
        maxParallelRequests <= 4294967295 if maxParallelRequests not in [None, Undefined]
        maxParallelRequests >= 0 if maxParallelRequests not in [None, Undefined]
        maxParallelRetries <= 4294967295 if maxParallelRetries not in [None, Undefined]
        maxParallelRetries >= 0 if maxParallelRetries not in [None, Undefined]
        maxPendingRequests <= 4294967295 if maxPendingRequests not in [None, Undefined]
        maxPendingRequests >= 0 if maxPendingRequests not in [None, Undefined]
        maxRequestsPerConnection <= 4294967295 if maxRequestsPerConnection not in [None, Undefined]
        maxRequestsPerConnection >= 0 if maxRequestsPerConnection not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsCircuitBreakerPerEndpoint:
    r"""
    PerEndpoint defines Circuit Breakers that will apply per-endpoint for an upstream cluster

    Attributes
    ----------
    maxConnections : int, default is 1024, optional
        MaxConnections configures the maximum number of connections that Envoy will establish per-endpoint to the referenced backend defined within a xRoute rule.
    """
    maxConnections?: int = 1024

    check:
        maxConnections <= 4294967295 if maxConnections not in [None, Undefined]
        maxConnections >= 0 if maxConnections not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsConnection:
    r"""
    Connection includes backend connection settings.

    Attributes
    ----------
    bufferLimit : int | str, default is Undefined, optional
        BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
        BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
        If unspecified, an implementation defined default is applied (32768 bytes).
        For example, 20Mi, 1Gi, 256Ki etc.
        Note: that when the suffix is not provided, the value is interpreted as bytes.
    socketBufferLimit : int | str, default is Undefined, optional
        SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
        to backend.
        SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
        For example, 20Mi, 1Gi, 256Ki etc.
        Note that when the suffix is not provided, the value is interpreted as bytes.
    """
    bufferLimit?: int | str
    socketBufferLimit?: int | str

    check:
        _regex_match(str(bufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if bufferLimit
        _regex_match(str(bufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if bufferLimit
        _regex_match(str(socketBufferLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if socketBufferLimit
        _regex_match(str(socketBufferLimit), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if socketBufferLimit

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsDNS:
    r"""
    DNS includes dns resolution settings.

    Attributes
    ----------
    dnsRefreshRate : str, default is Undefined, optional
        DNSRefreshRate specifies the rate at which DNS records should be refreshed.
        Defaults to 30 seconds.
    lookupFamily : str, default is Undefined, optional
        LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
        If set, this configuration overrides other defaults.
    respectDnsTtl : bool, default is Undefined, optional
        RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
        If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
        Defaults to true.
    """
    dnsRefreshRate?: str
    lookupFamily?: "IPv4" | "IPv6" | "IPv4Preferred" | "IPv6Preferred" | "IPv4AndIPv6"
    respectDnsTtl?: bool

    check:
        _regex_match(str(dnsRefreshRate), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if dnsRefreshRate

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheck:
    r"""
    HealthCheck allows gateway to perform active health checking on backends.

    Attributes
    ----------
    active : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActive, default is Undefined, optional
        active
    panicThreshold : int, default is Undefined, optional
        When number of unhealthy endpoints for a backend reaches this threshold
        Envoy will disregard health status and balance across all endpoints.
        It's designed to prevent a situation in which host failures cascade throughout the cluster
        as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
    passive : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckPassive, default is Undefined, optional
        passive
    """
    active?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActive
    panicThreshold?: int
    passive?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckPassive

    check:
        panicThreshold <= 100 if panicThreshold not in [None, Undefined]
        panicThreshold >= 0 if panicThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActive:
    r"""
    Active health check configuration

    Attributes
    ----------
    grpc : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveGrpc, default is Undefined, optional
        grpc
    healthyThreshold : int, default is 1, optional
        HealthyThreshold defines the number of healthy health checks required before a backend host is marked healthy.
    http : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTP, default is Undefined, optional
        http
    initialJitter : str, default is Undefined, optional
        InitialJitter defines the maximum time Envoy will wait before the first health check.
        Envoy will randomly select a value between 0 and the initial jitter value.
    interval : str, default is "3s", optional
        Interval defines the time between active health checks.
    tcp : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCP, default is Undefined, optional
        tcp
    timeout : str, default is "1s", optional
        Timeout defines the time to wait for a health check response.
    $type : str, default is Undefined, required
        Type defines the type of health checker.
    unhealthyThreshold : int, default is 3, optional
        UnhealthyThreshold defines the number of unhealthy health checks required before a backend host is marked unhealthy.
    """
    grpc?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveGrpc
    healthyThreshold?: int = 1
    http?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTP
    initialJitter?: str
    interval?: str = "3s"
    tcp?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCP
    timeout?: str = "1s"
    $type: str

    unhealthyThreshold?: int = 3

    check:
        healthyThreshold >= 1 if healthyThreshold not in [None, Undefined]
        _regex_match(str(initialJitter), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if initialJitter
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout
        unhealthyThreshold >= 1 if unhealthyThreshold not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveGrpc:
    r"""
    GRPC defines the configuration of the GRPC health checker.
    It's optional, and can only be used if the specified type is GRPC.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Service to send in the health check request.
        If this is not specified, then the health check request applies to the entire
        server and not to a specific service.
    """
    service?: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTP:
    r"""
    HTTP defines the configuration of http health checker.
    It's required while the health checker type is HTTP.

    Attributes
    ----------
    expectedResponse : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTPExpectedResponse, default is Undefined, optional
        expected response
    expectedStatuses : [int], default is Undefined, optional
        ExpectedStatuses defines a list of HTTP response statuses considered healthy.
        Defaults to 200 only
    hostname : str, default is Undefined, optional
        Hostname defines the HTTP host that will be requested during health checking.
        Default: HTTPRoute or GRPCRoute hostname.
    method : str, default is Undefined, optional
        Method defines the HTTP method used for health checking.
        Defaults to GET
    path : str, default is Undefined, required
        Path defines the HTTP path that will be requested during health checking.
    """
    expectedResponse?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTPExpectedResponse
    expectedStatuses?: [int]
    hostname?: str
    method?: str
    path: str

    check:
        all expectedStatuses in expectedStatuses {expectedStatuses < 600 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        all expectedStatuses in expectedStatuses {expectedStatuses >= 100 if expectedStatuses not in [None, Undefined]} if expectedStatuses
        len(hostname) <= 253 if hostname
        len(hostname) >= 1 if hostname
        _regex_match(str(hostname), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if hostname
        len(path) <= 1024
        len(path) >= 1

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveHTTPExpectedResponse:
    r"""
    ExpectedResponse defines a list of HTTP expected responses to match.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCP:
    r"""
    TCP defines the configuration of tcp health checker.
    It's required while the health checker type is TCP.

    Attributes
    ----------
    receive : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPReceive, default is Undefined, optional
        receive
    send : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPSend, default is Undefined, optional
        send
    """
    receive?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPReceive
    send?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPSend

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPReceive:
    r"""
    Receive defines the expected response payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckActiveTCPSend:
    r"""
    Send defines the request payload.

    Attributes
    ----------
    binary : str, default is Undefined, optional
        Binary payload base64 encoded.
    text : str, default is Undefined, optional
        Text payload in plain text.
    $type : str, default is Undefined, required
        Type defines the type of the payload.
    """
    binary?: str
    text?: str
    $type: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHealthCheckPassive:
    r"""
    Passive passive check configuration

    Attributes
    ----------
    baseEjectionTime : str, default is "30s", optional
        BaseEjectionTime defines the base duration for which a host will be ejected on consecutive failures.
    consecutive5XxErrors : int, default is 5, optional
        Consecutive5xxErrors sets the number of consecutive 5xx errors triggering ejection.
    consecutiveGatewayErrors : int, default is Undefined, optional
        ConsecutiveGatewayErrors sets the number of consecutive gateway errors triggering ejection.
    consecutiveLocalOriginFailures : int, default is 5, optional
        ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
        Parameter takes effect only when split_external_local_origin_errors is set to true.
    interval : str, default is "3s", optional
        Interval defines the time between passive health checks.
    maxEjectionPercent : int, default is 10, optional
        MaxEjectionPercent sets the maximum percentage of hosts in a cluster that can be ejected.
    splitExternalLocalOriginErrors : bool, default is Undefined, optional
        SplitExternalLocalOriginErrors enables splitting of errors between external and local origin.
    """
    baseEjectionTime?: str = "30s"
    consecutive5XxErrors?: int = 5
    consecutiveGatewayErrors?: int = 0
    consecutiveLocalOriginFailures?: int = 5
    interval?: str = "3s"
    maxEjectionPercent?: int = 10
    splitExternalLocalOriginErrors?: bool = False

    check:
        _regex_match(str(baseEjectionTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseEjectionTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsHttp2:
    r"""
    HTTP2 provides HTTP/2 configuration for backend connections.

    Attributes
    ----------
    initialConnectionWindowSize : int | str, default is Undefined, optional
        InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
        If not set, the default value is 1 MiB.
    initialStreamWindowSize : int | str, default is Undefined, optional
        InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
        If not set, the default value is 64 KiB(64*1024).
    maxConcurrentStreams : int, default is Undefined, optional
        MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
        If not set, the default value is 100.
    onInvalidMessage : str, default is Undefined, optional
        OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
        It's recommended for L2 Envoy deployments to set this value to TerminateStream.
        https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
        Default: TerminateConnection
    """
    initialConnectionWindowSize?: int | str
    initialStreamWindowSize?: int | str
    maxConcurrentStreams?: int
    onInvalidMessage?: str

    check:
        _regex_match(str(initialConnectionWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialConnectionWindowSize
        _regex_match(str(initialConnectionWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialConnectionWindowSize
        _regex_match(str(initialStreamWindowSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initialStreamWindowSize
        _regex_match(str(initialStreamWindowSize), r"^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$") if initialStreamWindowSize
        maxConcurrentStreams <= 2147483647 if maxConcurrentStreams not in [None, Undefined]
        maxConcurrentStreams >= 1 if maxConcurrentStreams not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancer:
    r"""
    LoadBalancer policy to apply when routing traffic from the gateway to
    the backend endpoints. Defaults to `LeastRequest`.

    Attributes
    ----------
    consistentHash : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHash, default is Undefined, optional
        consistent hash
    endpointOverride : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverride, default is Undefined, optional
        endpoint override
    slowStart : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerSlowStart, default is Undefined, optional
        slow start
    $type : str, default is Undefined, required
        Type decides the type of Load Balancer policy.
        Valid LoadBalancerType values are
        "ConsistentHash",
        "LeastRequest",
        "Random",
        "RoundRobin".
    zoneAware : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAware, default is Undefined, optional
        zone aware
    """
    consistentHash?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHash
    endpointOverride?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverride
    slowStart?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerSlowStart
    $type: "ConsistentHash" | "LeastRequest" | "Random" | "RoundRobin"

    zoneAware?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAware

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHash:
    r"""
    ConsistentHash defines the configuration when the load balancer type is
    set to ConsistentHash

    Attributes
    ----------
    cookie : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashCookie, default is Undefined, optional
        cookie
    header : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashHeader, default is Undefined, optional
        header
    tableSize : int, default is 65537, optional
        The table size for consistent hashing, must be prime number limited to 5000011.
    $type : str, default is Undefined, required
        ConsistentHashType defines the type of input to hash on. Valid Type values are
        "SourceIP",
        "Header",
        "Cookie".
    """
    cookie?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashCookie
    header?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashHeader
    tableSize?: int = 65537
    $type: "SourceIP" | "Header" | "Cookie"

    check:
        tableSize <= 5000011 if tableSize not in [None, Undefined]
        tableSize >= 2 if tableSize not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashCookie:
    r"""
    Cookie configures the cookie hash policy when the consistent hash type is set to Cookie.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Additional Attributes to set for the generated cookie.
    name : str, default is Undefined, required
        Name of the cookie to hash.
        If this cookie does not exist in the request, Envoy will generate a cookie and set
        the TTL on the response back to the client based on Layer 4
        attributes of the backend endpoint, to ensure that these future requests
        go to the same backend endpoint. Make sure to set the TTL field for this case.
    ttl : str, default is Undefined, optional
        TTL of the generated cookie if the cookie is not present. This value sets the
        Max-Age attribute value.
    """
    attributes?: {str:str}
    name: str

    ttl?: str

    check:
        _regex_match(str(ttl), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if ttl

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerConsistentHashHeader:
    r"""
    Header configures the header hash policy when the consistent hash type is set to Header.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the header to hash.
    """
    name: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverride:
    r"""
    EndpointOverride defines the configuration for endpoint override.
    When specified, the load balancer will attempt to route requests to endpoints
    based on the override information extracted from request headers or metadata.
     If the override endpoints are not available, the configured load balancer policy will be used as fallback.

    Attributes
    ----------
    extractFrom : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverrideExtractFromItems0], default is Undefined, required
        ExtractFrom defines the sources to extract endpoint override information from.
    """
    extractFrom: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverrideExtractFromItems0]

    check:
        len(extractFrom) >= 1
        len(extractFrom) <= 10

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerEndpointOverrideExtractFromItems0:
    r"""
    EndpointOverrideExtractFrom defines a source to extract endpoint override information from.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header defines the header to get the override endpoint addresses.
        The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
        For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
        The IPv6 address is enclosed in square brackets.
    """
    header?: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerSlowStart:
    r"""
    SlowStart defines the configuration related to the slow start load balancer policy.
    If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
    Currently this is only supported for RoundRobin and LeastRequest load balancers

    Attributes
    ----------
    window : str, default is Undefined, required
        Window defines the duration of the warm up period for newly added host.
        During slow start window, traffic sent to the newly added hosts will gradually increase.
        Currently only supports linear growth of traffic. For additional details,
        see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
    """
    window: str

    check:
        _regex_match(str(window), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$")

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAware:
    r"""
    ZoneAware defines the configuration related to the distribution of requests between locality zones.

    Attributes
    ----------
    preferLocal : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocal, default is Undefined, optional
        prefer local
    """
    preferLocal?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocal

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocal:
    r"""
    PreferLocalZone configures zone-aware routing to prefer sending traffic to the local locality zone.

    Attributes
    ----------
    force : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocalForce, default is Undefined, optional
        force
    minEndpointsThreshold : int, default is Undefined, optional
        MinEndpointsThreshold is the minimum number of total upstream endpoints across all zones required to enable zone-aware routing.
    """
    force?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocalForce
    minEndpointsThreshold?: int

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsLoadBalancerZoneAwarePreferLocalForce:
    r"""
    ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
    which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.

    Attributes
    ----------
    minEndpointsInZoneThreshold : int, default is Undefined, optional
        MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
        override. This is useful for protecting zones with fewer endpoints.
    """
    minEndpointsInZoneThreshold?: int

protocol GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsProxyProtocol:
    r"""
    ProxyProtocol enables the Proxy Protocol when communicating with the backend.

    Attributes
    ----------
    version : str, default is Undefined, required
        Version of ProxyProtol
        Valid ProxyProtocolVersion values are
        "V1"
        "V2"
    """
    version: "V1" | "V2"

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetry:
    r"""
    Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
    If not set, retry will be disabled.

    Attributes
    ----------
    numAttemptsPerPriority : int, default is Undefined, optional
        NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
        that should be sent to the same priority before switching to a different one.
        If not specified or set to 0, all requests are sent to the highest priority that is healthy.
    numRetries : int, default is 2, optional
        NumRetries is the number of retries to be attempted. Defaults to 2.
    perRetry : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetry, default is Undefined, optional
        per retry
    retryOn : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryRetryOn, default is Undefined, optional
        retry on
    """
    numAttemptsPerPriority?: int
    numRetries?: int = 2
    perRetry?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetry
    retryOn?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryRetryOn

    check:
        numRetries >= 0 if numRetries not in [None, Undefined]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetry:
    r"""
    PerRetry is the retry policy to be applied per retry attempt.

    Attributes
    ----------
    backOff : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetryBackOff, default is Undefined, optional
        back off
    timeout : str, default is Undefined, optional
        Timeout is the timeout per retry attempt.
    """
    backOff?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetryBackOff
    timeout?: str

    check:
        _regex_match(str(timeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if timeout

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryPerRetryBackOff:
    r"""
    Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
    back-off algorithm for retries. For additional details,
    see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries

    Attributes
    ----------
    baseInterval : str, default is Undefined, optional
        BaseInterval is the base interval between retries.
    maxInterval : str, default is Undefined, optional
        MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
        The default is 10 times the base_interval
    """
    baseInterval?: str
    maxInterval?: str

    check:
        _regex_match(str(baseInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if baseInterval
        _regex_match(str(maxInterval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxInterval

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsRetryRetryOn:
    r"""
    RetryOn specifies the retry trigger condition.

    If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).

    Attributes
    ----------
    httpStatusCodes : [int], default is Undefined, optional
        HttpStatusCodes specifies the http status codes to be retried.
        The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
    triggers : [str], default is Undefined, optional
        Triggers specifies the retry trigger condition(Http/Grpc).
    """
    httpStatusCodes?: [int]
    triggers?: [str]

    check:
        all httpStatusCodes in httpStatusCodes {httpStatusCodes < 600 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes
        all httpStatusCodes in httpStatusCodes {httpStatusCodes >= 100 if httpStatusCodes not in [None, Undefined]} if httpStatusCodes

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTCPKeepalive:
    r"""
    TcpKeepalive settings associated with the upstream client connection.
    Disabled by default.

    Attributes
    ----------
    idleTime : str, default is Undefined, optional
        The duration a connection needs to be idle before keep-alive
        probes start being sent.
        The duration format is
        Defaults to `7200s`.
    interval : str, default is Undefined, optional
        The duration between keep-alive probes.
        Defaults to `75s`.
    probes : int, default is Undefined, optional
        The total number of unacknowledged probes to send before deciding
        the connection is dead.
        Defaults to 9.
    """
    idleTime?: str
    interval?: str
    probes?: int

    check:
        _regex_match(str(idleTime), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if idleTime
        _regex_match(str(interval), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if interval

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeout:
    r"""
    Timeout settings for the backend connections.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutHTTP, default is Undefined, optional
        http
    tcp : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutTCP, default is Undefined, optional
        tcp
    """
    http?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutHTTP
    tcp?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutTCP

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutHTTP:
    r"""
    Timeout settings for HTTP.

    Attributes
    ----------
    connectionIdleTimeout : str, default is Undefined, optional
        The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
        Default: 1 hour.
    maxConnectionDuration : str, default is Undefined, optional
        The maximum duration of an HTTP connection.
        Default: unlimited.
    requestTimeout : str, default is Undefined, optional
        RequestTimeout is the time until which entire response is received from the upstream.
    """
    connectionIdleTimeout?: str
    maxConnectionDuration?: str
    requestTimeout?: str

    check:
        _regex_match(str(connectionIdleTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectionIdleTimeout
        _regex_match(str(maxConnectionDuration), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if maxConnectionDuration
        _regex_match(str(requestTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if requestTimeout

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0BackendSettingsTimeoutTCP:
    r"""
    Timeout settings for TCP.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The timeout for network connection establishment, including TCP and TLS handshakes.
        Default: 10 seconds.
    """
    connectTimeout?: str

    check:
        _regex_match(str(connectTimeout), r"^([0-9]{1,5}(h|m|s|ms)){1,4}$") if connectTimeout

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0Metadata:
    r"""
    Metadata defines options related to the sending and receiving of dynamic metadata.
    These options define which metadata namespaces would be sent to the processor and which dynamic metadata
    namespaces the processor would be permitted to emit metadata to.
    Users can specify custom namespaces or well-known envoy metadata namespace (such as envoy.filters.http.ext_authz)
    documented here: https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata#well-known-dynamic-metadata
    Default: no metadata context is sent or received from the external processor

    Attributes
    ----------
    accessibleNamespaces : [str], default is Undefined, optional
        AccessibleNamespaces are metadata namespaces that are sent to the external processor as context
    writableNamespaces : [str], default is Undefined, optional
        WritableNamespaces are metadata namespaces that the external processor can write to
    """
    accessibleNamespaces?: [str]
    writableNamespaces?: [str]

    check:
        len(writableNamespaces) <= 8 if writableNamespaces

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingMode:
    r"""
    ProcessingMode defines how request and response body is processed
    Default: header and body are not sent to the external processor

    Attributes
    ----------
    allowModeOverride : bool, default is Undefined, optional
        AllowModeOverride allows the external processor to override the processing mode set via the
        `mode_override` field in the gRPC response message. This defaults to false.
    request : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeRequest, default is Undefined, optional
        request
    response : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeResponse, default is Undefined, optional
        response
    """
    allowModeOverride?: bool
    request?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeRequest
    response?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeResponse

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeRequest:
    r"""
    Defines processing mode for requests. If present, request headers are sent. Request body is processed according
    to the specified mode.

    Attributes
    ----------
    attributes : [str], default is Undefined, optional
        Defines which attributes are sent to the external processor. Envoy Gateway currently
        supports only the following attribute prefixes: connection, source, destination,
        request, response, upstream and xds.route.
        https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes
    body : str, default is Undefined, optional
        Defines body processing mode
    """
    attributes?: [str]
    body?: "Streamed" | "Buffered" | "BufferedPartial" | "FullDuplexStreamed"

    check:
        all attributes in attributes {_regex_match(str(attributes), r"^(connection\.|source\.|destination\.|request\.|response\.|upstream\.|xds\.route_)[a-z_1-9]*$") if attributes} if attributes

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecExtProcItems0ProcessingModeResponse:
    r"""
    Defines processing mode for responses. If present, response headers are sent. Response body is processed according
    to the specified mode.

    Attributes
    ----------
    attributes : [str], default is Undefined, optional
        Defines which attributes are sent to the external processor. Envoy Gateway currently
        supports only the following attribute prefixes: connection, source, destination,
        request, response, upstream and xds.route.
        https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes
    body : str, default is Undefined, optional
        Defines body processing mode
    """
    attributes?: [str]
    body?: "Streamed" | "Buffered" | "BufferedPartial" | "FullDuplexStreamed"

    check:
        all attributes in attributes {_regex_match(str(attributes), r"^(connection\.|source\.|destination\.|request\.|response\.|upstream\.|xds\.route_)[a-z_1-9]*$") if attributes} if attributes

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0:
    r"""
    Lua defines a Lua extension
    Only one of Inline or ValueRef must be set

    Attributes
    ----------
    inline : str, default is Undefined, optional
        Inline contains the source code as an inline string.
    $type : str, default is "Inline", required
        Type is the type of method to use to read the Lua value.
        Valid values are Inline and ValueRef, default is Inline.
    valueRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0ValueRef, default is Undefined, optional
        value ref
    """
    inline?: str
    $type: "Inline" | "ValueRef" = "Inline"

    valueRef?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0ValueRef

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecLuaItems0ValueRef:
    r"""
    ValueRef has the source code specified as a local object reference.
    Only a reference to ConfigMap is supported.
    The value of key `lua` in the ConfigMap will be used.
    If the key is not found, the first value in the ConfigMap will be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is Undefined, required
        Kind is kind of the referent. For example "HTTPRoute" or "Service".
    name : str, default is Undefined, required
        Name is the name of the referent.
    """
    group: str

    kind: str

    name: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRef:
    r"""
    TargetRef is the name of the resource this policy is being attached to.
    This policy and the TargetRef MUST be in the same namespace for this
    Policy to have effect

    Deprecated: use targetRefs/targetSelectors instead

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetRefsItems0:
    r"""
    LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
    direct policy to. This should be used as part of Policy resources that can
    target single resources. For more information on how this policy attachment
    mode works, and a sample Policy resource, refer to the policy attachment
    documentation for Gateway API.

    Note: This should only be used for direct policy attachment when references
    to SectionName are actually needed. In all other cases,
    LocalPolicyTargetReference should be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the target resource.
    kind : str, default is Undefined, required
        Kind is kind of the target resource.
    name : str, default is Undefined, required
        Name is the name of the target resource.
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. When
        unspecified, this targetRef targets the entire resource. In the following
        resources, SectionName is interpreted as the following:

        * Gateway: Listener name
        * HTTPRoute: HTTPRouteRule name
        * Service: Port name

        If a SectionName is specified, but does not exist on the targeted object,
        the Policy must fail to attach, and the policy implementation should record
        a `ResolvedRefs` or similar Condition in the Policy's status.
    """
    group: str

    kind: str

    name: str

    sectionName?: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0:
    r"""
    gateway envoyproxy io v1alpha1 envoy extension policy spec target selectors items0

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group that this selector targets. Defaults to gateway.networking.k8s.io
    kind : str, default is Undefined, required
        Kind is the resource kind that this selector targets.
    matchExpressions : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        MatchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels are the set of label selectors for identifying the targeted resource
    """
    group?: str = "gateway.networking.k8s.io"
    kind: str

    matchExpressions?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0MatchExpressionsItems0]
    matchLabels?: {str:str}

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecTargetSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """
    key: str

    operator: str

    values?: [str]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0:
    r"""
    Wasm defines a Wasm extension.

    Note: at the moment, Envoy Gateway does not support configuring Wasm runtime.
    v8 is used as the VM runtime for the Wasm extensions.

    Attributes
    ----------
    code : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Code, default is Undefined, required
        code
    config : any, default is Undefined, optional
        Config is the configuration for the Wasm extension.
        This configuration will be passed as a JSON string to the Wasm extension.
    env : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Env, default is Undefined, optional
        env
    failOpen : bool, default is Undefined, optional
        FailOpen is a switch used to control the behavior when a fatal error occurs
        during the initialization or the execution of the Wasm extension.

        If FailOpen is set to true, the system bypasses the Wasm extension and
        allows the traffic to pass through. If it is set to false or
        not set (defaulting to false), the system blocks the traffic and returns
        an HTTP 5xx error.

        If set to true, the Wasm extension will also be bypassed if the configuration is invalid.
    name : str, default is Undefined, optional
        Name is a unique name for this Wasm extension. It is used to identify the
        Wasm extension if multiple extensions are handled by the same vm_id and root_id.
        It's also used for logging/debugging.
        If not specified, EG will generate a unique name for the Wasm extension.
    rootID : str, default is Undefined, optional
        RootID is a unique ID for a set of extensions in a VM which will share a
        RootContext and Contexts if applicable (e.g., an Wasm HttpFilter and an Wasm AccessLog).
        If left blank, all extensions with a blank root_id with the same vm_id will share Context(s).

        Note: RootID must match the root_id parameter used to register the Context in the Wasm code.
    """
    code: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Code

    config?: any
    env?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Env
    failOpen?: bool = False
    name?: str
    rootID?: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Code:
    r"""
    Code is the Wasm code for the extension.

    Attributes
    ----------
    http : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTP, default is Undefined, optional
        http
    image : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImage, default is Undefined, optional
        image
    pullPolicy : str, default is Undefined, optional
        PullPolicy is the policy to use when pulling the Wasm module by either the HTTP or Image source.
        This field is only applicable when the SHA256 field is not set.

        If not specified, the default policy is IfNotPresent except for OCI images whose tag is latest.

        Note: EG does not update the Wasm module every time an Envoy proxy requests
        the Wasm module even if the pull policy is set to Always.
        It only updates the Wasm module when the EnvoyExtension resource version changes.
    $type : str, default is Undefined, required
        Type is the type of the source of the Wasm code.
        Valid WasmCodeSourceType values are "HTTP" or "Image".
    """
    http?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTP
    image?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImage
    pullPolicy?: "IfNotPresent" | "Always"
    $type: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTP:
    r"""
    HTTP is the HTTP URL containing the Wasm code.

    Note that the HTTP server must be accessible from the Envoy proxy.

    Attributes
    ----------
    sha256 : str, default is Undefined, optional
        SHA256 checksum that will be used to verify the Wasm code.

        If not specified, Envoy Gateway will not verify the downloaded Wasm code.
        kubebuilder:validation:Pattern=`^[a-f0-9]{64}$`
    tls : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLS, default is Undefined, optional
        tls
    url : str, default is Undefined, required
        URL is the URL containing the Wasm code.
    """
    sha256?: str
    tls?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLS
    url: str

    check:
        _regex_match(str(url), r"^((https?:)(\/\/\/?)([\w]*(?::[\w]*)?@)?([\d\w\.-]+)(?::(\d+))?)?([\/\\\w\.()-]*)?(?:([?][^#]*)?(#.*)?)*")

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLS:
    r"""
    TLS configuration when connecting to the Wasm code source.

    Attributes
    ----------
    caCertificateRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLSCaCertificateRef, default is Undefined, required
        ca certificate ref
    """
    caCertificateRef: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLSCaCertificateRef

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeHTTPTLSCaCertificateRef:
    r"""
    CACertificateRef contains a references to
    Kubernetes objects that contain TLS certificates of
    the Certificate Authorities that can be used
    as a trust anchor to validate the certificates presented by the Wasm code source.

    Kubernetes ConfigMap and Kubernetes Secret are supported.
    Note: The ConfigMap or Secret must be in the same namespace as the EnvoyExtensionPolicy.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImage:
    r"""
    Image is the OCI image containing the Wasm code.

    Note that the image must be accessible from the Envoy Gateway.

    Attributes
    ----------
    pullSecretRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImagePullSecretRef, default is Undefined, optional
        pull secret ref
    sha256 : str, default is Undefined, optional
        SHA256 checksum that will be used to verify the OCI image.

        It must match the digest of the OCI image.

        If not specified, Envoy Gateway will not verify the downloaded OCI image.
        kubebuilder:validation:Pattern=`^[a-f0-9]{64}$`
    tls : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLS, default is Undefined, optional
        tls
    url : str, default is Undefined, required
        URL is the URL of the OCI image.
        URL can be in the format of `registry/image:tag` or `registry/image@sha256:digest`.
    """
    pullSecretRef?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImagePullSecretRef
    sha256?: str
    tls?: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLS
    url: str

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImagePullSecretRef:
    r"""
    PullSecretRef is a reference to the secret containing the credentials to pull the image.
    Only support Kubernetes Secret resource from the same namespace.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLS:
    r"""
    TLS configuration when connecting to the Wasm code source.

    Attributes
    ----------
    caCertificateRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLSCaCertificateRef, default is Undefined, required
        ca certificate ref
    """
    caCertificateRef: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLSCaCertificateRef

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0CodeImageTLSCaCertificateRef:
    r"""
    CACertificateRef contains a references to
    Kubernetes objects that contain TLS certificates of
    the Certificate Authorities that can be used
    as a trust anchor to validate the certificates presented by the Wasm code source.

    Kubernetes ConfigMap and Kubernetes Secret are supported.
    Note: The ConfigMap or Secret must be in the same namespace as the EnvoyExtensionPolicy.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicySpecWasmItems0Env:
    r"""
    Env configures the environment for the Wasm extension

    Attributes
    ----------
    hostKeys : [str], default is Undefined, optional
        HostKeys is a list of keys for environment variables from the host envoy process
        that should be passed into the Wasm VM. This is useful for passing secrets to to Wasm extensions.
    """
    hostKeys?: [str]

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatus:
    r"""
    Status defines the current status of EnvoyExtensionPolicy.

    Attributes
    ----------
    ancestors : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0], default is Undefined, required
        Ancestors is a list of ancestor resources (usually Gateways) that are
        associated with the policy, and the status of the policy with respect to
        each ancestor. When this policy attaches to a parent, the controller that
        manages the parent and the ancestors MUST add an entry to this list when
        the controller first sees the policy and SHOULD update the entry as
        appropriate when the relevant ancestor is modified.

        Note that choosing the relevant ancestor is left to the Policy designers;
        an important part of Policy design is designing the right object level at
        which to namespace this status.

        Note also that implementations MUST ONLY populate ancestor status for
        the Ancestor resources they are responsible for. Implementations MUST
        use the ControllerName field to uniquely identify the entries in this list
        that they are responsible for.

        Note that to achieve this, the list of PolicyAncestorStatus structs
        MUST be treated as a map with a composite key, made up of the AncestorRef
        and ControllerName fields combined.

        A maximum of 16 ancestors will be represented in this list. An empty list
        means the Policy is not relevant for any ancestors.

        If this slice is full, implementations MUST NOT add further entries.
        Instead they MUST consider the policy unimplementable and signal that
        on any related resources such as the ancestor that would be referenced
        here. For example, if this list was full on BackendTLSPolicy, no
        additional Gateways would be able to reference the Service targeted by
        the BackendTLSPolicy.
    """
    ancestors: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0]

    check:
        len(ancestors) <= 16

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0:
    r"""
    PolicyAncestorStatus describes the status of a route with respect to an
    associated Ancestor.

    Ancestors refer to objects that are either the Target of a policy or above it
    in terms of object hierarchy. For example, if a policy targets a Service, the
    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
    useful object to place Policy status on, so we recommend that implementations
    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
    have a _very_ good reason otherwise.

    In the context of policy attachment, the Ancestor is used to distinguish which
    resource results in a distinct application of this policy. For example, if a policy
    targets a Service, it may have a distinct result per attached Gateway.

    Policies targeting the same resource may have different effects depending on the
    ancestors of those resources. For example, different Gateways targeting the same
    Service may have different capabilities, especially if they have different underlying
    implementations.

    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
    used as a backend in a HTTPRoute that is itself attached to a Gateway.
    In this case, the relevant object for status is the Gateway, and that is the
    ancestor object referred to in this status.

    Note that a parent is also an ancestor, so for objects where the parent is the
    relevant object for status, this struct SHOULD still be used.

    This struct is intended to be used in a slice that's effectively a map,
    with a composite key made up of the AncestorRef and the ControllerName.

    Attributes
    ----------
    ancestorRef : GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0AncestorRef, default is Undefined, required
        ancestor ref
    conditions : [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0ConditionsItems0], default is Undefined, optional
        Conditions describes the status of the Policy with respect to the given Ancestor.
    controllerName : str, default is Undefined, required
        ControllerName is a domain/path string that indicates the name of the
        controller that wrote this status. This corresponds with the
        controllerName field on GatewayClass.

        Example: "example.net/gateway-controller".

        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
        valid Kubernetes names
        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

        Controllers MUST populate this field when writing status. Controllers should ensure that
        entries to status populated with their ControllerName are cleaned up when they are no
        longer necessary.
    """
    ancestorRef: GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0AncestorRef

    conditions?: [GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0ConditionsItems0]
    controllerName: str

    check:
        len(conditions) >= 1 if conditions
        len(conditions) <= 8 if conditions
        len(controllerName) <= 253
        len(controllerName) >= 1
        _regex_match(str(controllerName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$")

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0AncestorRef:
    r"""
    AncestorRef corresponds with a ParentRef in the spec that this
    PolicyAncestorStatus struct describes the status of.

    Attributes
    ----------
    group : str, default is "gateway.networking.k8s.io", optional
        Group is the group of the referent.
        When unspecified, "gateway.networking.k8s.io" is inferred.
        To set the core API group (such as for a "Service" kind referent),
        Group must be explicitly set to "" (empty string).

        Support: Core
    kind : str, default is "Gateway", optional
        Kind is kind of the referent.

        There are two kinds of parent resources with "Core" support:

        * Gateway (Gateway conformance profile)
        * Service (Mesh conformance profile, ClusterIP Services only)

        Support for other resources is Implementation-Specific.
    name : str, default is Undefined, required
        Name is the name of the referent.

        Support: Core
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referent. When unspecified, this refers
        to the local namespace of the Route.

        Note that there are specific rules for ParentRefs which cross namespace
        boundaries. Cross-namespace references are only valid if they are explicitly
        allowed by something in the namespace they are referring to. For example:
        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
        generic way to enable any other kind of cross-namespace reference.

        <gateway:experimental:description>
        ParentRefs from a Route to a Service in the same namespace are "producer"
        routes, which apply default routing rules to inbound connections from
        any namespace to the Service.

        ParentRefs from a Route to a Service in a different namespace are
        "consumer" routes, and these routing rules are only applied to outbound
        connections originating from the same namespace as the Route, for which
        the intended destination of the connections are a Service targeted as a
        ParentRef of the Route.
        </gateway:experimental:description>

        Support: Core
    port : int, default is Undefined, optional
        Port is the network port this Route targets. It can be interpreted
        differently based on the type of parent resource.

        When the parent resource is a Gateway, this targets all listeners
        listening on the specified port that also support this kind of Route(and
        select this Route). It's not recommended to set `Port` unless the
        networking behaviors specified in a Route must apply to a specific port
        as opposed to a listener(s) whose port(s) may be changed. When both Port
        and SectionName are specified, the name and port of the selected listener
        must match both specified values.

        <gateway:experimental:description>
        When the parent resource is a Service, this targets a specific port in the
        Service spec. When both Port (experimental) and SectionName are specified,
        the name and port of the selected port must match both specified values.
        </gateway:experimental:description>

        Implementations MAY choose to support other parent resources.
        Implementations supporting other types of parent resources MUST clearly
        document how/if Port is interpreted.

        For the purpose of status, an attachment is considered successful as
        long as the parent resource accepts it partially. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
        from the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route,
        the Route MUST be considered detached from the Gateway.

        Support: Extended
    sectionName : str, default is Undefined, optional
        SectionName is the name of a section within the target resource. In the
        following resources, SectionName is interpreted as the following:

        * Gateway: Listener name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.
        * Service: Port name. When both Port (experimental) and SectionName
        are specified, the name and port of the selected listener must match
        both specified values.

        Implementations MAY choose to support attaching Routes to other resources.
        If that is the case, they MUST clearly document how SectionName is
        interpreted.

        When unspecified (empty string), this will reference the entire resource.
        For the purpose of status, an attachment is considered successful if at
        least one section in the parent resource accepts it. For example, Gateway
        listeners can restrict which Routes can attach to them by Route kind,
        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
        the referencing Route, the Route MUST be considered successfully
        attached. If no Gateway listeners accept attachment from this Route, the
        Route MUST be considered detached from the Gateway.

        Support: Core
    """
    group?: str = "gateway.networking.k8s.io"
    kind?: str = "Gateway"
    name: str

    namespace?: str
    port?: int
    sectionName?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace
        port <= 65535 if port not in [None, Undefined]
        port >= 1 if port not in [None, Undefined]
        len(sectionName) <= 253 if sectionName
        len(sectionName) >= 1 if sectionName
        _regex_match(str(sectionName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if sectionName

schema GatewayEnvoyproxyIoV1alpha1EnvoyExtensionPolicyStatusAncestorsItems0ConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """
    lastTransitionTime: str

    message: str

    observedGeneration?: int
    reason: str

    status: "True" | "False" | "Unknown"

    $type: str

    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")

