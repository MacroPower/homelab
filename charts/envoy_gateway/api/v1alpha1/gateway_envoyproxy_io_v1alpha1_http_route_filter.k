"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

import regex
import k8s.apimachinery.pkg.apis.meta.v1

_regex_match = regex.match

schema HTTPRouteFilter:
    r"""
    HTTPRouteFilter is a custom Envoy Gateway HTTPRouteFilter which provides extended
    traffic processing options such as path regex rewrite, direct response and more.

    Attributes
    ----------
    apiVersion : str, default is "gateway.envoyproxy.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HTTPRouteFilter", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpec, default is Undefined, required
        spec
    """
    apiVersion: "gateway.envoyproxy.io/v1alpha1" = "gateway.envoyproxy.io/v1alpha1"

    kind: "HTTPRouteFilter" = "HTTPRouteFilter"

    metadata?: v1.ObjectMeta
    spec: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpec

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpec:
    r"""
    Spec defines the desired state of HTTPRouteFilter.

    Attributes
    ----------
    credentialInjection : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjection, default is Undefined, optional
        credential injection
    directResponse : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponse, default is Undefined, optional
        direct response
    urlRewrite : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewrite, default is Undefined, optional
        url rewrite
    """
    credentialInjection?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjection
    directResponse?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponse
    urlRewrite?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewrite

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjection:
    r"""
    HTTPCredentialInjectionFilter defines the configuration to inject credentials into the request.
    This is useful when the backend service requires credentials in the request, and the original
    request does not contain them. The filter can inject credentials into the request before forwarding
    it to the backend service.

    Attributes
    ----------
    credential : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredential, default is Undefined, required
        credential
    header : str, default is Undefined, optional
        Header is the name of the header where the credentials are injected.
        If not specified, the credentials are injected into the Authorization header.
    overwrite : bool, default is Undefined, optional
        Whether to overwrite the value or not if the injected headers already exist.
        If not specified, the default value is false.
    """
    credential: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredential

    header?: str
    overwrite?: bool

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredential:
    r"""
    Credential is the credential to be injected.

    Attributes
    ----------
    valueRef : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredentialValueRef, default is Undefined, required
        value ref
    """
    valueRef: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredentialValueRef

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecCredentialInjectionCredentialValueRef:
    r"""
    ValueRef is a reference to the secret containing the credentials to be injected.
    This is an Opaque secret. The credential should be stored in the key
    "credential", and the value should be the credential to be injected.
    For example, for basic authentication, the value should be "Basic <base64 encoded username:password>".
    for bearer token, the value should be "Bearer <token>".
    Note: The secret must be in the same namespace as the HTTPRouteFilter.

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is "Secret", optional
        Kind is kind of the referent. For example "Secret".
    name : str, default is Undefined, required
        Name is the name of the referent.
    namespace : str, default is Undefined, optional
        Namespace is the namespace of the referenced object. When unspecified, the local
        namespace is inferred.

        Note that when a namespace different than the local namespace is specified,
        a ReferenceGrant object is required in the referent namespace to allow that
        namespace's owner to accept the reference. See the ReferenceGrant
        documentation for details.

        Support: Core
    """
    group?: str = ""
    kind?: str = "Secret"
    name: str

    namespace?: str

    check:
        len(group) <= 253 if group
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$") if group
        len(kind) <= 63 if kind
        len(kind) >= 1 if kind
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$") if kind
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace
        _regex_match(str(namespace), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$") if namespace

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponse:
    r"""
    HTTPDirectResponseFilter defines the configuration to return a fixed response.

    Attributes
    ----------
    body : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBody, default is Undefined, optional
        body
    contentType : str, default is Undefined, optional
        Content Type of the response. This will be set in the Content-Type header.
    statusCode : int, default is Undefined, optional
        Status Code of the HTTP response
        If unset, defaults to 200.
    """
    body?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBody
    contentType?: str
    statusCode?: int

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBody:
    r"""
    Body of the Response

    Attributes
    ----------
    inline : str, default is Undefined, optional
        Inline contains the value as an inline string.
    $type : str, default is "Inline", required
        Type is the type of method to use to read the body value.
        Valid values are Inline and ValueRef, default is Inline.
    valueRef : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBodyValueRef, default is Undefined, optional
        value ref
    """
    inline?: str
    $type: str = "Inline"

    valueRef?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBodyValueRef

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecDirectResponseBodyValueRef:
    r"""
    ValueRef contains the contents of the body
    specified as a local object reference.
    Only a reference to ConfigMap is supported.

    The value of key `response.body` in the ConfigMap will be used as the response body.
    If the key is not found, the first value in the ConfigMap will be used.

    Attributes
    ----------
    group : str, default is Undefined, required
        Group is the group of the referent. For example, "gateway.networking.k8s.io".
        When unspecified or empty string, core API group is inferred.
    kind : str, default is Undefined, required
        Kind is kind of the referent. For example "HTTPRoute" or "Service".
    name : str, default is Undefined, required
        Name is the name of the referent.
    """
    group: str

    kind: str

    name: str

    check:
        len(group) <= 253
        _regex_match(str(group), r"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(kind) <= 63
        len(kind) >= 1
        _regex_match(str(kind), r"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$")
        len(name) <= 253
        len(name) >= 1

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewrite:
    r"""
    HTTPURLRewriteFilter define rewrites of HTTP URL components such as path and host

    Attributes
    ----------
    hostname : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewriteHostname, default is Undefined, optional
        hostname
    path : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePath, default is Undefined, optional
        path
    """
    hostname?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewriteHostname
    path?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePath

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewriteHostname:
    r"""
    Hostname is the value to be used to replace the Host header value during
    forwarding.

    Attributes
    ----------
    header : str, default is Undefined, optional
        Header is the name of the header whose value would be used to rewrite the Host header
    $type : str, default is Undefined, required
        HTTPPathModifierType defines the type of Hostname rewrite.
    """
    header?: str
    $type: "Header" | "Backend"

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePath:
    r"""
    Path defines a path rewrite.

    Attributes
    ----------
    replaceRegexMatch : GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePathReplaceRegexMatch, default is Undefined, optional
        replace regex match
    $type : str, default is Undefined, required
        HTTPPathModifierType defines the type of path redirect or rewrite.
    """
    replaceRegexMatch?: GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePathReplaceRegexMatch
    $type: "ReplaceRegexMatch"

schema GatewayEnvoyproxyIoV1alpha1HTTPRouteFilterSpecURLRewritePathReplaceRegexMatch:
    r"""
    ReplaceRegexMatch defines a path regex rewrite. The path portions matched by the regex pattern are replaced by the defined substitution.
    https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-field-config-route-v3-routeaction-regex-rewrite
    Some examples:
    (1) replaceRegexMatch:
          pattern: ^/service/([^/]+)(/.*)$
          substitution: \2/instance/\1
        Would transform /service/foo/v1/api into /v1/api/instance/foo.
    (2) replaceRegexMatch:
          pattern: one
          substitution: two
        Would transform /xxx/one/yyy/one/zzz into /xxx/two/yyy/two/zzz.
    (3) replaceRegexMatch:
          pattern: ^(.*?)one(.*)$
          substitution: \1two\2
        Would transform /xxx/one/yyy/one/zzz into /xxx/two/yyy/one/zzz.
    (3) replaceRegexMatch:
          pattern: (?i)/xxx/
          substitution: /yyy/
        Would transform path /aaa/XxX/bbb into /aaa/yyy/bbb (case-insensitive).

    Attributes
    ----------
    pattern : str, default is Undefined, required
        Pattern matches a regular expression against the value of the HTTP Path.The regex string must
        adhere to the syntax documented in https://github.com/google/re2/wiki/Syntax.
    substitution : str, default is Undefined, required
        Substitution is an expression that replaces the matched portion.The expression may include numbered
        capture groups that adhere to syntax documented in https://github.com/google/re2/wiki/Syntax.
    """
    pattern: str

    substitution: str

    check:
        len(pattern) >= 1

