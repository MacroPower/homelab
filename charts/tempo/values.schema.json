{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "DeploymentUpdate": {
      "additionalProperties": true,
      "description": "# Update strategy for Deployments",
      "properties": {
        "maxSurge": {
          "default": "100%",
          "required": [],
          "title": "maxSurge",
          "type": "string"
        },
        "maxUnavailable": {
          "default": 0,
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "DeploymentUpdate",
      "type": "object"
    },
    "StatefulSetUpdate": {
      "additionalProperties": true,
      "description": "# Update strategy for StatefulSets",
      "properties": {
        "updateStrategy": {
          "default": "RollingUpdate",
          "required": [],
          "title": "updateStrategy",
          "type": "string"
        }
      },
      "required": [],
      "title": "StatefulSetUpdate",
      "type": "object"
    },
    "additionalAnnotations": {
      "description": "# Additional annotations to include with deployment or statefulset",
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalAnnotations",
      "type": "array"
    },
    "additionalLabels": {
      "description": "# Additional labels to include with deployment or statefulset",
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalLabels",
      "type": "array"
    },
    "adminApi": {
      "additionalProperties": true,
      "description": "Settings for the admin_api service providing authentication and authorization service.\nCan only be enabled if enterprise.enabled is true - requires license.",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"admin-api\") | nindent 12 }}\n        topologyKey: kubernetes.io/hostname\n    - weight: 75\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"admin-api\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for admin-api pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for admin_api containers",
          "properties": {
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "env": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvFrom": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the adminApi image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the adminApi image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the adminApi image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "subPath": {
              "default": "",
              "required": [],
              "title": "subPath",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "Pod Disruption Budget",
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 45,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "10m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "32Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxSurge": {
                  "default": 0,
                  "required": [],
                  "title": "maxSurge",
                  "type": "integer"
                },
                "maxUnavailable": {
                  "default": 1,
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"admin-api\") | nindent 6 }}\n",
          "description": "topologySpread for admin-api pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "adminApi",
      "type": "object"
    },
    "affinity": {
      "additionalProperties": true,
      "description": "Pod affinity configuration",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "annotations": {
      "additionalProperties": true,
      "description": "Annotations for the Deployment",
      "required": [],
      "title": "annotations",
      "type": "object"
    },
    "bucketRoot": {
      "default": "",
      "description": "# Override the root directory which the minio server should serve from.\n# If left empty, it defaults to the value of {{ .Values.mountPath }}\n# If defined, it must be a sub-directory of the path specified in {{ .Values.mountPath }}\n#",
      "required": [],
      "title": "bucketRoot",
      "type": "string"
    },
    "buckets": {
      "default": "",
      "description": "# List of buckets to be created after minio install\n#",
      "required": [],
      "title": "buckets",
      "type": "null"
    },
    "cache": {
      "additionalProperties": true,
      "description": "Use this block to configure caches available throughout the application.\nMultiple caches can be created and assigned roles which determine how they are used by Tempo.\nhttps://grafana.com/docs/tempo/latest/configuration/#cache",
      "properties": {
        "caches": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "memcached": {
                "additionalProperties": true,
                "properties": {
                  "consistent_hash": {
                    "default": true,
                    "required": [],
                    "title": "consistent_hash",
                    "type": "boolean"
                  },
                  "host": {
                    "default": "{{ include \"tempo.fullname\" . }}-memcached",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "service": {
                    "default": "memcached-client",
                    "required": [],
                    "title": "service",
                    "type": "string"
                  },
                  "timeout": {
                    "default": "500ms",
                    "required": [],
                    "title": "timeout",
                    "type": "string"
                  }
                },
                "required": [],
                "title": "memcached",
                "type": "object"
              },
              "roles": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "title": "roles",
                "type": "array"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "caches",
          "type": "array"
        }
      },
      "required": [],
      "title": "cache",
      "type": "object"
    },
    "certsPath": {
      "default": "/etc/minio/certs/",
      "description": "# Directory on the MinIO pof",
      "required": [],
      "title": "certsPath",
      "type": "string"
    },
    "clusterDomain": {
      "default": "cluster.local",
      "description": "# set kubernetes cluster domain where minio is running\n#",
      "required": [],
      "title": "clusterDomain",
      "type": "string"
    },
    "compactor": {
      "additionalProperties": true,
      "description": "Configuration for the compactor",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"compactor\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"compactor\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for compactor pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for compactor deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": "Autoscaling configurations",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the compactor",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hpa": {
              "additionalProperties": true,
              "description": "Autoscaling via HPA object",
              "properties": {
                "behavior": {
                  "additionalProperties": true,
                  "description": "Autoscaling behavior configuration for the compactor",
                  "required": [],
                  "title": "behavior",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "targetCPUUtilizationPercentage": {
                  "default": 100,
                  "description": "Target CPU utilisation percentage for the compactor",
                  "required": [],
                  "title": "targetCPUUtilizationPercentage",
                  "type": "integer"
                },
                "targetMemoryUtilizationPercentage": {
                  "default": "",
                  "description": "Target memory utilisation percentage for the compactor",
                  "required": [],
                  "title": "targetMemoryUtilizationPercentage",
                  "type": "null"
                }
              },
              "required": [],
              "title": "hpa",
              "type": "object"
            },
            "keda": {
              "additionalProperties": true,
              "description": "Autoscaling via keda/ScaledObject",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "requires https://keda.sh/",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "triggers": {
                  "description": "List of autoscaling triggers for the compactor",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "triggers",
                  "type": "array"
                }
              },
              "required": [],
              "title": "keda",
              "type": "object"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the compactor",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the compactor",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "properties": {
            "compaction": {
              "additionalProperties": true,
              "properties": {
                "block_retention": {
                  "default": "48h",
                  "description": "Duration to keep blocks",
                  "required": [],
                  "title": "block_retention",
                  "type": "string"
                },
                "compacted_block_retention": {
                  "default": "1h",
                  "description": "Duration to keep blocks that have been compacted elsewhere",
                  "required": [],
                  "title": "compacted_block_retention",
                  "type": "string"
                },
                "compaction_cycle": {
                  "default": "30s",
                  "description": "The time between compaction cycles",
                  "required": [],
                  "title": "compaction_cycle",
                  "type": "string"
                },
                "compaction_window": {
                  "default": "1h",
                  "description": "Blocks in this time window will be compacted together",
                  "required": [],
                  "title": "compaction_window",
                  "type": "string"
                },
                "max_block_bytes": {
                  "default": 107374182400,
                  "description": "Maximum size of a compacted block in bytes",
                  "required": [],
                  "title": "max_block_bytes",
                  "type": "integer"
                },
                "max_compaction_objects": {
                  "default": 6000000,
                  "description": "Maximum number of traces in a compacted block. WARNING: Deprecated. Use max_block_bytes instead.",
                  "required": [],
                  "title": "max_compaction_objects",
                  "type": "integer"
                },
                "max_time_per_tenant": {
                  "default": "5m",
                  "description": "The maximum amount of time to spend compacting a single tenant before moving to the next",
                  "required": [],
                  "title": "max_time_per_tenant",
                  "type": "string"
                },
                "retention_concurrency": {
                  "default": 10,
                  "description": "Number of tenants to process in parallel during retention",
                  "required": [],
                  "title": "retention_concurrency",
                  "type": "integer"
                },
                "v2_in_buffer_bytes": {
                  "default": 5242880,
                  "description": "Amount of data to buffer from input blocks",
                  "required": [],
                  "title": "v2_in_buffer_bytes",
                  "type": "integer"
                },
                "v2_out_buffer_bytes": {
                  "default": 20971520,
                  "description": "Flush data to backend when buffer is this large",
                  "required": [],
                  "title": "v2_out_buffer_bytes",
                  "type": "integer"
                },
                "v2_prefetch_traces_count": {
                  "default": 1000,
                  "description": "Number of traces to buffer in memory during compaction",
                  "required": [],
                  "title": "v2_prefetch_traces_count",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "compaction",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "dnsConfigOverides": {
          "additionalProperties": true,
          "properties": {
            "dnsConfig": {
              "additionalProperties": true,
              "properties": {
                "options": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "name": {
                        "default": "ndots",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      },
                      "value": {
                        "default": "3",
                        "required": [],
                        "title": "value",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "options",
                  "type": "array"
                }
              },
              "required": [],
              "title": "dnsConfig",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "dnsConfigOverides",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the compactor",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the compactor pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for compactor deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the compactor image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the compactor image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the compactor image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the compactor pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for compactor pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for compactor pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for compactor pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for compactor pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the compactor",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the compactor",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for compactor service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the compactor to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for compactor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "compactor",
      "type": "object"
    },
    "config": {
      "default": "multitenancy_enabled: {{ .Values.multitenancyEnabled }}\n\nusage_report:\n  reporting_enabled: {{ .Values.reportingEnabled }}\n\n{{- if .Values.enterprise.enabled }}\nlicense:\n  path: \"/license/license.jwt\"\n\nadmin_api:\n  leader_election:\n    enabled: true\n    ring:\n      kvstore:\n        store: \"memberlist\"\n\nauth:\n  type: enterprise\n\nhttp_api_prefix: {{get .Values.tempo.structuredConfig \"http_api_prefix\"}}\n\nadmin_client:\n  storage:\n    backend: {{.Values.storage.admin.backend}}\n    {{- if eq .Values.storage.admin.backend \"s3\"}}\n    s3:\n      {{- toYaml .Values.storage.admin.s3 | nindent 6}}\n    {{- end}}\n    {{- if eq .Values.storage.admin.backend \"gcs\"}}\n    gcs:\n      {{- toYaml .Values.storage.admin.gcs | nindent 6}}\n    {{- end}}\n    {{- if eq .Values.storage.admin.backend \"azure\"}}\n    azure:\n      {{- toYaml .Values.storage.admin.azure | nindent 6}}\n    {{- end}}\n    {{- if eq .Values.storage.admin.backend \"swift\"}}\n    swift:\n      {{- toYaml .Values.storage.admin.swift | nindent 6}}\n    {{- end}}\n    {{- if eq .Values.storage.admin.backend \"filesystem\"}}\n    filesystem:\n      {{- toYaml .Values.storage.admin.filesystem | nindent 6}}\n    {{- end}}\n{{- end }}\n\n{{- if and .Values.enterprise.enabled .Values.enterpriseGateway.useDefaultProxyURLs }}\ngateway:\n  proxy:\n    admin_api:\n      url: http://{{ template \"tempo.fullname\" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n    compactor:\n      url: http://{{ template \"tempo.fullname\" . }}-compactor.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n    default:\n      url: http://{{ template \"tempo.fullname\" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n    distributor:\n      url: http://{{ template \"tempo.fullname\" . }}-distributor.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n      otlp/grpc:\n        url: h2c://{{ template \"tempo.fullname\" . }}-distributor.{{ .Release.Namespace }}.svc:4317\n      otlp/http:\n        url: http://{{ template \"tempo.fullname\" . }}-distributor.{{ .Release.Namespace }}.svc:4318\n    ingester:\n      url: http://{{ template \"tempo.fullname\" . }}-ingester.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n    querier:\n      url: http://{{ template \"tempo.fullname\" . }}-querier.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}\n    query_frontend:\n      url: http://{{ template \"tempo.fullname\" . }}-query-frontend.{{ .Release.Namespace }}.svc:{{ include \"tempo.serverHttpListenPort\" . }}{{get .Values.tempo.structuredConfig \"http_api_prefix\"}}\n{{else}}\n{{- if and .Values.enterprise.enabled .Values.enterpriseGateway.proxy }}\ngateway:\n  proxy: {{- toYaml .Values.enterpriseGateway.proxy | nindent 6 }}\n{{- end }}\n{{- end }}\n\ncompactor:\n  compaction:\n    block_retention: {{ .Values.compactor.config.compaction.block_retention }}\n    compacted_block_retention: {{ .Values.compactor.config.compaction.compacted_block_retention }}\n    compaction_window: {{ .Values.compactor.config.compaction.compaction_window }}\n    v2_in_buffer_bytes: {{ .Values.compactor.config.compaction.v2_in_buffer_bytes }}\n    v2_out_buffer_bytes: {{ .Values.compactor.config.compaction.v2_out_buffer_bytes }}\n    max_compaction_objects: {{ .Values.compactor.config.compaction.max_compaction_objects }}\n    max_block_bytes: {{ .Values.compactor.config.compaction.max_block_bytes }}\n    retention_concurrency: {{ .Values.compactor.config.compaction.retention_concurrency }}\n    v2_prefetch_traces_count: {{ .Values.compactor.config.compaction.v2_prefetch_traces_count }}\n    max_time_per_tenant: {{ .Values.compactor.config.compaction.max_time_per_tenant }}\n    compaction_cycle: {{ .Values.compactor.config.compaction.compaction_cycle }}\n  ring:\n    kvstore:\n      store: memberlist\n{{- if and .Values.enterprise.enabled .Values.enterpriseFederationFrontend.enabled }}\nfederation:\n  proxy_targets:\n    {{- toYaml .Values.enterpriseFederationFrontend.proxy_targets | nindent 6 }}\n{{- end }}\n{{- if .Values.metricsGenerator.enabled }}\nmetrics_generator:\n  ring:\n    kvstore:\n      store: memberlist\n  processor:\n    {{- toYaml .Values.metricsGenerator.config.processor | nindent 6 }}\n  storage:\n    {{- toYaml .Values.metricsGenerator.config.storage | nindent 6 }}\n  traces_storage:\n    {{- toYaml .Values.metricsGenerator.config.traces_storage | nindent 6 }}\n  registry:\n    {{- toYaml .Values.metricsGenerator.config.registry | nindent 6 }}\n  metrics_ingestion_time_range_slack: {{ .Values.metricsGenerator.config.metrics_ingestion_time_range_slack }}\n{{- end }}\ndistributor:\n  {{- if .Values.distributor.config.cost_attribution.enabled }}\n  usage:\n    cost_attribution:\n      enabled: {{ .Values.distributor.config.cost_attribution.enabled }}\n      max_cardinality: {{ .Values.distributor.config.cost_attribution.max_cardinality }}\n      stale_duration: {{ .Values.distributor.config.cost_attribution.stale_duration }}\n  {{- end }}\n  ring:\n    kvstore:\n      store: memberlist\n  receivers:\n    {{- if  or (.Values.traces.jaeger.thriftCompact.enabled) (.Values.traces.jaeger.thriftBinary.enabled) (.Values.traces.jaeger.thriftHttp.enabled) (.Values.traces.jaeger.grpc.enabled) }}\n    jaeger:\n      protocols:\n        {{- if .Values.traces.jaeger.thriftCompact.enabled }}\n        thrift_compact:\n          {{- $mergedJaegerThriftCompactConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:6831\") .Values.traces.jaeger.thriftCompact.receiverConfig }}\n          {{- toYaml $mergedJaegerThriftCompactConfig | nindent 10 }}\n        {{- end }}\n        {{- if .Values.traces.jaeger.thriftBinary.enabled }}\n        thrift_binary:\n          {{- $mergedJaegerThriftBinaryConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:6832\") .Values.traces.jaeger.thriftBinary.receiverConfig }}\n          {{- toYaml $mergedJaegerThriftBinaryConfig | nindent 10 }}\n        {{- end }}\n        {{- if .Values.traces.jaeger.thriftHttp.enabled }}\n        thrift_http:\n          {{- $mergedJaegerThriftHttpConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:14268\") .Values.traces.jaeger.thriftHttp.receiverConfig }}\n          {{- toYaml $mergedJaegerThriftHttpConfig | nindent 10 }}\n        {{- end }}\n        {{- if .Values.traces.jaeger.grpc.enabled }}\n        grpc:\n          {{- $mergedJaegerGrpcConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:14250\") .Values.traces.jaeger.grpc.receiverConfig }}\n          {{- toYaml $mergedJaegerGrpcConfig | nindent 10 }}\n        {{- end }}\n    {{- end }}\n    {{- if .Values.traces.zipkin.enabled }}\n    zipkin:\n      {{- $mergedZipkinReceiverConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:9411\") .Values.traces.zipkin.receiverConfig }}\n      {{- toYaml $mergedZipkinReceiverConfig | nindent 6 }}\n    {{- end }}\n    {{- if or (.Values.traces.otlp.http.enabled) (.Values.traces.otlp.grpc.enabled) }}\n    otlp:\n      protocols:\n        {{- if .Values.traces.otlp.http.enabled }}\n        http:\n          {{- $mergedOtlpHttpReceiverConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:4318\") .Values.traces.otlp.http.receiverConfig }}\n          {{- toYaml $mergedOtlpHttpReceiverConfig | nindent 10 }}\n        {{- end }}\n        {{- if .Values.traces.otlp.grpc.enabled }}\n        grpc:\n          {{- $mergedOtlpGrpcReceiverConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:4317\") .Values.traces.otlp.grpc.receiverConfig }}\n          {{- toYaml $mergedOtlpGrpcReceiverConfig | nindent 10 }}\n        {{- end }}\n    {{- end }}\n    {{- if .Values.traces.opencensus.enabled }}\n    opencensus:\n      {{- $mergedOpencensusReceiverConfig := mustMergeOverwrite (dict \"endpoint\" \"0.0.0.0:55678\") .Values.traces.opencensus.receiverConfig }}\n      {{- toYaml $mergedOpencensusReceiverConfig | nindent 6 }}\n    {{- end }}\n    {{- if .Values.traces.kafka }}\n    kafka:\n      {{- toYaml .Values.traces.kafka | nindent 6 }}\n    {{- end }}\n  {{- if .Values.distributor.config.log_discarded_spans.enabled }}\n  log_discarded_spans:\n    enabled: {{ .Values.distributor.config.log_discarded_spans.enabled }}\n    include_all_attributes: {{ .Values.distributor.config.log_discarded_spans.include_all_attributes }}\n    filter_by_status_error: {{ .Values.distributor.config.log_discarded_spans.filter_by_status_error }}\n  {{- end }}\n  {{- if or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}\n  log_received_spans:\n    enabled: {{ or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}\n    include_all_attributes: {{ .Values.distributor.config.log_received_spans.include_all_attributes }}\n    filter_by_status_error: {{ .Values.distributor.config.log_received_spans.filter_by_status_error }}\n  {{- end }}\n  {{- if .Values.distributor.config.extend_writes }}\n  extend_writes: {{ .Values.distributor.config.extend_writes }}\n  {{- end }}\n  {{- if .Values.distributor.config.max_attribute_bytes }}\n  max_attribute_bytes: {{ .Values.distributor.config.max_attribute_bytes }}\n  {{- end }}\nquerier:\n  frontend_worker:\n    frontend_address: {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"query-frontend-discovery\") }}:9095\n    {{- if .Values.querier.config.frontend_worker.grpc_client_config }}\n    grpc_client_config:\n      {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}\n    {{- end }}\n  trace_by_id:\n    query_timeout: {{ .Values.querier.config.trace_by_id.query_timeout }}\n  search:\n    query_timeout: {{ .Values.querier.config.search.query_timeout }}\n  max_concurrent_queries: {{ .Values.querier.config.max_concurrent_queries }}\nquery_frontend:\n  max_outstanding_per_tenant: {{ .Values.queryFrontend.config.max_outstanding_per_tenant }}\n  max_retries: {{ .Values.queryFrontend.config.max_retries }}\n  search:\n    target_bytes_per_job: {{ .Values.queryFrontend.config.search.target_bytes_per_job }}\n    concurrent_jobs: {{ .Values.queryFrontend.config.search.concurrent_jobs }}\n    max_spans_per_span_set: {{ .Values.queryFrontend.config.search.max_spans_per_span_set }}\n  trace_by_id:\n    query_shards: {{ .Values.queryFrontend.config.trace_by_id.query_shards }}\n  metrics:\n    concurrent_jobs:  {{ .Values.queryFrontend.config.metrics.concurrent_jobs }}\n    target_bytes_per_job:  {{ .Values.queryFrontend.config.metrics.target_bytes_per_job }}\n    max_duration: {{ .Values.queryFrontend.config.metrics.max_duration }}\n    query_backend_after: {{ .Values.queryFrontend.config.metrics.query_backend_after }}\n    interval: {{ .Values.queryFrontend.config.metrics.interval }}\n    duration_slo: {{ .Values.queryFrontend.config.metrics.duration_slo }}\n    throughput_bytes_slo: {{ .Values.queryFrontend.config.metrics.throughput_bytes_slo }}\ningester:\n  lifecycler:\n    ring:\n      replication_factor: {{ .Values.ingester.config.replication_factor }}\n      {{- if .Values.ingester.zoneAwareReplication.enabled }}\n      zone_awareness_enabled: true\n      {{- end }}\n      kvstore:\n        store: memberlist\n    tokens_file_path: /var/tempo/tokens.json\n  {{- if .Values.ingester.config.trace_idle_period }}\n  trace_idle_period: {{ .Values.ingester.config.trace_idle_period }}\n  {{- end }}\n  {{- if .Values.ingester.config.flush_check_period }}\n  flush_check_period: {{ .Values.ingester.config.flush_check_period }}\n  {{- end }}\n  {{- if .Values.ingester.config.max_block_bytes }}\n  max_block_bytes: {{ .Values.ingester.config.max_block_bytes }}\n  {{- end }}\n  {{- if .Values.ingester.config.max_block_duration }}\n  max_block_duration: {{ .Values.ingester.config.max_block_duration }}\n  {{- end }}\n  {{- if .Values.ingester.config.complete_block_timeout }}\n  complete_block_timeout: {{ .Values.ingester.config.complete_block_timeout }}\n  {{- end }}\n  {{- if .Values.ingester.config.flush_all_on_shutdown }}\n  flush_all_on_shutdown: {{ .Values.ingester.config.flush_all_on_shutdown }}\n  {{- end }}\nmemberlist:\n  {{- with .Values.memberlist }}\n    {{- toYaml . | nindent 2 }}\n  {{- end }}\n  join_members:\n    - dns+{{ include \"tempo.fullname\" . }}-gossip-ring:{{ .Values.memberlist.bind_port }}\noverrides:\n  {{- toYaml .Values.overrides | nindent 2 }}\nserver:\n  http_listen_port: {{ .Values.server.httpListenPort }}\n  log_level: {{ .Values.server.logLevel }}\n  log_format: {{ .Values.server.logFormat }}\n  grpc_server_max_recv_msg_size: {{ .Values.server.grpc_server_max_recv_msg_size }}\n  grpc_server_max_send_msg_size: {{ .Values.server.grpc_server_max_send_msg_size }}\n  http_server_read_timeout: {{ .Values.server.http_server_read_timeout }}\n  http_server_write_timeout: {{ .Values.server.http_server_write_timeout }}\ncache:\n{{- toYaml .Values.cache | nindent 2}}\nstorage:\n  trace:\n    {{- if .Values.storage.trace.block.version }}\n    block:\n      version: {{.Values.storage.trace.block.version}}\n      {{- if .Values.storage.trace.block.dedicated_columns}}\n      parquet_dedicated_columns:\n        {{ .Values.storage.trace.block.dedicated_columns | toYaml | nindent 8}}\n      {{- end }}\n    {{- end }}\n    pool:\n      max_workers: {{ .Values.storage.trace.pool.max_workers }}\n      queue_depth: {{ .Values.storage.trace.pool.queue_depth }}\n    backend: {{.Values.storage.trace.backend}}\n    {{- if eq .Values.storage.trace.backend \"s3\"}}\n    s3:\n      {{- toYaml .Values.storage.trace.s3 | nindent 6}}\n    {{- end }}\n    {{- if eq .Values.storage.trace.backend \"gcs\"}}\n    gcs:\n      {{- toYaml .Values.storage.trace.gcs | nindent 6}}\n    {{- end }}\n    {{- if eq .Values.storage.trace.backend \"azure\"}}\n    azure:\n      {{- toYaml .Values.storage.trace.azure | nindent 6}}\n    {{- end }}\n    blocklist_poll: 5m\n    local:\n      path: /var/tempo/traces\n    wal:\n      path: /var/tempo/wal\n    search:\n      {{- toYaml .Values.storage.trace.search | nindent 6}}\n\n    {{- if .Values.storage.trace.blocklist_poll }}\n    blocklist_poll: {{ .Values.storage.trace.blocklist_poll }}\n    {{- end }}\n    {{- if .Values.storage.trace.blocklist_poll_concurrency }}\n    blocklist_poll_concurrency: {{ .Values.storage.trace.blocklist_poll_concurrency }}\n    {{- end }}\n    {{- if .Values.storage.trace.blocklist_poll_fallback }}\n    blocklist_poll_fallback: {{ .Values.storage.trace.blocklist_poll_fallback }}\n    {{- end }}\n    {{- if .Values.storage.trace.blocklist_poll_tenant_index_builders }}\n    blocklist_poll_tenant_index_builders: {{ .Values.storage.trace.blocklist_poll_tenant_index_builders }}\n    {{- end }}\n    {{- if .Values.storage.trace.blocklist_poll_stale_tenant_index }}\n    blocklist_poll_stale_tenant_index: {{ .Values.storage.trace.blocklist_poll_stale_tenant_index }}\n    {{- end }}\n    {{- if .Values.storage.trace.empty_tenant_deletion_age }}\n    empty_tenant_deletion_age: {{ .Values.storage.trace.empty_tenant_deletion_age }}\n    {{- end }}\n    {{- if .Values.storage.trace.empty_tenant_deletion_enabled }}\n    empty_tenant_deletion_enabled: {{ .Values.storage.trace.empty_tenant_deletion_enabled }}\n    {{- end }}\n",
      "required": [],
      "title": "config",
      "type": "string"
    },
    "configPathmc": {
      "default": "/etc/minio/mc/",
      "required": [],
      "title": "configPathmc",
      "type": "string"
    },
    "configStorageType": {
      "default": "ConfigMap",
      "description": "Defines what kind of object stores the configuration, a ConfigMap or a Secret.\nIn order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/mimir/latest/operators-guide/configuring/reference-configuration-parameters/#use-environment-variables-in-the-configuration).\nSuch environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).",
      "required": [],
      "title": "configStorageType",
      "type": "string"
    },
    "consoleIngress": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "ingressClassName: \"\"",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "default": "/",
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nkubernetes.io/ingress.allow-http: \"false\"\nkubernetes.io/ingress.global-static-ip-name: \"\"\nnginx.ingress.kubernetes.io/secure-backends: \"true\"\nnginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nnginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "consoleIngress",
      "type": "object"
    },
    "consoleService": {
      "additionalProperties": true,
      "properties": {
        "clusterIP": {
          "default": "~",
          "required": [],
          "title": "clusterIP",
          "type": "null"
        },
        "nodePort": {
          "default": 32001,
          "required": [],
          "title": "nodePort",
          "type": "integer"
        },
        "port": {
          "default": "9001",
          "required": [],
          "title": "port",
          "type": "string"
        },
        "type": {
          "default": "ClusterIP",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "consoleService",
      "type": "object"
    },
    "containerSecurityContext": {
      "additionalProperties": true,
      "description": "Container security context (allowPrivilegeEscalation, etc.)",
      "required": [],
      "title": "containerSecurityContext",
      "type": "object"
    },
    "customCommandJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job customCommandJob",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "default": "",
          "required": [],
          "title": "annotations",
          "type": "null"
        },
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "default": "",
          "required": [],
          "title": "podAnnotations",
          "type": "null"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "customCommandJob",
      "type": "object"
    },
    "customCommands": {
      "default": "",
      "description": "# List of command to run after minio install\n# NOTE: the mc command TARGET is always \"myminio\"",
      "required": [],
      "title": "customCommands",
      "type": "null"
    },
    "distributor": {
      "additionalProperties": true,
      "description": "Configuration for the distributor",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"distributor\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"distributor\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for distributor pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for distributor deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the distributor service. This allows distributor to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "null",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "null"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Autoscaling behavior configuration for the distributor",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the distributor",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the distributor",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the distributor",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the distributor",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the distributor",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "properties": {
            "cost_attribution": {
              "additionalProperties": true,
              "description": "Configures usage trackers in the distributor which expose metrics of ingested traffic grouped by configurable\nattributes exposed on /usage_metrics.",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enables the \"cost-attribution\" usage tracker. Per-tenant attributes are configured in overrides.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "max_cardinality": {
                  "default": 10000,
                  "description": "Maximum number of series per tenant.",
                  "required": [],
                  "title": "max_cardinality",
                  "type": "integer"
                },
                "stale_duration": {
                  "default": "15m0s",
                  "description": "Interval after which a series is considered stale and will be deleted from the registry.\nOnce a metrics series is deleted, it won't be emitted anymore, keeping active series low.",
                  "required": [],
                  "title": "stale_duration",
                  "type": "string"
                }
              },
              "required": [],
              "title": "cost_attribution",
              "type": "object"
            },
            "extend_writes": {
              "default": "null",
              "description": "Disables write extension with inactive ingesters",
              "required": [],
              "title": "extend_writes",
              "type": "null"
            },
            "log_discarded_spans": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "filter_by_status_error": {
                  "default": false,
                  "required": [],
                  "title": "filter_by_status_error",
                  "type": "boolean"
                },
                "include_all_attributes": {
                  "default": false,
                  "required": [],
                  "title": "include_all_attributes",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "log_discarded_spans",
              "type": "object"
            },
            "log_received_spans": {
              "additionalProperties": true,
              "description": "Enable to log every received span to help debug ingestion or calculate span error distributions using the logs",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "filter_by_status_error": {
                  "default": false,
                  "required": [],
                  "title": "filter_by_status_error",
                  "type": "boolean"
                },
                "include_all_attributes": {
                  "default": false,
                  "required": [],
                  "title": "include_all_attributes",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "log_received_spans",
              "type": "object"
            },
            "log_received_traces": {
              "default": "null",
              "description": "Enable to log every received trace id to help debug ingestion\nWARNING: Deprecated. Use log_received_spans instead.",
              "required": [],
              "title": "log_received_traces",
              "type": "null"
            },
            "max_attribute_bytes": {
              "default": 0,
              "description": "Trace Attribute bytes limit. This is the maximum number of bytes that can be used in a trace.0 for no limit.",
              "required": [],
              "title": "max_attribute_bytes",
              "type": "integer"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the distributor",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the distributor pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for distributor deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the distributor image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the distributor image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the distributor image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers to add to the distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Container lifecycle hooks for the distributor",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for distributor pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for distributor pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for distributor pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for distributor pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the distributor",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the distributor",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for distributor service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "externalTrafficPolicy": {
              "default": "null",
              "description": "If type is LoadBalancer you can set it to 'Local' [preserve the client source IP](https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip)",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "null"
            },
            "internalTrafficPolicy": {
              "default": "Cluster",
              "description": "https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/",
              "required": [],
              "title": "internalTrafficPolicy",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for distributor service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "If type is LoadBalancer you can assign the IP to the LoadBalancer",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "If type is LoadBalancer limit incoming traffic from IPs.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of service for the distributor",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceDiscovery": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for distributorDiscovery service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for distributorDiscovery service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceDiscovery",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "description": "Strategy of updating pods",
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxSurge": {
                  "default": 0,
                  "required": [],
                  "title": "maxSurge",
                  "type": "integer"
                },
                "maxUnavailable": {
                  "default": 1,
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            }
          },
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the distributor to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for distributor pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"distributor\") | nindent 6 }}\n",
          "description": "topologySpread for distributor pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "distributor",
      "type": "object"
    },
    "drivesPerNode": {
      "default": 1,
      "description": "Number of drives attached to a node",
      "required": [],
      "title": "drivesPerNode",
      "type": "integer"
    },
    "enterprise": {
      "additionalProperties": true,
      "description": "#############################################################################\nThe values in and after the `enterprise:` key configure the enterprise features",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable enterprise features. License must be provided, nginx gateway is not installed, instead\nthe enterprise gateway is used.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "repository": {
              "default": "grafana/enterprise-traces",
              "description": "Grafana Enterprise Traces container image repository. Note: for Grafana Tempo use the value 'image.repository'",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v2.8.1",
              "description": "Grafana Enterprise Traces container image tag. Note: for Grafana Tempo use the value 'image.tag'",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        }
      },
      "required": [],
      "title": "enterprise",
      "type": "object"
    },
    "enterpriseFederationFrontend": {
      "additionalProperties": true,
      "description": "Configuration for the federation-frontend\nCan only be enabled if enterprise.enabled is true - requires license.",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"federation-frontend\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"federation-frontend\") | nindent 12 }}\n        topologyKey: failure-domain.beta.kubernetes.io/zone\n",
          "description": "Affinity for federation-frontend pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the federation-frontend Deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": "  - name: own-data-center\n    url: http://get/tempo\n  - name: grafana-cloud\n    url: https://tempo-us-central1.grafana.net/tempo\n    basic_auth:\n      username: \u003cinstance-id\u003e\n      password: \u003ctoken\u003e",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the federation-frontend",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the federation-frontend",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the federation-frontend",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the federation-frontend",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the federation-frontend",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether a federation-frontend should be deployed",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the federation-frontend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the federation-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the federation-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for federation-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for federation-frontend deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the federation-frontend image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the federation-frontend image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the federation-frontend image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for federation-frontend pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for federation-frontend pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for enterpriseFederationFrontend pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for federation-frontend pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "proxy_targets": {
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "items": {
            "required": []
          },
          "required": [],
          "title": "proxy_targets",
          "type": "array"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the federation-frontend",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the federation-frontend",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for enterpriseFederationFrontend service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "If type is LoadBalancer you can assign the IP to the LoadBalancer",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "If type is LoadBalancer limit incoming traffic from IPs.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "port": {
              "default": 3200,
              "description": "Port of the federation-frontend service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of service for the enterpriseFederationFrontend",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the federation-frontend to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for federation-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: failure-domain.beta.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"federation-frontend\") | nindent 6 }}\n",
          "description": "topologySpread for federation-frontend pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "enterpriseFederationFrontend",
      "type": "object"
    },
    "enterpriseGateway": {
      "additionalProperties": true,
      "description": "Settings for the gateway service providing authentication and authorization via the admin_api.\nCan only be enabled if enterprise.enabled is true - requires license.",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"enterprise-gateway\") | nindent 12 }}\n        topologyKey: kubernetes.io/hostname\n    - weight: 75\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"enterprise-gateway\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for enterprise-gateway pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for enterprise-gateway containers",
          "properties": {
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "env": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraContainers": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvFrom": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the enterpriseGateway image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the enterpriseGateway image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the enterpriseGateway image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "description": "Ingress configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Ingress Class Name. MAY be required for Kubernetes versions \u003e= 1.18\ningressClassName: gateway\nAnnotations for the enterprise-gateway ingress",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Specifies whether an ingress for the enterprise-gateway should be created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Hosts configuration for the enterprise-gateway ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "host": {
                    "default": "gateway.get.example.com",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "default": "/",
                          "required": [],
                          "title": "path",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "tls": {
              "description": "TLS configuration for the enterprise-gateway ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "hosts": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "hosts",
                    "type": "array"
                  },
                  "secretName": {
                    "default": "get-gateway-tls",
                    "required": [],
                    "title": "secretName",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "initContainers": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "subPath": {
              "default": "",
              "required": [],
              "title": "subPath",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "Pod Disruption Budget",
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "proxy": {
          "additionalProperties": true,
          "description": "Proxy URLs defined in this object will be used if useDefaultProxyURLs is set to false.",
          "required": [],
          "title": "proxy",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 45,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "10m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "32Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the enterprise gateway service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "null",
              "description": "ClusterIP of the enterprise gateway service",
              "required": [],
              "title": "clusterIP",
              "type": "null"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for enterprise gateway service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "null",
              "description": "Load balancer IP address if service type is LoadBalancer for enterprise gateway service",
              "required": [],
              "title": "loadBalancerIP",
              "type": "null"
            },
            "port": {
              "default": "null",
              "description": "Port of the enterprise gateway service; if left undefined, the service will listen on the same port as the pod",
              "required": [],
              "title": "port",
              "type": "null"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the enterprise gateway service",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "maxSurge": {
                  "default": 0,
                  "required": [],
                  "title": "maxSurge",
                  "type": "integer"
                },
                "maxUnavailable": {
                  "default": 1,
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 60,
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"enterprise-gateway\") | nindent 6 }}\n",
          "description": "topologySpread for enterprise-gateway pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        },
        "useDefaultProxyURLs": {
          "default": true,
          "description": "If you want to use your own proxy URLs, set this to false.",
          "required": [],
          "title": "useDefaultProxyURLs",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "enterpriseGateway",
      "type": "object"
    },
    "environment": {
      "default": "",
      "description": "# Use this field to add environment variables relevant to MinIO server. These fields will be passed on to MinIO container(s)\n# when Chart is deployed",
      "required": [],
      "title": "environment",
      "type": "null"
    },
    "etcd": {
      "additionalProperties": true,
      "description": "# ETCD settings: https://github.com/minio/minio/blob/master/docs/sts/etcd.md\n# Define endpoints to enable this section.",
      "properties": {
        "clientCert": {
          "default": "",
          "required": [],
          "title": "clientCert",
          "type": "string"
        },
        "clientCertKey": {
          "default": "",
          "required": [],
          "title": "clientCertKey",
          "type": "string"
        },
        "corednsPathPrefix": {
          "default": "",
          "required": [],
          "title": "corednsPathPrefix",
          "type": "string"
        },
        "endpoints": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "pathPrefix": {
          "default": "",
          "required": [],
          "title": "pathPrefix",
          "type": "string"
        }
      },
      "required": [],
      "title": "etcd",
      "type": "object"
    },
    "existingSecret": {
      "default": "",
      "description": "# Use existing Secret that store following variables:\n#\n# | Chart var             | .data.\u003ckey\u003e in Secret    |\n# |:----------------------|:-------------------------|\n# | rootUser              | rootUser                 |\n# | rootPassword          | rootPassword             |\n#\n# All mentioned variables will be ignored in values file.\n# .data.rootUser and .data.rootPassword are mandatory,\n# others depend on enabled status of corresponding sections.",
      "required": [],
      "title": "existingSecret",
      "type": "string"
    },
    "externalConfigSecretName": {
      "default": "{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"config\") }}",
      "description": "Name of the Secret or ConfigMap that contains the configuration (used for naming even if config is internal).",
      "required": [],
      "title": "externalConfigSecretName",
      "type": "string"
    },
    "externalConfigVersion": {
      "default": "0",
      "description": "When 'useExternalConfig' is true, then changing 'externalConfigVersion' triggers restart of services - otherwise changes to the configuration cause a restart.",
      "required": [],
      "title": "externalConfigVersion",
      "type": "string"
    },
    "externalRuntimeConfigName": {
      "default": "{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"runtime\") }}",
      "description": "Name of the Secret or ConfigMap that contains the runtime configuration (used for naming even if config is internal).",
      "required": [],
      "title": "externalRuntimeConfigName",
      "type": "string"
    },
    "extraArgs": {
      "description": "List of additional CLI arguments to configure rollout-operator (example: `--log.level=info`)",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraArgs",
      "type": "array"
    },
    "extraEnv": {
      "description": "Environment variables to add to rollout-operator container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "extraEnvFrom": {
      "description": "Environment variables from secrets or configmaps to add to rollout-operator container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnvFrom",
      "type": "array"
    },
    "extraObjects": {
      "description": "extraObjects could be utilized to add dynamic manifests via values",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraObjects",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "# Provide a name to substitute for the full names of resources\n#",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "gateway": {
      "additionalProperties": true,
      "description": "Configuration for the gateway",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"gateway\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"gateway\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for gateway pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for gateway deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Autoscaling behavior configuration for the gateway",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the gateway",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the gateway",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the gateway",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the gateway",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the gateway",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "basicAuth": {
          "additionalProperties": true,
          "description": "Basic auth configuration",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables basic authentication for the gateway",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "null",
              "description": "Existing basic auth secret to use. Must contain '.htpasswd'",
              "required": [],
              "title": "existingSecret",
              "type": "null"
            },
            "htpasswd": {
              "default": "{{ htpasswd (required \"'gateway.basicAuth.username' is required\" .Values.gateway.basicAuth.username) (required \"'gateway.basicAuth.password' is required\" .Values.gateway.basicAuth.password) }}",
              "description": "Uses the specified username and password to compute a htpasswd using Sprig's `htpasswd` function.\nThe value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes\nhigh CPU load.",
              "required": [],
              "title": "htpasswd",
              "type": "string"
            },
            "password": {
              "default": "null",
              "description": "The basic auth password for the gateway",
              "required": [],
              "title": "password",
              "type": "null"
            },
            "username": {
              "default": "null",
              "description": "The basic auth username for the gateway",
              "required": [],
              "title": "username",
              "type": "null"
            }
          },
          "required": [],
          "title": "basicAuth",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether the gateway should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the gateway",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraContainers": {
          "description": "Containers to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "The gateway image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `global.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the gateway image. Overrides `global.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "nginxinc/nginx-unprivileged",
              "description": "The gateway image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.27-alpine",
              "description": "The gateway image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "description": "Gateway ingress configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Ingress Class Name. MAY be required for Kubernetes versions \u003e= 1.18\ningressClassName: nginx\nAnnotations for the gateway ingress",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Specifies whether an ingress for the gateway should be created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Hosts configuration for the gateway ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "host": {
                    "default": "gateway.tempo.example.com",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "default": "/",
                          "required": [],
                          "title": "path",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for the gateway ingress",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "tls": {
              "description": "TLS configuration for the gateway ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "hosts": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "hosts",
                    "type": "array"
                  },
                  "secretName": {
                    "default": "tempo-gateway-tls",
                    "required": [],
                    "title": "secretName",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Configures the liveness probe for the gateway",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 5,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nginxConfig": {
          "additionalProperties": true,
          "properties": {
            "file": {
              "default": "worker_processes  5;  ## Default: 1\nerror_log  /dev/stderr;\npid        /tmp/nginx.pid;\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;  ## Default: 1024\n}\n\nhttp {\n  client_body_temp_path /tmp/client_temp;\n  proxy_temp_path       /tmp/proxy_temp_path;\n  fastcgi_temp_path     /tmp/fastcgi_temp;\n  uwsgi_temp_path       /tmp/uwsgi_temp;\n  scgi_temp_path        /tmp/scgi_temp;\n\n  proxy_http_version    1.1;\n\n  default_type application/octet-stream;\n  log_format   {{ .Values.gateway.nginxConfig.logFormat }}\n\n  {{- if .Values.gateway.verboseLogging }}\n  access_log   /dev/stderr  main;\n  {{- else }}\n\n  map $status $loggable {\n    ~^[23]  0;\n    default 1;\n  }\n  access_log   /dev/stderr  main  if=$loggable;\n  {{- end }}\n\n  sendfile     on;\n  tcp_nopush   on;\n  {{- if .Values.gateway.nginxConfig.resolver }}\n  resolver {{ .Values.gateway.nginxConfig.resolver }};\n  {{- else }}\n  resolver {{ .Values.global.dnsService }}.{{ .Values.global.dnsNamespace }}.svc.{{ .Values.global.clusterDomain }};\n  {{- end }}\n\n  {{- with .Values.gateway.nginxConfig.httpSnippet }}\n  {{ . | nindent 2 }}\n  {{- end }}\n\n  server {\n    listen             8080;\n\n    {{- if .Values.gateway.basicAuth.enabled }}\n    auth_basic           \"Tempo\";\n    auth_basic_user_file /etc/nginx/secrets/.htpasswd;\n    {{- end }}\n\n    location = / {\n      return 200 'OK';\n      auth_basic off;\n    }\n\n    location = /jaeger/api/traces {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:14268/api/traces;\n    }\n\n    location = /zipkin/spans {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:9411/spans;\n    }\n\n    location = /v1/traces {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:4318/v1/traces;\n    }\n\n    location = /otlp/v1/traces {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:4318/v1/traces;\n    }\n\n    location ^~ /api {\n      set $query_frontend {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"query-frontend\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$query_frontend:3200$request_uri;\n    }\n\n    location = /flush {\n      set $ingester {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"ingester\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$ingester:3200$request_uri;\n    }\n\n    location = /shutdown {\n      set $ingester {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"ingester\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$ingester:3200$request_uri;\n    }\n\n    location = /distributor/ring {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:3200$request_uri;\n    }\n\n    location = /ingester/ring {\n      set $distributor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$distributor:3200$request_uri;\n    }\n\n    location = /compactor/ring {\n      set $compactor {{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"compactor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }};\n      proxy_pass       http://$compactor:3200$request_uri;\n    }\n\n    {{- with .Values.gateway.nginxConfig.serverSnippet }}\n    {{ . | nindent 4 }}\n    {{- end }}\n  }\n\n  {{- if .Values.traces.otlp.grpc.enabled }}\n  # OTLP gRPC\n  server {\n    listen               {{ .Values.traces.otlp.grpc.port }} http2;\n\n    {{- if .Values.gateway.basicAuth.enabled }}\n    auth_basic           \"Tempo\";\n    auth_basic_user_file /etc/nginx/secrets/.htpasswd;\n    {{- end }}\n\n    location = /opentelemetry.proto.collector.trace.v1.TraceService/Export {\n      grpc_pass          grpc://{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:{{ .Values.traces.otlp.grpc.port }};\n    }\n\n    location ~ /opentelemetry {\n      grpc_pass          grpc://{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"distributor\") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:{{ .Values.traces.otlp.grpc.port }};\n    }\n\n    {{- with .Values.gateway.nginxConfig.serverSnippet }}\n    {{ . | nindent 4 }}\n    {{- end }}\n  }\n  {{- end }}\n}\n",
              "description": "Config file contents for Nginx. Passed through the `tpl` function to allow templating",
              "required": [],
              "title": "file",
              "type": "string"
            },
            "httpSnippet": {
              "default": "",
              "description": "Allows appending custom configuration to the http block",
              "required": [],
              "title": "httpSnippet",
              "type": "string"
            },
            "logFormat": {
              "default": "main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';",
              "description": "NGINX log format",
              "required": [],
              "title": "logFormat",
              "type": "string"
            },
            "resolver": {
              "default": "",
              "description": "Allows overriding the DNS resolver address nginx will use",
              "required": [],
              "title": "resolver",
              "type": "string"
            },
            "serverSnippet": {
              "default": "",
              "description": "Allows appending custom configuration to the server block",
              "required": [],
              "title": "serverSnippet",
              "type": "string"
            }
          },
          "required": [],
          "title": "nginxConfig",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for gateway pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for gateway pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for gateway pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for gateway pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Configures the readiness probe for the gateway",
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 15,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the gateway",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the gateway",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "Gateway service configuration",
          "properties": {
            "additionalPorts": {
              "description": "Additional ports to be opened on gateway service (e.g. for RPC connections)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPorts",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the gateway service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "null",
              "description": "ClusterIP of the gateway service",
              "required": [],
              "title": "clusterIP",
              "type": "null"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for gateway service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "null",
              "description": "Load balancer IP address if service type is LoadBalancer",
              "required": [],
              "title": "loadBalancerIP",
              "type": "null"
            },
            "nodePort": {
              "default": "null",
              "description": "Node port if service type is NodePort",
              "required": [],
              "title": "nodePort",
              "type": "null"
            },
            "port": {
              "default": 80,
              "description": "Port of the gateway service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the gateway service",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the gateway to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for gateway pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"gateway\") | nindent 6 }}\n",
          "description": "topologySpread for gateway pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        },
        "type": {
          "default": "nas",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "verboseLogging": {
          "default": true,
          "description": "Enable logging of 2xx and 3xx HTTP requests",
          "required": [],
          "title": "verboseLogging",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "gateway",
      "type": "object"
    },
    "global": {
      "additionalProperties": true,
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "properties": {
        "clusterDomain": {
          "default": "cluster.local",
          "description": "configures cluster domain (\"cluster.local\" by default)",
          "required": [],
          "title": "clusterDomain",
          "type": "string"
        },
        "commonLabels": {
          "additionalProperties": true,
          "description": "Common labels for all object directly managed by this chart.",
          "required": [],
          "title": "commonLabels",
          "type": "object"
        },
        "dnsNamespace": {
          "default": "kube-system",
          "description": "configures DNS service namespace",
          "required": [],
          "title": "dnsNamespace",
          "type": "string"
        },
        "dnsService": {
          "default": "kube-dns",
          "description": "configures DNS service name",
          "required": [],
          "title": "dnsService",
          "type": "string"
        },
        "extraArgs": {
          "description": "Common args to add to all pods directly managed by this chart.\nscope: admin-api, compactor, distributor, enterprise-federation-frontend, gateway, ingester, memcached, metrics-generator, querier, query-frontend, tokengen",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Common environment variables to add to all pods directly managed by this chart.\nscope: admin-api, compactor, distributor, enterprise-federation-frontend, gateway, ingester, memcached, metrics-generator, querier, query-frontend, tokengen",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Common environment variables which come from a ConfigMap or Secret to add to all pods directly managed by this chart.\nscope: admin-api, compactor, distributor, enterprise-federation-frontend, gateway, ingester, memcached, metrics-generator, querier, query-frontend, tokengen",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets for all images, excluding enterprise.\nNames of existing secrets with private container registry credentials.\nRef: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\nExample:\npullSecrets: [ my-dockerconfigjson-secret ]",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "description": "Overrides the Docker registry globally for all images, excluding enterprise.",
              "required": [],
              "title": "registry",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "Overrides the priorityClassName for all pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "storageClass": {
          "default": "null",
          "description": "Global storage class to be used for persisted components",
          "required": [],
          "title": "storageClass",
          "type": "null"
        }
      },
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostAliases": {
      "description": "hostAliases to add",
      "items": {
        "required": []
      },
      "required": [],
      "title": "hostAliases",
      "type": "array"
    },
    "ignoreChartChecksums": {
      "default": false,
      "description": "# Typically the deployment/statefulset includes checksums of secrets/config,\n# So that when these change on a subsequent helm install, the deployment/statefulset\n# is restarted. This can result in unnecessary restarts under GitOps tooling such as\n# flux, so set to \"true\" to disable this behaviour.",
      "required": [],
      "title": "ignoreChartChecksums",
      "type": "boolean"
    },
    "image": {
      "additionalProperties": true,
      "description": "# Set default image, imageTag, and imagePullPolicy. mode is used to indicate the\n#",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "pullSecrets": {
          "description": "Image pull secrets",
          "items": {
            "required": []
          },
          "required": [],
          "title": "pullSecrets",
          "type": "array"
        },
        "registry": {
          "default": "docker.io",
          "description": "Image registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "grafana/rollout-operator",
          "description": "Image repo",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingester": {
      "additionalProperties": true,
      "description": "Configuration for the ingester",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"ingester\") | nindent 12 }}\n        topologyKey: kubernetes.io/hostname\n    - weight: 75\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"ingester\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the ingester StatefulSet",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the ingester service. This allows ingester to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "null",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "null"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Autoscaling behavior configuration for the ingester",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the ingester. WARNING: Autoscaling ingesters can result in lost data. Only do this if you know what you're doing.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the ingester",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 2,
              "description": "Minimum autoscaling replicas for the ingester",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the ingester",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the ingester",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "properties": {
            "complete_block_timeout": {
              "default": "null",
              "description": "Duration to keep blocks in the ingester after they have been flushed",
              "required": [],
              "title": "complete_block_timeout",
              "type": "null"
            },
            "flush_all_on_shutdown": {
              "default": false,
              "description": "Flush all traces to backend when ingester is stopped",
              "required": [],
              "title": "flush_all_on_shutdown",
              "type": "boolean"
            },
            "flush_check_period": {
              "default": "null",
              "description": "How often to sweep all tenants and move traces from live -\u003e wal -\u003e completed blocks.",
              "required": [],
              "title": "flush_check_period",
              "type": "null"
            },
            "max_block_bytes": {
              "default": "null",
              "description": "Maximum size of a block before cutting it",
              "required": [],
              "title": "max_block_bytes",
              "type": "null"
            },
            "max_block_duration": {
              "default": "null",
              "description": "Maximum length of time before cutting a block",
              "required": [],
              "title": "max_block_duration",
              "type": "null"
            },
            "replication_factor": {
              "default": 3,
              "description": "Number of copies of spans to store in the ingester ring",
              "required": [],
              "title": "replication_factor",
              "type": "integer"
            },
            "trace_idle_period": {
              "default": "null",
              "description": "Amount of time a trace must be idle before flushing it to the wal.",
              "required": [],
              "title": "trace_idle_period",
              "type": "null"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the ingester",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for ingester deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the ingester image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the ingester image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the ingester image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Override Pod Disruption Budget maxUnavailable with a static value\nmaxUnavailable: 1\nNode selector for ingester pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "Persistence configuration for ingester",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for ingester's persist volume claim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs which is required when using boltdb-shipper",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "inMemory": {
              "default": false,
              "description": "use emptyDir with ramdisk instead of PVC. **Please note that all data in ingester will be lost on pod restart**",
              "required": [],
              "title": "inMemory",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for ingester's persist volume claim",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "size": {
              "default": "10Gi",
              "description": "Size of persistent or memory disk",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable Persistent volume retention policy for StatefulSet",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "whenDeleted": {
              "default": "Retain",
              "description": "Volume retention behavior that applies when the StatefulSet is deleted",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "description": "Volume retention behavior when the replica count of the StatefulSet is reduced",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistentVolumeClaimRetentionPolicy",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for ingester pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for ingester pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for ingester pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 3,
          "description": "Number of replicas for the ingester",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the ingester",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for ingester service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "internalTrafficPolicy": {
              "default": "Cluster",
              "description": "https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/",
              "required": [],
              "title": "internalTrafficPolicy",
              "type": "string"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the service: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceDiscovery": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for ingester discovery service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceDiscovery",
          "type": "object"
        },
        "statefulStrategy": {
          "additionalProperties": true,
          "description": "updateStrategy of the ingester statefulset. This is ignored when ingester.zoneAwareReplication.enabled=true.",
          "properties": {
            "rollingUpdate": {
              "additionalProperties": true,
              "properties": {
                "partition": {
                  "default": 0,
                  "required": [],
                  "title": "partition",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "rollingUpdate",
              "type": "object"
            }
          },
          "required": [],
          "title": "statefulStrategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the ingester to shutdown before it is killed. Especially for the ingestor,\nthis must be increased. It must be long enough so ingesters can be gracefully shutdown flushing/transferring\nall data and to successfully leave the member ring on shutdown.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for ingester pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"ingester\") | nindent 6 }}\n",
          "description": "topologySpread for ingester pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        },
        "zoneAwareReplication": {
          "additionalProperties": true,
          "description": "EXPERIMENTAL Feature, disabled by default",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable zone-aware replication for ingester",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 50,
              "description": "Maximum number of ingesters that can be unavailable per zone during rollout",
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            },
            "topologyKey": {
              "default": "null",
              "description": "topologyKey to use in pod anti-affinity. If unset, no anti-affinity rules are generated. If set, the generated anti-affinity rule makes sure that pods from different zones do not mix.\nE.g.: topologyKey: 'kubernetes.io/hostname'",
              "required": [],
              "title": "topologyKey",
              "type": "null"
            },
            "zones": {
              "description": "Zone definitions for ingester zones. Note: you have to redefine the whole list to change parts as YAML does not allow to modify parts of a list.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "extraAffinity": {
                    "additionalProperties": true,
                    "description": "extraAffinity adds user defined custom affinity rules (merged with generated rules)",
                    "required": [],
                    "title": "extraAffinity",
                    "type": "object"
                  },
                  "name": {
                    "default": "zone-c",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "nodeSelector": {
                    "default": "null",
                    "description": "nodeselector to restrict where pods of this zone can be placed. E.g.:\nnodeSelector:\n  topology.kubernetes.io/zone: zone-c",
                    "required": [],
                    "title": "nodeSelector",
                    "type": "null"
                  },
                  "storageClass": {
                    "default": "null",
                    "description": "Ingester data Persistent Volume Storage Class\nIf defined, storageClassName: \u003cstorageClass\u003e\nIf set to \"-\", then use `storageClassName: \"\"`, which disables dynamic provisioning\nIf undefined or set to null (the default), then fall back to the value of `ingester.persistentVolume.storageClass`.",
                    "required": [],
                    "title": "storageClass",
                    "type": "null"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "zones",
              "type": "array"
            }
          },
          "required": [],
          "title": "zoneAwareReplication",
          "type": "object"
        }
      },
      "required": [],
      "title": "ingester",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": true,
      "description": "# Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/\n#",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "ingressClassName: nginx",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "If you enable this, make sure to disable the gateway's ingress.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "ingressClassName: \"\"",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "default": "/",
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nkubernetes.io/ingress.allow-http: \"false\"\nkubernetes.io/ingress.global-static-ip-name: \"\"\nnginx.ingress.kubernetes.io/secure-backends: \"true\"\nnginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nnginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "paths": {
          "additionalProperties": true,
          "properties": {
            "compactor": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "path": {
                    "default": "/compactor/ring",
                    "required": [],
                    "title": "path",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "compactor",
              "type": "array"
            },
            "distributor": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "path": {
                    "default": "/metrics-generator/ring",
                    "required": [],
                    "title": "path",
                    "type": "string"
                  },
                  "port": {
                    "default": 4318,
                    "required": [],
                    "title": "port",
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "distributor",
              "type": "array"
            },
            "ingester": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "path": {
                    "default": "/shutdown",
                    "required": [],
                    "title": "path",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "ingester",
              "type": "array"
            },
            "query-frontend": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "path": {
                    "default": "/api",
                    "required": [],
                    "title": "path",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "query-frontend",
              "type": "array"
            }
          },
          "required": [],
          "title": "paths",
          "type": "object"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "kubectlImage": {
      "additionalProperties": true,
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "alpine/kubectl",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "latest",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubectlImage",
      "type": "object"
    },
    "kubeletService": {
      "additionalProperties": true,
      "description": "If both are set, Agent Operator will create and maintain a service for scraping kubelets\nhttps://grafana.com/docs/agent/latest/operator/getting-started/#monitor-kubelets",
      "properties": {
        "namespace": {
          "default": "default",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "serviceName": {
          "default": "kubelet",
          "required": [],
          "title": "serviceName",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubeletService",
      "type": "object"
    },
    "license": {
      "additionalProperties": true,
      "description": "In order to use Grafana Enterprise Traces features, you will need to provide the contents of your Grafana Enterprise Traces\nlicense, either by providing the contents of the license.jwt, or the name Kubernetes Secret that contains your license.jwt.\nTo set the license contents, use the flag `--set-file 'license.contents=./license.jwt'`\nTo use your own Kubernetes Secret, `--set license.external=true`.",
      "properties": {
        "contents": {
          "default": "NOTAVALIDLICENSE",
          "required": [],
          "title": "contents",
          "type": "string"
        },
        "external": {
          "default": false,
          "required": [],
          "title": "external",
          "type": "boolean"
        },
        "secretName": {
          "default": "{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"license\") }}",
          "required": [],
          "title": "secretName",
          "type": "string"
        }
      },
      "required": [],
      "title": "license",
      "type": "object"
    },
    "makeBucketJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job makeBucketJob",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "default": "",
          "required": [],
          "title": "annotations",
          "type": "null"
        },
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "default": "",
          "required": [],
          "title": "podAnnotations",
          "type": "null"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "makeBucketJob",
      "type": "object"
    },
    "makePolicyJob": {
      "additionalProperties": true,
      "description": "# writeexamplepolicy policy grants creation or deletion of buckets with name\n# starting with example. In addition, grants objects write permissions on buckets starting with\n# example.\n- name: writeexamplepolicy\n  statements:\n    - resources:\n        - 'arn:aws:s3:::example*/*'\n      actions:\n        - \"s3:AbortMultipartUpload\"\n        - \"s3:GetObject\"\n        - \"s3:DeleteObject\"\n        - \"s3:PutObject\"\n        - \"s3:ListMultipartUploadParts\"\n    - resources:\n        - 'arn:aws:s3:::example*'\n      actions:\n        - \"s3:CreateBucket\"\n        - \"s3:DeleteBucket\"\n        - \"s3:GetBucketLocation\"\n        - \"s3:ListBucket\"\n        - \"s3:ListBucketMultipartUploads\"\n# readonlyexamplepolicy policy grants access to buckets with name starting with example.\n# In addition, grants objects read permissions on buckets starting with example.\n- name: readonlyexamplepolicy\n  statements:\n    - resources:\n        - 'arn:aws:s3:::example*/*'\n      actions:\n        - \"s3:GetObject\"\n    - resources:\n        - 'arn:aws:s3:::example*'\n      actions:\n        - \"s3:GetBucketLocation\"\n        - \"s3:ListBucket\"\n        - \"s3:ListBucketMultipartUploads\"\n# Additional Annotations for the Kubernetes Job makePolicyJob",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "default": "",
          "required": [],
          "title": "annotations",
          "type": "null"
        },
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "default": "",
          "required": [],
          "title": "podAnnotations",
          "type": "null"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "makePolicyJob",
      "type": "object"
    },
    "makeUserJob": {
      "additionalProperties": true,
      "description": "# Additional Annotations for the Kubernetes Job makeUserJob",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "default": "",
          "required": [],
          "title": "annotations",
          "type": "null"
        },
        "exitCommand": {
          "default": "",
          "description": "Command to run after the main command on exit",
          "required": [],
          "title": "exitCommand",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "default": "",
          "required": [],
          "title": "podAnnotations",
          "type": "null"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "makeUserJob",
      "type": "object"
    },
    "mcImage": {
      "additionalProperties": true,
      "description": "# Set default image, imageTag, and imagePullPolicy for the `mc` (the minio\n# client used to create a default bucket).\n#",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "quay.io/minio/mc",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "RELEASE.2022-08-11T00-30-48Z",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "mcImage",
      "type": "object"
    },
    "memberlist": {
      "additionalProperties": true,
      "description": "Memberlist configuration. Please refer to https://grafana.com/docs/tempo/latest/configuration/#memberlist",
      "properties": {
        "abort_if_cluster_join_fails": {
          "default": false,
          "required": [],
          "title": "abort_if_cluster_join_fails",
          "type": "boolean"
        },
        "bind_addr": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "bind_addr",
          "type": "array"
        },
        "bind_port": {
          "default": 7946,
          "required": [],
          "title": "bind_port",
          "type": "integer"
        },
        "cluster_label": {
          "default": "{{ .Release.Name }}.{{ .Release.Namespace }}",
          "required": [],
          "title": "cluster_label",
          "type": "string"
        },
        "gossip_interval": {
          "default": "1s",
          "required": [],
          "title": "gossip_interval",
          "type": "string"
        },
        "gossip_nodes": {
          "default": 2,
          "required": [],
          "title": "gossip_nodes",
          "type": "integer"
        },
        "gossip_to_dead_nodes_time": {
          "default": "30s",
          "required": [],
          "title": "gossip_to_dead_nodes_time",
          "type": "string"
        },
        "leave_timeout": {
          "default": "5s",
          "required": [],
          "title": "leave_timeout",
          "type": "string"
        },
        "left_ingesters_timeout": {
          "default": "5m",
          "required": [],
          "title": "left_ingesters_timeout",
          "type": "string"
        },
        "max_join_backoff": {
          "default": "1m",
          "required": [],
          "title": "max_join_backoff",
          "type": "string"
        },
        "max_join_retries": {
          "default": 10,
          "required": [],
          "title": "max_join_retries",
          "type": "integer"
        },
        "min_join_backoff": {
          "default": "1s",
          "required": [],
          "title": "min_join_backoff",
          "type": "string"
        },
        "node_name": {
          "default": "",
          "required": [],
          "title": "node_name",
          "type": "string"
        },
        "packet_dial_timeout": {
          "default": "5s",
          "required": [],
          "title": "packet_dial_timeout",
          "type": "string"
        },
        "packet_write_timeout": {
          "default": "5s",
          "required": [],
          "title": "packet_write_timeout",
          "type": "string"
        },
        "pull_push_interval": {
          "default": "30s",
          "required": [],
          "title": "pull_push_interval",
          "type": "string"
        },
        "randomize_node_name": {
          "default": true,
          "required": [],
          "title": "randomize_node_name",
          "type": "boolean"
        },
        "rejoin_interval": {
          "default": "0s",
          "required": [],
          "title": "rejoin_interval",
          "type": "string"
        },
        "retransmit_factor": {
          "default": 2,
          "required": [],
          "title": "retransmit_factor",
          "type": "integer"
        },
        "stream_timeout": {
          "default": "10s",
          "required": [],
          "title": "stream_timeout",
          "type": "string"
        }
      },
      "required": [],
      "title": "memberlist",
      "type": "object"
    },
    "memcached": {
      "additionalProperties": true,
      "description": "memcached is for all of the Tempo pieces to coordinate with each other.\nyou can use your own self deployed memcached by setting `memcached.enabled` to false and `memcached.host` + `memcached.service`",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"memcached\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"memcached\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for memcached pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Specified whether the memcached cachce should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for memcached",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to memcached pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to memcached pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for memcached pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for memcached statefulSet",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "host": {
          "default": "memcached",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Memcached Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `global.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the Memcached image. Overrides `global.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "memcached",
              "description": "Memcached Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.6.33-alpine",
              "description": "Memcached Docker image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers for the memcached pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "configuration for liveness probe for memcached statefulset",
          "properties": {
            "failureThreshold": {
              "default": 6,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 10,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "required": [],
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 5,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for memcached pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for memcached pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "configuration for readiness probe for memcached statefulset",
          "properties": {
            "failureThreshold": {
              "default": 6,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 5,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "required": [],
              "title": "successThreshold",
              "type": "integer"
            },
            "tcpSocket": {
              "additionalProperties": true,
              "properties": {
                "port": {
                  "default": "client",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tcpSocket",
              "type": "object"
            },
            "timeoutSeconds": {
              "default": 3,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for memchached",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for memcached",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for memcached service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "tolerations": {
          "description": "Toleration for memcached pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"memcached\") | nindent 6 }}\n",
          "description": "topologySpread for memcached pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "memcached",
      "type": "object"
    },
    "memcachedExporter": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Specifies whether the Memcached Exporter should be enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the memcached exporter",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Memcached Exporter Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `global.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the Memcached Exporter image. Overrides `global.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "prom/memcached-exporter",
              "description": "Memcached Exporter Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.14.4",
              "description": "Memcached Exporter Docker image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        }
      },
      "required": [],
      "title": "memcachedExporter",
      "type": "object"
    },
    "metaMonitoring": {
      "additionalProperties": true,
      "properties": {
        "grafanaAgent": {
          "additionalProperties": true,
          "description": "metaMonitoringAgent configures the built in Grafana Agent that can scrape metrics and logs and send them to a local or remote destination",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations to add to all monitoring.grafana.com custom resources.\nDoes not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.annotations for that.",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Controls whether to create PodLogs, MetricsInstance, LogsInstance, and GrafanaAgent CRs to scrape the\nServiceMonitors of the chart and ship metrics and logs to the remote endpoints below.\nNote that you need to configure serviceMonitor in order to have some metrics available.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "installOperator": {
              "default": false,
              "description": "Controls whether to install the Grafana Agent Operator and its CRDs.\nNote that helm will not install CRDs if this flag is enabled during an upgrade.\nIn that case install the CRDs manually from https://github.com/grafana/agent/tree/main/production/operator/crds",
              "required": [],
              "title": "installOperator",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels to add to all monitoring.grafana.com custom resources.\nDoes not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.labels for that.",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "logs": {
              "additionalProperties": true,
              "properties": {
                "additionalClientConfigs": {
                  "description": "Client configurations for the LogsInstance that will scrape Mimir pods. Follows the format of .remote.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalClientConfigs",
                  "type": "array"
                },
                "remote": {
                  "additionalProperties": true,
                  "description": "Default destination for logs. The config here is translated to Promtail client\nconfiguration to write logs to this Loki-compatible remote. Optional.",
                  "properties": {
                    "auth": {
                      "additionalProperties": true,
                      "properties": {
                        "passwordSecretKey": {
                          "default": "",
                          "description": "The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set.",
                          "required": [],
                          "title": "passwordSecretKey",
                          "type": "string"
                        },
                        "passwordSecretName": {
                          "default": "",
                          "description": "The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set.",
                          "required": [],
                          "title": "passwordSecretName",
                          "type": "string"
                        },
                        "tenantId": {
                          "default": "",
                          "description": "Used to set X-Scope-OrgID header on requests. Usually not used in combination with username and password.",
                          "required": [],
                          "title": "tenantId",
                          "type": "string"
                        },
                        "username": {
                          "default": "",
                          "description": "Basic authentication username. Optional.",
                          "required": [],
                          "title": "username",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "auth",
                      "type": "object"
                    },
                    "url": {
                      "default": "",
                      "description": "Full URL for Loki push endpoint. Usually ends in /loki/api/v1/push",
                      "required": [],
                      "title": "url",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "remote",
                  "type": "object"
                }
              },
              "required": [],
              "title": "logs",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": true,
              "properties": {
                "additionalRemoteWriteConfigs": {
                  "description": "Additional remote-write for the MetricsInstance that will scrape Mimir pods. Follows the format of .remote.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalRemoteWriteConfigs",
                  "type": "array"
                },
                "remote": {
                  "additionalProperties": true,
                  "description": "Default destination for metrics. The config here is translated to remote_write\nconfiguration to push metrics to this Prometheus-compatible remote. Optional.\nNote that you need to configure serviceMonitor in order to have some metrics available.",
                  "properties": {
                    "auth": {
                      "additionalProperties": true,
                      "properties": {
                        "passwordSecretKey": {
                          "default": "",
                          "description": "The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set.",
                          "required": [],
                          "title": "passwordSecretKey",
                          "type": "string"
                        },
                        "passwordSecretName": {
                          "default": "",
                          "description": "The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set.",
                          "required": [],
                          "title": "passwordSecretName",
                          "type": "string"
                        },
                        "username": {
                          "default": "",
                          "description": "Basic authentication username. Optional.",
                          "required": [],
                          "title": "username",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "auth",
                      "type": "object"
                    },
                    "headers": {
                      "additionalProperties": true,
                      "description": "Used to add HTTP headers to remote-write requests.",
                      "required": [],
                      "title": "headers",
                      "type": "object"
                    },
                    "url": {
                      "default": "",
                      "description": "Full URL for Prometheus remote-write. Usually ends in /push",
                      "required": [],
                      "title": "url",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "remote",
                  "type": "object"
                },
                "scrapeK8s": {
                  "additionalProperties": true,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "When grafanaAgent.enabled and serviceMonitor.enabled, controls whether to create ServiceMonitors CRs\nfor cadvisor, kubelet, and kube-state-metrics. The scraped metrics are reduced to those pertaining to\nMimir pods only.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "kubeStateMetrics": {
                      "additionalProperties": true,
                      "description": "Controls service discovery of kube-state-metrics.",
                      "properties": {
                        "labelSelectors": {
                          "additionalProperties": true,
                          "properties": {
                            "app.kubernetes.io/name": {
                              "default": "kube-state-metrics",
                              "required": [],
                              "title": "app.kubernetes.io/name",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "labelSelectors",
                          "type": "object"
                        },
                        "namespace": {
                          "default": "kube-system",
                          "required": [],
                          "title": "namespace",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "kubeStateMetrics",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "scrapeK8s",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "namespace": {
              "default": "",
              "description": "Sets the namespace of the resources. Leave empty or unset to use the same namespace as the Helm release.",
              "required": [],
              "title": "namespace",
              "type": "string"
            }
          },
          "required": [],
          "title": "grafanaAgent",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "ServiceMonitor configuration",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "ServiceMonitor annotations",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "If enabled, ServiceMonitor resources for Prometheus Operator are created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "null",
              "description": "ServiceMonitor scrape interval",
              "required": [],
              "title": "interval",
              "type": "null"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Additional ServiceMonitor labels",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "metricRelabelings": {
              "description": "ServiceMonitor metric relabel configs to apply to samples before ingestion\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "namespace": {
              "default": "null",
              "description": "Alternative namespace for ServiceMonitor resources",
              "required": [],
              "title": "namespace",
              "type": "null"
            },
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Namespace selector for ServiceMonitor resources",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "relabelings": {
              "description": "ServiceMonitor relabel configs to apply to samples before scraping\nhttps://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "description": "ServiceMonitor will use http by default, but you can pick https as well",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "null",
              "description": "ServiceMonitor scrape timeout in Go duration format (e.g. 15s)",
              "required": [],
              "title": "scrapeTimeout",
              "type": "null"
            },
            "tlsConfig": {
              "default": "null",
              "description": "ServiceMonitor will use these tlsConfig settings to make the health check requests",
              "required": [],
              "title": "tlsConfig",
              "type": "null"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "metaMonitoring",
      "type": "object"
    },
    "metrics": {
      "additionalProperties": true,
      "properties": {
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "public": {
              "default": true,
              "required": [],
              "title": "public",
              "type": "boolean"
            },
            "relabelConfigs": {
              "additionalProperties": true,
              "required": [],
              "title": "relabelConfigs",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "metrics",
      "type": "object"
    },
    "metricsGenerator": {
      "additionalProperties": true,
      "description": "Configuration for the metrics-generator",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"metrics-generator\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"metrics-generator\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for metrics-generator pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the metrics-generator StatefulSet",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the metricsGenerator service. This allows metricsGenerator to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "null",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "null"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "description": "More information on configuration: https://grafana.com/docs/tempo/latest/configuration/#metrics-generator",
          "properties": {
            "metrics_ingestion_time_range_slack": {
              "default": "30s",
              "required": [],
              "title": "metrics_ingestion_time_range_slack",
              "type": "string"
            },
            "processor": {
              "additionalProperties": true,
              "properties": {
                "service_graphs": {
                  "additionalProperties": true,
                  "description": "For processors to be enabled and generate metrics, pass the names of the processors to `overrides.defaults.metrics_generator.processors` value like `[service-graphs, span-metrics]`.",
                  "properties": {
                    "dimensions": {
                      "description": "Additional dimensions to add to the metrics along with the default dimensions.\nThe resource and span attributes to be added to the service graph metrics, if present.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "dimensions",
                      "type": "array"
                    },
                    "histogram_buckets": {
                      "items": {
                        "required": [],
                        "type": "number"
                      },
                      "required": [],
                      "title": "histogram_buckets",
                      "type": "array"
                    },
                    "max_items": {
                      "default": 10000,
                      "required": [],
                      "title": "max_items",
                      "type": "integer"
                    },
                    "wait": {
                      "default": "10s",
                      "required": [],
                      "title": "wait",
                      "type": "string"
                    },
                    "workers": {
                      "default": 10,
                      "required": [],
                      "title": "workers",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "service_graphs",
                  "type": "object"
                },
                "span_metrics": {
                  "additionalProperties": true,
                  "properties": {
                    "dimensions": {
                      "description": "Additional dimensions to add to the metrics along with the default dimensions.\nThe resource and span attributes to be added to the span metrics, if present.",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "dimensions",
                      "type": "array"
                    },
                    "histogram_buckets": {
                      "items": {
                        "required": [],
                        "type": "number"
                      },
                      "required": [],
                      "title": "histogram_buckets",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "span_metrics",
                  "type": "object"
                }
              },
              "required": [],
              "title": "processor",
              "type": "object"
            },
            "registry": {
              "additionalProperties": true,
              "properties": {
                "collection_interval": {
                  "default": "15s",
                  "required": [],
                  "title": "collection_interval",
                  "type": "string"
                },
                "external_labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "external_labels",
                  "type": "object"
                },
                "stale_duration": {
                  "default": "15m",
                  "required": [],
                  "title": "stale_duration",
                  "type": "string"
                }
              },
              "required": [],
              "title": "registry",
              "type": "object"
            },
            "storage": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/var/tempo/wal",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "remote_write": {
                  "description": "A list of remote write endpoints.\nhttps://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "remote_write",
                  "type": "array"
                },
                "remote_write_add_org_id_header": {
                  "default": true,
                  "description": "Whether to add X-Scope-OrgID header in remote write requests",
                  "required": [],
                  "title": "remote_write_add_org_id_header",
                  "type": "boolean"
                },
                "remote_write_flush_deadline": {
                  "default": "1m",
                  "required": [],
                  "title": "remote_write_flush_deadline",
                  "type": "string"
                },
                "wal": {
                  "default": "",
                  "required": [],
                  "title": "wal",
                  "type": "null"
                }
              },
              "required": [],
              "title": "storage",
              "type": "object"
            },
            "traces_storage": {
              "additionalProperties": true,
              "description": "Used by the local blocks processor to store a wal for traces.",
              "properties": {
                "path": {
                  "default": "/var/tempo/traces",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [],
              "title": "traces_storage",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether a metrics-generator should be deployed",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "Additional CLI args for the metrics-generator",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the metrics-generator pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the metrics-generator pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "# Here shows how to configure 1Gi memory as emptyDir.\n# Ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#emptydirvolumesource-v1-core\nmedium: \"Memory\"\nsizeLimit: 1Gi\nExtra volumes for metrics-generator pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for metrics-generator deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the metrics-generator image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the metrics-generator image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the metrics-generator image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld\nInit containers for the metrics generator pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "kind": {
          "default": "Deployment",
          "description": "Kind of deployment [StatefulSet/Deployment]",
          "required": [],
          "title": "kind",
          "type": "string"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for metrics-generator pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": true,
          "description": "Persistence configuration for metrics-generator",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for metrics generator PVCs",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable creating PVCs if you have kind set to StatefulSet. This disables using local disk or memory configured in walEmptyDir",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for metrics generator PVCs",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "size": {
              "default": "10Gi",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "null",
              "description": "Storage class to be used.\nIf defined, storageClassName: \u003cstorageClass\u003e.\nIf set to \"-\", storageClassName: \"\", which disables dynamic provisioning.\nIf empty or set to null, no storageClassName spec is\nset, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).",
              "required": [],
              "title": "storageClass",
              "type": "null"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable Persistent volume retention policy for StatefulSet",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "whenDeleted": {
              "default": "Retain",
              "description": "Volume retention behavior that applies when the StatefulSet is deleted",
              "required": [],
              "title": "whenDeleted",
              "type": "string"
            },
            "whenScaled": {
              "default": "Retain",
              "description": "Volume retention behavior when the replica count of the StatefulSet is reduced",
              "required": [],
              "title": "whenScaled",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistentVolumeClaimRetentionPolicy",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for metrics-generator pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for metrics-generator pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "ports": {
          "description": "Default ports",
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "default": "http-metrics",
                "required": [],
                "title": "name",
                "type": "string"
              },
              "port": {
                "default": 3200,
                "required": [],
                "title": "port",
                "type": "integer"
              },
              "service": {
                "default": true,
                "required": [],
                "title": "service",
                "type": "boolean"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "ports",
          "type": "array"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for metrics-generator pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the metrics-generator",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the metrics-generator",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for Metrics Generator service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceDiscovery": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for Metrics Generator discovery service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceDiscovery",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 300,
          "description": "Grace period to allow the metrics-generator to shutdown before it is killed. Especially for the ingestor,\nthis must be increased. It must be long enough so metrics-generators can be gracefully shutdown flushing/transferring\nall data and to successfully leave the member ring on shutdown.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for metrics-generator pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"metrics-generator\") | nindent 6 }}\n",
          "description": "topologySpread for metrics-generator pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        },
        "walEmptyDir": {
          "additionalProperties": true,
          "description": "The EmptyDir location where the /var/tempo will be mounted on. Defaults to local disk, can be set to memory.",
          "required": [],
          "title": "walEmptyDir",
          "type": "object"
        }
      },
      "required": [],
      "title": "metricsGenerator",
      "type": "object"
    },
    "minReadySeconds": {
      "default": 10,
      "required": [],
      "title": "minReadySeconds",
      "type": "integer"
    },
    "minio": {
      "additionalProperties": true,
      "properties": {
        "buckets": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "default": "enterprise-traces-admin",
                "required": [],
                "title": "name",
                "type": "string"
              },
              "policy": {
                "default": "none",
                "required": [],
                "title": "policy",
                "type": "string"
              },
              "purge": {
                "default": false,
                "required": [],
                "title": "purge",
                "type": "boolean"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "buckets",
          "type": "array"
        },
        "configPathmc": {
          "default": "/tmp/minio/mc/",
          "description": "Changed the mc config path to '/tmp' from '/etc' as '/etc' is only writable by root and OpenShift will not permit this.",
          "required": [],
          "title": "configPathmc",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "mode": {
          "default": "standalone",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "persistence": {
          "additionalProperties": true,
          "properties": {
            "size": {
              "default": "5Gi",
              "required": [],
              "title": "size",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "128Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rootPassword": {
          "default": "supersecret",
          "required": [],
          "title": "rootPassword",
          "type": "string"
        },
        "rootUser": {
          "default": "grafana-tempo",
          "required": [],
          "title": "rootUser",
          "type": "string"
        }
      },
      "required": [],
      "title": "minio",
      "type": "object"
    },
    "minioAPIPort": {
      "default": "9000",
      "description": "# Internal port number for MinIO S3 API container\n# Change service.port to change external port number",
      "required": [],
      "title": "minioAPIPort",
      "type": "string"
    },
    "minioConsolePort": {
      "default": "9001",
      "description": "# Internal port number for MinIO Browser Console container\n# Change consoleService.port to change external port number",
      "required": [],
      "title": "minioConsolePort",
      "type": "string"
    },
    "mode": {
      "default": "distributed",
      "description": "# minio mode, i.e. standalone or distributed or gateway.",
      "required": [],
      "title": "mode",
      "type": "string"
    },
    "mountPath": {
      "default": "/export",
      "description": "# Path where PV would be mounted on the MinIO Pod",
      "required": [],
      "title": "mountPath",
      "type": "string"
    },
    "multitenancyEnabled": {
      "default": false,
      "required": [],
      "title": "multitenancyEnabled",
      "type": "boolean"
    },
    "nameOverride": {
      "default": "",
      "description": "# Provide a name in place of minio for `app:` labels\n#",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "networkPolicy": {
      "additionalProperties": true,
      "properties": {
        "allowExternal": {
          "default": true,
          "required": [],
          "title": "allowExternal",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "networkPolicy",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "# Node labels for pod assignment\n# Ref: https://kubernetes.io/docs/user-guide/node-selection/\n#",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "oidc": {
      "additionalProperties": true,
      "description": "# OpenID Identity Management\n# The following section documents environment variables for enabling external identity management using an OpenID Connect (OIDC)-compatible provider.\n# See https://docs.min.io/minio/baremetal/security/openid-external-identity-management/external-authentication-with-openid-identity-provider.html#minio-external-identity-management-openid for a tutorial on using these variables.",
      "properties": {
        "claimName": {
          "default": "policy",
          "required": [],
          "title": "claimName",
          "type": "string"
        },
        "claimPrefix": {
          "default": "",
          "description": "Can leave empty",
          "required": [],
          "title": "claimPrefix",
          "type": "string"
        },
        "clientId": {
          "default": "minio",
          "required": [],
          "title": "clientId",
          "type": "string"
        },
        "clientSecret": {
          "default": "",
          "required": [],
          "title": "clientSecret",
          "type": "string"
        },
        "comment": {
          "default": "",
          "required": [],
          "title": "comment",
          "type": "string"
        },
        "configUrl": {
          "default": "https://identity-provider-url/.well-known/openid-configuration",
          "required": [],
          "title": "configUrl",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "redirectUri": {
          "default": "https://console-endpoint-url/oauth_callback",
          "required": [],
          "title": "redirectUri",
          "type": "string"
        },
        "scopes": {
          "default": "openid,profile,email",
          "required": [],
          "title": "scopes",
          "type": "string"
        }
      },
      "required": [],
      "title": "oidc",
      "type": "object"
    },
    "overrides": {
      "additionalProperties": true,
      "description": "The standard overrides configuration section. This can include a `defaults` object for applying to all tenants (not to be confused with the `global` property of the same name, which overrides `max_byte_per_trace` for all tenants). For an example on how to enable the metrics generator using the `overrides` object, see the 'Activate metrics generator' section below. Refer to [Standard overrides](https://grafana.com/docs/tempo/latest/configuration/#standard-overrides) for more details.",
      "properties": {
        "defaults": {
          "additionalProperties": true,
          "description": "default config values for all tenants, can be overridden by per-tenant overrides. If a tenant's specific overrides are not found in the `per_tenant_overrides` block, the values in this `default` block will be used. Configs inside this block should follow the new overrides indentation format",
          "required": [],
          "title": "defaults",
          "type": "object"
        },
        "per_tenant_override_config": {
          "default": "/runtime-config/overrides.yaml",
          "description": "Path to the per tenant override config file. The values of the `per_tenant_overrides` config below will be written to the default path which is `/runtime-config/overrides.yaml`. Users can set tenant-specific overrides settings in a separate file and point per_tenant_override_config to it if not using the per_tenant_overrides block below.",
          "required": [],
          "title": "per_tenant_override_config",
          "type": "string"
        }
      },
      "required": [],
      "title": "overrides",
      "type": "object"
    },
    "per_tenant_overrides": {
      "default": "",
      "description": "The `per tenant` runtime overrides in place of the `per_tenant_override_config` file for Tempo (see `overrides` and the `per_tenant_override_config` property). This allows overriding the configs like `ingestion` and `global` values on a per-tenant basis. Note that *all* values must be given for each per-tenant configuration block. Refer to [Runtime overrides](https://grafana.com/docs/tempo/latest/configuration/#runtime-overrides) documentation for more details.",
      "required": [],
      "title": "per_tenant_overrides",
      "type": "null"
    },
    "persistence": {
      "additionalProperties": true,
      "description": "# Enable persistence using Persistent Volume Claims\n# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n#",
      "properties": {
        "VolumeName": {
          "default": "",
          "required": [],
          "title": "VolumeName",
          "type": "string"
        },
        "accessMode": {
          "default": "ReadWriteOnce",
          "required": [],
          "title": "accessMode",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClaim": {
          "default": "",
          "description": "# A manually managed Persistent Volume and Claim\n# Requires persistence.enabled: true\n# If defined, PVC must be created manually before volume will be bound",
          "required": [],
          "title": "existingClaim",
          "type": "string"
        },
        "size": {
          "default": "500Gi",
          "required": [],
          "title": "size",
          "type": "string"
        },
        "storageClass": {
          "default": "",
          "description": "# minio data Persistent Volume Storage Class\n# If defined, storageClassName: \u003cstorageClass\u003e\n# If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n# If undefined (the default) or set to null, no storageClassName spec is\n#   set, choosing the default provisioner.  (gp2 on AWS, standard on\n#   GKE, AWS \u0026 OpenStack)\n#\n# Storage class of PV to bind. By default it looks for standard storage class.\n# If the PV uses a different storage class, specify that here.",
          "required": [],
          "title": "storageClass",
          "type": "string"
        },
        "subPath": {
          "default": "",
          "description": "# If subPath is set mount a sub folder of a volume instead of the root of the volume.\n# This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).\n#",
          "required": [],
          "title": "subPath",
          "type": "string"
        }
      },
      "required": [],
      "title": "persistence",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Pod Annotations",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podDisruptionBudget": {
      "additionalProperties": true,
      "description": "# PodDisruptionBudget settings\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": 1,
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        }
      },
      "required": [],
      "title": "podDisruptionBudget",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "Pod (extra) Labels",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": true,
      "description": "Pod security context (runAsUser, etc.)",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "policies": {
      "description": "# List of policies to be created after minio install\n#\n# In addition to default policies [readonly|readwrite|writeonly|consoleAdmin|diagnostics]\n# you can define additional policies with custom supported actions and resources",
      "items": {
        "required": []
      },
      "required": [],
      "title": "policies",
      "type": "array"
    },
    "pools": {
      "default": 1,
      "description": "Number of expanded MinIO clusters",
      "required": [],
      "title": "pools",
      "type": "integer"
    },
    "priorityClassName": {
      "default": "",
      "description": "# Pod priority settings\n# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n#",
      "required": [],
      "title": "priorityClassName",
      "type": "string"
    },
    "prometheusRule": {
      "additionalProperties": true,
      "description": "Rules for the Prometheus Operator",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "PrometheusRule annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "If enabled, a PrometheusRule resource for Prometheus Operator is created",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "groups": {
          "description": "Contents of Prometheus rules file",
          "items": {
            "required": []
          },
          "required": [],
          "title": "groups",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional PrometheusRule labels",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "namespace": {
          "default": "null",
          "description": "Alternative namespace for the PrometheusRule resource",
          "required": [],
          "title": "namespace",
          "type": "null"
        }
      },
      "required": [],
      "title": "prometheusRule",
      "type": "object"
    },
    "provisioner": {
      "additionalProperties": true,
      "properties": {
        "additionalTenants": {
          "description": "Additional tenants to be created. Each tenant will get a read and write policy\nand associated token. Tenant must have a name and a namespace for the secret containting\nthe token to be created in. For example\nadditionalTenants:\n  - name: tempo\n    secretNamespace: grafana",
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalTenants",
          "type": "array"
        },
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for tokengen Pods",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the `provisioner` Job",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "apiUrl": {
          "default": "",
          "description": "URL for the admin API service. Must be set to a valid URL.\nExample: \"http://tempo-admin-api.namespace.svc:3100\"",
          "required": [],
          "title": "apiUrl",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Whether the job should be part of the deployment",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "env": {
          "description": "Additional Kubernetes environment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": "Additional arguments for the provisioner command",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add to the provisioner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Volumes to add to the provisioner pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hookType": {
          "default": "post-install",
          "description": "Hook type(s) to customize when the job runs.  defaults to post-install",
          "required": [],
          "title": "hookType",
          "type": "string"
        },
        "image": {
          "additionalProperties": true,
          "description": "Provisioner image to Utilize",
          "properties": {
            "digest": {
              "default": "null",
              "description": "Overrides the image tag with an image digest",
              "required": [],
              "title": "digest",
              "type": "null"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Docker image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "us-docker.pkg.dev",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafanalabs-global/docker-enterprise-provisioner-prod/enterprise-provisioner",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "null",
              "description": "Overrides the image tag whose default is the chart's appVersion",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional labels for the `provisioner` Job",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for tokengen Pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for provisioner Job",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "provisionedSecretPrefix": {
          "default": "null",
          "description": "Name of the secret to store provisioned tokens in",
          "required": [],
          "title": "provisionedSecretPrefix",
          "type": "null"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Run containers as nonroot user (uid=10001)`",
          "properties": {
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tolerations": {
          "description": "Tolerations for tokengen Pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "provisioner",
      "type": "object"
    },
    "querier": {
      "additionalProperties": true,
      "description": "Configuration for the querier",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"querier\" \"memberlist\" true) | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"querier\" \"memberlist\" true) | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for querier pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld\nAnnotations for querier deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the querier service. This allows querier to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "null",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "null"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Autoscaling behavior configuration for the querier",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the querier",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the querier",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the querier",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the querier",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the querier",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "properties": {
            "frontend_worker": {
              "additionalProperties": true,
              "properties": {
                "grpc_client_config": {
                  "additionalProperties": true,
                  "description": "grpc client configuration",
                  "required": [],
                  "title": "grpc_client_config",
                  "type": "object"
                }
              },
              "required": [],
              "title": "frontend_worker",
              "type": "object"
            },
            "max_concurrent_queries": {
              "default": 20,
              "description": "This value controls the overall number of simultaneous subqueries that the querier will service at once. It does not distinguish between the types of queries.",
              "required": [],
              "title": "max_concurrent_queries",
              "type": "integer"
            },
            "search": {
              "additionalProperties": true,
              "properties": {
                "query_timeout": {
                  "default": "30s",
                  "description": "Timeout for search requests",
                  "required": [],
                  "title": "query_timeout",
                  "type": "string"
                }
              },
              "required": [],
              "title": "search",
              "type": "object"
            },
            "trace_by_id": {
              "additionalProperties": true,
              "properties": {
                "query_timeout": {
                  "default": "10s",
                  "description": "Timeout for trace lookup requests",
                  "required": [],
                  "title": "query_timeout",
                  "type": "string"
                }
              },
              "required": [],
              "title": "trace_by_id",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the querier",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for querier deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the querier image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the querier image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the querier image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers for the querier pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxSurge": {
          "default": 0,
          "description": "Max Surge for querier pods",
          "required": [],
          "title": "maxSurge",
          "type": "integer"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for querier pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for querier pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for querier pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for querier pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the querier",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the querier",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "rollingUpdate": {
          "additionalProperties": true,
          "properties": {
            "maxUnavailable": {
              "default": 1,
              "description": "Maximum number of Pods that can be unavailable during the update process",
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            }
          },
          "required": [],
          "title": "rollingUpdate",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for querier service",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the querier to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for querier pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"querier\") | nindent 6 }}\n",
          "description": "topologySpread for querier pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "querier",
      "type": "object"
    },
    "queryFrontend": {
      "additionalProperties": true,
      "description": "Configuration for the query-frontend",
      "properties": {
        "affinity": {
          "default": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchLabels:\n          {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"query-frontend\") | nindent 10 }}\n      topologyKey: kubernetes.io/hostname\n  preferredDuringSchedulingIgnoredDuringExecution:\n    - weight: 100\n      podAffinityTerm:\n        labelSelector:\n          matchLabels:\n            {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"query-frontend\") | nindent 12 }}\n        topologyKey: topology.kubernetes.io/zone\n",
          "description": "Affinity for query-frontend pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "affinity",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the query-frontend Deployment",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "additionalProperties": true,
          "description": "Adds the appProtocol field to the queryFrontend service. This allows queryFrontend to work with istio protocol selection.",
          "properties": {
            "grpc": {
              "default": "null",
              "description": "Set the optional grpc service protocol. Ex: \"grpc\", \"http2\" or \"https\"",
              "required": [],
              "title": "grpc",
              "type": "null"
            }
          },
          "required": [],
          "title": "appProtocol",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "description": "Autoscaling behavior configuration for the query-frontend",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enable autoscaling for the query-frontend",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 3,
              "description": "Maximum autoscaling replicas for the query-frontend",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "Minimum autoscaling replicas for the query-frontend",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 60,
              "description": "Target CPU utilisation percentage for the query-frontend",
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": "",
              "description": "Target memory utilisation percentage for the query-frontend",
              "required": [],
              "title": "targetMemoryUtilizationPercentage",
              "type": "null"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "properties": {
            "max_outstanding_per_tenant": {
              "default": 2000,
              "description": "Maximum number of outstanding requests per tenant per frontend; requests beyond this error with HTTP 429.",
              "required": [],
              "title": "max_outstanding_per_tenant",
              "type": "integer"
            },
            "max_retries": {
              "default": 2,
              "description": "Number of times to retry a request sent to a querier",
              "required": [],
              "title": "max_retries",
              "type": "integer"
            },
            "metrics": {
              "additionalProperties": true,
              "properties": {
                "concurrent_jobs": {
                  "default": 1000,
                  "description": "The number of concurrent jobs to execute when querying the backend.",
                  "required": [],
                  "title": "concurrent_jobs",
                  "type": "integer"
                },
                "duration_slo": {
                  "default": "0s",
                  "description": "If set to a non-zero value, it's value will be used to decide if query is within SLO or not.\nQuery is within SLO if it returned 200 within duration_slo seconds OR processed throughput_slo bytes/s data.\nNOTE: `duration_slo` and `throughput_bytes_slo` both must be configured for it to work",
                  "required": [],
                  "title": "duration_slo",
                  "type": "string"
                },
                "interval": {
                  "default": "5m",
                  "description": "The target length of time for each job to handle when querying the backend.",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "max_duration": {
                  "default": "3h",
                  "description": "The maximum allowed time range for a metrics query.\n0 disables this limit.",
                  "required": [],
                  "title": "max_duration",
                  "type": "string"
                },
                "query_backend_after": {
                  "default": "30m",
                  "description": "query_backend_after controls where the query-frontend searches for traces.\nTime ranges older than query_backend_after will be searched in the backend/object storage only.\nTime ranges between query_backend_after and now will be queried from the metrics-generators.",
                  "required": [],
                  "title": "query_backend_after",
                  "type": "string"
                },
                "target_bytes_per_job": {
                  "default": 104857600,
                  "description": "The target number of bytes for each job to handle when querying the backend.",
                  "required": [],
                  "title": "target_bytes_per_job",
                  "type": "integer"
                },
                "throughput_bytes_slo": {
                  "default": 0,
                  "description": "If set to a non-zero value, it's value will be used to decide if query is within SLO or not.\nQuery is within SLO if it returned 200 within duration_slo seconds OR processed throughput_slo bytes/s data.",
                  "required": [],
                  "title": "throughput_bytes_slo",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "search": {
              "additionalProperties": true,
              "properties": {
                "concurrent_jobs": {
                  "default": 1000,
                  "description": "The number of concurrent jobs to execute when searching the backend",
                  "required": [],
                  "title": "concurrent_jobs",
                  "type": "integer"
                },
                "max_spans_per_span_set": {
                  "default": 100,
                  "description": "The maximum allowed value of spans per span set. 0 disables this limit.",
                  "required": [],
                  "title": "max_spans_per_span_set",
                  "type": "integer"
                },
                "target_bytes_per_job": {
                  "default": 104857600,
                  "description": "The target number of bytes for each job to handle when performing a backend search",
                  "required": [],
                  "title": "target_bytes_per_job",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "search",
              "type": "object"
            },
            "trace_by_id": {
              "additionalProperties": true,
              "description": "Trace by ID lookup configuration",
              "properties": {
                "query_shards": {
                  "default": 50,
                  "description": "The number of shards to split a trace by id query into.",
                  "required": [],
                  "title": "query_shards",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "trace_by_id",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraArgs": {
          "description": "Additional CLI args for the query-frontend",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraEnv": {
          "description": "Environment variables to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add to the query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes for query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for query-frontend deployment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the query-frontend image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the query-frontend image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the query-frontend image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Ingress Class Name. MAY be required for Kubernetes versions \u003e= 1.18\ningressClassName: nginx\nAnnotations for the Jaeger ingress",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Specifies whether an ingress for the Jaeger should be created",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Hosts configuration for the Jaeger ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "host": {
                    "default": "query.tempo.example.com",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "default": "/",
                          "required": [],
                          "title": "path",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "tls": {
              "description": "TLS configuration for the Jaeger ingress",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "hosts": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "hosts",
                    "type": "array"
                  },
                  "secretName": {
                    "default": "tempo-query-tls",
                    "required": [],
                    "title": "secretName",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "initContainers": {
          "description": "Init containers for the query-frontend pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Pod Disruption Budget maxUnavailable",
          "required": [],
          "title": "maxUnavailable",
          "type": "integer"
        },
        "minReadySeconds": {
          "default": 10,
          "description": "Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing/terminating",
          "required": [],
          "title": "minReadySeconds",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node selector for query-frontend pods",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for query-frontend pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for queryFrontend pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "priorityClassName": {
          "default": "null",
          "description": "The name of the PriorityClass for query-frontend pods",
          "required": [],
          "title": "priorityClassName",
          "type": "null"
        },
        "query": {
          "additionalProperties": true,
          "properties": {
            "config": {
              "default": "backend: 127.0.0.1:3200\n",
              "required": [],
              "title": "config",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Required for grafana version \u003c7.5 for compatibility with jaeger-ui. Doesn't work on ARM arch",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraArgs": {
              "description": "Additional CLI args for tempo-query pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraArgs",
              "type": "array"
            },
            "extraEnv": {
              "description": "Environment variables to add to the tempo-query pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnv",
              "type": "array"
            },
            "extraEnvFrom": {
              "description": "Environment variables from secrets or configmaps to add to the tempo-query pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvFrom",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "Extra volumes for tempo-query pods",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "Extra volumes for tempo-query deployment",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "pullSecrets": {
                  "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "null",
                  "description": "The Docker registry for the tempo-query image. Overrides `tempo.image.registry`",
                  "required": [],
                  "title": "registry",
                  "type": "null"
                },
                "repository": {
                  "default": "grafana/tempo-query",
                  "description": "Docker image repository for the tempo-query image. Overrides `tempo.image.repository`",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "null",
                  "description": "Docker image tag for the tempo-query image. Overrides `tempo.image.tag`",
                  "required": [],
                  "title": "tag",
                  "type": "null"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "description": "Resource requests and limits for the query",
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "query",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "Number of replicas for the query-frontend",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource requests and limits for the query-frontend",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for queryFrontend service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for queryFrontend service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "If type is LoadBalancer you can assign the IP to the LoadBalancer",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "If type is LoadBalancer limit incoming traffic from IPs.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "port": {
              "default": 16686,
              "description": "Port of the query-frontend service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of service for the queryFrontend",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceDiscovery": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for queryFrontendDiscovery service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for queryFrontendDiscovery service",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceDiscovery",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "Grace period to allow the query-frontend to shutdown before it is killed",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for query-frontend pods",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "default": "- maxSkew: 1\n  topologyKey: topology.kubernetes.io/zone\n  whenUnsatisfiable: ScheduleAnyway\n  labelSelector:\n    matchLabels:\n      {{- include \"tempo.selectorLabels\" (dict \"ctx\" . \"component\" \"query-frontend\") | nindent 6 }}\n",
          "description": "topologySpread for query-frontend pods. Passed through `tpl` and, thus, to be configured as string",
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "string"
        }
      },
      "required": [],
      "title": "queryFrontend",
      "type": "object"
    },
    "rbac": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": false,
          "description": "Specifies whether RBAC manifests should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "podSecurityPolicyName": {
          "default": "",
          "description": "Name of a PodSecurityPolicy to use in the ClusterRole. If unset, no PodSecurityPolicy is used.",
          "required": [],
          "title": "podSecurityPolicyName",
          "type": "string"
        },
        "pspEnabled": {
          "default": false,
          "description": "Specifies whether a PodSecurityPolicy should be created",
          "required": [],
          "title": "pspEnabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "rbac",
      "type": "object"
    },
    "replicas": {
      "default": 16,
      "description": "Number of MinIO containers running",
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "reportingEnabled": {
      "default": true,
      "description": "If true, Tempo will report anonymous usage data about the shape of a deployment to Grafana Labs",
      "required": [],
      "title": "reportingEnabled",
      "type": "boolean"
    },
    "resources": {
      "additionalProperties": true,
      "description": "# Configure resource requests and limits\n# ref: http://kubernetes.io/docs/user-guide/compute-resources/\n#",
      "properties": {
        "limits": {
          "additionalProperties": true,
          "properties": {
            "memory": {
              "default": "200Mi",
              "description": "cpu: \"1\"",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "additionalProperties": true,
          "properties": {
            "cpu": {
              "default": "100m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "100Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "Number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "rollout_operator": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable rollout-operator. It must be enabled when using Zone Aware Replication.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "properties": {
            "fsGroup": {
              "default": 10001,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 10001,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 10001,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Set the container security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "rollout_operator",
      "type": "object"
    },
    "rootPassword": {
      "default": "",
      "required": [],
      "title": "rootPassword",
      "type": "string"
    },
    "rootUser": {
      "default": "",
      "description": "# Set default rootUser, rootPassword\n# AccessKey and secretKey is generated when not set\n# Distributed MinIO ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide\n#",
      "required": [],
      "title": "rootUser",
      "type": "string"
    },
    "runtimeClassName": {
      "default": "",
      "description": "# Pod runtime class name\n# ref https://kubernetes.io/docs/concepts/containers/runtime-class/\n#",
      "required": [],
      "title": "runtimeClassName",
      "type": "string"
    },
    "securityContext": {
      "additionalProperties": true,
      "description": "# Add stateful containers to have security context, if enabled MinIO will run as this\n# user and group NOTE: securityContext is only enabled if persistence.enabled=true",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fsGroup": {
          "default": 1000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "default": "OnRootMismatch",
          "required": [],
          "title": "fsGroupChangePolicy",
          "type": "string"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        }
      },
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "server": {
      "additionalProperties": true,
      "description": "Set Tempo server configuration\nRefers to https://grafana.com/docs/tempo/latest/configuration/#server",
      "properties": {
        "grpc_server_max_recv_msg_size": {
          "default": 4194304,
          "description": "Max gRPC message size that can be received",
          "required": [],
          "title": "grpc_server_max_recv_msg_size",
          "type": "integer"
        },
        "grpc_server_max_send_msg_size": {
          "default": 4194304,
          "description": "Max gRPC message size that can be sent",
          "required": [],
          "title": "grpc_server_max_send_msg_size",
          "type": "integer"
        },
        "httpListenPort": {
          "default": 3200,
          "description": " HTTP server listen host",
          "required": [],
          "title": "httpListenPort",
          "type": "integer"
        },
        "http_server_read_timeout": {
          "default": "30s",
          "description": "Read timeout for HTTP server",
          "required": [],
          "title": "http_server_read_timeout",
          "type": "string"
        },
        "http_server_write_timeout": {
          "default": "30s",
          "description": "Write timeout for HTTP server",
          "required": [],
          "title": "http_server_write_timeout",
          "type": "string"
        },
        "logFormat": {
          "default": "logfmt",
          "description": "Log format. Can be set to logfmt (default) or json.",
          "required": [],
          "title": "logFormat",
          "type": "string"
        },
        "logLevel": {
          "default": "info",
          "description": "Log level. Can be set to debug, info (default), warn, error",
          "required": [],
          "title": "logLevel",
          "type": "string"
        }
      },
      "required": [],
      "title": "server",
      "type": "object"
    },
    "service": {
      "additionalProperties": true,
      "description": "# Expose the MinIO service to be accessed from outside the cluster (LoadBalancer service).\n# or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.\n# ref: http://kubernetes.io/docs/user-guide/services/\n#",
      "properties": {
        "clusterIP": {
          "default": "~",
          "required": [],
          "title": "clusterIP",
          "type": "null"
        },
        "nodePort": {
          "default": 32000,
          "required": [],
          "title": "nodePort",
          "type": "integer"
        },
        "port": {
          "default": "9000",
          "required": [],
          "title": "port",
          "type": "string"
        },
        "type": {
          "default": "ClusterIP",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": true,
      "description": "# Specify the service account to use for the MinIO pods. If 'create' is set to 'false'\n# and 'name' is left unspecified, the account 'default' will be used.",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations for the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automountServiceAccountToken": {
          "default": false,
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a ServiceAccount should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "Image pull secrets for the service account",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "name": {
          "default": "null",
          "description": "The name of the ServiceAccount to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "null"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "ServiceMonitor annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Create ServiceMonitor to scrape metrics for Prometheus",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "null",
          "description": "ServiceMonitor scrape interval",
          "required": [],
          "title": "interval",
          "type": "null"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional ServiceMonitor labels",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "namespace": {
          "default": "null",
          "description": "Alternative namespace for ServiceMonitor resources",
          "required": [],
          "title": "namespace",
          "type": "null"
        },
        "namespaceSelector": {
          "additionalProperties": true,
          "description": "Namespace selector for ServiceMonitor resources",
          "required": [],
          "title": "namespaceSelector",
          "type": "object"
        },
        "relabelings": {
          "description": "ServiceMonitor relabel configs to apply to samples before scraping\nhttps://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig",
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scrapeTimeout": {
          "default": "null",
          "description": "ServiceMonitor scrape timeout in Go duration format (e.g. 15s)",
          "required": [],
          "title": "scrapeTimeout",
          "type": "null"
        }
      },
      "required": [],
      "title": "serviceMonitor",
      "type": "object"
    },
    "storage": {
      "additionalProperties": true,
      "description": "To configure a different storage backend instead of local storage:\nstorage:\n  trace:\n    backend: azure\n    azure:\n      container_name:\n      storage_account_name:\n      storage_account_key:",
      "properties": {
        "admin": {
          "additionalProperties": true,
          "description": "Settings for the Admin client storage backend and buckets. Only valid is enterprise.enabled is true",
          "properties": {
            "backend": {
              "default": "filesystem",
              "description": "The supported storage backends are gcs, s3 and azure, as specified in https://grafana.com/docs/enterprise-traces/latest/configure/reference/#admin_client_config",
              "required": [],
              "title": "backend",
              "type": "string"
            }
          },
          "required": [],
          "title": "admin",
          "type": "object"
        },
        "trace": {
          "additionalProperties": true,
          "properties": {
            "backend": {
              "default": "local",
              "description": "The supported storage backends are gcs, s3 and azure, as specified in https://grafana.com/docs/tempo/latest/configuration/#storage",
              "required": [],
              "title": "backend",
              "type": "string"
            },
            "block": {
              "additionalProperties": true,
              "description": "Settings for the block storage backend and buckets.",
              "properties": {
                "dedicated_columns": {
                  "description": "Lis with dedicated attribute columns (only for vParquet3 or later)",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "dedicated_columns",
                  "type": "array"
                },
                "version": {
                  "default": "null",
                  "description": "The supported block versions are specified here https://grafana.com/docs/tempo/latest/configuration/parquet/",
                  "required": [],
                  "title": "version",
                  "type": "null"
                }
              },
              "required": [],
              "title": "block",
              "type": "object"
            },
            "blocklist_poll": {
              "default": "5m",
              "description": "How often to repoll the backend for new blocks",
              "required": [],
              "title": "blocklist_poll",
              "type": "string"
            },
            "blocklist_poll_concurrency": {
              "default": "null",
              "description": "Number of blocks to process in parallel during polling.",
              "required": [],
              "title": "blocklist_poll_concurrency",
              "type": "null"
            },
            "blocklist_poll_fallback": {
              "default": "null",
              "description": "By default components will pull the blocklist from the tenant index. If that fails the component can\nfallback to scanning the entire bucket. Set to false to disable this behavior.",
              "required": [],
              "title": "blocklist_poll_fallback",
              "type": "null"
            },
            "blocklist_poll_stale_tenant_index": {
              "default": "null",
              "description": "The oldest allowable tenant index.",
              "required": [],
              "title": "blocklist_poll_stale_tenant_index",
              "type": "null"
            },
            "blocklist_poll_tenant_index_builders": {
              "default": "null",
              "description": "Maximum number of compactors that should build the tenant index. All other components will download the index.",
              "required": [],
              "title": "blocklist_poll_tenant_index_builders",
              "type": "null"
            },
            "empty_tenant_deletion_age": {
              "default": "null",
              "description": "How fast the poller will delete a tenant if it is empty. Will need to be enabled in 'empty_tenant_deletion_enabled'.",
              "required": [],
              "title": "empty_tenant_deletion_age",
              "type": "null"
            },
            "empty_tenant_deletion_enabled": {
              "default": "null",
              "description": "Delete empty tenants.",
              "required": [],
              "title": "empty_tenant_deletion_enabled",
              "type": "null"
            },
            "pool": {
              "additionalProperties": true,
              "description": "The worker pool is used primarily when finding traces by id, but is also used by others.",
              "properties": {
                "max_workers": {
                  "default": 400,
                  "description": "Total number of workers pulling jobs from the queue",
                  "required": [],
                  "title": "max_workers",
                  "type": "integer"
                },
                "queue_depth": {
                  "default": 20000,
                  "description": "Length of job queue. imporatant for querier as it queues a job for every block it has to search",
                  "required": [],
                  "title": "queue_depth",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "pool",
              "type": "object"
            },
            "search": {
              "additionalProperties": true,
              "description": "The supported search are specified here https://grafana.com/docs/tempo/latest/configuration/#search-config",
              "properties": {
                "prefetch_trace_count": {
                  "default": 1000,
                  "description": "Number of traces to prefetch while scanning blocks. Increasing this value can improve trace search performance at the cost of memory.",
                  "required": [],
                  "title": "prefetch_trace_count",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "search",
              "type": "object"
            }
          },
          "required": [],
          "title": "trace",
          "type": "object"
        }
      },
      "required": [],
      "title": "storage",
      "type": "object"
    },
    "tempo": {
      "additionalProperties": true,
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `global.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/tempo",
              "description": "Docker image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "null",
              "description": "Overrides the image tag whose default is the chart's appVersion",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 60,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 5,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "memberlist": {
          "additionalProperties": true,
          "description": "Memberlist service configuration.",
          "properties": {
            "appProtocol": {
              "default": "null",
              "description": "Adds the appProtocol field to the memberlist service. This allows memberlist to work with istio protocol selection. Set the optional service protocol. Ex: \"tcp\", \"http\" or \"https\".",
              "required": [],
              "title": "appProtocol",
              "type": "null"
            },
            "service": {
              "additionalProperties": true,
              "description": "Adds the service field to the memberlist service",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "Sets optional annotations to the service field of the memberlist service.",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            }
          },
          "required": [],
          "title": "memberlist",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Common annotations for all pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Global labels for all tempo pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "podSecurityContext holds pod-level security attributes and common container settings",
          "properties": {
            "fsGroup": {
              "default": 1000,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "properties": {
            "httpGet": {
              "additionalProperties": true,
              "properties": {
                "path": {
                  "default": "/ready",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http-metrics",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [],
              "title": "httpGet",
              "type": "object"
            },
            "initialDelaySeconds": {
              "default": 30,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "description": "The number of old ReplicaSets to retain to allow rollback",
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "SecurityContext holds container-level security attributes and common container settings",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            },
            "runAsGroup": {
              "default": 1000,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 1000,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "ipFamilies": {
              "description": "Configure the IP families for all tempo services\nSee the Service spec for details: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#servicespec-v1-core",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "ipFamilies",
              "type": "array"
            },
            "ipFamilyPolicy": {
              "default": "SingleStack",
              "description": "  - 'IPv6'\nConfigure the IP family policy for all tempo services.  SingleStack, PreferDualStack or RequireDualStack",
              "required": [],
              "title": "ipFamilyPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "structuredConfig": {
          "additionalProperties": true,
          "description": "Structured tempo configuration",
          "required": [],
          "title": "structuredConfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "tempo",
      "type": "object"
    },
    "test": {
      "additionalProperties": true,
      "properties": {
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "docker.io",
              "description": "Test image registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "library/busybox",
              "description": "Test image repo",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "description": "Test image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        }
      },
      "required": [],
      "title": "test",
      "type": "object"
    },
    "tls": {
      "additionalProperties": true,
      "description": "# TLS Settings for MinIO",
      "properties": {
        "certSecret": {
          "default": "",
          "description": "# Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret",
          "required": [],
          "title": "certSecret",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "privateKey": {
          "default": "private.key",
          "required": [],
          "title": "privateKey",
          "type": "string"
        },
        "publicCrt": {
          "default": "public.crt",
          "required": [],
          "title": "publicCrt",
          "type": "string"
        }
      },
      "required": [],
      "title": "tls",
      "type": "object"
    },
    "tokengenJob": {
      "additionalProperties": true,
      "description": "Settings for the initial admin(istrator) token generator job. Can only be enabled if\nenterprise.enabled is true - requires license.",
      "properties": {
        "adminTokenSecret": {
          "default": "admin-token",
          "description": "Name of the secret to store the admin token. If not specified, defaults to \"\u003crelease-name\u003e-admin-token\"",
          "required": [],
          "title": "adminTokenSecret",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for tokenjobgen containers",
          "properties": {
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enable": {
          "default": true,
          "required": [],
          "title": "enable",
          "type": "boolean"
        },
        "env": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "extraArgs": {
          "additionalProperties": true,
          "description": " - ip: 1.2.3.4\n   hostnames:\n     - domain.tld",
          "required": [],
          "title": "extraArgs",
          "type": "object"
        },
        "extraEnvFrom": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "hostAliases": {
          "description": "hostAliases to add",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullSecrets": {
              "description": "Optional list of imagePullSecrets. Overrides `tempo.image.pullSecrets`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "null",
              "description": "The Docker registry for the tokengenJob image. Overrides `tempo.image.registry`",
              "required": [],
              "title": "registry",
              "type": "null"
            },
            "repository": {
              "default": "null",
              "description": "Docker image repository for the tokengenJob image. Overrides `tempo.image.repository`",
              "required": [],
              "title": "repository",
              "type": "null"
            },
            "tag": {
              "default": "null",
              "description": "Docker image tag for the tokengenJob image. Overrides `tempo.image.tag`",
              "required": [],
              "title": "tag",
              "type": "null"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "initContainers": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "storeTokenInSecret": {
          "default": false,
          "required": [],
          "title": "storeTokenInSecret",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "tokengenJob",
      "type": "object"
    },
    "tolerations": {
      "description": "Tolerations applied to Pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "topologySpreadConstraints": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "topologySpreadConstraints",
      "type": "array"
    },
    "traces": {
      "additionalProperties": true,
      "properties": {
        "jaeger": {
          "additionalProperties": true,
          "properties": {
            "grpc": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Jaeger GRPC traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "Jaeger GRPC receiver config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "grpc",
              "type": "object"
            },
            "thriftBinary": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Jaeger Thrift Binary traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "Jaeger Thrift Binary receiver config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "thriftBinary",
              "type": "object"
            },
            "thriftCompact": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Jaeger Thrift Compact traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "Jaeger Thrift Compact receiver config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "thriftCompact",
              "type": "object"
            },
            "thriftHttp": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Jaeger Thrift HTTP traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "Jaeger Thrift HTTP receiver config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "thriftHttp",
              "type": "object"
            }
          },
          "required": [],
          "title": "jaeger",
          "type": "object"
        },
        "kafka": {
          "additionalProperties": true,
          "description": "Enable Tempo to ingest traces from Kafka. Reference: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/kafkareceiver",
          "required": [],
          "title": "kafka",
          "type": "object"
        },
        "opencensus": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable Tempo to ingest Open Census traces",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "receiverConfig": {
              "additionalProperties": true,
              "description": "Open Census receiver config",
              "required": [],
              "title": "receiverConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "opencensus",
          "type": "object"
        },
        "otlp": {
          "additionalProperties": true,
          "properties": {
            "grpc": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Open Telemetry GRPC traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "port": {
                  "default": 4317,
                  "description": "Default OTLP gRPC port",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "GRPC receiver advanced config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "grpc",
              "type": "object"
            },
            "http": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable Tempo to ingest Open Telemetry HTTP traces",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "receiverConfig": {
                  "additionalProperties": true,
                  "description": "HTTP receiver advanced config",
                  "required": [],
                  "title": "receiverConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "http",
              "type": "object"
            }
          },
          "required": [],
          "title": "otlp",
          "type": "object"
        },
        "zipkin": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable Tempo to ingest Zipkin traces",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "receiverConfig": {
              "additionalProperties": true,
              "description": "Zipkin receiver config",
              "required": [],
              "title": "receiverConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "zipkin",
          "type": "object"
        }
      },
      "required": [],
      "title": "traces",
      "type": "object"
    },
    "trustedCertsSecret": {
      "default": "",
      "description": "# Trusted Certificates Settings for MinIO. Ref: https://docs.minio.io/docs/how-to-secure-access-to-minio-server-with-tls#install-certificates-from-third-party-cas\n# Bundle multiple trusted certificates into one secret and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n# When using self-signed certificates, remember to include MinIO's own certificate in the bundle with key public.crt.\n# If certSecret is left empty and tls is enabled, this chart installs the public certificate from .Values.tls.certSecret.",
      "required": [],
      "title": "trustedCertsSecret",
      "type": "string"
    },
    "useExternalConfig": {
      "default": false,
      "description": "Configuration is loaded from the secret called 'externalConfigSecretName'.\nIf 'useExternalConfig' is true, then the configuration is not generated, just\nconsumed.  Top level keys for `tempo.yaml` and `overrides.yaml` are to be\nprovided by the user.",
      "required": [],
      "title": "useExternalConfig",
      "type": "boolean"
    },
    "users": {
      "description": "# List of users to be created after minio install\n#",
      "items": {
        "additionalProperties": true,
        "properties": {
          "accessKey": {
            "default": "console",
            "required": [],
            "title": "accessKey",
            "type": "string"
          },
          "policy": {
            "default": "consoleAdmin",
            "required": [],
            "title": "policy",
            "type": "string"
          },
          "secretKey": {
            "default": "console123",
            "required": [],
            "title": "secretKey",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "users",
      "type": "array"
    },
    "webhooks": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Enable the rollout-operator webhooks. See https://github.com/grafana/rollout-operator/#webhooks.\nNote that the webhooks require custom resource definitions. If upgrading, manually apply the files in the `crds` directory.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failurePolicy": {
          "default": "Fail",
          "description": "Validating and mutating webhook failure policy. `Ignore` or `Fail`.",
          "required": [],
          "title": "failurePolicy",
          "type": "string"
        },
        "selfSignedCertSecretName": {
          "default": "certificate",
          "description": "Secret resource name for the TLS certificate to be used with the webhooks",
          "required": [],
          "title": "selfSignedCertSecretName",
          "type": "string"
        }
      },
      "required": [],
      "title": "webhooks",
      "type": "object"
    }
  },
  "required": [],
  "type": "object"
}