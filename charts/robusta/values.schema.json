{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "properties": {
    "additionalEnvVars": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalEnvVars",
      "type": "array"
    },
    "additionalPrometheusRulesMap": {
      "additionalProperties": true,
      "description": "# Provide custom recording or alerting rules to be deployed into the cluster.\n#",
      "required": [],
      "title": "additionalPrometheusRulesMap",
      "type": "object"
    },
    "additionalVolumeMounts": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalVolumeMounts",
      "type": "array"
    },
    "additionalVolumes": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "additionalVolumes",
      "type": "array"
    },
    "additional_env_vars": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "additional_env_vars",
      "type": "array"
    },
    "admin": {
      "additionalProperties": true,
      "description": "Use an existing secret for the admin user.",
      "properties": {
        "existingSecret": {
          "default": "",
          "description": "# Name of the secret. Can be templated.",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        },
        "passwordKey": {
          "default": "admin-password",
          "required": [],
          "title": "passwordKey",
          "type": "string"
        },
        "userKey": {
          "default": "admin-user",
          "required": [],
          "title": "userKey",
          "type": "string"
        }
      },
      "required": [],
      "title": "admin",
      "type": "object"
    },
    "adminUser": {
      "default": "admin",
      "description": "Administrator credentials when not using an existing secret (see below)",
      "required": [],
      "title": "adminUser",
      "type": "string"
    },
    "affinity": {
      "additionalProperties": true,
      "description": "# Assign a group of affinity scheduling rules\n#",
      "properties": {
        "podAntiAffinity": {
          "additionalProperties": true,
          "properties": {
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "podAffinityTerm": {
                    "additionalProperties": true,
                    "properties": {
                      "labelSelector": {
                        "additionalProperties": true,
                        "properties": {
                          "matchLabels": {
                            "additionalProperties": true,
                            "properties": {
                              "app.kubernetes.io/instance": {
                                "required": [],
                                "title": "app.kubernetes.io/instance",
                                "type": "string"
                              },
                              "app.kubernetes.io/name": {
                                "required": [],
                                "title": "app.kubernetes.io/name",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "matchLabels",
                            "type": "object"
                          }
                        },
                        "required": [],
                        "title": "labelSelector",
                        "type": "object"
                      },
                      "topologyKey": {
                        "required": [],
                        "title": "topologyKey",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "podAffinityTerm",
                    "type": "object"
                  },
                  "weight": {
                    "required": [],
                    "title": "weight",
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "preferredDuringSchedulingIgnoredDuringExecution",
              "type": "array"
            },
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "labelSelector": {
                    "additionalProperties": true,
                    "properties": {
                      "matchLabels": {
                        "additionalProperties": true,
                        "properties": {
                          "app.kubernetes.io/instance": {
                            "required": [],
                            "title": "app.kubernetes.io/instance",
                            "type": "string"
                          },
                          "app.kubernetes.io/name": {
                            "required": [],
                            "title": "app.kubernetes.io/name",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "matchLabels",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "title": "labelSelector",
                    "type": "object"
                  },
                  "topologyKey": {
                    "required": [],
                    "title": "topologyKey",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "requiredDuringSchedulingIgnoredDuringExecution",
              "type": "array"
            }
          },
          "required": [],
          "title": "podAntiAffinity",
          "type": "object"
        }
      },
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "alertRelabel": {
      "description": "see https://docs.robusta.dev/master/user-guide/configuration/additional-settings.html#relabel-prometheus-alerts",
      "items": {
        "required": []
      },
      "required": [],
      "title": "alertRelabel",
      "type": "array"
    },
    "alerting": {
      "additionalProperties": true,
      "description": "# Configure grafana alerting (can be templated)\n# ref: https://docs.grafana.com/alerting/set-up/provision-alerting-resources/file-provisioning/\n#",
      "required": [],
      "title": "alerting",
      "type": "object"
    },
    "alertmanager": {
      "additionalProperties": true,
      "description": "# Configuration for alertmanager\n# ref: https://prometheus.io/docs/alerting/alertmanager/\n#",
      "properties": {
        "alertmanagerSpec": {
          "additionalProperties": true,
          "description": "# Settings affecting alertmanagerSpec\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#alertmanagerspec\n#",
          "properties": {
            "additionalConfig": {
              "additionalProperties": true,
              "description": "# Additional configuration which is not covered by the properties above. (passed through tpl)",
              "required": [],
              "title": "additionalConfig",
              "type": "object"
            },
            "additionalConfigString": {
              "default": "",
              "description": "# Additional configuration which is not covered by the properties above.\n# Useful, if you need advanced templating inside alertmanagerSpec.\n# Otherwise, use alertmanager.alertmanagerSpec.additionalConfig (passed through tpl)",
              "required": [],
              "title": "additionalConfigString",
              "type": "string"
            },
            "additionalPeers": {
              "description": "# AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPeers",
              "type": "array"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "# Assign custom affinity rules to the alertmanager instance\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "alertmanagerConfigMatcherStrategy": {
              "additionalProperties": true,
              "description": "# Defines the strategy used by AlertmanagerConfig objects to match alerts. eg:\n#",
              "required": [],
              "title": "alertmanagerConfigMatcherStrategy",
              "type": "object"
            },
            "alertmanagerConfigNamespaceSelector": {
              "additionalProperties": true,
              "description": "# Namespaces to be selected for AlertmanagerConfig discovery. If nil, only check own namespace.\n#",
              "required": [],
              "title": "alertmanagerConfigNamespaceSelector",
              "type": "object"
            },
            "alertmanagerConfigSelector": {
              "additionalProperties": true,
              "description": "# AlertmanagerConfigs to be selected to merge and configure Alertmanager with.\n#",
              "required": [],
              "title": "alertmanagerConfigSelector",
              "type": "object"
            },
            "alertmanagerConfiguration": {
              "additionalProperties": true,
              "description": "# AlermanagerConfig to be used as top level configuration\n#",
              "required": [],
              "title": "alertmanagerConfiguration",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "# If false then the user will opt out of automounting API credentials.\n#",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "clusterAdvertiseAddress": {
              "default": false,
              "description": "# ClusterAdvertiseAddress is the explicit address to advertise in cluster. Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918\n#",
              "required": [],
              "title": "clusterAdvertiseAddress",
              "type": "boolean"
            },
            "clusterGossipInterval": {
              "default": "",
              "description": "# clusterGossipInterval determines interval between gossip attempts.\n# Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)",
              "required": [],
              "title": "clusterGossipInterval",
              "type": "string"
            },
            "clusterLabel": {
              "default": "",
              "description": "# clusterLabel defines the identifier that uniquely identifies the Alertmanager cluster.",
              "required": [],
              "title": "clusterLabel",
              "type": "string"
            },
            "clusterPeerTimeout": {
              "default": "",
              "description": "# clusterPeerTimeout determines timeout for cluster peering.\n# Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)",
              "required": [],
              "title": "clusterPeerTimeout",
              "type": "string"
            },
            "clusterPushpullInterval": {
              "default": "",
              "description": "# clusterPushpullInterval determines interval between pushpull attempts.\n# Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)",
              "required": [],
              "title": "clusterPushpullInterval",
              "type": "string"
            },
            "configMaps": {
              "description": "# ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods.\n# The ConfigMaps are mounted into /etc/alertmanager/configmaps/.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "configMaps",
              "type": "array"
            },
            "containers": {
              "description": "# Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "externalUrl": {
              "default": "",
              "description": "# The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name. string  false\n#",
              "required": [],
              "title": "externalUrl",
              "type": "null"
            },
            "forceEnableClusterMode": {
              "default": false,
              "description": "# ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica.\n# Use case is e.g. spanning an Alertmanager cluster across Kubernetes clusters with a single replica in each.",
              "required": [],
              "title": "forceEnableClusterMode",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "description": "# Image of Alertmanager\n#",
              "properties": {
                "registry": {
                  "default": "quay.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "prometheus/alertmanager",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "sha": {
                  "default": "",
                  "required": [],
                  "title": "sha",
                  "type": "string"
                },
                "tag": {
                  "default": "v0.28.1",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "initContainers": {
              "description": "# InitContainers allows injecting additional initContainers. This is meant to allow doing some changes\n# (permissions, dir tree) on mounted volumes before starting prometheus",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "listenLocal": {
              "default": false,
              "description": "# ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP.\n# Note this is only for the Alertmanager UI, not the gossip communication.\n#",
              "required": [],
              "title": "listenLocal",
              "type": "boolean"
            },
            "logFormat": {
              "default": "logfmt",
              "description": "# Define Log Format\nUse logfmt (default) or json logging",
              "required": [],
              "title": "logFormat",
              "type": "string"
            },
            "logLevel": {
              "default": "info",
              "description": "# Log level for Alertmanager to be configured with.\n#",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "minReadySeconds": {
              "default": 0,
              "description": "# Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to\n# be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).",
              "required": [],
              "title": "minReadySeconds",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "paused": {
              "default": false,
              "description": "# If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.\n#",
              "required": [],
              "title": "paused",
              "type": "boolean"
            },
            "persistentVolumeClaimRetentionPolicy": {
              "additionalProperties": true,
              "description": "# Statefulset's persistent volume claim retention policy\n# whenDeleted and whenScaled determine whether\n# statefulset's PVCs are deleted (true) or retained (false)\n# on scaling down and deleting statefulset, respectively.\n# Requires Kubernetes version 1.27.0+.\n# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention",
              "required": [],
              "title": "persistentVolumeClaimRetentionPolicy",
              "type": "object"
            },
            "podAntiAffinity": {
              "default": "soft",
              "description": "# Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n# The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n# The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n# The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n#",
              "required": [],
              "title": "podAntiAffinity",
              "type": "string"
            },
            "podAntiAffinityTopologyKey": {
              "default": "kubernetes.io/hostname",
              "description": "# If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n# This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n#",
              "required": [],
              "title": "podAntiAffinityTopologyKey",
              "type": "string"
            },
            "podMetadata": {
              "additionalProperties": true,
              "description": "# Standard object's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata\n# Metadata Labels and Annotations gets propagated to the Alertmanager pods.\n#",
              "required": [],
              "title": "podMetadata",
              "type": "object"
            },
            "portName": {
              "default": "http-web",
              "description": "# PortName to use for Alert Manager.\n#",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "# Priority class assigned to the Pods\n#",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "replicas": {
              "default": 1,
              "description": "# Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the\n# running cluster equal to the expected size.",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "description": "# Define resources requests and limits for single Pods.\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "retention": {
              "default": "120h",
              "description": "# Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression\n# [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n#",
              "required": [],
              "title": "retention",
              "type": "string"
            },
            "routePrefix": {
              "default": "/",
              "description": "# The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true,\n# but the server serves requests under a different route prefix. For example for use with kubectl proxy.\n#",
              "required": [],
              "title": "routePrefix",
              "type": "string"
            },
            "scheme": {
              "default": "",
              "description": "# scheme: HTTP scheme to use. Can be used with `tlsConfig` for example if using istio mTLS.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "secrets": {
              "description": "# Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the\n# Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "secrets",
              "type": "array"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "# SecurityContext holds pod-level security attributes and common container settings.\n# This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
              "properties": {
                "fsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1000,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "serviceName": {
              "default": "",
              "description": "#",
              "required": [],
              "title": "serviceName",
              "type": "null"
            },
            "storage": {
              "additionalProperties": true,
              "description": "# Storage is the definition of how storage will be used by the Alertmanager instances.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/storage.md\n#",
              "required": [],
              "title": "storage",
              "type": "object"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "# tlsConfig: TLS configuration to use when connect to the endpoint. For example if using istio mTLS.\n# Of type: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#tlsconfig",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            },
            "tolerations": {
              "description": "# If specified, the pod's tolerations.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "# If specified, the pod's topology spread constraints.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "useExistingSecret": {
              "default": false,
              "description": "# If true then the user will be responsible to provide a secret with alertmanager configuration\n# So when true the config part will be ignored (including templateFiles) and the one in the secret will be used\n#",
              "required": [],
              "title": "useExistingSecret",
              "type": "boolean"
            },
            "volumeMounts": {
              "description": "Additional VolumeMounts on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumeMounts",
              "type": "array"
            },
            "volumes": {
              "description": "Additional volumes on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            },
            "web": {
              "additionalProperties": true,
              "description": "# WebTLSConfig defines the TLS parameters for HTTPS\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#alertmanagerwebspec",
              "required": [],
              "title": "web",
              "type": "object"
            }
          },
          "required": [],
          "title": "alertmanagerSpec",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "# Annotations for Alertmanager\n#",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "apiVersion": {
          "default": "v2",
          "description": "# Api that prometheus will use to communicate with alertmanager. Possible values are v1, v2\n#",
          "required": [],
          "title": "apiVersion",
          "type": "string"
        },
        "config": {
          "additionalProperties": true,
          "description": "# Alertmanager configuration directives\n# ref: https://prometheus.io/docs/alerting/configuration/#configuration-file\n#      https://prometheus.io/webtools/alerting/routing-tree-editor/\n#",
          "properties": {
            "global": {
              "additionalProperties": true,
              "properties": {
                "resolve_timeout": {
                  "default": "5m",
                  "required": [],
                  "title": "resolve_timeout",
                  "type": "string"
                }
              },
              "required": [],
              "title": "global",
              "type": "object"
            },
            "inhibit_rules": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "equal": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "equal",
                    "type": "array"
                  },
                  "source_matchers": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "source_matchers",
                    "type": "array"
                  },
                  "target_matchers": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "target_matchers",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "inhibit_rules",
              "type": "array"
            },
            "receivers": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "name": {
                    "default": "null",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "receivers",
              "type": "array"
            },
            "route": {
              "additionalProperties": true,
              "properties": {
                "group_by": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "group_by",
                  "type": "array"
                },
                "group_interval": {
                  "default": "5m",
                  "required": [],
                  "title": "group_interval",
                  "type": "string"
                },
                "group_wait": {
                  "default": "30s",
                  "required": [],
                  "title": "group_wait",
                  "type": "string"
                },
                "receiver": {
                  "default": "null",
                  "required": [],
                  "title": "receiver",
                  "type": "string"
                },
                "repeat_interval": {
                  "default": "12h",
                  "required": [],
                  "title": "repeat_interval",
                  "type": "string"
                },
                "routes": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "matchers": {
                        "items": {
                          "required": [],
                          "type": "string"
                        },
                        "required": [],
                        "title": "matchers",
                        "type": "array"
                      },
                      "receiver": {
                        "default": "null",
                        "required": [],
                        "title": "receiver",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "routes",
                  "type": "array"
                }
              },
              "required": [],
              "title": "route",
              "type": "object"
            },
            "templates": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "templates",
              "type": "array"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "enableFeatures": {
          "description": "#\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "enableFeatures",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "description": "# Deploy alertmanager\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraSecret": {
          "additionalProperties": true,
          "description": "# ExtraSecret can be used to store various data in an extra secret\n# (use it for example to store hashed basic auth credentials)",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "# if not set, name will be auto generated\nname: \"\"",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "data": {
              "additionalProperties": true,
              "required": [],
              "title": "data",
              "type": "object"
            }
          },
          "required": [],
          "title": "extraSecret",
          "type": "object"
        },
        "forceDeployDashboards": {
          "default": false,
          "description": "# Create dashboard configmap even if alertmanager deployment has been disabled\n#",
          "required": [],
          "title": "forceDeployDashboards",
          "type": "boolean"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "# Hosts must be provided if Ingress is enabled.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "paths": {
              "description": "# Paths to use for ingress rules - one path should match the alertmanagerSpec.routePrefix\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "tls": {
              "description": "# TLS configuration for Alertmanager Ingress\n# Secret must be manually created in the namespace\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "ingressPerReplica": {
          "additionalProperties": true,
          "description": "# Configuration for creating an Ingress that will map to each Alertmanager replica service\n# alertmanager.servicePerReplica must be enabled\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hostDomain": {
              "default": "",
              "description": "# Domain that will be used for the per replica ingress",
              "required": [],
              "title": "hostDomain",
              "type": "string"
            },
            "hostPrefix": {
              "default": "",
              "description": "# Final form of the hostname for each per replica ingress is\n# {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n#\n# Prefix for the per replica ingress that will have `-$replicaNumber`\n# appended to the end",
              "required": [],
              "title": "hostPrefix",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "paths": {
              "description": "# Paths to use for ingress rules\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "tlsSecretName": {
              "default": "",
              "description": "# Secret name containing the TLS certificate for alertmanager per replica ingress\n# Secret must be manually created in the namespace",
              "required": [],
              "title": "tlsSecretName",
              "type": "string"
            },
            "tlsSecretPerReplica": {
              "additionalProperties": true,
              "description": "# Separated secret for each per replica Ingress. Can be used together with cert-manager\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "prefix": {
                  "default": "alertmanager",
                  "description": "# Final form of the secret for each per replica ingress is\n# {{ tlsSecretPerReplica.prefix }}-{{ $replicaNumber }}\n#",
                  "required": [],
                  "title": "prefix",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tlsSecretPerReplica",
              "type": "object"
            }
          },
          "required": [],
          "title": "ingressPerReplica",
          "type": "object"
        },
        "namespaceOverride": {
          "default": "",
          "description": "Optional: Override the namespace where Alertmanager will be deployed.",
          "required": [],
          "title": "namespaceOverride",
          "type": "string"
        },
        "networkPolicy": {
          "additionalProperties": true,
          "description": "# Network Policy configuration\n#",
          "properties": {
            "additionalIngress": {
              "description": "Additional custom ingress rules\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalIngress",
              "type": "array"
            },
            "egress": {
              "additionalProperties": true,
              "description": "Configure egress rules\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enable egress rules. When enabled, policyTypes will include Egress\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "rules": {
                  "description": "Custom egress rules\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "rules",
                  "type": "array"
                }
              },
              "required": [],
              "title": "egress",
              "type": "object"
            },
            "enableClusterRules": {
              "default": true,
              "description": "Enable rules for alertmanager cluster traffic\n#",
              "required": [],
              "title": "enableClusterRules",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Enable network policy for Alertmanager",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "gateway": {
              "additionalProperties": true,
              "description": "Gateway (formerly ingress controller) configuration\n#",
              "properties": {
                "namespace": {
                  "default": "",
                  "description": "Gateway namespace\n#",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "podLabels": {
                  "additionalProperties": true,
                  "description": "Gateway pod labels\n#",
                  "required": [],
                  "title": "podLabels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "gateway",
              "type": "object"
            },
            "monitoringRules": {
              "additionalProperties": true,
              "description": "Configure monitoring component rules\n#",
              "properties": {
                "configReloader": {
                  "default": true,
                  "description": "Enable ingress for config reloader metrics\n#",
                  "required": [],
                  "title": "configReloader",
                  "type": "boolean"
                },
                "prometheus": {
                  "default": true,
                  "description": "Enable ingress from Prometheus\n#",
                  "required": [],
                  "title": "prometheus",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "monitoringRules",
              "type": "object"
            },
            "policyTypes": {
              "description": "Define policy types. If egress is enabled, both Ingress and Egress will be used\nValid values are [\"Ingress\"] or [\"Ingress\", \"Egress\"]\n#",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "policyTypes",
              "type": "array"
            }
          },
          "required": [],
          "title": "networkPolicy",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "# Configure pod disruption budgets for Alertmanager\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": "",
              "required": [],
              "title": "maxUnavailable",
              "type": "string"
            },
            "minAvailable": {
              "default": 1,
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            },
            "unhealthyPodEvictionPolicy": {
              "default": "AlwaysAllow",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "route": {
          "additionalProperties": true,
          "description": "BETA: Configure the gateway routes for the chart here.\nMore routes can be added by adding a dictionary key like the 'main' route.\nBe aware that this is an early beta of this feature,\nkube-prometheus-stack does not guarantee this works and is subject to change.\nBeing BETA this can/will change in the future without notice, do not use unless you want to take that risk\n[[ref]](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1alpha2)",
          "properties": {
            "main": {
              "additionalProperties": true,
              "properties": {
                "additionalRules": {
                  "description": "# Additional custom rules that can be added to the route",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalRules",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "apiVersion": {
                  "default": "gateway.networking.k8s.io/v1",
                  "description": "Set the route apiVersion, e.g. gateway.networking.k8s.io/v1 or gateway.networking.k8s.io/v1alpha2",
                  "required": [],
                  "title": "apiVersion",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enables or disables the route",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "filters": {
                  "description": "# Filters define the filters that are applied to requests that match this rule.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "filters",
                  "type": "array"
                },
                "hostnames": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "hostnames",
                  "type": "array"
                },
                "httpsRedirect": {
                  "default": false,
                  "description": "create http route for redirect (https://gateway-api.sigs.k8s.io/guides/http-redirect-rewrite/#http-to-https-redirects)\n# Take care that you only enable this on the http listener of the gateway to avoid an infinite redirect.\n# matches, filters and additionalRules will be ignored if this is set to true. Be are",
                  "required": [],
                  "title": "httpsRedirect",
                  "type": "boolean"
                },
                "kind": {
                  "default": "HTTPRoute",
                  "description": "Set the route kind\nValid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute",
                  "required": [],
                  "title": "kind",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "matches": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "path": {
                        "additionalProperties": true,
                        "properties": {
                          "type": {
                            "default": "PathPrefix",
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "default": "/",
                            "required": [],
                            "title": "value",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "path",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "matches",
                  "type": "array"
                },
                "parentRefs": {
                  "description": "- my-filter.example.com",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "parentRefs",
                  "type": "array"
                }
              },
              "required": [],
              "title": "main",
              "type": "object"
            }
          },
          "required": [],
          "title": "route",
          "type": "object"
        },
        "secret": {
          "additionalProperties": true,
          "description": "# Configuration for Alertmanager secret\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "secret",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Configuration for Alertmanager service\n#",
          "properties": {
            "additionalPorts": {
              "description": "# Additional ports to open for Alertmanager service\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPorts",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "",
              "required": [],
              "title": "clusterIP",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalIPs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "externalIPs",
              "type": "array"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30903,
              "description": "# Port to expose on each node\n# Only used if service.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 9093,
              "description": "# Port for Alertmanager Service to listen on\n#",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "sessionAffinity": {
              "default": "None",
              "description": "# If you want to make sure that connections from a particular client are passed to the same Pod each time\n# Accepts 'ClientIP' or 'None'\n#",
              "required": [],
              "title": "sessionAffinity",
              "type": "string"
            },
            "sessionAffinityConfig": {
              "additionalProperties": true,
              "description": "# If you want to modify the ClientIP sessionAffinity timeout\n# The value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\"\n#",
              "properties": {
                "clientIP": {
                  "additionalProperties": true,
                  "properties": {
                    "timeoutSeconds": {
                      "default": 10800,
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "clientIP",
                  "type": "object"
                }
              },
              "required": [],
              "title": "sessionAffinityConfig",
              "type": "object"
            },
            "targetPort": {
              "default": 9093,
              "description": "# Port for Alertmanager cluster communication\n#\nclusterPort: 9094\n# To be used with a proxy extraContainer port\n#",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "# Service account for Alertmanager to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "# Configuration for creating a ServiceMonitor for AlertManager\n#",
          "properties": {
            "additionalEndpoints": {
              "description": "# Additional Endpoints\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalEndpoints",
              "type": "array"
            },
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "enableHttp2": {
              "default": true,
              "description": "# enableHttp2: Whether to enable HTTP2.\n# See https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#endpoint",
              "required": [],
              "title": "enableHttp2",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "",
              "description": "# scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "selfMonitor": {
              "default": true,
              "description": "# If true, a ServiceMonitor will be created for the AlertManager service.\n#",
              "required": [],
              "title": "selfMonitor",
              "type": "boolean"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "# tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.\n# Of type: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#tlsconfig",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "servicePerReplica": {
          "additionalProperties": true,
          "description": "# Configuration for creating a separate Service for each statefulset Alertmanager replica\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "# Loadbalancer source IP ranges\n# Only used if servicePerReplica.type is \"LoadBalancer\"",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30904,
              "description": "# Port to expose on each node\n# Only used if servicePerReplica.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 9093,
              "description": "# Port for Alertmanager Service per replica to listen on\n#",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 9093,
              "description": "# To be used with a proxy extraContainer port",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "servicePerReplica",
          "type": "object"
        },
        "stringConfig": {
          "default": "",
          "description": "# Alertmanager configuration directives (as string type, preferred over the config hash map)\n# stringConfig will be used only, if tplConfig is true\n# ref: https://prometheus.io/docs/alerting/configuration/#configuration-file\n#      https://prometheus.io/webtools/alerting/routing-tree-editor/\n#",
          "required": [],
          "title": "stringConfig",
          "type": "string"
        },
        "templateFiles": {
          "additionalProperties": true,
          "description": "# Alertmanager template files to format alerts\n# By default, templateFiles are placed in /etc/alertmanager/config/ and if\n# they have a .tmpl file suffix will be loaded. See config.templates above\n# to change, add other suffixes. If adding other suffixes, be sure to update\n# config.templates above to include those suffixes.\n# ref: https://prometheus.io/docs/alerting/notifications/\n#      https://prometheus.io/docs/alerting/notification_examples/\n#",
          "required": [],
          "title": "templateFiles",
          "type": "object"
        },
        "tplConfig": {
          "default": false,
          "description": "# Pass the Alertmanager configuration directives through Helm's templating\n# engine. If the Alertmanager configuration contains Alertmanager templates,\n# they'll need to be properly escaped so that they are not interpreted by\n# Helm\n# ref: https://helm.sh/docs/developing_charts/#using-the-tpl-function\n#      https://prometheus.io/docs/alerting/configuration/#tmpl_string\n#      https://prometheus.io/docs/alerting/notifications/\n#      https://prometheus.io/docs/alerting/notification_examples/",
          "required": [],
          "title": "tplConfig",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "alertmanager",
      "type": "object"
    },
    "annotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to the deployment/statefulset",
      "required": [],
      "title": "annotations",
      "type": "object"
    },
    "argoRollouts": {
      "default": false,
      "required": [],
      "title": "argoRollouts",
      "type": "boolean"
    },
    "assertNoLeakedSecrets": {
      "default": true,
      "description": "assertNoLeakedSecrets is a helper function defined in _helpers.tpl that checks if secret\nvalues are not exposed in the rendered grafana.ini configmap. It is enabled by default.\n\nTo pass values into grafana.ini without exposing them in a configmap, use variable expansion:\nhttps://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#variable-expansion\n\nAlternatively, if you wish to allow secret values to be exposed in the rendered grafana.ini configmap,\nyou can disable this check by setting assertNoLeakedSecrets to false.",
      "required": [],
      "title": "assertNoLeakedSecrets",
      "type": "boolean"
    },
    "automountServiceAccountToken": {
      "default": true,
      "description": "If false then the user will opt out of automounting API credentials.",
      "required": [],
      "title": "automountServiceAccountToken",
      "type": "boolean"
    },
    "autoscaling": {
      "additionalProperties": true,
      "description": "# Create HorizontalPodAutoscaler object for deployment type\n",
      "properties": {
        "behavior": {
          "additionalProperties": true,
          "required": [],
          "title": "behavior",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 5,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPU": {
          "default": "60",
          "required": [],
          "title": "targetCPU",
          "type": "string"
        },
        "targetMemory": {
          "default": "",
          "required": [],
          "title": "targetMemory",
          "type": "string"
        }
      },
      "required": [],
      "title": "autoscaling",
      "type": "object"
    },
    "autosharding": {
      "additionalProperties": true,
      "description": "If set to true, this will deploy kube-state-metrics as a StatefulSet and the data\nwill be automatically sharded across \u003c.Values.replicas\u003e pods using the built-in\nautodiscovery feature: https://github.com/kubernetes/kube-state-metrics#automated-sharding\nThis is an experimental feature and there are no stability guarantees.",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "autosharding",
      "type": "object"
    },
    "builtinPlaybooks": {
      "description": "builtin playbooks",
      "items": {
        "additionalProperties": true,
        "properties": {
          "actions": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "alert_explanation_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "alert_explanation": {
                      "default": "This alert is fired when the file system is running out of space.",
                      "required": [],
                      "title": "alert_explanation",
                      "type": "string"
                    },
                    "recommended_resolution": {
                      "default": "This is a common issue on local clusters and we recommend increasing the node disk size for your cluster to run optimally.",
                      "required": [],
                      "title": "recommended_resolution",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "alert_explanation_enricher",
                  "type": "object"
                },
                "alert_graph_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "item_type": {
                      "default": "Pod",
                      "required": [],
                      "title": "item_type",
                      "type": "string"
                    },
                    "resource_type": {
                      "default": "CPU",
                      "required": [],
                      "title": "resource_type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "alert_graph_enricher",
                  "type": "object"
                },
                "api_service_status_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "api_service_status_enricher",
                  "type": "object"
                },
                "cpu_overcommited_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "cpu_overcommited_enricher",
                  "type": "object"
                },
                "cpu_throttling_analysis_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "cpu_throttling_analysis_enricher",
                  "type": "object"
                },
                "daemonset_misscheduled_analysis_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "daemonset_misscheduled_analysis_enricher",
                  "type": "object"
                },
                "daemonset_status_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "daemonset_status_enricher",
                  "type": "object"
                },
                "default_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "default_enricher",
                  "type": "object"
                },
                "deployment_events_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "dependent_pod_mode": {
                      "default": true,
                      "required": [],
                      "title": "dependent_pod_mode",
                      "type": "boolean"
                    },
                    "included_types": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "included_types",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "deployment_events_enricher",
                  "type": "object"
                },
                "enrich_pod_with_node_events": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "enrich_pod_with_node_events",
                  "type": "object"
                },
                "external_video_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "name": {
                      "default": "Memory Overcommited",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    },
                    "url": {
                      "default": "https://bit.ly/memory-overcommit",
                      "required": [],
                      "title": "url",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "external_video_enricher",
                  "type": "object"
                },
                "fail_krr_scan": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "fail_krr_scan",
                  "type": "object"
                },
                "hpa_mismatch_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "hpa_mismatch_enricher",
                  "type": "object"
                },
                "image_pull_backoff_reporter": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "image_pull_backoff_reporter",
                  "type": "object"
                },
                "job_events_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_events_enricher",
                  "type": "object"
                },
                "job_info_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_info_enricher",
                  "type": "object"
                },
                "job_pod_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_pod_enricher",
                  "type": "object"
                },
                "logs_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "filter_regex": {
                      "default": ".*Evaluating rule failed.*",
                      "required": [],
                      "title": "filter_regex",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "logs_enricher",
                  "type": "object"
                },
                "memory_overcommited_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "memory_overcommited_enricher",
                  "type": "object"
                },
                "node_allocatable_resources_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_allocatable_resources_enricher",
                  "type": "object"
                },
                "node_cpu_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_cpu_enricher",
                  "type": "object"
                },
                "node_disk_analyzer": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_disk_analyzer",
                  "type": "object"
                },
                "node_pods_capacity_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_pods_capacity_enricher",
                  "type": "object"
                },
                "node_running_pods_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_running_pods_enricher",
                  "type": "object"
                },
                "node_status_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "node_status_enricher",
                  "type": "object"
                },
                "oom_killer_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "oom_killer_enricher",
                  "type": "object"
                },
                "pod_events_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "pod_events_enricher",
                  "type": "object"
                },
                "pod_evicted_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "pod_evicted_enricher",
                  "type": "object"
                },
                "pod_issue_investigator": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "pod_issue_investigator",
                  "type": "object"
                },
                "pod_oom_killer_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "attach_logs": {
                      "default": true,
                      "required": [],
                      "title": "attach_logs",
                      "type": "boolean"
                    },
                    "container_memory_graph": {
                      "default": true,
                      "required": [],
                      "title": "container_memory_graph",
                      "type": "boolean"
                    },
                    "dmesg_log": {
                      "default": false,
                      "required": [],
                      "title": "dmesg_log",
                      "type": "boolean"
                    },
                    "node_memory_graph": {
                      "default": true,
                      "required": [],
                      "title": "node_memory_graph",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "pod_oom_killer_enricher",
                  "type": "object"
                },
                "prometheus_rules_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "prometheus_rules_enricher",
                  "type": "object"
                },
                "related_pods": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "related_pods",
                  "type": "object"
                },
                "report_crash_loop": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "report_crash_loop",
                  "type": "object"
                },
                "resource_events_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "dependent_pod_mode": {
                      "default": true,
                      "required": [],
                      "title": "dependent_pod_mode",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "resource_events_enricher",
                  "type": "object"
                },
                "statefulset_replicas_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "statefulset_replicas_enricher",
                  "type": "object"
                },
                "status_enricher": {
                  "additionalProperties": true,
                  "properties": {
                    "show_details": {
                      "default": true,
                      "required": [],
                      "title": "show_details",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "status_enricher",
                  "type": "object"
                },
                "version_mismatch_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "version_mismatch_enricher",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "actions",
            "type": "array"
          },
          "name": {
            "default": "MiniClusterNodeFSSpaceAlerts",
            "required": [],
            "title": "name",
            "type": "string"
          },
          "stop": {
            "default": true,
            "required": [],
            "title": "stop",
            "type": "boolean"
          },
          "triggers": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "on_image_pull_backoff": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "on_image_pull_backoff",
                  "type": "object"
                },
                "on_job_failure": {
                  "additionalProperties": true,
                  "properties": {
                    "scope": {
                      "additionalProperties": true,
                      "properties": {
                        "include": {
                          "items": {
                            "additionalProperties": true,
                            "properties": {
                              "labels": {
                                "items": {
                                  "required": [],
                                  "type": "string"
                                },
                                "required": [],
                                "title": "labels",
                                "type": "array"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "required": [],
                          "title": "include",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "scope",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "on_job_failure",
                  "type": "object"
                },
                "on_pod_crash_loop": {
                  "additionalProperties": true,
                  "properties": {
                    "restart_reason": {
                      "default": "CrashLoopBackOff",
                      "required": [],
                      "title": "restart_reason",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "on_pod_crash_loop",
                  "type": "object"
                },
                "on_pod_evicted": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "on_pod_evicted",
                  "type": "object"
                },
                "on_pod_oom_killed": {
                  "additionalProperties": true,
                  "properties": {
                    "rate_limit": {
                      "default": 3600,
                      "required": [],
                      "title": "rate_limit",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "on_pod_oom_killed",
                  "type": "object"
                },
                "on_prometheus_alert": {
                  "additionalProperties": true,
                  "properties": {
                    "alert_name": {
                      "default": "NodeFilesystemAlmostOutOfSpace",
                      "required": [],
                      "title": "alert_name",
                      "type": "string"
                    },
                    "k8s_providers": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "k8s_providers",
                      "type": "array"
                    },
                    "status": {
                      "default": "all",
                      "required": [],
                      "title": "status",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "on_prometheus_alert",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "triggers",
            "type": "array"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "builtinPlaybooks",
      "type": "array"
    },
    "certificate": {
      "default": "",
      "required": [],
      "title": "certificate",
      "type": "string"
    },
    "cleanPrometheusOperatorObjectNames": {
      "default": false,
      "description": "# Setting to true produces cleaner resource names, but requires a data migration because the name of the persistent volume changes. Therefore this should only be set once on initial installation.\n#",
      "required": [],
      "title": "cleanPrometheusOperatorObjectNames",
      "type": "boolean"
    },
    "clusterName": {
      "default": "",
      "description": "global parameters",
      "required": [],
      "title": "clusterName",
      "type": "string"
    },
    "clusterZone": {
      "default": "",
      "required": [],
      "title": "clusterZone",
      "type": "string"
    },
    "collectors": {
      "description": "Available collectors for kube-state-metrics.\nBy default, all available resources are enabled, comment out to disable.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "collectors",
      "type": "array"
    },
    "commonLabels": {
      "additionalProperties": true,
      "description": "# Labels to apply to all resources\n#",
      "required": [],
      "title": "commonLabels",
      "type": "object"
    },
    "config": {
      "default": "collectors:\n  enabled: '[defaults],memory,container'",
      "required": [],
      "title": "config",
      "type": "string"
    },
    "configmaps": {
      "description": "# Additional configmaps to be mounted.\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "configmaps",
      "type": "array"
    },
    "containerSecurityContext": {
      "additionalProperties": true,
      "description": "# Specify security settings for a Container\n# Allows overrides and additional options compared to (Pod) securityContext\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "additionalProperties": true,
          "properties": {
            "drop": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [],
          "title": "capabilities",
          "type": "object"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "seccompProfile": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seccompProfile",
          "type": "object"
        }
      },
      "required": [],
      "title": "containerSecurityContext",
      "type": "object"
    },
    "containers": {
      "description": "# Containers allows injecting additional containers.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "containers",
      "type": "array"
    },
    "coreDns": {
      "additionalProperties": true,
      "description": "# Component scraping coreDns. Use either this or kubeDns\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "port": {
              "default": 9153,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 9153,
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "port": {
              "default": "http-metrics",
              "description": "# port: Name of the port the metrics will be scraped from\n#",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "coreDns",
      "type": "object"
    },
    "crds": {
      "additionalProperties": true,
      "description": "# Install Prometheus Operator CRDs\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "upgradeJob": {
          "additionalProperties": true,
          "description": "# The CRD upgrade job mitigates the limitation of helm not being able to upgrade CRDs.\n# The job will apply the CRDs to the cluster before the operator is deployed, using helm hooks.\n# It deploy a corresponding clusterrole, clusterrolebinding and serviceaccount to apply the CRDs.\n# This feature is in preview, off by default and may change in the future.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "# Assign custom affinity rules to the upgrade-crd job\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "description": "# Annotations to add to the upgrade-crd job\n#",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "containerSecurityContext": {
              "additionalProperties": true,
              "description": "# Container-specific security context configuration\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "properties": {
                    "drop": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "required": [],
              "title": "env",
              "type": "object"
            },
            "extraVolumeMounts": {
              "description": "# Additional volume mounts\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "# Additional volumes\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "forceConflicts": {
              "default": false,
              "required": [],
              "title": "forceConflicts",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "busybox": {
                  "additionalProperties": true,
                  "properties": {
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "registry": {
                      "default": "docker.io",
                      "required": [],
                      "title": "registry",
                      "type": "string"
                    },
                    "repository": {
                      "default": "busybox",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "sha": {
                      "default": "",
                      "required": [],
                      "title": "sha",
                      "type": "string"
                    },
                    "tag": {
                      "default": "latest",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "busybox",
                  "type": "object"
                },
                "kubectl": {
                  "additionalProperties": true,
                  "properties": {
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "registry": {
                      "default": "registry.k8s.io",
                      "required": [],
                      "title": "registry",
                      "type": "string"
                    },
                    "repository": {
                      "default": "kubectl",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "sha": {
                      "default": "",
                      "required": [],
                      "title": "sha",
                      "type": "string"
                    },
                    "tag": {
                      "default": "",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "kubectl",
                  "type": "object"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "## Labels to add to the upgrade-crd job\n##",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": true,
              "description": "# Annotations to add to the upgrade-crd pod\n#",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": true,
              "description": "# Labels to add to the upgrade-crd pod\n#",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podSecurityContext": {
              "additionalProperties": true,
              "description": "# SecurityContext holds pod-level security attributes and common container settings.\n# This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
              "properties": {
                "fsGroup": {
                  "default": 65534,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 65534,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 65534,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "description": "# Define resources requests and limits for single Pods.\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "serviceAccount": {
              "additionalProperties": true,
              "description": "# Service account for upgrade crd job to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "automountServiceAccountToken": {
                  "default": true,
                  "required": [],
                  "title": "automountServiceAccountToken",
                  "type": "boolean"
                },
                "create": {
                  "default": true,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "name": {
                  "default": "",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "serviceAccount",
              "type": "object"
            },
            "tolerations": {
              "description": "# If specified, the pod's tolerations.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "# If specified, the pod's topology spread constraints.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            }
          },
          "required": [],
          "title": "upgradeJob",
          "type": "object"
        }
      },
      "required": [],
      "title": "crds",
      "type": "object"
    },
    "createConfigmap": {
      "default": true,
      "description": "Enable creating the grafana configmap",
      "required": [],
      "title": "createConfigmap",
      "type": "boolean"
    },
    "createServiceAccount": {
      "default": true,
      "required": [],
      "title": "createServiceAccount",
      "type": "boolean"
    },
    "customClusterRoleRules": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "customClusterRoleRules",
      "type": "array"
    },
    "customLabels": {
      "additionalProperties": true,
      "description": "# Additional labels to add to all resources",
      "required": [],
      "title": "customLabels",
      "type": "object"
    },
    "customPlaybooks": {
      "description": "custom user playbooks",
      "items": {
        "required": []
      },
      "required": [],
      "title": "customPlaybooks",
      "type": "array"
    },
    "customResourceState": {
      "additionalProperties": true,
      "description": "Enabling support for customResourceState, will create a configMap including your config that will be read from kube-state-metrics",
      "properties": {
        "config": {
          "additionalProperties": true,
          "description": "Add (Cluster)Role permissions to list/watch the customResources defined in the config to rbac.extraRules",
          "required": [],
          "title": "config",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "customResourceState",
      "type": "object"
    },
    "customRules": {
      "additionalProperties": true,
      "description": "# custom Rules to override \"for\" and \"severity\" in defaultRules\n#",
      "required": [],
      "title": "customRules",
      "type": "object"
    },
    "customServiceAccountName": {
      "default": "",
      "required": [],
      "title": "customServiceAccountName",
      "type": "string"
    },
    "daemonsetAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to windows exporter daemonset",
      "required": [],
      "title": "daemonsetAnnotations",
      "type": "object"
    },
    "dashboardProviders": {
      "additionalProperties": true,
      "description": "# Configure grafana dashboard providers\n# ref: http://docs.grafana.org/administration/provisioning/#dashboards\n#\n# `path` must be /var/lib/grafana/dashboards/\u003cprovider_name\u003e\n#",
      "properties": {
        "dashboardproviders.yaml": {
          "additionalProperties": true,
          "properties": {
            "apiVersion": {
              "required": [],
              "title": "apiVersion",
              "type": "integer"
            },
            "providers": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "disableDeletion": {
                    "required": [],
                    "title": "disableDeletion",
                    "type": "boolean"
                  },
                  "editable": {
                    "required": [],
                    "title": "editable",
                    "type": "boolean"
                  },
                  "folder": {
                    "required": [],
                    "title": "folder",
                    "type": "string"
                  },
                  "name": {
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "options": {
                    "additionalProperties": true,
                    "properties": {
                      "path": {
                        "required": [],
                        "title": "path",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "options",
                    "type": "object"
                  },
                  "orgId": {
                    "required": [],
                    "title": "orgId",
                    "type": "integer"
                  },
                  "type": {
                    "required": [],
                    "title": "type",
                    "type": "string"
                  },
                  "updateIntervalSeconds": {
                    "required": [],
                    "title": "updateIntervalSeconds",
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "providers",
              "type": "array"
            }
          },
          "required": [],
          "title": "dashboardproviders.yaml",
          "type": "object"
        }
      },
      "required": [],
      "title": "dashboardProviders",
      "type": "object"
    },
    "dashboards": {
      "additionalProperties": true,
      "description": "# Configure grafana dashboard to import\n# NOTE: To use dashboards you must also enable/configure dashboardProviders\n# ref: https://grafana.com/dashboards\n#\n# dashboards per provider, use provider name as key.\n#",
      "properties": {
        "my-provider": {
          "additionalProperties": true,
          "properties": {
            "my-awesome-dashboard": {
              "additionalProperties": true,
              "properties": {
                "datasource": {
                  "required": [],
                  "title": "datasource",
                  "type": "string"
                },
                "gnetId": {
                  "required": [],
                  "title": "gnetId",
                  "type": "integer"
                },
                "json": {
                  "description": "An empty but valid dashboard",
                  "required": [],
                  "title": "json",
                  "type": "string"
                },
                "revision": {
                  "required": [],
                  "title": "revision",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "my-awesome-dashboard",
              "type": "object"
            }
          },
          "required": [],
          "title": "my-provider",
          "type": "object"
        }
      },
      "required": [],
      "title": "dashboards",
      "type": "object"
    },
    "dashboardsConfigMaps": {
      "additionalProperties": true,
      "description": "# Reference to external ConfigMap per provider. Use provider name as key and ConfigMap name as value.\n# A provider dashboards must be defined either by external ConfigMaps or in values.yaml, not in both.\n# ConfigMap data example:\n#\n# data:\n#   example-dashboard.json: |\n#     RAW_JSON\n#",
      "required": [],
      "title": "dashboardsConfigMaps",
      "type": "object"
    },
    "datasources": {
      "additionalProperties": true,
      "description": "# Configure grafana datasources\n# ref: http://docs.grafana.org/administration/provisioning/#datasources\n#",
      "required": [],
      "title": "datasources",
      "type": "object"
    },
    "defaultRules": {
      "additionalProperties": true,
      "description": "# Create default rules for monitoring the cluster\n#",
      "properties": {
        "additionalAggregationLabels": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalAggregationLabels",
          "type": "array"
        },
        "additionalRuleAnnotations": {
          "additionalProperties": true,
          "description": "# Additional annotations for PrometheusRule alerts",
          "required": [],
          "title": "additionalRuleAnnotations",
          "type": "object"
        },
        "additionalRuleGroupAnnotations": {
          "additionalProperties": true,
          "description": "# Additional annotations for specific PrometheusRule alerts groups",
          "properties": {
            "alertmanager": {
              "additionalProperties": true,
              "required": [],
              "title": "alertmanager",
              "type": "object"
            },
            "configReloaders": {
              "additionalProperties": true,
              "required": [],
              "title": "configReloaders",
              "type": "object"
            },
            "etcd": {
              "additionalProperties": true,
              "required": [],
              "title": "etcd",
              "type": "object"
            },
            "general": {
              "additionalProperties": true,
              "required": [],
              "title": "general",
              "type": "object"
            },
            "k8sContainerCpuUsageSecondsTotal": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerCpuUsageSecondsTotal",
              "type": "object"
            },
            "k8sContainerMemoryCache": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemoryCache",
              "type": "object"
            },
            "k8sContainerMemoryRss": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemoryRss",
              "type": "object"
            },
            "k8sContainerMemorySwap": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemorySwap",
              "type": "object"
            },
            "k8sContainerResource": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerResource",
              "type": "object"
            },
            "k8sPodOwner": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sPodOwner",
              "type": "object"
            },
            "kubeApiserverAvailability": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverAvailability",
              "type": "object"
            },
            "kubeApiserverBurnrate": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverBurnrate",
              "type": "object"
            },
            "kubeApiserverHistogram": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverHistogram",
              "type": "object"
            },
            "kubeApiserverSlos": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverSlos",
              "type": "object"
            },
            "kubeControllerManager": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeControllerManager",
              "type": "object"
            },
            "kubePrometheusGeneral": {
              "additionalProperties": true,
              "required": [],
              "title": "kubePrometheusGeneral",
              "type": "object"
            },
            "kubePrometheusNodeRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "kubePrometheusNodeRecording",
              "type": "object"
            },
            "kubeProxy": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeProxy",
              "type": "object"
            },
            "kubeSchedulerAlerting": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeSchedulerAlerting",
              "type": "object"
            },
            "kubeSchedulerRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeSchedulerRecording",
              "type": "object"
            },
            "kubeStateMetrics": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeStateMetrics",
              "type": "object"
            },
            "kubelet": {
              "additionalProperties": true,
              "required": [],
              "title": "kubelet",
              "type": "object"
            },
            "kubernetesApps": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesApps",
              "type": "object"
            },
            "kubernetesResources": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesResources",
              "type": "object"
            },
            "kubernetesStorage": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesStorage",
              "type": "object"
            },
            "kubernetesSystem": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesSystem",
              "type": "object"
            },
            "network": {
              "additionalProperties": true,
              "required": [],
              "title": "network",
              "type": "object"
            },
            "node": {
              "additionalProperties": true,
              "required": [],
              "title": "node",
              "type": "object"
            },
            "nodeExporterAlerting": {
              "additionalProperties": true,
              "required": [],
              "title": "nodeExporterAlerting",
              "type": "object"
            },
            "nodeExporterRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "nodeExporterRecording",
              "type": "object"
            },
            "prometheus": {
              "additionalProperties": true,
              "required": [],
              "title": "prometheus",
              "type": "object"
            },
            "prometheusOperator": {
              "additionalProperties": true,
              "required": [],
              "title": "prometheusOperator",
              "type": "object"
            }
          },
          "required": [],
          "title": "additionalRuleGroupAnnotations",
          "type": "object"
        },
        "additionalRuleGroupLabels": {
          "additionalProperties": true,
          "description": "# Additional labels for specific PrometheusRule alert groups",
          "properties": {
            "alertmanager": {
              "additionalProperties": true,
              "required": [],
              "title": "alertmanager",
              "type": "object"
            },
            "configReloaders": {
              "additionalProperties": true,
              "required": [],
              "title": "configReloaders",
              "type": "object"
            },
            "etcd": {
              "additionalProperties": true,
              "required": [],
              "title": "etcd",
              "type": "object"
            },
            "general": {
              "additionalProperties": true,
              "required": [],
              "title": "general",
              "type": "object"
            },
            "k8sContainerCpuUsageSecondsTotal": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerCpuUsageSecondsTotal",
              "type": "object"
            },
            "k8sContainerMemoryCache": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemoryCache",
              "type": "object"
            },
            "k8sContainerMemoryRss": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemoryRss",
              "type": "object"
            },
            "k8sContainerMemorySwap": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerMemorySwap",
              "type": "object"
            },
            "k8sContainerResource": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sContainerResource",
              "type": "object"
            },
            "k8sPodOwner": {
              "additionalProperties": true,
              "required": [],
              "title": "k8sPodOwner",
              "type": "object"
            },
            "kubeApiserverAvailability": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverAvailability",
              "type": "object"
            },
            "kubeApiserverBurnrate": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverBurnrate",
              "type": "object"
            },
            "kubeApiserverHistogram": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverHistogram",
              "type": "object"
            },
            "kubeApiserverSlos": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeApiserverSlos",
              "type": "object"
            },
            "kubeControllerManager": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeControllerManager",
              "type": "object"
            },
            "kubePrometheusGeneral": {
              "additionalProperties": true,
              "required": [],
              "title": "kubePrometheusGeneral",
              "type": "object"
            },
            "kubePrometheusNodeRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "kubePrometheusNodeRecording",
              "type": "object"
            },
            "kubeProxy": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeProxy",
              "type": "object"
            },
            "kubeSchedulerAlerting": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeSchedulerAlerting",
              "type": "object"
            },
            "kubeSchedulerRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeSchedulerRecording",
              "type": "object"
            },
            "kubeStateMetrics": {
              "additionalProperties": true,
              "required": [],
              "title": "kubeStateMetrics",
              "type": "object"
            },
            "kubelet": {
              "additionalProperties": true,
              "required": [],
              "title": "kubelet",
              "type": "object"
            },
            "kubernetesApps": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesApps",
              "type": "object"
            },
            "kubernetesResources": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesResources",
              "type": "object"
            },
            "kubernetesStorage": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesStorage",
              "type": "object"
            },
            "kubernetesSystem": {
              "additionalProperties": true,
              "required": [],
              "title": "kubernetesSystem",
              "type": "object"
            },
            "network": {
              "additionalProperties": true,
              "required": [],
              "title": "network",
              "type": "object"
            },
            "node": {
              "additionalProperties": true,
              "required": [],
              "title": "node",
              "type": "object"
            },
            "nodeExporterAlerting": {
              "additionalProperties": true,
              "required": [],
              "title": "nodeExporterAlerting",
              "type": "object"
            },
            "nodeExporterRecording": {
              "additionalProperties": true,
              "required": [],
              "title": "nodeExporterRecording",
              "type": "object"
            },
            "prometheus": {
              "additionalProperties": true,
              "required": [],
              "title": "prometheus",
              "type": "object"
            },
            "prometheusOperator": {
              "additionalProperties": true,
              "required": [],
              "title": "prometheusOperator",
              "type": "object"
            }
          },
          "required": [],
          "title": "additionalRuleGroupLabels",
          "type": "object"
        },
        "additionalRuleLabels": {
          "additionalProperties": true,
          "description": "# Additional labels for PrometheusRule alerts",
          "required": [],
          "title": "additionalRuleLabels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "# Annotations for default rules",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appNamespacesTarget": {
          "default": ".*",
          "description": "# Reduce app namespace alert scope",
          "required": [],
          "title": "appNamespacesTarget",
          "type": "string"
        },
        "create": {
          "default": true,
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "disabled": {
          "additionalProperties": true,
          "description": "# Disabled PrometheusRule alerts",
          "required": [],
          "title": "disabled",
          "type": "object"
        },
        "keepFiringFor": {
          "default": "",
          "description": "# Set keep_firing_for for all alerts",
          "required": [],
          "title": "keepFiringFor",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "description": "# Labels for default rules",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "node": {
          "additionalProperties": true,
          "properties": {
            "fsSelector": {
              "default": "fstype!=\"\"",
              "required": [],
              "title": "fsSelector",
              "type": "string"
            }
          },
          "required": [],
          "title": "node",
          "type": "object"
        },
        "rules": {
          "additionalProperties": true,
          "properties": {
            "alertmanager": {
              "default": true,
              "required": [],
              "title": "alertmanager",
              "type": "boolean"
            },
            "configReloaders": {
              "default": true,
              "required": [],
              "title": "configReloaders",
              "type": "boolean"
            },
            "etcd": {
              "default": true,
              "required": [],
              "title": "etcd",
              "type": "boolean"
            },
            "general": {
              "default": true,
              "required": [],
              "title": "general",
              "type": "boolean"
            },
            "k8sContainerCpuUsageSecondsTotal": {
              "default": true,
              "required": [],
              "title": "k8sContainerCpuUsageSecondsTotal",
              "type": "boolean"
            },
            "k8sContainerMemoryCache": {
              "default": true,
              "required": [],
              "title": "k8sContainerMemoryCache",
              "type": "boolean"
            },
            "k8sContainerMemoryRss": {
              "default": true,
              "required": [],
              "title": "k8sContainerMemoryRss",
              "type": "boolean"
            },
            "k8sContainerMemorySwap": {
              "default": true,
              "required": [],
              "title": "k8sContainerMemorySwap",
              "type": "boolean"
            },
            "k8sContainerMemoryWorkingSetBytes": {
              "default": true,
              "required": [],
              "title": "k8sContainerMemoryWorkingSetBytes",
              "type": "boolean"
            },
            "k8sContainerResource": {
              "default": true,
              "required": [],
              "title": "k8sContainerResource",
              "type": "boolean"
            },
            "k8sPodOwner": {
              "default": true,
              "required": [],
              "title": "k8sPodOwner",
              "type": "boolean"
            },
            "kubeApiserverAvailability": {
              "default": true,
              "required": [],
              "title": "kubeApiserverAvailability",
              "type": "boolean"
            },
            "kubeApiserverBurnrate": {
              "default": true,
              "required": [],
              "title": "kubeApiserverBurnrate",
              "type": "boolean"
            },
            "kubeApiserverHistogram": {
              "default": true,
              "required": [],
              "title": "kubeApiserverHistogram",
              "type": "boolean"
            },
            "kubeApiserverSlos": {
              "default": true,
              "required": [],
              "title": "kubeApiserverSlos",
              "type": "boolean"
            },
            "kubeControllerManager": {
              "default": true,
              "required": [],
              "title": "kubeControllerManager",
              "type": "boolean"
            },
            "kubePrometheusGeneral": {
              "default": true,
              "required": [],
              "title": "kubePrometheusGeneral",
              "type": "boolean"
            },
            "kubePrometheusNodeRecording": {
              "default": true,
              "required": [],
              "title": "kubePrometheusNodeRecording",
              "type": "boolean"
            },
            "kubeProxy": {
              "default": true,
              "required": [],
              "title": "kubeProxy",
              "type": "boolean"
            },
            "kubeSchedulerAlerting": {
              "default": true,
              "required": [],
              "title": "kubeSchedulerAlerting",
              "type": "boolean"
            },
            "kubeSchedulerRecording": {
              "default": true,
              "required": [],
              "title": "kubeSchedulerRecording",
              "type": "boolean"
            },
            "kubeStateMetrics": {
              "default": true,
              "required": [],
              "title": "kubeStateMetrics",
              "type": "boolean"
            },
            "kubelet": {
              "default": true,
              "required": [],
              "title": "kubelet",
              "type": "boolean"
            },
            "kubernetesApps": {
              "default": true,
              "required": [],
              "title": "kubernetesApps",
              "type": "boolean"
            },
            "kubernetesResources": {
              "default": true,
              "required": [],
              "title": "kubernetesResources",
              "type": "boolean"
            },
            "kubernetesStorage": {
              "default": true,
              "required": [],
              "title": "kubernetesStorage",
              "type": "boolean"
            },
            "kubernetesSystem": {
              "default": true,
              "required": [],
              "title": "kubernetesSystem",
              "type": "boolean"
            },
            "network": {
              "default": true,
              "required": [],
              "title": "network",
              "type": "boolean"
            },
            "node": {
              "default": true,
              "required": [],
              "title": "node",
              "type": "boolean"
            },
            "nodeExporterAlerting": {
              "default": true,
              "required": [],
              "title": "nodeExporterAlerting",
              "type": "boolean"
            },
            "nodeExporterRecording": {
              "default": true,
              "required": [],
              "title": "nodeExporterRecording",
              "type": "boolean"
            },
            "prometheus": {
              "default": true,
              "required": [],
              "title": "prometheus",
              "type": "boolean"
            },
            "prometheusOperator": {
              "default": true,
              "required": [],
              "title": "prometheusOperator",
              "type": "boolean"
            },
            "windows": {
              "default": true,
              "required": [],
              "title": "windows",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rules",
          "type": "object"
        },
        "runbookUrl": {
          "default": "https://runbooks.prometheus-operator.dev/runbooks",
          "description": "# Prefix for runbook URLs. Use this to override the first part of the runbookURLs that is common to all rules.",
          "required": [],
          "title": "runbookUrl",
          "type": "string"
        }
      },
      "required": [],
      "title": "defaultRules",
      "type": "object"
    },
    "deploymentStrategy": {
      "additionalProperties": true,
      "description": "# See `kubectl explain deployment.spec.strategy` for more\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy",
      "properties": {
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "deploymentStrategy",
      "type": "object"
    },
    "disabledPlaybooks": {
      "description": "Any playbook name listed here will be disabled",
      "items": {
        "required": []
      },
      "required": [],
      "title": "disabledPlaybooks",
      "type": "array"
    },
    "dnsConfig": {
      "additionalProperties": true,
      "description": "Custom DNS configuration to be added to prometheus-windows-exporter pods",
      "required": [],
      "title": "dnsConfig",
      "type": "object"
    },
    "dnsPolicy": {
      "default": "ClusterFirst",
      "description": "# dnsPolicy allows to change the default DNS configuration for the pod\n# Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
      "required": [],
      "title": "dnsPolicy",
      "type": "string"
    },
    "downloadDashboards": {
      "additionalProperties": true,
      "properties": {
        "env": {
          "additionalProperties": true,
          "required": [],
          "title": "env",
          "type": "object"
        },
        "envFromSecret": {
          "default": "",
          "required": [],
          "title": "envFromSecret",
          "type": "string"
        },
        "envValueFrom": {
          "additionalProperties": true,
          "required": [],
          "title": "envValueFrom",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "downloadDashboards",
      "type": "object"
    },
    "downloadDashboardsImage": {
      "additionalProperties": true,
      "description": "# Assign a PriorityClassName to pods if set\npriorityClassName:",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "The Docker registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "curlimages/curl",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "sha": {
          "default": "",
          "required": [],
          "title": "sha",
          "type": "string"
        },
        "tag": {
          "default": "8.9.1",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "downloadDashboardsImage",
      "type": "object"
    },
    "enableAccountsCreate": {
      "default": true,
      "required": [],
      "title": "enableAccountsCreate",
      "type": "boolean"
    },
    "enableHolmesGPT": {
      "default": false,
      "required": [],
      "title": "enableHolmesGPT",
      "type": "boolean"
    },
    "enableKubeBackwardCompatibility": {
      "default": false,
      "description": "Enable backward compatibility of kubernetes where version below 1.13 doesn't have the enableServiceLinks option",
      "required": [],
      "title": "enableKubeBackwardCompatibility",
      "type": "boolean"
    },
    "enablePlatformPlaybooks": {
      "default": false,
      "description": "additional builtin playbooks to enable when using Robusta UI\nthese are disabled by default without the UI because they are spammy when sent to slack",
      "required": [],
      "title": "enablePlatformPlaybooks",
      "type": "boolean"
    },
    "enablePostProcessing": {
      "default": false,
      "required": [],
      "title": "enablePostProcessing",
      "type": "boolean"
    },
    "enablePrometheusStack": {
      "default": false,
      "description": "install prometheus, alert-manager, and grafana along with Robusta?",
      "required": [],
      "title": "enablePrometheusStack",
      "type": "boolean"
    },
    "enableServiceLinks": {
      "default": true,
      "description": "Inject Kubernetes services as environment variables.\nSee https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#environment-variables",
      "required": [],
      "title": "enableServiceLinks",
      "type": "boolean"
    },
    "enableServiceMonitors": {
      "default": true,
      "required": [],
      "title": "enableServiceMonitors",
      "type": "boolean"
    },
    "enableTelemetry": {
      "default": true,
      "required": [],
      "title": "enableTelemetry",
      "type": "boolean"
    },
    "enabledManagedConfiguration": {
      "default": false,
      "required": [],
      "title": "enabledManagedConfiguration",
      "type": "boolean"
    },
    "endpoints": {
      "description": "for deployments that have node_exporter deployed outside of the cluster, list\ntheir addresses here",
      "items": {
        "required": []
      },
      "required": [],
      "title": "endpoints",
      "type": "array"
    },
    "env": {
      "additionalProperties": true,
      "description": "Additional environment variables that will be passed to the daemonset",
      "required": [],
      "title": "env",
      "type": "object"
    },
    "envFromConfigMaps": {
      "description": "# The names of conifgmaps in the same kubernetes namespace which contain values to be added to the environment\n# Each entry should contain a name key, and can optionally specify whether the configmap must be defined with an optional key.\n# Name is templated.\n# ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#configmapenvsource-v1-core",
      "items": {
        "required": []
      },
      "required": [],
      "title": "envFromConfigMaps",
      "type": "array"
    },
    "envFromSecret": {
      "default": "",
      "description": "# The name of a secret in the same kubernetes namespace which contain values to be added to the environment\n# This can be useful for auth tokens, etc. Value is templated.",
      "required": [],
      "title": "envFromSecret",
      "type": "string"
    },
    "envFromSecrets": {
      "description": "# The names of secrets in the same kubernetes namespace which contain values to be added to the environment\n# Each entry should contain a name key, and can optionally specify whether the secret must be defined with an optional key.\n# Name is templated.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "envFromSecrets",
      "type": "array"
    },
    "envRenderSecret": {
      "additionalProperties": true,
      "description": "# Sensible environment variables that will be rendered as new secret object\n# This can be useful for auth tokens, etc.\n# If the secret values contains \"{{\", they'll need to be properly escaped so that they are not interpreted by Helm\n# ref: https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function",
      "required": [],
      "title": "envRenderSecret",
      "type": "object"
    },
    "envValueFrom": {
      "additionalProperties": true,
      "description": "# \"valueFrom\" environment variable references that will be added to deployment pods. Name is templated.\n# ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core\n# Renders in container spec as:\n#   env:\n#     ...\n#     - name: \u003ckey\u003e\n#       valueFrom:\n#         \u003cvalue rendered as YAML\u003e",
      "required": [],
      "title": "envValueFrom",
      "type": "object"
    },
    "extraArgs": {
      "description": "# Additional container arguments\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraArgs",
      "type": "array"
    },
    "extraConfigmapMounts": {
      "description": "Extra configmaps to mount in grafana pods\nValues are templated.",
      "items": {
        "additionalProperties": true,
        "properties": {
          "configMap": {
            "required": [],
            "title": "configMap",
            "type": "string"
          },
          "mountPath": {
            "required": [],
            "title": "mountPath",
            "type": "string"
          },
          "name": {
            "required": [],
            "title": "name",
            "type": "string"
          },
          "readOnly": {
            "required": [],
            "title": "readOnly",
            "type": "boolean"
          },
          "subPath": {
            "description": "This is not a realistic test, but for this we only care about extraConfigmapMounts not being empty and pointing to an existing ConfigMap",
            "required": [],
            "title": "subPath",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "extraConfigmapMounts",
      "type": "array"
    },
    "extraContainerVolumes": {
      "description": "# Volumes that can be used in init containers that will not be mounted to deployment pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraContainerVolumes",
      "type": "array"
    },
    "extraContainers": {
      "default": "",
      "description": "# Enable an Specify container in extraContainers. This is meant to allow adding an authentication proxy to a grafana pod",
      "required": [],
      "title": "extraContainers",
      "type": "string"
    },
    "extraEmptyDirMounts": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEmptyDirMounts",
      "type": "array"
    },
    "extraExposePorts": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraExposePorts",
      "type": "array"
    },
    "extraHostVolumeMounts": {
      "description": "# Additional mounts from the host to windows-exporter container\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraHostVolumeMounts",
      "type": "array"
    },
    "extraInitContainers": {
      "description": "# Additional InitContainers to initialize the pod\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraInitContainers",
      "type": "array"
    },
    "extraLabels": {
      "additionalProperties": true,
      "description": "Apply extra labels to common labels.",
      "required": [],
      "title": "extraLabels",
      "type": "object"
    },
    "extraManifests": {
      "default": "null",
      "description": "# Extra manifests to deploy.  Can be of type dict or list.\n# If dict, keys are ignored and only values are used.\n# Items contained within extraObjects can be defined as dict or string and are passed through tpl.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraManifests",
      "type": "null"
    },
    "extraObjects": {
      "description": "extraObjects could be utilized to add dynamic manifests via values",
      "items": {
        "additionalProperties": true,
        "properties": {
          "apiVersion": {
            "required": [],
            "title": "apiVersion",
            "type": "string"
          },
          "data": {
            "additionalProperties": true,
            "properties": {
              "not-a-real-certificate": {
                "description": "Decodes to 'PLACEHOLDER CERTIFICATE'",
                "required": [],
                "title": "not-a-real-certificate",
                "type": "string"
              },
              "renderer-config.json": {
                "required": [],
                "title": "renderer-config.json",
                "type": "string"
              },
              "var1": {
                "required": [],
                "title": "var1",
                "type": "string"
              },
              "var2": {
                "required": [],
                "title": "var2",
                "type": "string"
              }
            },
            "required": [],
            "title": "data",
            "type": "object"
          },
          "kind": {
            "required": [],
            "title": "kind",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              }
            },
            "required": [],
            "title": "metadata",
            "type": "object"
          },
          "type": {
            "required": [],
            "title": "type",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "extraObjects",
      "type": "array"
    },
    "extraSecretMounts": {
      "description": "# Additional grafana server secret mounts\nDefines additional mounts with secrets. Secrets must be manually created in the namespace.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraSecretMounts",
      "type": "array"
    },
    "extraVolumeMounts": {
      "description": "# Extra volume mounts in the node-exporter container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "description": "# Extra volumes to become available in the pod",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "(string) Override the full name of the chart.",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "additionalProperties": true,
      "description": "#",
      "properties": {
        "clusterDomain": {
          "default": "cluster.local",
          "required": [],
          "title": "clusterDomain",
          "type": "string"
        },
        "environment": {
          "required": [],
          "title": "environment",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "# Reference to one or more secrets to be used when pulling images\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "imageRegistry": {
          "default": "",
          "description": "# Global image registry to use if it needs to be overridden for some specific use cases (e.g local registries, custom images, ...)\n#",
          "required": [],
          "title": "imageRegistry",
          "type": "string"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "createAggregateClusterRoles": {
              "default": false,
              "description": "# Create ClusterRoles that extend the existing view, edit and admin ClusterRoles to interact with prometheus-operator CRDs\n# Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles",
              "required": [],
              "title": "createAggregateClusterRoles",
              "type": "boolean"
            },
            "pspAnnotations": {
              "additionalProperties": true,
              "required": [],
              "title": "pspAnnotations",
              "type": "object"
            },
            "pspEnabled": {
              "default": false,
              "required": [],
              "title": "pspEnabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        }
      },
      "required": [],
      "title": "global",
      "type": "object"
    },
    "globalConfig": {
      "additionalProperties": true,
      "description": "see https://docs.robusta.dev/master/user-guide/configuration.html#global-config and https://docs.robusta.dev/master/configuration/additional-settings.html#global-config",
      "properties": {
        "account_id": {
          "default": "",
          "required": [],
          "title": "account_id",
          "type": "string"
        },
        "check_prometheus_flags": {
          "default": true,
          "required": [],
          "title": "check_prometheus_flags",
          "type": "boolean"
        },
        "custom_annotations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "custom_annotations",
          "type": "array"
        },
        "custom_severity_map": {
          "additionalProperties": true,
          "required": [],
          "title": "custom_severity_map",
          "type": "object"
        },
        "grafana_api_key": {
          "default": "",
          "required": [],
          "title": "grafana_api_key",
          "type": "string"
        },
        "grafana_dashboard_uid": {
          "default": "",
          "required": [],
          "title": "grafana_dashboard_uid",
          "type": "string"
        },
        "grafana_url": {
          "default": "",
          "required": [],
          "title": "grafana_url",
          "type": "string"
        },
        "prometheus_url": {
          "default": "",
          "required": [],
          "title": "prometheus_url",
          "type": "string"
        },
        "signing_key": {
          "default": "",
          "required": [],
          "title": "signing_key",
          "type": "string"
        }
      },
      "required": [],
      "title": "globalConfig",
      "type": "object"
    },
    "gossipPortName": {
      "default": "gossip",
      "required": [],
      "title": "gossipPortName",
      "type": "string"
    },
    "grafana": {
      "additionalProperties": true,
      "description": "# Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml\n#",
      "properties": {
        "additionalDataSources": {
          "description": "# Configure additional grafana datasources (passed through tpl)\n# ref: https://grafana.com/docs/grafana/latest/administration/provisioning/#datasources",
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalDataSources",
          "type": "array"
        },
        "adminPassword": {
          "default": "prom-operator",
          "required": [],
          "title": "adminPassword",
          "type": "string"
        },
        "adminUser": {
          "default": "admin",
          "required": [],
          "title": "adminUser",
          "type": "string"
        },
        "defaultDashboardsEditable": {
          "default": true,
          "description": "# Editable flag for the default dashboards\n#",
          "required": [],
          "title": "defaultDashboardsEditable",
          "type": "boolean"
        },
        "defaultDashboardsEnabled": {
          "default": true,
          "description": "# Deploy default dashboards\n#",
          "required": [],
          "title": "defaultDashboardsEnabled",
          "type": "boolean"
        },
        "defaultDashboardsInterval": {
          "default": "1m",
          "description": "# Default interval for Grafana dashboards\n#",
          "required": [],
          "title": "defaultDashboardsInterval",
          "type": "string"
        },
        "defaultDashboardsTimezone": {
          "default": "utc",
          "description": "# Timezone for the default dashboards\n# Other options are: browser or a specific timezone, i.e. Europe/Luxembourg\n#",
          "required": [],
          "title": "defaultDashboardsTimezone",
          "type": "string"
        },
        "deleteDatasources": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "deleteDatasources",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraConfigmapMounts": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraConfigmapMounts",
          "type": "array"
        },
        "forceDeployDashboards": {
          "default": false,
          "description": "# ForceDeployDashboard Create dashboard configmap even if grafana deployment has been disabled\n#",
          "required": [],
          "title": "forceDeployDashboards",
          "type": "boolean"
        },
        "forceDeployDatasources": {
          "default": false,
          "description": "# ForceDeployDatasources Create datasource configmap even if grafana deployment has been disabled\n#",
          "required": [],
          "title": "forceDeployDatasources",
          "type": "boolean"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "# Annotations for Grafana Ingress\n#",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "# If true, Grafana Ingress will be created\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "# Hostnames.\n# Must be provided if Ingress is enable.\n#\nhosts:\n  - grafana.domain.com",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "description": "# Labels to be added to the Ingress\n#",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "path": {
              "default": "/",
              "description": "# Path for grafana ingress",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "tls": {
              "description": "# TLS configuration for grafana Ingress\n# Secret must be manually created in the namespace\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "namespaceOverride": {
          "default": "",
          "required": [],
          "title": "namespaceOverride",
          "type": "string"
        },
        "prune": {
          "default": false,
          "description": "Flag to mark provisioned data sources for deletion if they are no longer configured.\nIt takes no effect if data sources are already listed in the deleteDatasources section.\nref: https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-configuration-file",
          "required": [],
          "title": "prune",
          "type": "boolean"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "pspEnabled": {
              "default": false,
              "description": "# If true, Grafana PSPs will be created\n#",
              "required": [],
              "title": "pspEnabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Passed to grafana subchart and used by servicemonitor below\n#",
          "properties": {
            "ipFamilies": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "ipFamilies",
              "type": "array"
            },
            "ipFamilyPolicy": {
              "default": "",
              "required": [],
              "title": "ipFamilyPolicy",
              "type": "string"
            },
            "portName": {
              "default": "http-web",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "# To make Grafana persistent (Using Statefulset)\n#\npersistence:\n  enabled: true\n  type: sts\n  storageClassName: \"storageClassName\"\n  accessModes:\n    - ReadWriteOnce\n  size: 20Gi\n  finalizers:\n    - kubernetes.io/pvc-protection",
          "properties": {
            "autoMount": {
              "default": true,
              "required": [],
              "title": "autoMount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "description": "If true, a ServiceMonitor CRD is created for a prometheus operator\nhttps://github.com/prometheus-operator/prometheus-operator\n",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "Scrape interval. If not set, the Prometheus default scrape interval is used.\n",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": "labels for the ServiceMonitor",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "path": {
              "default": "/metrics",
              "description": "Path to use for scraping metrics. Might be different if server.root_url is set\nin grafana.ini",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "30s",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "sidecar": {
          "additionalProperties": true,
          "properties": {
            "dashboards": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "description": "# Annotations for Grafana dashboard configmaps\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enableNewTablePanelSyntax": {
                  "default": false,
                  "description": "Support for new table panels, when enabled grafana auto migrates the old table panels to newer table panels",
                  "required": [],
                  "title": "enableNewTablePanelSyntax",
                  "type": "boolean"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "label": {
                  "default": "grafana_dashboard",
                  "required": [],
                  "title": "label",
                  "type": "string"
                },
                "labelValue": {
                  "default": "1",
                  "required": [],
                  "title": "labelValue",
                  "type": "string"
                },
                "multicluster": {
                  "additionalProperties": true,
                  "properties": {
                    "etcd": {
                      "additionalProperties": true,
                      "properties": {
                        "enabled": {
                          "default": false,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "etcd",
                      "type": "object"
                    },
                    "global": {
                      "additionalProperties": true,
                      "properties": {
                        "enabled": {
                          "default": false,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "global",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "multicluster",
                  "type": "object"
                },
                "provider": {
                  "additionalProperties": true,
                  "properties": {
                    "allowUiUpdates": {
                      "default": false,
                      "required": [],
                      "title": "allowUiUpdates",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "provider",
                  "type": "object"
                },
                "searchNamespace": {
                  "default": "ALL",
                  "description": "Allow discovery in all namespaces for dashboards",
                  "required": [],
                  "title": "searchNamespace",
                  "type": "string"
                }
              },
              "required": [],
              "title": "dashboards",
              "type": "object"
            },
            "datasources": {
              "additionalProperties": true,
              "properties": {
                "alertmanager": {
                  "additionalProperties": true,
                  "description": "datasourceUid: Jaeger\ntraceIdLabelName: trace_id\nurlDisplayLabel: View traces",
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "handleGrafanaManagedAlerts": {
                      "default": false,
                      "required": [],
                      "title": "handleGrafanaManagedAlerts",
                      "type": "boolean"
                    },
                    "implementation": {
                      "default": "prometheus",
                      "required": [],
                      "title": "implementation",
                      "type": "string"
                    },
                    "name": {
                      "default": "Alertmanager",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    },
                    "uid": {
                      "default": "alertmanager",
                      "required": [],
                      "title": "uid",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "alertmanager",
                  "type": "object"
                },
                "annotations": {
                  "additionalProperties": true,
                  "description": "# Annotations for Grafana datasource configmaps\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "createPrometheusReplicasDatasources": {
                  "default": false,
                  "description": "# Create datasource for each Pod of Prometheus StatefulSet;\n# this uses by default the headless service `prometheus-operated` which is\n# created by Prometheus Operator. In case you deployed your own Service for your\n# Prometheus instance, you can specifiy it with the field `prometheusServiceName`\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/0fee93e12dc7c2ea1218f19ae25ec6b893460590/pkg/prometheus/statefulset.go#L255-L286",
                  "required": [],
                  "title": "createPrometheusReplicasDatasources",
                  "type": "boolean"
                },
                "defaultDatasourceEnabled": {
                  "default": true,
                  "required": [],
                  "title": "defaultDatasourceEnabled",
                  "type": "boolean"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "exemplarTraceIdDestinations": {
                  "additionalProperties": true,
                  "description": "# Field with internal link pointing to existing data source in Grafana.\n# Can be provisioned via additionalDataSources",
                  "required": [],
                  "title": "exemplarTraceIdDestinations",
                  "type": "object"
                },
                "httpMethod": {
                  "default": "POST",
                  "description": "# Set method for HTTP to send query to datasource",
                  "required": [],
                  "title": "httpMethod",
                  "type": "string"
                },
                "isDefaultDatasource": {
                  "default": true,
                  "required": [],
                  "title": "isDefaultDatasource",
                  "type": "boolean"
                },
                "label": {
                  "default": "grafana_datasource",
                  "required": [],
                  "title": "label",
                  "type": "string"
                },
                "labelValue": {
                  "default": "1",
                  "required": [],
                  "title": "labelValue",
                  "type": "string"
                },
                "name": {
                  "default": "Prometheus",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "prometheusServiceName": {
                  "default": "prometheus-operated",
                  "required": [],
                  "title": "prometheusServiceName",
                  "type": "string"
                },
                "uid": {
                  "default": "prometheus",
                  "required": [],
                  "title": "uid",
                  "type": "string"
                }
              },
              "required": [],
              "title": "datasources",
              "type": "object"
            }
          },
          "required": [],
          "title": "sidecar",
          "type": "object"
        }
      },
      "required": [],
      "title": "grafana",
      "type": "object"
    },
    "grafana.ini": {
      "additionalProperties": true,
      "description": "# Grafana's primary configuration\n# NOTE: values in map will be converted to ini format\n# ref: http://docs.grafana.org/installation/configuration/\n#",
      "properties": {
        "analytics": {
          "additionalProperties": true,
          "properties": {
            "check_for_updates": {
              "default": true,
              "required": [],
              "title": "check_for_updates",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "analytics",
          "type": "object"
        },
        "grafana_net": {
          "additionalProperties": true,
          "properties": {
            "url": {
              "default": "https://grafana.net",
              "required": [],
              "title": "url",
              "type": "string"
            }
          },
          "required": [],
          "title": "grafana_net",
          "type": "object"
        },
        "log": {
          "additionalProperties": true,
          "properties": {
            "mode": {
              "default": "console",
              "required": [],
              "title": "mode",
              "type": "string"
            }
          },
          "required": [],
          "title": "log",
          "type": "object"
        },
        "paths": {
          "additionalProperties": true,
          "properties": {
            "data": {
              "default": "/var/lib/grafana/",
              "required": [],
              "title": "data",
              "type": "string"
            },
            "logs": {
              "default": "/var/log/grafana",
              "required": [],
              "title": "logs",
              "type": "string"
            },
            "plugins": {
              "default": "/var/lib/grafana/plugins",
              "required": [],
              "title": "plugins",
              "type": "string"
            },
            "provisioning": {
              "default": "/etc/grafana/provisioning",
              "required": [],
              "title": "provisioning",
              "type": "string"
            }
          },
          "required": [],
          "title": "paths",
          "type": "object"
        },
        "server": {
          "additionalProperties": true,
          "properties": {
            "domain": {
              "default": "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}",
              "required": [],
              "title": "domain",
              "type": "string"
            }
          },
          "required": [],
          "title": "server",
          "type": "object"
        }
      },
      "required": [],
      "title": "grafana.ini",
      "type": "object"
    },
    "grafanaRenderer": {
      "additionalProperties": true,
      "description": "parameters for the renderer service used in robusta runner to render grafana graphs",
      "properties": {
        "enableContainer": {
          "default": false,
          "required": [],
          "title": "enableContainer",
          "type": "boolean"
        },
        "image": {
          "default": "~",
          "required": [],
          "title": "image",
          "type": "null"
        },
        "imageName": {
          "default": "grafana-renderer:7",
          "required": [],
          "title": "imageName",
          "type": "string"
        },
        "imagePullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "imagePullPolicy",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "~",
                  "required": [],
                  "title": "cpu",
                  "type": "null"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "512Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "container": {
              "additionalProperties": true,
              "properties": {
                "privileged": {
                  "default": false,
                  "required": [],
                  "title": "privileged",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "container",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "grafanaRenderer",
      "type": "object"
    },
    "headlessService": {
      "default": false,
      "description": "# Create a headless service for the deployment",
      "required": [],
      "title": "headlessService",
      "type": "boolean"
    },
    "hostAliases": {
      "description": "overrides pod.spec.hostAliases in the grafana deployment's pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "hostAliases",
      "type": "array"
    },
    "hostIPC": {
      "default": false,
      "description": "Share the host ipc namespace",
      "required": [],
      "title": "hostIPC",
      "type": "boolean"
    },
    "hostNetwork": {
      "default": true,
      "description": "Expose the service to the host network",
      "required": [],
      "title": "hostNetwork",
      "type": "boolean"
    },
    "hostPID": {
      "default": true,
      "description": "Share the host process ID namespace",
      "required": [],
      "title": "hostPID",
      "type": "boolean"
    },
    "hostProcFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's proc file system (/proc) at /host/proc in the container",
      "properties": {
        "mountPropagation": {
          "default": "",
          "description": "Possible values are None, HostToContainer, and Bidirectional",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostProcFsMount",
      "type": "object"
    },
    "hostRootFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's root file system (/) at /host/root in the container",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "mountPropagation": {
          "default": "HostToContainer",
          "description": "Defines how new mounts in existing mounts on the node or in the container\nare propagated to the container or node, respectively. Possible values are\nNone, HostToContainer, and Bidirectional. If this field is omitted, then\nNone is used. More information on:\nhttps://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostRootFsMount",
      "type": "object"
    },
    "hostSysFsMount": {
      "additionalProperties": true,
      "description": "Mount the node's sys file system (/sys) at /host/sys in the container",
      "properties": {
        "mountPropagation": {
          "default": "",
          "description": "Possible values are None, HostToContainer, and Bidirectional",
          "required": [],
          "title": "mountPropagation",
          "type": "string"
        }
      },
      "required": [],
      "title": "hostSysFsMount",
      "type": "object"
    },
    "image": {
      "additionalProperties": true,
      "description": "Default values for prometheus-node-exporter.\nThis is a YAML-formatted file.\nDeclare variables to be passed into your templates.",
      "properties": {
        "digest": {
          "default": "",
          "required": [],
          "title": "digest",
          "type": "string"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "pullSecrets": {
          "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# Can be templated.\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "pullSecrets",
          "type": "array"
        },
        "registry": {
          "default": "robustadev",
          "description": "The Docker registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "prometheus-community/windows-exporter",
          "description": "Docker image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "sha": {
          "default": "",
          "required": [],
          "title": "sha",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Overrides the image tag whose default is {{ printf \"v%s\" .Chart.AppVersion }}",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "imageRenderer": {
      "additionalProperties": true,
      "description": "# Add a seperate remote image renderer deployment/service",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "# Affinity for pod assignment (evaluated as template)\n# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n#",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "automountServiceAccountToken": {
          "default": false,
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "autoscaling": {
          "additionalProperties": true,
          "properties": {
            "behavior": {
              "additionalProperties": true,
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 5,
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPU": {
              "default": "60",
              "required": [],
              "title": "targetCPU",
              "type": "string"
            },
            "targetMemory": {
              "default": "",
              "required": [],
              "title": "targetMemory",
              "type": "string"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "image-renderer deployment container securityContext",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "deploymentStrategy": {
          "additionalProperties": true,
          "required": [],
          "title": "deploymentStrategy",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable the image-renderer deployment \u0026 service",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": true,
          "description": "extra environment variables",
          "properties": {
            "HTTP_HOST": {
              "default": "0.0.0.0",
              "required": [],
              "title": "HTTP_HOST",
              "type": "string"
            },
            "RENDERING_ARGS": {
              "required": [],
              "title": "RENDERING_ARGS",
              "type": "string"
            },
            "RENDERING_MODE": {
              "required": [],
              "title": "RENDERING_MODE",
              "type": "string"
            },
            "XDG_CACHE_HOME": {
              "default": "/tmp/.chromium",
              "required": [],
              "title": "XDG_CACHE_HOME",
              "type": "string"
            },
            "XDG_CONFIG_HOME": {
              "default": "/tmp/.chromium",
              "description": "Fixes \"Error: Failed to launch the browser process!\\nchrome_crashpad_handler: --database is required\"",
              "required": [],
              "title": "XDG_CONFIG_HOME",
              "type": "string"
            }
          },
          "required": [],
          "title": "env",
          "type": "object"
        },
        "envValueFrom": {
          "additionalProperties": true,
          "description": "# \"valueFrom\" environment variable references that will be added to deployment pods. Name is templated.\n# ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core\n# Renders in container spec as:\n#   env:\n#     ...\n#     - name: \u003ckey\u003e\n#       valueFrom:\n#         \u003cvalue rendered as YAML\u003e",
          "required": [],
          "title": "envValueFrom",
          "type": "object"
        },
        "extraConfigmapMounts": {
          "description": "Extra configmaps to mount in image-renderer pods",
          "items": {
            "additionalProperties": true,
            "properties": {
              "configMap": {
                "required": [],
                "title": "configMap",
                "type": "string"
              },
              "mountPath": {
                "required": [],
                "title": "mountPath",
                "type": "string"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "subPath": {
                "required": [],
                "title": "subPath",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraConfigmapMounts",
          "type": "array"
        },
        "extraSecretMounts": {
          "description": "Extra secrets to mount in image-renderer pods",
          "items": {
            "additionalProperties": true,
            "properties": {
              "mountPath": {
                "required": [],
                "title": "mountPath",
                "type": "string"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              },
              "readOnly": {
                "required": [],
                "title": "readOnly",
                "type": "boolean"
              },
              "secretName": {
                "required": [],
                "title": "secretName",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraSecretMounts",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Extra volumes to mount in image-renderer pods",
          "items": {
            "additionalProperties": true,
            "properties": {
              "mountPath": {
                "required": [],
                "title": "mountPath",
                "type": "string"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "Extra volumes for image-renderer pods",
          "items": {
            "additionalProperties": true,
            "properties": {
              "emtpyDir": {
                "additionalProperties": true,
                "required": [],
                "title": "emtpyDir",
                "type": "object"
              },
              "name": {
                "required": [],
                "title": "name",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "grafanaProtocol": {
          "default": "http",
          "description": "If https is enabled in Grafana, this needs to be set as 'https' to correctly configure the callback used in Grafana",
          "required": [],
          "title": "grafanaProtocol",
          "type": "string"
        },
        "grafanaSubPath": {
          "default": "",
          "description": "In case a sub_path is used this needs to be added to the image renderer callback",
          "required": [],
          "title": "grafanaSubPath",
          "type": "string"
        },
        "hostAliases": {
          "description": "image-renderer deployment Host Aliases",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "pullPolicy": {
              "default": "Always",
              "description": "image-renderer ImagePullPolicy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "image-renderer Image pull secrets (optional)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/grafana-image-renderer",
              "description": "image-renderer Image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "description": "image-renderer Image sha (optional)",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "description": "image-renderer Image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "networkPolicy": {
          "additionalProperties": true,
          "properties": {
            "extraIngressSelectors": {
              "description": "Allow additional services to access image-renderer (eg. Prometheus operator when ServiceMonitor is enabled)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraIngressSelectors",
              "type": "array"
            },
            "limitEgress": {
              "default": false,
              "description": "Enable a NetworkPolicy to limit outbound traffic to only the created grafana pods",
              "required": [],
              "title": "limitEgress",
              "type": "boolean"
            },
            "limitIngress": {
              "default": true,
              "description": "Enable a NetworkPolicy to limit inbound traffic to only the created grafana pods",
              "required": [],
              "title": "limitIngress",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "networkPolicy",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "  limits:\n    cpu: 100m\n    memory: 100Mi\n  requests:\n    cpu: 50m\n    memory: 50Mi\n# Node labels for pod assignment\n# ref: https://kubernetes.io/docs/user-guide/node-selection/\n",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "# image-renderer pod annotation",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "properties": {
            "customLableB": {
              "required": [],
              "title": "customLableB",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podPortName": {
          "default": "http",
          "description": "name of the image-renderer port on the pod",
          "required": [],
          "title": "podPortName",
          "type": "string"
        },
        "priorityClassName": {
          "default": "",
          "description": "image-renderer deployment priority class",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "renderingCallbackURL": {
          "default": "",
          "description": "The callback url of grafana instances if it is not in the same namespace with the remote image renderer",
          "required": [],
          "title": "renderingCallbackURL",
          "type": "string"
        },
        "replicas": {
          "default": 1,
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "description": "number of image-renderer replica sets to keep",
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "image-renderer deployment securityContext",
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "serverURL": {
          "default": "",
          "description": "The url of remote image renderer if it is not in the same namespace with the grafana instance",
          "required": [],
          "title": "serverURL",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "appProtocol": {
              "default": "",
              "description": "Adds the appProtocol field to the image-renderer service. This allows to work with istio protocol selection. Ex: \"http\" or \"tcp\"",
              "required": [],
              "title": "appProtocol",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "description": "Enable the image-renderer service",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "port": {
              "default": 8081,
              "description": "image-renderer service port used by both service and deployment",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "http",
              "description": "image-renderer service port name",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "targetPort": {
              "default": 8081,
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccountName": {
          "default": "",
          "description": "image-renderer deployment serviceAccount",
          "required": [],
          "title": "serviceAccountName",
          "type": "string"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "description": "# If true, a ServiceMonitor CRD is created for a prometheus operator\n# https://github.com/coreos/prometheus-operator\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "1m",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "description": " namespace: monitoring  (defaults to use the namespace this chart is deployed to)",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "relabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "30s",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "targetLabels": {
              "description": "See: https://doc.crds.dev/github.com/prometheus-operator/kube-prometheus/monitoring.coreos.com/ServiceMonitor/v1",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "tolerations": {
          "description": "# Tolerations for pod assignment\n# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "imageRenderer",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx\nValues can be templated",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraPaths": {
          "description": "# Extra paths to prepend to every host configuration. This is useful when working with annotation based services.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraPaths",
          "type": "array"
        },
        "hosts": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "path": {
          "default": "/",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "pathType": {
          "default": "Prefix",
          "description": "pathType is only for k8s \u003e= 1.1=",
          "required": [],
          "title": "pathType",
          "type": "string"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "initChownData": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "# If false, data ownership will not be reset at startup\n# This allows the grafana-server to be run with an arbitrary user\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "# initChownData container image\n#",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "library/busybox",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "1.31.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "# initChownData resource requests and limits\n# Ref: http://kubernetes.io/docs/user-guide/compute-resources/\n#",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": " limits:\n   cpu: 100m\n   memory: 128Mi\n requests:\n   cpu: 100m\n   memory: 128Mi",
          "properties": {
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "add": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "add",
                  "type": "array"
                },
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": false,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            },
            "runAsNonRoot": {
              "default": false,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 0,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "initChownData",
      "type": "object"
    },
    "initContainers": {
      "description": "# InitContainers allows injecting additional initContainers.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "initContainers",
      "type": "array"
    },
    "kube-prometheus-stack": {
      "additionalProperties": true,
      "properties": {
        "alertmanager": {
          "additionalProperties": true,
          "properties": {
            "alertmanagerSpec": {
              "additionalProperties": true,
              "properties": {
                "resources": {
                  "additionalProperties": true,
                  "properties": {
                    "limits": {
                      "additionalProperties": true,
                      "properties": {
                        "memory": {
                          "default": "128Mi",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "limits",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "50m",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "128Mi",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "requests",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "storage": {
                  "additionalProperties": true,
                  "properties": {
                    "volumeClaimTemplate": {
                      "additionalProperties": true,
                      "properties": {
                        "spec": {
                          "additionalProperties": true,
                          "properties": {
                            "accessModes": {
                              "items": {
                                "required": [],
                                "type": "string"
                              },
                              "required": [],
                              "title": "accessModes",
                              "type": "array"
                            },
                            "resources": {
                              "additionalProperties": true,
                              "properties": {
                                "requests": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "storage": {
                                      "default": "10Gi",
                                      "required": [],
                                      "title": "storage",
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "requests",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "resources",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "spec",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "volumeClaimTemplate",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "storage",
                  "type": "object"
                }
              },
              "required": [],
              "title": "alertmanagerSpec",
              "type": "object"
            },
            "config": {
              "additionalProperties": true,
              "properties": {
                "global": {
                  "additionalProperties": true,
                  "properties": {
                    "resolve_timeout": {
                      "default": "5m",
                      "required": [],
                      "title": "resolve_timeout",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "global",
                  "type": "object"
                },
                "receivers": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "name": {
                        "default": "robusta",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      },
                      "webhook_configs": {
                        "items": {
                          "additionalProperties": true,
                          "properties": {
                            "send_resolved": {
                              "default": true,
                              "required": [],
                              "title": "send_resolved",
                              "type": "boolean"
                            },
                            "url": {
                              "default": "http://robusta-runner.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}/api/alerts",
                              "required": [],
                              "title": "url",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "type": "object"
                        },
                        "required": [],
                        "title": "webhook_configs",
                        "type": "array"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "receivers",
                  "type": "array"
                },
                "route": {
                  "additionalProperties": true,
                  "properties": {
                    "group_by": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "group_by",
                      "type": "array"
                    },
                    "group_interval": {
                      "default": "1s",
                      "required": [],
                      "title": "group_interval",
                      "type": "string"
                    },
                    "group_wait": {
                      "default": "1s",
                      "required": [],
                      "title": "group_wait",
                      "type": "string"
                    },
                    "receiver": {
                      "default": "robusta",
                      "required": [],
                      "title": "receiver",
                      "type": "string"
                    },
                    "repeat_interval": {
                      "default": "4h",
                      "required": [],
                      "title": "repeat_interval",
                      "type": "string"
                    },
                    "routes": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "match": {
                            "additionalProperties": true,
                            "properties": {
                              "alertname": {
                                "default": "Watchdog",
                                "required": [],
                                "title": "alertname",
                                "type": "string"
                              }
                            },
                            "required": [],
                            "title": "match",
                            "type": "object"
                          },
                          "receiver": {
                            "default": "null",
                            "required": [],
                            "title": "receiver",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "routes",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "route",
                  "type": "object"
                }
              },
              "required": [],
              "title": "config",
              "type": "object"
            },
            "tplConfig": {
              "default": true,
              "required": [],
              "title": "tplConfig",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "alertmanager",
          "type": "object"
        },
        "kube-state-metrics": {
          "additionalProperties": true,
          "properties": {
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "memory": {
                      "default": "256Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "10m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "256Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "kube-state-metrics",
          "type": "object"
        },
        "kubeProxy": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubeProxy",
          "type": "object"
        },
        "prometheus": {
          "additionalProperties": true,
          "properties": {
            "prometheusSpec": {
              "additionalProperties": true,
              "properties": {
                "resources": {
                  "additionalProperties": true,
                  "properties": {
                    "limits": {
                      "additionalProperties": true,
                      "properties": {
                        "memory": {
                          "default": "2Gi",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "limits",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": "50m",
                          "required": [],
                          "title": "cpu",
                          "type": "string"
                        },
                        "memory": {
                          "default": "2Gi",
                          "required": [],
                          "title": "memory",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "requests",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "retention": {
                  "default": "15d",
                  "required": [],
                  "title": "retention",
                  "type": "string"
                },
                "retentionSize": {
                  "default": "99GB",
                  "description": "we set a value slightly lower than the 100Gi below\nthe retentionSize uses the suffix GB but it is really Gi units\nthat is, the retentionSize is measured in base2 units just like Gi, Mi, etc",
                  "required": [],
                  "title": "retentionSize",
                  "type": "string"
                },
                "storageSpec": {
                  "additionalProperties": true,
                  "properties": {
                    "volumeClaimTemplate": {
                      "additionalProperties": true,
                      "properties": {
                        "spec": {
                          "additionalProperties": true,
                          "properties": {
                            "accessModes": {
                              "items": {
                                "required": [],
                                "type": "string"
                              },
                              "required": [],
                              "title": "accessModes",
                              "type": "array"
                            },
                            "resources": {
                              "additionalProperties": true,
                              "properties": {
                                "requests": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "storage": {
                                      "default": "100Gi",
                                      "required": [],
                                      "title": "storage",
                                      "type": "string"
                                    }
                                  },
                                  "required": [],
                                  "title": "requests",
                                  "type": "object"
                                }
                              },
                              "required": [],
                              "title": "resources",
                              "type": "object"
                            }
                          },
                          "required": [],
                          "title": "spec",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "volumeClaimTemplate",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "storageSpec",
                  "type": "object"
                }
              },
              "required": [],
              "title": "prometheusSpec",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "prometheus-node-exporter": {
          "additionalProperties": true,
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "disable node-exporter on fargate because fargate doesn't allow daemonsets",
              "properties": {
                "nodeAffinity": {
                  "additionalProperties": true,
                  "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "additionalProperties": true,
                      "properties": {
                        "nodeSelectorTerms": {
                          "items": {
                            "additionalProperties": true,
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "key": {
                                      "default": "eks.amazonaws.com/compute-type",
                                      "required": [],
                                      "title": "key",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "default": "NotIn",
                                      "required": [],
                                      "title": "operator",
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "required": [],
                                        "type": "string"
                                      },
                                      "required": [],
                                      "title": "values",
                                      "type": "array"
                                    }
                                  },
                                  "required": [],
                                  "type": "object"
                                },
                                "required": [],
                                "title": "matchExpressions",
                                "type": "array"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "required": [],
                          "title": "nodeSelectorTerms",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "requiredDuringSchedulingIgnoredDuringExecution",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "nodeAffinity",
                  "type": "object"
                }
              },
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "memory": {
                      "default": "50Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "50m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "50Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "service": {
              "additionalProperties": true,
              "properties": {
                "port": {
                  "default": 9104,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "targetPort": {
                  "default": 9104,
                  "required": [],
                  "title": "targetPort",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus-node-exporter",
          "type": "object"
        },
        "prometheusOperator": {
          "additionalProperties": true,
          "properties": {
            "prometheusConfigReloader": {
              "additionalProperties": true,
              "properties": {
                "resources": {
                  "additionalProperties": true,
                  "properties": {
                    "limits": {
                      "additionalProperties": true,
                      "properties": {
                        "cpu": {
                          "default": 0,
                          "required": [],
                          "title": "cpu",
                          "type": "integer"
                        }
                      },
                      "required": [],
                      "title": "limits",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "resources",
                  "type": "object"
                }
              },
              "required": [],
              "title": "prometheusConfigReloader",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheusOperator",
          "type": "object"
        }
      },
      "required": [],
      "title": "kube-prometheus-stack",
      "type": "object"
    },
    "kube-state-metrics": {
      "additionalProperties": true,
      "description": "# Configuration for kube-state-metrics subchart\n#",
      "properties": {
        "namespaceOverride": {
          "default": "",
          "required": [],
          "title": "namespaceOverride",
          "type": "string"
        },
        "prometheus": {
          "additionalProperties": true,
          "properties": {
            "monitor": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "# Enable scraping via service monitor\n# Disable to prevent duplication if you enable prometheusScrape above\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": true,
                  "description": "Keep labels from scraped data, overriding server-side labels\n#",
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "labelLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelLimit",
                  "type": "integer"
                },
                "labelNameLengthLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelNameLengthLimit",
                  "type": "integer"
                },
                "labelValueLengthLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelValueLengthLimit",
                  "type": "integer"
                },
                "metricRelabelings": {
                  "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "sampleLimit": {
                  "default": 0,
                  "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
                  "required": [],
                  "title": "sampleLimit",
                  "type": "integer"
                },
                "scrapeTimeout": {
                  "default": "",
                  "description": "# Scrape Timeout. If not set, the Prometheus default scrape timeout is used.\n#",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "targetLimit": {
                  "default": 0,
                  "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
                  "required": [],
                  "title": "targetLimit",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "monitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "prometheusScrape": {
          "default": false,
          "description": "# Enable scraping via kubernetes-service-endpoints\n# Disabled by default as we service monitor is enabled below\n#",
          "required": [],
          "title": "prometheusScrape",
          "type": "boolean"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        },
        "selfMonitor": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "selfMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kube-state-metrics",
      "type": "object"
    },
    "kubeApiServer": {
      "additionalProperties": true,
      "description": "# Component scraping the kube api server\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "component",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "drop",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "regex": {
                    "default": "(etcd_request|apiserver_request_slo|apiserver_request_sli|apiserver_request)_duration_seconds_bucket;(0\\.15|0\\.2|0\\.3|0\\.35|0\\.4|0\\.45|0\\.6|0\\.7|0\\.8|0\\.9|1\\.25|1\\.5|1\\.75|2|3|3\\.5|4|4\\.5|6|7|8|9|15|20|40|45|50)(\\.0)?",
                    "required": [],
                    "title": "regex",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "properties": {
                "matchLabels": {
                  "additionalProperties": true,
                  "properties": {
                    "component": {
                      "default": "apiserver",
                      "required": [],
                      "title": "component",
                      "type": "string"
                    },
                    "provider": {
                      "default": "kubernetes",
                      "required": [],
                      "title": "provider",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "matchLabels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "tlsConfig": {
          "additionalProperties": true,
          "properties": {
            "insecureSkipVerify": {
              "default": false,
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            },
            "serverName": {
              "default": "kubernetes",
              "required": [],
              "title": "serverName",
              "type": "string"
            }
          },
          "required": [],
          "title": "tlsConfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeApiServer",
      "type": "object"
    },
    "kubeControllerManager": {
      "additionalProperties": true,
      "description": "# Component scraping the kube controller manager\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "description": "# If your kube controller manager is not deployed as a pod, specify IPs it can be found on\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "service": {
          "additionalProperties": true,
          "description": "# If using kubeControllerManager.endpoints only the port and targetPort are used\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "port": {
              "default": "null",
              "description": "# If null or unset, the value is determined dynamically based on target Kubernetes version due to change\n# of default port in Kubernetes 1.22.\n#",
              "required": [],
              "title": "port",
              "type": "null"
            },
            "targetPort": {
              "default": "null",
              "required": [],
              "title": "targetPort",
              "type": "null"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "https": {
              "default": "null",
              "description": "# Enable scraping kube-controller-manager over https.\n# Requires proper certs (not self-signed) and delegated authentication/authorization checks.\n# If null or unset, the value is determined dynamically based on target Kubernetes version.\n#",
              "required": [],
              "title": "https",
              "type": "null"
            },
            "insecureSkipVerify": {
              "default": "null",
              "description": "Skip TLS certificate validation when scraping",
              "required": [],
              "title": "insecureSkipVerify",
              "type": "null"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "port": {
              "default": "http-metrics",
              "description": "# port: Name of the port the metrics will be scraped from\n#",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "serverName": {
              "default": "null",
              "description": "Name of the server to use when validating TLS certificate",
              "required": [],
              "title": "serverName",
              "type": "null"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeControllerManager",
      "type": "object"
    },
    "kubeDns": {
      "additionalProperties": true,
      "description": "# Component scraping kubeDns. Use either this or coreDns\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "dnsmasq": {
              "additionalProperties": true,
              "properties": {
                "port": {
                  "default": 10054,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "targetPort": {
                  "default": 10054,
                  "required": [],
                  "title": "targetPort",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "dnsmasq",
              "type": "object"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "skydns": {
              "additionalProperties": true,
              "properties": {
                "port": {
                  "default": 10055,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "targetPort": {
                  "default": 10055,
                  "required": [],
                  "title": "targetPort",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "skydns",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "dnsmasqMetricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "dnsmasqMetricRelabelings",
              "type": "array"
            },
            "dnsmasqRelabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "dnsmasqRelabelings",
              "type": "array"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeDns",
      "type": "object"
    },
    "kubeEtcd": {
      "additionalProperties": true,
      "description": "# Component scraping etcd\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "description": "# If your etcd is not deployed as a pod, specify IPs it can be found on\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Etcd service. If using kubeEtcd.endpoints only the port and targetPort are used\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "port": {
              "default": 2381,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 2381,
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "# Configure secure access to the etcd cluster by loading a secret into prometheus and\n# specifying security configuration below. For example, with a secret named etcd-client-cert\n#\n# serviceMonitor:\n#   scheme: https\n#   insecureSkipVerify: false\n#   serverName: localhost\n#   caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca\n#   certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client\n#   keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key\n#",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "caFile": {
              "default": "",
              "required": [],
              "title": "caFile",
              "type": "string"
            },
            "certFile": {
              "default": "",
              "required": [],
              "title": "certFile",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "insecureSkipVerify": {
              "default": false,
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "keyFile": {
              "default": "",
              "required": [],
              "title": "keyFile",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "port": {
              "default": "http-metrics",
              "description": "# port: Name of the port the metrics will be scraped from\n#",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "serverName": {
              "default": "",
              "required": [],
              "title": "serverName",
              "type": "string"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeEtcd",
      "type": "object"
    },
    "kubeProxy": {
      "additionalProperties": true,
      "description": "# Component scraping kube proxy\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "description": "# If your kube proxy is not deployed as a pod, specify IPs it can be found on\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "port": {
              "default": 10249,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 10249,
              "required": [],
              "title": "targetPort",
              "type": "integer"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "https": {
              "default": false,
              "description": "# Enable scraping kube-proxy over https.\n# Requires proper certs (not self-signed) and delegated authentication/authorization checks\n#",
              "required": [],
              "title": "https",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "port": {
              "default": "http-metrics",
              "description": "# port: Name of the port the metrics will be scraped from\n#",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeProxy",
      "type": "object"
    },
    "kubeRBACProxy": {
      "additionalProperties": true,
      "description": "Configure kube-rbac-proxy. When enabled, creates a kube-rbac-proxy to protect the node-exporter http endpoint.\nThe requests are served through the same service but requests are HTTPS.",
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "# Specify security settings for a Container\n# Allows overrides and additional options compared to (Pod) securityContext\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enableHostPort": {
          "default": false,
          "description": "Configure a hostPort. If true, hostPort will be enabled in the container and set to service.port.",
          "required": [],
          "title": "enableHostPort",
          "type": "boolean"
        },
        "enableProxyEndpointsHostPort": {
          "default": false,
          "description": "Configure a hostPort. If true, hostPort will be enabled in the container and set to proxyEndpointsPort.",
          "required": [],
          "title": "enableProxyEndpointsHostPort",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": true,
          "description": "# Set environment variables as name/value pairs",
          "required": [],
          "title": "env",
          "type": "object"
        },
        "extraArgs": {
          "description": "List of additional cli arguments to configure kube-rbac-proxy\nfor example: --tls-cipher-suites, --log-file, etc.\nall the possible args can be found here: https://github.com/brancz/kube-rbac-proxy#usage",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "# Additional volume mounts in the kube-rbac-proxy container\n# See extraVolumes below",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "image": {
          "additionalProperties": true,
          "description": "VARIABLE: value",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "quay.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "brancz/kube-rbac-proxy",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "v0.19.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "port": {
          "default": 8100,
          "description": "Specify the port used for the Node exporter container (upstream port)",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "portName": {
          "default": "http",
          "description": "Specify the name of the container port",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "proxyEndpointsPort": {
          "default": 8888,
          "description": "Configure Proxy Endpoints Port\nThis is the port being probed for readiness",
          "required": [],
          "title": "proxyEndpointsPort",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "tls": {
          "additionalProperties": true,
          "description": "# tls enables using TLS resources from a volume on secret referred to in tlsSecret below.\n# When enabling tlsClientAuth, client CA certificate must be set in tlsSecret.caItem.\n# Ref. https://github.com/brancz/kube-rbac-proxy/issues/187",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "tlsClientAuth": {
              "default": false,
              "required": [],
              "title": "tlsClientAuth",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "volumeMounts": {
          "description": "# volumeMounts enables mounting custom volumes in rbac-proxy containers\n# Useful for TLS certificates and keys",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": "array"
        }
      },
      "required": [],
      "title": "kubeRBACProxy",
      "type": "object"
    },
    "kubeScheduler": {
      "additionalProperties": true,
      "description": "# Component scraping kube scheduler\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoints": {
          "description": "# If your kube scheduler is not deployed as a pod, specify IPs it can be found on\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "endpoints",
          "type": "array"
        },
        "service": {
          "additionalProperties": true,
          "description": "# If using kubeScheduler.endpoints only the port and targetPort are used\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "port": {
              "default": "null",
              "description": "# If null or unset, the value is determined dynamically based on target Kubernetes version due to change\n# of default port in Kubernetes 1.23.\n#",
              "required": [],
              "title": "port",
              "type": "null"
            },
            "targetPort": {
              "default": "null",
              "required": [],
              "title": "targetPort",
              "type": "null"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "https": {
              "default": "null",
              "description": "# Enable scraping kube-scheduler over https.\n# Requires proper certs (not self-signed) and delegated authentication/authorization checks.\n# If null or unset, the value is determined dynamically based on target Kubernetes version.\n#",
              "required": [],
              "title": "https",
              "type": "null"
            },
            "insecureSkipVerify": {
              "default": "null",
              "description": "# Skip TLS certificate validation when scraping",
              "required": [],
              "title": "insecureSkipVerify",
              "type": "null"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "jobLabel",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "port": {
              "default": "http-metrics",
              "description": "# port: Name of the port the metrics will be scraped from\n#",
              "required": [],
              "title": "port",
              "type": "string"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "selector": {
              "additionalProperties": true,
              "required": [],
              "title": "selector",
              "type": "object"
            },
            "serverName": {
              "default": "null",
              "description": "# Name of the server to use when validating TLS certificate",
              "required": [],
              "title": "serverName",
              "type": "null"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubeScheduler",
      "type": "object"
    },
    "kubeStateMetrics": {
      "additionalProperties": true,
      "description": "# Component scraping kube state metrics\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "kubeStateMetrics",
      "type": "object"
    },
    "kubeTargetVersionOverride": {
      "default": "",
      "description": "# Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.26.6\n#",
      "required": [],
      "title": "kubeTargetVersionOverride",
      "type": "string"
    },
    "kubeVersionOverride": {
      "default": "",
      "description": "# Allow kubeVersion to be overridden while creating the ingress\n#",
      "required": [],
      "title": "kubeVersionOverride",
      "type": "string"
    },
    "kubeconfig": {
      "additionalProperties": true,
      "description": "Enabling kubeconfig will pass the --kubeconfig argument to the container",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "secret": {
          "default": "",
          "description": "base64 encoded kube-config file",
          "required": [],
          "title": "secret",
          "type": "null"
        }
      },
      "required": [],
      "title": "kubeconfig",
      "type": "object"
    },
    "kubelet": {
      "additionalProperties": true,
      "description": "# Component scraping the kubelet and kubelet-hosted cAdvisor\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "namespace": {
          "default": "kube-system",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "attachMetadata": {
              "additionalProperties": true,
              "description": "# Attach metadata to discovered targets. Requires Prometheus v2.45 for endpoints created by the operator.\n#",
              "properties": {
                "node": {
                  "default": false,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "attachMetadata",
              "type": "object"
            },
            "cAdvisor": {
              "default": true,
              "description": "# Enable scraping /metrics/cadvisor from kubelet's service\n#",
              "required": [],
              "title": "cAdvisor",
              "type": "boolean"
            },
            "cAdvisorInterval": {
              "default": "10s",
              "description": "# Configure the scrape interval for cAdvisor. This is configured to the default Kubelet cAdvisor\n# minimum housekeeping interval in order to avoid missing samples. Note, this value is ignored\n# if kubelet.serviceMonitor.interval is not empty.",
              "required": [],
              "title": "cAdvisorInterval",
              "type": "string"
            },
            "cAdvisorMetricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "drop",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "regex": {
                    "default": ".+;",
                    "required": [],
                    "title": "regex",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "cAdvisorMetricRelabelings",
              "type": "array"
            },
            "cAdvisorRelabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#\n# metrics_path is required to match upstream rules and charts",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "replace",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  },
                  "targetLabel": {
                    "default": "metrics_path",
                    "required": [],
                    "title": "targetLabel",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "cAdvisorRelabelings",
              "type": "array"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "honorLabels": {
              "default": true,
              "description": "# If true, Prometheus use (respect) labels provided by exporter.\n#",
              "required": [],
              "title": "honorLabels",
              "type": "boolean"
            },
            "honorTimestamps": {
              "default": true,
              "description": "# If true, Prometheus ingests metrics with timestamp provided by exporter. If false, Prometheus ingests metrics with timestamp of scrape.\n#",
              "required": [],
              "title": "honorTimestamps",
              "type": "boolean"
            },
            "https": {
              "default": true,
              "description": "# Enable scraping the kubelet over https. For requirements to enable this see\n# https://github.com/prometheus-operator/prometheus-operator/issues/926\n#",
              "required": [],
              "title": "https",
              "type": "boolean"
            },
            "insecureSkipVerify": {
              "default": true,
              "description": "# Skip TLS certificate validation when scraping.\n# This is enabled by default because kubelet serving certificate deployed by kubeadm is by default self-signed\n# ref: https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/#kubelet-serving-certs\n#",
              "required": [],
              "title": "insecureSkipVerify",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "kubelet": {
              "default": true,
              "description": "# Enable scraping /metrics from kubelet's service",
              "required": [],
              "title": "kubelet",
              "type": "boolean"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "drop",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "regex": {
                    "default": "(csi_operations|storage_operation_duration)_seconds_bucket;(0.25|2.5|15|25|120|600)(\\.0)?",
                    "required": [],
                    "title": "regex",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "probes": {
              "default": true,
              "description": "# Enable scraping /metrics/probes from kubelet's service\n#",
              "required": [],
              "title": "probes",
              "type": "boolean"
            },
            "probesMetricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "probesMetricRelabelings",
              "type": "array"
            },
            "probesRelabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "replace",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  },
                  "targetLabel": {
                    "default": "metrics_path",
                    "required": [],
                    "title": "targetLabel",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "probesRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#\n# metrics_path is required to match upstream rules and charts",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "replace",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  },
                  "targetLabel": {
                    "default": "metrics_path",
                    "required": [],
                    "title": "targetLabel",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "resource": {
              "default": false,
              "description": "# Enable scraping /metrics/resource from kubelet's service\n# This is disabled by default because container metrics are already exposed by cAdvisor\n#",
              "required": [],
              "title": "resource",
              "type": "boolean"
            },
            "resourceInterval": {
              "default": "10s",
              "description": "# Configure the scrape interval for resource metrics. This is configured to the default Kubelet cAdvisor\n# minimum housekeeping interval in order to avoid missing samples. Note, this value is ignored\n# if kubelet.serviceMonitor.interval is not empty.",
              "required": [],
              "title": "resourceInterval",
              "type": "string"
            },
            "resourcePath": {
              "default": "/metrics/resource/v1alpha1",
              "description": "From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource",
              "required": [],
              "title": "resourcePath",
              "type": "string"
            },
            "resourceRelabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "action": {
                    "default": "replace",
                    "required": [],
                    "title": "action",
                    "type": "string"
                  },
                  "sourceLabels": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "title": "sourceLabels",
                    "type": "array"
                  },
                  "targetLabel": {
                    "default": "metrics_path",
                    "required": [],
                    "title": "targetLabel",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "resourceRelabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "targetLabels": {
              "description": "# defines the labels which are transferred from the associated Kubernetes Service object onto the ingested metrics.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "trackTimestampsStaleness": {
              "default": true,
              "description": "# If true, defines whether Prometheus tracks staleness of the metrics that have an explicit timestamp present in scraped data. Has no effect if `honorTimestamps` is false.\n# We recommend enabling this if you want the best possible accuracy for container_ metrics scraped from cadvisor.\n# For more details see: https://github.com/prometheus-community/helm-charts/pull/5063#issuecomment-2545374849",
              "required": [],
              "title": "trackTimestampsStaleness",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "kubelet",
      "type": "object"
    },
    "kubernetesServiceMonitors": {
      "additionalProperties": true,
      "description": "# Flag to disable all the kubernetes component scrapers\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "kubernetesServiceMonitors",
      "type": "object"
    },
    "kubewatch": {
      "additionalProperties": true,
      "description": "parameters for the robusta forwarder deployment",
      "properties": {
        "additional_env_vars": {
          "items": {
            "additionalProperties": true,
            "properties": {
              "name": {
                "default": "ADVANCED_FILTERS",
                "required": [],
                "title": "name",
                "type": "string"
              },
              "value": {
                "default": "true",
                "required": [],
                "title": "value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "additional_env_vars",
          "type": "array"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "config": {
          "additionalProperties": true,
          "properties": {
            "namespace": {
              "default": "",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "resource": {
              "additionalProperties": true,
              "properties": {
                "clusterrole": {
                  "default": true,
                  "required": [],
                  "title": "clusterrole",
                  "type": "boolean"
                },
                "clusterrolebinding": {
                  "default": true,
                  "required": [],
                  "title": "clusterrolebinding",
                  "type": "boolean"
                },
                "configmap": {
                  "default": true,
                  "required": [],
                  "title": "configmap",
                  "type": "boolean"
                },
                "coreevent": {
                  "default": false,
                  "required": [],
                  "title": "coreevent",
                  "type": "boolean"
                },
                "daemonset": {
                  "default": true,
                  "required": [],
                  "title": "daemonset",
                  "type": "boolean"
                },
                "deployment": {
                  "default": true,
                  "required": [],
                  "title": "deployment",
                  "type": "boolean"
                },
                "event": {
                  "default": true,
                  "required": [],
                  "title": "event",
                  "type": "boolean"
                },
                "hpa": {
                  "default": true,
                  "required": [],
                  "title": "hpa",
                  "type": "boolean"
                },
                "ingress": {
                  "default": true,
                  "required": [],
                  "title": "ingress",
                  "type": "boolean"
                },
                "job": {
                  "default": true,
                  "required": [],
                  "title": "job",
                  "type": "boolean"
                },
                "namespace": {
                  "default": true,
                  "required": [],
                  "title": "namespace",
                  "type": "boolean"
                },
                "node": {
                  "default": true,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                },
                "persistentvolume": {
                  "default": true,
                  "required": [],
                  "title": "persistentvolume",
                  "type": "boolean"
                },
                "pod": {
                  "default": true,
                  "required": [],
                  "title": "pod",
                  "type": "boolean"
                },
                "replicaset": {
                  "default": true,
                  "required": [],
                  "title": "replicaset",
                  "type": "boolean"
                },
                "replicationcontroller": {
                  "default": false,
                  "required": [],
                  "title": "replicationcontroller",
                  "type": "boolean"
                },
                "secret": {
                  "default": false,
                  "required": [],
                  "title": "secret",
                  "type": "boolean"
                },
                "serviceaccount": {
                  "default": true,
                  "required": [],
                  "title": "serviceaccount",
                  "type": "boolean"
                },
                "services": {
                  "default": true,
                  "required": [],
                  "title": "services",
                  "type": "boolean"
                },
                "statefulset": {
                  "default": true,
                  "required": [],
                  "title": "statefulset",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "customServiceAccount": {
          "default": "",
          "required": [],
          "title": "customServiceAccount",
          "type": "string"
        },
        "image": {
          "default": "~",
          "required": [],
          "title": "image",
          "type": "null"
        },
        "imageName": {
          "default": "kubewatch:v2.12.0",
          "required": [],
          "title": "imageName",
          "type": "string"
        },
        "imagePullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "imagePullPolicy",
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "nodeSelector": {
          "default": "~",
          "required": [],
          "title": "nodeSelector",
          "type": "null"
        },
        "pprof": {
          "default": "True",
          "required": [],
          "title": "pprof",
          "type": "boolean"
        },
        "priorityClassName": {
          "default": "",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "~",
                  "required": [],
                  "title": "cpu",
                  "type": "null"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "10m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "512Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "container": {
              "additionalProperties": true,
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "privileged": {
                  "default": false,
                  "required": [],
                  "title": "privileged",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": false,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1000,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "container",
              "type": "object"
            },
            "pod": {
              "additionalProperties": true,
              "required": [],
              "title": "pod",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Additional annotations for the ServiceAccount.",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "kubewatch",
      "type": "object"
    },
    "ldap": {
      "additionalProperties": true,
      "description": "# Grafana's LDAP configuration\n# Templated by the template in _helpers.tpl\n# NOTE: To enable the grafana.ini must be configured with auth.ldap.enabled\n# ref: http://docs.grafana.org/installation/configuration/#auth-ldap\n# ref: http://docs.grafana.org/installation/ldap/#configuration",
      "properties": {
        "config": {
          "default": "",
          "description": "`config` is the content of `ldap.toml` that will be stored in the created secret",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingSecret": {
          "default": "",
          "description": "`existingSecret` is a reference to an existing secret containing the ldap configuration\nfor Grafana in a key `ldap-toml`.",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        }
      },
      "required": [],
      "title": "ldap",
      "type": "object"
    },
    "lifecycleHooks": {
      "additionalProperties": true,
      "description": "# Container Lifecycle Hooks. Execute a specific bash command or make an HTTP request",
      "required": [],
      "title": "lifecycleHooks",
      "type": "object"
    },
    "lightActions": {
      "description": "safe actions to enable authenticated users to run",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "lightActions",
      "type": "array"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "description": "# Liveness probe\n#",
      "properties": {
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": 3000,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 1,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "livenessProbe",
      "type": "object"
    },
    "logLevel": {
      "default": "INFO",
      "required": [],
      "title": "logLevel",
      "type": "string"
    },
    "mcpAddons": {
      "additionalProperties": true,
      "description": "MCP (Model Context Protocol) Add-ons\nThese are optional MCP servers that can be deployed alongside Holmes",
      "properties": {
        "aws": {
          "additionalProperties": true,
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "config": {
              "additionalProperties": true,
              "properties": {
                "namespace": {
                  "default": "",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "readOnlyMode": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyMode",
                  "type": "boolean"
                },
                "region": {
                  "default": "us-east-1",
                  "required": [],
                  "title": "region",
                  "type": "string"
                }
              },
              "required": [],
              "title": "config",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "default": "aws-api-mcp-server:1.0.0",
              "required": [],
              "title": "image",
              "type": "string"
            },
            "llmInstructions": {
              "default": "",
              "description": "Custom LLM instructions (optional)\nLeave empty to use default comprehensive instructions\nSet to override the default investigation patterns and guidelines",
              "required": [],
              "title": "llmInstructions",
              "type": "string"
            },
            "networkPolicy": {
              "additionalProperties": true,
              "description": "Network policy to restrict access to MCP server",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "networkPolicy",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "registry": {
              "default": "us-central1-docker.pkg.dev/genuine-flight-317411/devel",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "resources": {
              "additionalProperties": true,
              "properties": {
                "limits": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "500m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "1Gi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": true,
                  "properties": {
                    "cpu": {
                      "default": "250m",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "512Mi",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "serviceAccount": {
              "additionalProperties": true,
              "description": "Service account configuration for IRSA (IAM Roles for Service Accounts)",
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "create": {
                  "default": true,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "aws-api-mcp-sa",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "serviceAccount",
              "type": "object"
            },
            "tolerations": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [],
          "title": "aws",
          "type": "object"
        }
      },
      "required": [],
      "title": "mcpAddons",
      "type": "object"
    },
    "mcp_servers": {
      "additionalProperties": true,
      "required": [],
      "title": "mcp_servers",
      "type": "object"
    },
    "metricAllowlist": {
      "description": "Comma-separated list of metrics to be exposed.\nThis list comprises of exact metric names and/or regex patterns.\nThe allowlist and denylist are mutually exclusive.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricAllowlist",
      "type": "array"
    },
    "metricAnnotationsAllowList": {
      "description": "Comma-separated list of Kubernetes annotations keys that will be used in the resource'\nlabels metric. By default the metric contains only name and namespace labels.\nTo include additional annotations provide a list of resource names in their plural form and Kubernetes\nannotation keys you would like to allow for them (Example: '=namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...)'.\nA single '*' can be provided per resource instead to allow any annotations, but that has\nsevere performance implications (Example: '=pods=[*]').",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricAnnotationsAllowList",
      "type": "array"
    },
    "metricDenylist": {
      "description": "Comma-separated list of metrics not to be enabled.\nThis list comprises of exact metric names and/or regex patterns.\nThe allowlist and denylist are mutually exclusive.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricDenylist",
      "type": "array"
    },
    "metricLabelsAllowlist": {
      "description": "Comma-separated list of additional Kubernetes label keys that will be used in the resource's\nlabels metric. By default the metric contains only name and namespace labels.\nTo include additional labels, provide a list of resource names in their plural form and Kubernetes\nlabel keys you would like to allow for them (Example: '=namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...)'.\nA single '*' can be provided per resource instead to allow any labels, but that has\nsevere performance implications (Example: '=pods=[*]').",
      "items": {
        "required": []
      },
      "required": [],
      "title": "metricLabelsAllowlist",
      "type": "array"
    },
    "modelList": {
      "additionalProperties": true,
      "required": [],
      "title": "modelList",
      "type": "object"
    },
    "monitorHelmReleases": {
      "default": true,
      "required": [],
      "title": "monitorHelmReleases",
      "type": "boolean"
    },
    "nameOverride": {
      "default": "",
      "description": "# Provide a name in place of kube-prometheus-stack for `app:` labels\n#",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "namedCustomPlaybooks": {
      "additionalProperties": true,
      "description": "load custom playbooks by name, which allows overriding them when using multiple Helm values files - learn more https://docs.robusta.dev/master/playbook-reference/defining-playbooks/playbook-basics.html#organizing-playbooks",
      "required": [],
      "title": "namedCustomPlaybooks",
      "type": "object"
    },
    "namespaceOverride": {
      "default": "",
      "description": "# Override the deployment namespace\n#",
      "required": [],
      "title": "namespaceOverride",
      "type": "string"
    },
    "namespaces": {
      "default": "",
      "description": "Comma-separated list(string) or yaml list of namespaces to be enabled for collecting resources. By default all namespaces are collected.",
      "required": [],
      "title": "namespaces",
      "type": "string"
    },
    "namespacesDenylist": {
      "default": "",
      "description": "Comma-separated list of namespaces not to be enabled. If namespaces and namespaces-denylist are both set,\nonly namespaces that are excluded in namespaces-denylist will be used.",
      "required": [],
      "title": "namespacesDenylist",
      "type": "string"
    },
    "networkPolicy": {
      "additionalProperties": true,
      "description": "Set a NetworkPolicy with:\ningress only on service.port or custom policy\nno egress permitted",
      "properties": {
        "allowExternal": {
          "default": true,
          "description": "#\n# an ingress network policy\n#",
          "required": [],
          "title": "allowExternal",
          "type": "boolean"
        },
        "egress": {
          "additionalProperties": true,
          "description": "#\n#\n#\n#\n#\n#",
          "properties": {
            "blockDNSResolution": {
              "default": false,
              "description": "#\n#\n# for all pods in the grafana namespace.",
              "required": [],
              "title": "blockDNSResolution",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "#\n# created allowing grafana to connect to external data sources from kubernetes cluster.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ports": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "ports",
              "type": "array"
            },
            "to": {
              "description": "# Add ports to the egress by specifying - port: \u003cport number\u003e\n# E.X.\n# - port: 80\n# - port: 443\n#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "to",
              "type": "array"
            }
          },
          "required": [],
          "title": "egress",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "#\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "explicitNamespacesSelector": {
          "additionalProperties": true,
          "description": "#\n# If explicitNamespacesSelector is missing or set to {}, only client Pods that are in the networkPolicy's namespace\n# and that match other criteria, the ones that have the good label, can reach the grafana.\n# But sometimes, we want the grafana to be accessible to clients from other namespaces, in this case, we can use this\n# LabelSelector to select these namespaces, note that the networkPolicy's namespace should also be explicitly added.\n#\n# Example:\n# explicitNamespacesSelector:\n#   matchLabels:\n#     role: frontend\n#   matchExpressions:\n#    - {key: role, operator: In, values: [frontend]}\n#",
          "required": [],
          "title": "explicitNamespacesSelector",
          "type": "object"
        },
        "flavor": {
          "default": "kubernetes",
          "description": "networkPolicy.flavor -- Flavor of the network policy to use.\nCan be:\n* kubernetes for networking.k8s.io/v1/NetworkPolicy\n* cilium     for cilium.io/v2/CiliumNetworkPolicy",
          "required": [],
          "title": "flavor",
          "type": "string"
        },
        "ingress": {
          "default": true,
          "description": "#\n# The Policy model to apply. When set to false, only pods with the correct\n# client label will have network access to  grafana port defined.\n# When true, grafana will accept connections from any source\n# (with the correct destination port).\n#",
          "required": [],
          "title": "ingress",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "networkPolicy",
      "type": "object"
    },
    "nodeExporter": {
      "additionalProperties": true,
      "description": "# Deploy node exporter as a daemonset to all nodes\n#",
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "forceDeployDashboards": {
          "default": false,
          "description": "# ForceDeployDashboard Create dashboard configmap even if nodeExporter deployment has been disabled\n#",
          "required": [],
          "title": "forceDeployDashboards",
          "type": "boolean"
        },
        "operatingSystems": {
          "additionalProperties": true,
          "properties": {
            "aix": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "aix",
              "type": "object"
            },
            "darwin": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "darwin",
              "type": "object"
            },
            "linux": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "linux",
              "type": "object"
            }
          },
          "required": [],
          "title": "operatingSystems",
          "type": "object"
        }
      },
      "required": [],
      "title": "nodeExporter",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "# Assign a nodeSelector if operating a hybrid cluster\n#",
      "properties": {
        "kubernetes.io/os": {
          "default": "windows",
          "required": [],
          "title": "kubernetes.io/os",
          "type": "string"
        }
      },
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "notifiers": {
      "additionalProperties": true,
      "description": "# Configure notifiers\n# ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels\n#",
      "required": [],
      "title": "notifiers",
      "type": "object"
    },
    "openshift": {
      "additionalProperties": true,
      "description": "custom parameters for OpenShift clusters",
      "properties": {
        "createPrivilegedScc": {
          "default": false,
          "required": [],
          "title": "createPrivilegedScc",
          "type": "boolean"
        },
        "createScc": {
          "default": false,
          "required": [],
          "title": "createScc",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "privilegedSccName": {
          "default": "null",
          "required": [],
          "title": "privilegedSccName",
          "type": "null"
        },
        "privilegedSccPriority": {
          "default": "null",
          "required": [],
          "title": "privilegedSccPriority",
          "type": "null"
        },
        "sccName": {
          "default": "null",
          "required": [],
          "title": "sccName",
          "type": "null"
        },
        "sccPriority": {
          "default": "null",
          "required": [],
          "title": "sccPriority",
          "type": "null"
        }
      },
      "required": [],
      "title": "openshift",
      "type": "object"
    },
    "persistence": {
      "additionalProperties": true,
      "description": "# Enable persistence using Persistent Volume Claims\n# ref: https://kubernetes.io/docs/user-guide/persistent-volumes/\n#",
      "properties": {
        "accessModes": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "accessModes",
          "type": "array"
        },
        "disableWarning": {
          "default": false,
          "required": [],
          "title": "disableWarning",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraPvcLabels": {
          "additionalProperties": true,
          "description": "selectorLabels: {}\n# Sub-directory of the PV to mount. Can be templated.\nsubPath: \"\"\n# Name of an existing PVC. Can be templated.\nexistingClaim:\n# Extra labels to apply to a PVC.",
          "required": [],
          "title": "extraPvcLabels",
          "type": "object"
        },
        "finalizers": {
          "description": "annotations: {}",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "finalizers",
          "type": "array"
        },
        "inMemory": {
          "additionalProperties": true,
          "description": "# If persistence is not enabled, this allows to mount the\n# local storage in-memory to improve performance\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "inMemory",
          "type": "object"
        },
        "lookupVolumeName": {
          "default": true,
          "description": "# If 'lookupVolumeName' is set to true, Helm will attempt to retrieve\n# the current value of 'spec.volumeName' and incorporate it into the template.",
          "required": [],
          "title": "lookupVolumeName",
          "type": "boolean"
        },
        "size": {
          "default": "10Gi",
          "required": [],
          "title": "size",
          "type": "string"
        },
        "type": {
          "default": "pvc",
          "required": [],
          "title": "type",
          "type": "string"
        },
        "volumeName": {
          "default": "",
          "description": "storageClassName: default\n# (Optional) Use this to bind the claim to an existing PersistentVolume (PV) by name.",
          "required": [],
          "title": "volumeName",
          "type": "string"
        }
      },
      "required": [],
      "title": "persistence",
      "type": "object"
    },
    "platformPlaybooks": {
      "items": {
        "additionalProperties": true,
        "properties": {
          "actions": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "cleanup_robusta_pods": {
                  "additionalProperties": true,
                  "properties": {
                    "hours_back": {
                      "default": 6,
                      "required": [],
                      "title": "hours_back",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "cleanup_robusta_pods",
                  "type": "object"
                },
                "create_event_finding": {
                  "additionalProperties": true,
                  "properties": {
                    "aggregation_key": {
                      "default": "PodEviction",
                      "required": [],
                      "title": "aggregation_key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "create_event_finding",
                  "type": "object"
                },
                "create_finding": {
                  "additionalProperties": true,
                  "properties": {
                    "aggregation_key": {
                      "default": "JobFailure",
                      "required": [],
                      "title": "aggregation_key",
                      "type": "string"
                    },
                    "title": {
                      "default": "Job $name on namespace $namespace failed",
                      "required": [],
                      "title": "title",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "create_finding",
                  "type": "object"
                },
                "customise_finding": {
                  "additionalProperties": true,
                  "properties": {
                    "aggregation_key": {
                      "default": "IngressChange",
                      "required": [],
                      "title": "aggregation_key",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "customise_finding",
                  "type": "object"
                },
                "event_resource_events": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "event_resource_events",
                  "type": "object"
                },
                "job_events_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_events_enricher",
                  "type": "object"
                },
                "job_info_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_info_enricher",
                  "type": "object"
                },
                "job_pod_enricher": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "job_pod_enricher",
                  "type": "object"
                },
                "krr_scan": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "krr_scan",
                  "type": "object"
                },
                "resource_babysitter": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "resource_babysitter",
                  "type": "object"
                },
                "resource_events_diff": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "resource_events_diff",
                  "type": "object"
                },
                "warning_events_report": {
                  "additionalProperties": true,
                  "properties": {
                    "warning_event_groups": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "aggregation_key": {
                            "default": "VolumeWarning",
                            "required": [],
                            "title": "aggregation_key",
                            "type": "string"
                          },
                          "matchers": {
                            "items": {
                              "required": [],
                              "type": "string"
                            },
                            "required": [],
                            "title": "matchers",
                            "type": "array"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "warning_event_groups",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "warning_events_report",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "actions",
            "type": "array"
          },
          "name": {
            "default": "RobustaMaintenance",
            "required": [],
            "title": "name",
            "type": "string"
          },
          "sinks": {
            "items": {
              "required": [],
              "type": "string"
            },
            "required": [],
            "title": "sinks",
            "type": "array"
          },
          "triggers": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "on_event_create": {
                  "additionalProperties": true,
                  "properties": {
                    "scope": {
                      "additionalProperties": true,
                      "properties": {
                        "include": {
                          "items": {
                            "additionalProperties": true,
                            "properties": {
                              "attributes": {
                                "items": {
                                  "required": [],
                                  "type": "string"
                                },
                                "required": [],
                                "title": "attributes",
                                "type": "array"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "required": [],
                          "title": "include",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "scope",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "on_event_create",
                  "type": "object"
                },
                "on_job_failure": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "on_job_failure",
                  "type": "object"
                },
                "on_kubernetes_resource_operation": {
                  "additionalProperties": true,
                  "properties": {
                    "resources": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "resources",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "on_kubernetes_resource_operation",
                  "type": "object"
                },
                "on_kubernetes_warning_event_create": {
                  "additionalProperties": true,
                  "properties": {
                    "exclude": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "exclude",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "on_kubernetes_warning_event_create",
                  "type": "object"
                },
                "on_schedule": {
                  "additionalProperties": true,
                  "properties": {
                    "cron_schedule_repeat": {
                      "additionalProperties": true,
                      "properties": {
                        "cron_expression": {
                          "default": "0 */3 * * *",
                          "required": [],
                          "title": "cron_expression",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "cron_schedule_repeat",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "on_schedule",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "triggers",
            "type": "array"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "platformPlaybooks",
      "type": "array"
    },
    "playbookRepos": {
      "additionalProperties": true,
      "description": "playbook repositories",
      "required": [],
      "title": "playbookRepos",
      "type": "object"
    },
    "playbooksPersistentVolume": {
      "default": false,
      "description": "Enable loading playbooks to a persistent volume",
      "required": [],
      "title": "playbooksPersistentVolume",
      "type": "boolean"
    },
    "playbooksPersistentVolumeSize": {
      "default": "4Gi",
      "required": [],
      "title": "playbooksPersistentVolumeSize",
      "type": "string"
    },
    "playbooksPersistentVolumeStorageClass": {
      "default": "",
      "description": "StorageClass(string) to use for the playbooks PVC. Leave empty to let\nthe cluster default apply.",
      "required": [],
      "title": "playbooksPersistentVolumeStorageClass",
      "type": "string"
    },
    "plugins": {
      "description": "# Pass the plugins you want installed as a list.\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "plugins",
      "type": "array"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to be added to windows exporter pods",
      "properties": {
        "cluster-autoscaler.kubernetes.io/safe-to-evict": {
          "default": "true",
          "description": "Fix for very slow GKE cluster upgrades",
          "required": [],
          "title": "cluster-autoscaler.kubernetes.io/safe-to-evict",
          "type": "string"
        }
      },
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podDisruptionBudget": {
      "additionalProperties": true,
      "description": "Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
      "required": [],
      "title": "podDisruptionBudget",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "Extra labels to be added to windows exporter pods",
      "properties": {
        "customLableA": {
          "required": [],
          "title": "customLableA",
          "type": "string"
        }
      },
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podPortName": {
      "default": "grafana",
      "description": "# Pod Labels\npodLabels: {}",
      "required": [],
      "title": "podPortName",
      "type": "string"
    },
    "podSecurityPolicy": {
      "additionalProperties": true,
      "description": "# Specify if a Pod Security Policy for kube-state-metrics must be created\n# Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n#",
      "properties": {
        "additionalVolumes": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalVolumes",
          "type": "array"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "podSecurityPolicy",
      "type": "object"
    },
    "postProcessingPrompt": {
      "default": "builtin://generic_post_processing.jinja2",
      "required": [],
      "title": "postProcessingPrompt",
      "type": "string"
    },
    "priorityBuiltinPlaybooks": {
      "description": "priority builtin playbooks for running before all playbooks",
      "items": {
        "additionalProperties": true,
        "properties": {
          "actions": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "name_silencer": {
                  "additionalProperties": true,
                  "properties": {
                    "names": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "names",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "name_silencer",
                  "type": "object"
                },
                "silence_alert": {
                  "additionalProperties": true,
                  "properties": {
                    "log_silence": {
                      "default": true,
                      "required": [],
                      "title": "log_silence",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "silence_alert",
                  "type": "object"
                },
                "target_down_dns_silencer": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "target_down_dns_silencer",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "actions",
            "type": "array"
          },
          "name": {
            "default": "TargetDownSilencer",
            "required": [],
            "title": "name",
            "type": "string"
          },
          "triggers": {
            "items": {
              "additionalProperties": true,
              "properties": {
                "on_prometheus_alert": {
                  "additionalProperties": true,
                  "properties": {
                    "alert_name": {
                      "default": "TargetDown",
                      "required": [],
                      "title": "alert_name",
                      "type": "string"
                    },
                    "k8s_providers": {
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "k8s_providers",
                      "type": "array"
                    },
                    "pod_name_prefix": {
                      "default": "do-node-agent",
                      "required": [],
                      "title": "pod_name_prefix",
                      "type": "string"
                    },
                    "status": {
                      "default": "all",
                      "required": [],
                      "title": "status",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "on_prometheus_alert",
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "required": [],
            "title": "triggers",
            "type": "array"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "priorityBuiltinPlaybooks",
      "type": "array"
    },
    "priorityClassName": {
      "default": "",
      "required": [],
      "title": "priorityClassName",
      "type": "string"
    },
    "prometheus": {
      "additionalProperties": true,
      "description": "# Deploy a Prometheus instance\n#",
      "properties": {
        "additionalPodMonitors": {
          "description": "# Fallback scrape protocol used by Prometheus for scraping metrics\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#monitoring.coreos.com/v1.ScrapeProtocol\n#\nfallbackScrapeProtocol: \"\"",
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalPodMonitors",
          "type": "array"
        },
        "additionalRulesForClusterRole": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalRulesForClusterRole",
          "type": "array"
        },
        "additionalServiceMonitors": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additionalServiceMonitors",
          "type": "array"
        },
        "agentMode": {
          "default": false,
          "description": "# Toggle prometheus into agent mode\n# Note many of features described below (e.g. rules, query, alerting, remote read, thanos) will not work in agent mode.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/prometheus-agent.md\n#",
          "required": [],
          "title": "agentMode",
          "type": "boolean"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "# Annotations for Prometheus\n#",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraSecret": {
          "additionalProperties": true,
          "description": "# ExtraSecret can be used to store various data in an extra secret\n# (use it for example to store hashed basic auth credentials)",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "# if not set, name will be auto generated\nname: \"\"",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "data": {
              "additionalProperties": true,
              "required": [],
              "title": "data",
              "type": "object"
            }
          },
          "required": [],
          "title": "extraSecret",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "# Hostnames.\n# Must be provided if Ingress is enabled.\n#\nhosts:\n  - prometheus.domain.com",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "paths": {
              "description": "# Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "tls": {
              "description": "# TLS configuration for Prometheus Ingress\n# Secret must be manually created in the namespace\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "ingressPerReplica": {
          "additionalProperties": true,
          "description": "# Configuration for creating an Ingress that will map to each Prometheus replica service\n# prometheus.servicePerReplica must be enabled\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hostDomain": {
              "default": "",
              "description": "# Domain that will be used for the per replica ingress",
              "required": [],
              "title": "hostDomain",
              "type": "string"
            },
            "hostPrefix": {
              "default": "",
              "description": "# Final form of the hostname for each per replica ingress is\n# {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n#\n# Prefix for the per replica ingress that will have `-$replicaNumber`\n# appended to the end",
              "required": [],
              "title": "hostPrefix",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "paths": {
              "description": "# Paths to use for ingress rules\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "tlsSecretName": {
              "default": "",
              "description": "# Secret name containing the TLS certificate for Prometheus per replica ingress\n# Secret must be manually created in the namespace",
              "required": [],
              "title": "tlsSecretName",
              "type": "string"
            },
            "tlsSecretPerReplica": {
              "additionalProperties": true,
              "description": "# Separated secret for each per replica Ingress. Can be used together with cert-manager\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "prefix": {
                  "default": "prometheus",
                  "description": "# Final form of the secret for each per replica ingress is\n# {{ tlsSecretPerReplica.prefix }}-{{ $replicaNumber }}\n#",
                  "required": [],
                  "title": "prefix",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tlsSecretPerReplica",
              "type": "object"
            }
          },
          "required": [],
          "title": "ingressPerReplica",
          "type": "object"
        },
        "monitor": {
          "additionalProperties": true,
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "apiVersion": {
              "default": "",
              "description": "# prometheus.monitor.apiVersion ApiVersion for the serviceMonitor Resource(defaults to \"monitoring.coreos.com/v1\")",
              "required": [],
              "title": "apiVersion",
              "type": "string"
            },
            "attachMetadata": {
              "additionalProperties": true,
              "description": "# Attach node metadata to discovered targets. Requires Prometheus v2.35.0 and above.\n#",
              "properties": {
                "node": {
                  "default": false,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "attachMetadata",
              "type": "object"
            },
            "basicAuth": {
              "additionalProperties": true,
              "required": [],
              "title": "basicAuth",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "http": {
              "additionalProperties": true,
              "description": "# kube-state-metrics endpoint",
              "properties": {
                "bearerTokenFile": {
                  "default": "",
                  "description": "# File to read bearer token for scraping targets",
                  "required": [],
                  "title": "bearerTokenFile",
                  "type": "string"
                },
                "bearerTokenSecret": {
                  "additionalProperties": true,
                  "description": "# Secret to mount to read bearer token for scraping targets. The secret needs\n# to be in the same namespace as the service monitor and accessible by the\n# Prometheus Operator",
                  "required": [],
                  "title": "bearerTokenSecret",
                  "type": "object"
                },
                "enableHttp2": {
                  "default": false,
                  "description": "# Whether to enable HTTP2 for servicemonitor",
                  "required": [],
                  "title": "enableHttp2",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scheme": {
                  "default": "",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "default": "",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "name: secret-name\nkey:  key-name",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "http",
              "type": "object"
            },
            "interval": {
              "default": "",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "metrics": {
              "additionalProperties": true,
              "description": "# selfMonitor endpoint",
              "properties": {
                "bearerTokenFile": {
                  "default": "",
                  "description": "# File to read bearer token for scraping targets",
                  "required": [],
                  "title": "bearerTokenFile",
                  "type": "string"
                },
                "bearerTokenSecret": {
                  "additionalProperties": true,
                  "description": "# Secret to mount to read bearer token for scraping targets. The secret needs\n# to be in the same namespace as the service monitor and accessible by the\n# Prometheus Operator",
                  "required": [],
                  "title": "bearerTokenSecret",
                  "type": "object"
                },
                "enableHttp2": {
                  "default": false,
                  "description": "# Whether to enable HTTP2 for servicemonitor",
                  "required": [],
                  "title": "enableHttp2",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "scheme": {
                  "default": "",
                  "required": [],
                  "title": "scheme",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "default": "",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "tlsConfig": {
                  "additionalProperties": true,
                  "description": "name: secret-name\nkey:  key-name",
                  "required": [],
                  "title": "tlsConfig",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "namespace": {
              "default": "",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "namespaceSelector": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "namespaceSelector",
              "type": "array"
            },
            "podTargetLabels": {
              "description": "List of pod labels to add to windows exporter metrics\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "podTargetLabels",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "10s",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "selectorOverride": {
              "additionalProperties": true,
              "description": "# Override serviceMonitor selector\n#",
              "required": [],
              "title": "selectorOverride",
              "type": "object"
            },
            "targetLabels": {
              "description": "List of target labels to add to node exporter metrics\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#servicemonitor",
              "items": {
                "required": []
              },
              "required": [],
              "title": "targetLabels",
              "type": "array"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "monitor",
          "type": "object"
        },
        "networkPolicy": {
          "additionalProperties": true,
          "description": "# Configure network policy for the prometheus",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "flavor": {
              "default": "kubernetes",
              "description": "# Flavor of the network policy to use.\n Can be:\n * kubernetes for networking.k8s.io/v1/NetworkPolicy\n * cilium     for cilium.io/v2/CiliumNetworkPolicy",
              "required": [],
              "title": "flavor",
              "type": "string"
            }
          },
          "required": [],
          "title": "networkPolicy",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "# Configure pod disruption budgets for Prometheus\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": "",
              "required": [],
              "title": "maxUnavailable",
              "type": "string"
            },
            "minAvailable": {
              "default": 1,
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            },
            "unhealthyPodEvictionPolicy": {
              "default": "AlwaysAllow",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podMonitor": {
          "additionalProperties": true,
          "description": "PodMonitor defines monitoring for a set of pods.\nref. https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#podmonitor\nUsing a PodMonitor may be preferred in some environments where there is very large number\nof Windows Exporter endpoints (1000+) behind a single service.\nThe PodMonitor is disabled by default. When switching from ServiceMonitor to PodMonitor,\nthe time series resulting from the configuration through PodMonitor may have different labels.\nFor instance, there will not be the service label any longer which might\naffect PromQL queries selecting that label.",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "Additional labels, e.g. setting a label for pod monitor selector as set in prometheus",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "apiVersion": {
              "default": "",
              "description": "apiVersion defaults to monitoring.coreos.com/v1.",
              "required": [],
              "title": "apiVersion",
              "type": "string"
            },
            "attachMetadata": {
              "additionalProperties": true,
              "description": "Attach node metadata to discovered targets. Requires Prometheus v2.35.0 and above.",
              "properties": {
                "node": {
                  "default": false,
                  "required": [],
                  "title": "node",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "attachMetadata",
              "type": "object"
            },
            "authorization": {
              "additionalProperties": true,
              "description": "Authorization section for this endpoint.\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#safeauthorization",
              "required": [],
              "title": "authorization",
              "type": "object"
            },
            "basicAuth": {
              "additionalProperties": true,
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication.\nMore info: https://prometheus.io/docs/operating/configuration/#endpoint",
              "required": [],
              "title": "basicAuth",
              "type": "object"
            },
            "bearerTokenSecret": {
              "additionalProperties": true,
              "description": "Secret to mount to read bearer token for scraping targets.\nThe secret needs to be in the same namespace as the pod monitor and accessible by the Prometheus Operator.\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#secretkeyselector-v1-core",
              "required": [],
              "title": "bearerTokenSecret",
              "type": "object"
            },
            "enableHttp2": {
              "default": "",
              "description": "Whether to enable HTTP2. Default false.",
              "required": [],
              "title": "enableHttp2",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "filterRunning": {
              "default": "",
              "description": "Drop pods that are not running. (Failed, Succeeded).\nEnabled by default. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase",
              "required": [],
              "title": "filterRunning",
              "type": "string"
            },
            "followRedirects": {
              "default": "",
              "description": "FollowRedirects configures whether scrape requests follow HTTP 3xx redirects. Default false.",
              "required": [],
              "title": "followRedirects",
              "type": "string"
            },
            "honorLabels": {
              "default": true,
              "description": "HonorLabels chooses the metric’s labels on collisions with target labels.",
              "required": [],
              "title": "honorLabels",
              "type": "boolean"
            },
            "honorTimestamps": {
              "default": true,
              "description": "HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.",
              "required": [],
              "title": "honorTimestamps",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "description": "Interval at which endpoints should be scraped. If not specified Prometheus’ global scrape interval is used.",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "jobLabel": {
              "default": "",
              "description": "The label to use to retrieve the job name from. Defaults to label app.kubernetes.io/name.",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "Per-scrape limit on number of labels that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "Per-scrape limit on length of labels name that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "Per-scrape limit on length of labels value that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "MetricRelabelConfigs to apply to samples before ingestion.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "namespace": {
              "default": "",
              "description": "Namespace in which to deploy the pod monitor. Defaults to the release namespace.",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "oauth2": {
              "additionalProperties": true,
              "description": "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#oauth2",
              "required": [],
              "title": "oauth2",
              "type": "object"
            },
            "params": {
              "additionalProperties": true,
              "description": "Optional HTTP URL parameters",
              "required": [],
              "title": "params",
              "type": "object"
            },
            "path": {
              "default": "/metrics",
              "description": "Path to scrape metrics at.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "podTargetLabels": {
              "description": " release: kube-prometheus-stack\nPodTargetLabels transfers labels of the Kubernetes Pod onto the target.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "podTargetLabels",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "ProxyURL eg http://proxyserver:2195. Directs scrapes through proxy to this endpoint.",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds\nrelabelings for a few standard Kubernetes fields. The original scrape job’s name\nis available via the __tmp_prometheus_job_name label.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "description": "Scheme/protocol to use for scraping.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "",
              "description": "Timeout after which the scrape is ended. If not specified, the Prometheus global scrape interval is used.",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "selectorOverride": {
              "additionalProperties": true,
              "description": "Override pod selector to select pod objects.",
              "required": [],
              "title": "selectorOverride",
              "type": "object"
            },
            "targetLimit": {
              "default": 0,
              "description": "TargetLimit defines a limit on the number of scraped targets that will be accepted.",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "TLS configuration to use when scraping the endpoint.",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "podMonitor",
          "type": "object"
        },
        "podSecurityPolicy": {
          "additionalProperties": true,
          "description": "# Configure additional options for default pod security policy for Prometheus\n# ref: https://kubernetes.io/docs/concepts/security/pod-security-policy/",
          "properties": {
            "allowedCapabilities": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "allowedCapabilities",
              "type": "array"
            },
            "allowedHostPaths": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "allowedHostPaths",
              "type": "array"
            },
            "volumes": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            }
          },
          "required": [],
          "title": "podSecurityPolicy",
          "type": "object"
        },
        "prometheusSpec": {
          "additionalProperties": true,
          "description": "# Settings affecting prometheusSpec\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#prometheusspec\n#",
          "properties": {
            "additionalAlertManagerConfigs": {
              "description": "# AdditionalAlertManagerConfigs allows for manual configuration of alertmanager jobs in the form as specified\n# in the official Prometheus documentation https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config.\n# AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator.\n# As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this\n# feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release\n# notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalAlertManagerConfigs",
              "type": "array"
            },
            "additionalAlertManagerConfigsSecret": {
              "additionalProperties": true,
              "description": "# If additional alertmanager configurations are already deployed in a single secret, or you want to manage\n# them separately from the helm deployment, you can use this section.\n# Expected values are the secret name and key\n# Cannot be used with additionalAlertManagerConfigs",
              "required": [],
              "title": "additionalAlertManagerConfigsSecret",
              "type": "object"
            },
            "additionalAlertRelabelConfigs": {
              "description": "# AdditionalAlertRelabelConfigs allows specifying Prometheus alert relabel configurations. Alert relabel configurations specified are appended\n# to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the\n# official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs.\n# As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the\n# possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel\n# configs are going to break Prometheus after the upgrade.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalAlertRelabelConfigs",
              "type": "array"
            },
            "additionalAlertRelabelConfigsSecret": {
              "additionalProperties": true,
              "description": "# If additional alert relabel configurations are already deployed in a single secret, or you want to manage\n# them separately from the helm deployment, you can use this section.\n# Expected values are the secret name and key\n# Cannot be used with additionalAlertRelabelConfigs",
              "required": [],
              "title": "additionalAlertRelabelConfigsSecret",
              "type": "object"
            },
            "additionalArgs": {
              "description": "# Allows setting additional arguments for the Prometheus container\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#monitoring.coreos.com/v1.Prometheus",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalArgs",
              "type": "array"
            },
            "additionalConfig": {
              "additionalProperties": true,
              "description": "# Additional configuration which is not covered by the properties above. (passed through tpl)",
              "required": [],
              "title": "additionalConfig",
              "type": "object"
            },
            "additionalConfigString": {
              "default": "",
              "description": "# Additional configuration which is not covered by the properties above.\n# Useful, if you need advanced templating inside alertmanagerSpec.\n# Otherwise, use prometheus.prometheusSpec.additionalConfig (passed through tpl)",
              "required": [],
              "title": "additionalConfigString",
              "type": "string"
            },
            "additionalPrometheusSecretsAnnotations": {
              "additionalProperties": true,
              "description": "# additionalPrometheusSecretsAnnotations allows to add annotations to the kubernetes secret. This can be useful\n# when deploying via spinnaker to disable versioning on the secret, strategy.spinnaker.io/versioned: 'false'",
              "required": [],
              "title": "additionalPrometheusSecretsAnnotations",
              "type": "object"
            },
            "additionalRemoteRead": {
              "description": "- url: http://remote1/read\n# additionalRemoteRead is appended to remoteRead",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalRemoteRead",
              "type": "array"
            },
            "additionalRemoteWrite": {
              "description": "- url: http://remote1/push\n# additionalRemoteWrite is appended to remoteWrite",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalRemoteWrite",
              "type": "array"
            },
            "additionalScrapeConfigs": {
              "description": "# AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations. Scrape configurations\n# are appended to the configurations generated by the Prometheus Operator. Job configurations must have the form\n# as specified in the official Prometheus documentation:\n# https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are\n# appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility\n# to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible\n# scrape configs are going to break Prometheus after the upgrade.\n# AdditionalScrapeConfigs can be defined as a list or as a templated string.\n#\n# The scrape configuration example below will find master nodes, provided they have the name .*mst.*, relabel the\n# port to 2379 and allow etcd scraping provided it is running on all Kubernetes master nodes\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalScrapeConfigs",
              "type": "array"
            },
            "additionalScrapeConfigsSecret": {
              "additionalProperties": true,
              "description": "# If additional scrape configurations are already deployed in a single secret file you can use this section.\n# Expected values are the secret name and key\n# Cannot be used with additionalScrapeConfigs",
              "required": [],
              "title": "additionalScrapeConfigsSecret",
              "type": "object"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "# Assign custom affinity rules to the prometheus instance\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "alertingEndpoints": {
              "description": "# Alertmanagers to which alerts will be sent\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#alertmanagerendpoints\n#\n# Default configuration will connect to the alertmanager deployed as part of this release\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "alertingEndpoints",
              "type": "array"
            },
            "allowOverlappingBlocks": {
              "default": false,
              "description": "# AllowOverlappingBlocks enables vertical compaction and vertical query merge in Prometheus. This is still experimental\n# in Prometheus so it may change in any upcoming release.",
              "required": [],
              "title": "allowOverlappingBlocks",
              "type": "boolean"
            },
            "apiserverConfig": {
              "additionalProperties": true,
              "description": "# APIServerConfig\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#apiserverconfig\n#",
              "required": [],
              "title": "apiserverConfig",
              "type": "object"
            },
            "arbitraryFSAccessThroughSMs": {
              "default": false,
              "description": "# ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files\n# on the file system of the Prometheus container e.g. bearer token files.",
              "required": [],
              "title": "arbitraryFSAccessThroughSMs",
              "type": "boolean"
            },
            "automountServiceAccountToken": {
              "default": true,
              "description": "# AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in the pod,\n# If the field isn’t set, the operator mounts the service account token by default.\n# Warning: be aware that by default, Prometheus requires the service account token for Kubernetes service discovery,\n# It is possible to use strategic merge patch to project the service account token into the ‘prometheus’ container.",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "configMaps": {
              "description": "# ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.\n# The ConfigMaps are mounted into /etc/prometheus/configmaps/.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "configMaps",
              "type": "array"
            },
            "containers": {
              "description": "# Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod.\n# if using proxy extraContainer update targetPort with proxy container port",
              "items": {
                "required": []
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "disableCompaction": {
              "default": false,
              "description": "# If true, pass --storage.tsdb.max-block-duration=2h to prometheus. This is already done if using Thanos\n#",
              "required": [],
              "title": "disableCompaction",
              "type": "boolean"
            },
            "enableAdminAPI": {
              "default": false,
              "description": "# EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.\n# This is disabled by default.\n# ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis\n#",
              "required": [],
              "title": "enableAdminAPI",
              "type": "boolean"
            },
            "enableFeatures": {
              "description": "EnableFeatures API enables access to Prometheus disabled features.\nref: https://prometheus.io/docs/prometheus/latest/feature_flags/",
              "items": {
                "required": []
              },
              "required": [],
              "title": "enableFeatures",
              "type": "array"
            },
            "enableRemoteWriteReceiver": {
              "default": false,
              "description": "# enable --web.enable-remote-write-receiver flag on prometheus-server\n#",
              "required": [],
              "title": "enableRemoteWriteReceiver",
              "type": "boolean"
            },
            "enforcedKeepDroppedTargets": {
              "default": 0,
              "description": "EnforcedKeepDroppedTargetsLimit defines on the number of targets dropped by relabeling that will be kept in memory.\nThe value overrides any spec.keepDroppedTargets set by ServiceMonitor, PodMonitor, Probe objects unless spec.keepDroppedTargets\nis greater than zero and less than spec.enforcedKeepDroppedTargets. 0 means no limit.",
              "required": [],
              "title": "enforcedKeepDroppedTargets",
              "type": "integer"
            },
            "enforcedLabelLimit": {
              "default": false,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. If more than this number of labels are present\n# post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions\n# 2.27.0 and newer.",
              "required": [],
              "title": "enforcedLabelLimit",
              "type": "boolean"
            },
            "enforcedLabelNameLengthLimit": {
              "default": false,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. If a label name is longer than this number\n# post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions\n# 2.27.0 and newer.",
              "required": [],
              "title": "enforcedLabelNameLengthLimit",
              "type": "boolean"
            },
            "enforcedLabelValueLengthLimit": {
              "default": false,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. If a label value is longer than this\n# number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus\n# versions 2.27.0 and newer.",
              "required": [],
              "title": "enforcedLabelValueLengthLimit",
              "type": "boolean"
            },
            "enforcedNamespaceLabel": {
              "default": "",
              "description": "# EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created.\n# The label value will always be the namespace of the object that is being created.\n# Disabled by default",
              "required": [],
              "title": "enforcedNamespaceLabel",
              "type": "string"
            },
            "enforcedSampleLimit": {
              "default": false,
              "description": "# EnforcedSampleLimit defines global limit on number of scraped samples that will be accepted. This overrides any SampleLimit\n# set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep overall\n# number of samples/series under the desired limit. Note that if SampleLimit is lower that value will be taken instead.",
              "required": [],
              "title": "enforcedSampleLimit",
              "type": "boolean"
            },
            "enforcedTargetLimit": {
              "default": false,
              "description": "# EnforcedTargetLimit defines a global limit on the number of scraped targets. This overrides any TargetLimit set\n# per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the TargetLimit to keep the overall\n# number of targets under the desired limit. Note that if TargetLimit is lower, that value will be taken instead, except\n# if either value is zero, in which case the non-zero value will be used. If both values are zero, no limit is enforced.",
              "required": [],
              "title": "enforcedTargetLimit",
              "type": "boolean"
            },
            "evaluationInterval": {
              "default": "",
              "description": "# Interval between consecutive evaluations.\n#",
              "required": [],
              "title": "evaluationInterval",
              "type": "string"
            },
            "excludedFromEnforcement": {
              "description": "# ExcludedFromEnforcement - list of object references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects\n# to be excluded from enforcing a namespace label of origin.\n# Works only if enforcedNamespaceLabel set to true.\n# See https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#objectreference",
              "items": {
                "required": []
              },
              "required": [],
              "title": "excludedFromEnforcement",
              "type": "array"
            },
            "exemplars": {
              "additionalProperties": true,
              "description": "# Exemplars related settings that are runtime reloadable.\n# It requires to enable the exemplar storage feature to be effective.",
              "required": [],
              "title": "exemplars",
              "type": "object"
            },
            "externalLabels": {
              "additionalProperties": true,
              "description": "# External labels to add to any time series or alerts when communicating with external systems\n#",
              "required": [],
              "title": "externalLabels",
              "type": "object"
            },
            "externalUrl": {
              "default": "",
              "description": "# External URL at which Prometheus will be reachable.\n#",
              "required": [],
              "title": "externalUrl",
              "type": "string"
            },
            "hostAliases": {
              "description": "HostAlias holds the mapping between IP and hostnames that will be injected\nas an entry in the pod’s hosts file.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hostAliases",
              "type": "array"
            },
            "hostNetwork": {
              "default": false,
              "description": "Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\nbecause control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\nUse the host's network namespace if true. Make sure to understand the security implications if you want to enable it.\nWhen hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.",
              "required": [],
              "title": "hostNetwork",
              "type": "boolean"
            },
            "ignoreNamespaceSelectors": {
              "default": false,
              "description": "# When ignoreNamespaceSelectors is set to true, namespaceSelector from all PodMonitor, ServiceMonitor and Probe objects will be ignored,\n# they will only discover targets within the namespace of the PodMonitor, ServiceMonitor and Probe object,\n# and servicemonitors will be installed in the default service namespace.\n# Defaults to false.",
              "required": [],
              "title": "ignoreNamespaceSelectors",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "description": "# Image of Prometheus.\n#",
              "properties": {
                "registry": {
                  "default": "quay.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "prometheus/prometheus",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "sha": {
                  "default": "",
                  "required": [],
                  "title": "sha",
                  "type": "string"
                },
                "tag": {
                  "default": "v3.3.1",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "initContainers": {
              "description": "# InitContainers allows injecting additional initContainers. This is meant to allow doing some changes\n# (permissions, dir tree) on mounted volumes before starting prometheus",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "listenLocal": {
              "default": false,
              "description": "# ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.\n#",
              "required": [],
              "title": "listenLocal",
              "type": "boolean"
            },
            "logFormat": {
              "default": "logfmt",
              "description": "# Log format for Prometheus be configured in\n#",
              "required": [],
              "title": "logFormat",
              "type": "string"
            },
            "logLevel": {
              "default": "info",
              "description": "# Log level for Prometheus be configured in\n#",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "maximumStartupDurationSeconds": {
              "default": 0,
              "description": "# Defines the maximum time that the `prometheus` container's startup probe\n# will wait before being considered failed. The startup probe will return\n# success after the WAL replay is complete. If set, the value should be\n# greater than 60 (seconds). Otherwise it will be equal to 900 seconds (15\n# minutes).",
              "required": [],
              "title": "maximumStartupDurationSeconds",
              "type": "integer"
            },
            "minReadySeconds": {
              "default": 0,
              "description": "# Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to\n# be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).",
              "required": [],
              "title": "minReadySeconds",
              "type": "integer"
            },
            "nameValidationScheme": {
              "default": "",
              "description": "# Specifies the validation scheme for metric and label names.\n# Supported values are: Legacy, UTF8",
              "required": [],
              "title": "nameValidationScheme",
              "type": "string"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "overrideHonorLabels": {
              "default": false,
              "description": "# OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in ServiceMonitor\n# or PodMonitor to true, this overrides honor_labels to false.",
              "required": [],
              "title": "overrideHonorLabels",
              "type": "boolean"
            },
            "overrideHonorTimestamps": {
              "default": false,
              "description": "# OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.",
              "required": [],
              "title": "overrideHonorTimestamps",
              "type": "boolean"
            },
            "paused": {
              "default": false,
              "description": "# If true, the Operator won't process any Prometheus configuration changes\n#",
              "required": [],
              "title": "paused",
              "type": "boolean"
            },
            "persistentVolumeClaimRetentionPolicy": {
              "additionalProperties": true,
              "description": "# Statefulset's persistent volume claim retention policy\n# whenDeleted and whenScaled determine whether\n# statefulset's PVCs are deleted (true) or retained (false)\n# on scaling down and deleting statefulset, respectively.\n# Requires Kubernetes version 1.27.0+.\n# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention",
              "required": [],
              "title": "persistentVolumeClaimRetentionPolicy",
              "type": "object"
            },
            "podAntiAffinity": {
              "default": "soft",
              "description": "# Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n# The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n# The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n# The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.",
              "required": [],
              "title": "podAntiAffinity",
              "type": "string"
            },
            "podAntiAffinityTopologyKey": {
              "default": "kubernetes.io/hostname",
              "description": "# If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n# This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n#",
              "required": [],
              "title": "podAntiAffinityTopologyKey",
              "type": "string"
            },
            "podMetadata": {
              "additionalProperties": true,
              "description": "# Standard object's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata\n# Metadata Labels and Annotations gets propagated to the prometheus pods.\n#",
              "required": [],
              "title": "podMetadata",
              "type": "object"
            },
            "podMonitorNamespaceSelector": {
              "additionalProperties": true,
              "description": "# If nil, select own namespace. Namespaces to be selected for PodMonitor discovery.",
              "required": [],
              "title": "podMonitorNamespaceSelector",
              "type": "object"
            },
            "podMonitorSelector": {
              "additionalProperties": true,
              "description": "# PodMonitors to be selected for target discovery.\n# If {}, select all PodMonitors\n#",
              "required": [],
              "title": "podMonitorSelector",
              "type": "object"
            },
            "podMonitorSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the podmonitors created\n#",
              "required": [],
              "title": "podMonitorSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "portName": {
              "default": "http-web",
              "description": "# PortName to use for Prometheus.\n#",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "# Priority class assigned to the Pods\n#",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "probeNamespaceSelector": {
              "additionalProperties": true,
              "description": "# If nil, select own namespace. Namespaces to be selected for Probe discovery.",
              "required": [],
              "title": "probeNamespaceSelector",
              "type": "object"
            },
            "probeSelector": {
              "additionalProperties": true,
              "description": "# Probes to be selected for target discovery.\n# If {}, select all Probes\n#",
              "required": [],
              "title": "probeSelector",
              "type": "object"
            },
            "probeSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for prometheus.prometheusSpec.probeSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the probes created\n#",
              "required": [],
              "title": "probeSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "prometheusExternalLabelName": {
              "default": "",
              "description": "# Name of the external label used to denote Prometheus instance name\n#",
              "required": [],
              "title": "prometheusExternalLabelName",
              "type": "string"
            },
            "prometheusExternalLabelNameClear": {
              "default": false,
              "description": "# If true, the Operator won't add the external label used to denote Prometheus instance name\n#",
              "required": [],
              "title": "prometheusExternalLabelNameClear",
              "type": "boolean"
            },
            "prometheusRulesExcludedFromEnforce": {
              "description": "# PrometheusRulesExcludedFromEnforce - list of prometheus rules to be excluded from enforcing of adding namespace labels.\n# Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair\n# Deprecated, use `excludedFromEnforcement` instead",
              "items": {
                "required": []
              },
              "required": [],
              "title": "prometheusRulesExcludedFromEnforce",
              "type": "array"
            },
            "query": {
              "additionalProperties": true,
              "description": "# QuerySpec defines the query command line flags when starting Prometheus.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#queryspec\n#",
              "required": [],
              "title": "query",
              "type": "object"
            },
            "queryLogFile": {
              "default": false,
              "description": "# QueryLogFile specifies the file to which PromQL queries are logged. Note that this location must be writable,\n# and can be persisted using an attached volume. Alternatively, the location can be set to a stdout location such\n# as /dev/stdout to log querie information to the default Prometheus log stream. This is only available in versions\n# of Prometheus \u003e= 2.16.0. For more details, see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)",
              "required": [],
              "title": "queryLogFile",
              "type": "boolean"
            },
            "remoteRead": {
              "description": "# The remote_read spec configuration for Prometheus.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#remotereadspec",
              "items": {
                "required": []
              },
              "required": [],
              "title": "remoteRead",
              "type": "array"
            },
            "remoteWrite": {
              "description": "# The remote_write spec configuration for Prometheus.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#remotewritespec",
              "items": {
                "required": []
              },
              "required": [],
              "title": "remoteWrite",
              "type": "array"
            },
            "remoteWriteDashboards": {
              "default": false,
              "description": "# Enable/Disable Grafana dashboards provisioning for prometheus remote write feature",
              "required": [],
              "title": "remoteWriteDashboards",
              "type": "boolean"
            },
            "replicaExternalLabelName": {
              "default": "",
              "description": "# Name of the external label used to denote replica name\n#",
              "required": [],
              "title": "replicaExternalLabelName",
              "type": "string"
            },
            "replicaExternalLabelNameClear": {
              "default": false,
              "description": "# If true, the Operator won't add the external label used to denote replica name\n#",
              "required": [],
              "title": "replicaExternalLabelNameClear",
              "type": "boolean"
            },
            "replicas": {
              "default": 1,
              "description": "# Number of replicas of each shard to deploy for a Prometheus deployment.\n# Number of replicas multiplied by shards is the total number of Pods created.\n#",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "description": "# Resource limits \u0026 requests\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "retention": {
              "default": "10d",
              "description": "# How long to retain metrics\n#",
              "required": [],
              "title": "retention",
              "type": "string"
            },
            "retentionSize": {
              "default": "",
              "description": "# Maximum size of metrics\n#",
              "required": [],
              "title": "retentionSize",
              "type": "string"
            },
            "routePrefix": {
              "default": "/",
              "description": "# Prefix used to register routes, overriding externalUrl route.\n# Useful for proxies that rewrite URLs.\n#",
              "required": [],
              "title": "routePrefix",
              "type": "string"
            },
            "ruleNamespaceSelector": {
              "additionalProperties": true,
              "description": "# If nil, select own namespace. Namespaces to be selected for PrometheusRules discovery.",
              "required": [],
              "title": "ruleNamespaceSelector",
              "type": "object"
            },
            "ruleSelector": {
              "additionalProperties": true,
              "description": "# PrometheusRules to be selected for target discovery.\n# If {}, select all PrometheusRules\n#",
              "required": [],
              "title": "ruleSelector",
              "type": "object"
            },
            "ruleSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for prometheus.prometheusSpec.ruleSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the PrometheusRule resources created\n#",
              "required": [],
              "title": "ruleSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "sampleLimit": {
              "default": false,
              "description": "Use to set global sample_limit for Prometheus. This act as default SampleLimit for ServiceMonitor or/and PodMonitor.\nSet to 'false' to disable global sample_limit. or set to a number to override the default value.",
              "required": [],
              "title": "sampleLimit",
              "type": "boolean"
            },
            "scrapeClasses": {
              "description": "# List of scrape classes to expose to scraping objects such as\n# PodMonitors, ServiceMonitors, Probes and ScrapeConfigs.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "scrapeClasses",
              "type": "array"
            },
            "scrapeConfigNamespaceSelector": {
              "additionalProperties": true,
              "description": "# If nil, select own namespace. Namespaces to be selected for scrapeConfig discovery.\n# If null, exclude the field from the prometheusSpec (keeping downward compatibility with older versions of CRD)",
              "required": [],
              "title": "scrapeConfigNamespaceSelector",
              "type": "object"
            },
            "scrapeConfigSelector": {
              "additionalProperties": true,
              "description": "# scrapeConfigs to be selected for target discovery.\n# If {}, select all scrapeConfigs\n#",
              "required": [],
              "title": "scrapeConfigSelector",
              "type": "object"
            },
            "scrapeConfigSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for prometheus.prometheusSpec.scrapeConfigSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the scrapeConfigs created\n#\n# If null and scrapeConfigSelector is also null, exclude field from the prometheusSpec\n# (keeping downward compatibility with older versions of CRD)\n#",
              "required": [],
              "title": "scrapeConfigSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "scrapeFailureLogFile": {
              "default": "",
              "description": "# File to which scrape failures are logged.\n# Reloading the configuration will reopen the file.\n# Defaults to empty (disabled)\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#monitoring.coreos.com/v1.Prometheus\n#",
              "required": [],
              "title": "scrapeFailureLogFile",
              "type": "string"
            },
            "scrapeInterval": {
              "default": "",
              "description": "# Interval between consecutive scrapes.\n# Defaults to 30s.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/release-0.44/pkg/prometheus/promcfg.go#L180-L183\n#",
              "required": [],
              "title": "scrapeInterval",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "",
              "description": "# Number of seconds to wait for target to respond before erroring\n#",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "secrets": {
              "description": "# Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods.\n# The Secrets are mounted into /etc/prometheus/secrets/. Secrets changes after initial creation of a Prometheus object are not\n# reflected in the running Pods. To change the secrets mounted into the Prometheus Pods, the object must be deleted and recreated\n# with the new list of secrets.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "secrets",
              "type": "array"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "# SecurityContext holds pod-level security attributes and common container settings.\n# This defaults to non root user with uid 1000 and gid 2000.\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md\n#",
              "properties": {
                "fsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1000,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "serviceDiscoveryRole": {
              "default": "",
              "description": "# Defines the service discovery role used to discover targets from ServiceMonitor objects and Alertmanager endpoints.\n# If set, the value should be either “Endpoints” or “EndpointSlice”. If unset, the operator assumes the “Endpoints” role.",
              "required": [],
              "title": "serviceDiscoveryRole",
              "type": "string"
            },
            "serviceMonitorNamespaceSelector": {
              "additionalProperties": true,
              "description": "# Namespaces to be selected for ServiceMonitor discovery.\n#",
              "required": [],
              "title": "serviceMonitorNamespaceSelector",
              "type": "object"
            },
            "serviceMonitorSelector": {
              "additionalProperties": true,
              "description": "# ServiceMonitors to be selected for target discovery.\n# If {}, select all ServiceMonitors\n#",
              "required": [],
              "title": "serviceMonitorSelector",
              "type": "object"
            },
            "serviceMonitorSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the servicemonitors created\n#",
              "required": [],
              "title": "serviceMonitorSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "serviceName": {
              "default": "",
              "description": "#",
              "required": [],
              "title": "serviceName",
              "type": "null"
            },
            "shards": {
              "default": 1,
              "description": "# EXPERIMENTAL: Number of shards to distribute targets onto.\n# Number of replicas multiplied by shards is the total number of Pods created.\n# Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved.\n# Increasing shards will not reshard data either but it will continue to be available from the same instances.\n# To query globally use Thanos sidecar and Thanos querier or remote write data to a central location.\n# Sharding is done on the content of the `__address__` target meta-label.\n#",
              "required": [],
              "title": "shards",
              "type": "integer"
            },
            "storageSpec": {
              "additionalProperties": true,
              "description": "# Prometheus StorageSpec for persistent data\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/storage.md\n#",
              "required": [],
              "title": "storageSpec",
              "type": "object"
            },
            "thanos": {
              "additionalProperties": true,
              "description": "# Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.\n# This section is experimental, it may change significantly without deprecation notice in any release.\n# This is experimental and may change significantly without backward compatibility in any release.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#thanosspec\n#",
              "required": [],
              "title": "thanos",
              "type": "object"
            },
            "tolerations": {
              "description": "# Tolerations for use with node taints\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "# If specified, the pod's topology spread constraints.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "tracingConfig": {
              "additionalProperties": true,
              "description": "# TracingConfig configures tracing in Prometheus.\n# See https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#prometheustracingconfig",
              "required": [],
              "title": "tracingConfig",
              "type": "object"
            },
            "tsdb": {
              "additionalProperties": true,
              "description": "# Allow out-of-order/out-of-bounds samples ingested into Prometheus for a specified duration\n# See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#tsdb",
              "properties": {
                "outOfOrderTimeWindow": {
                  "default": "0s",
                  "required": [],
                  "title": "outOfOrderTimeWindow",
                  "type": "string"
                }
              },
              "required": [],
              "title": "tsdb",
              "type": "object"
            },
            "version": {
              "default": "",
              "description": "# Sets version of Prometheus overriding the Prometheus version as derived\n# from the image tag. Useful in cases where the tag does not follow semver v2.",
              "required": [],
              "title": "version",
              "type": "string"
            },
            "volumeMounts": {
              "description": "Additional VolumeMounts on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumeMounts",
              "type": "array"
            },
            "volumes": {
              "description": "Additional volumes on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            },
            "walCompression": {
              "default": true,
              "description": "# Enable compression of the write-ahead log using Snappy.\n#",
              "required": [],
              "title": "walCompression",
              "type": "boolean"
            },
            "web": {
              "additionalProperties": true,
              "description": "# WebTLSConfig defines the TLS parameters for HTTPS\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#webtlsconfig",
              "required": [],
              "title": "web",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheusSpec",
          "type": "object"
        },
        "route": {
          "additionalProperties": true,
          "description": "BETA: Configure the gateway routes for the chart here.\nMore routes can be added by adding a dictionary key like the 'main' route.\nBe aware that this is an early beta of this feature,\nkube-prometheus-stack does not guarantee this works and is subject to change.\nBeing BETA this can/will change in the future without notice, do not use unless you want to take that risk\n[[ref]](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1alpha2)",
          "properties": {
            "main": {
              "additionalProperties": true,
              "properties": {
                "additionalRules": {
                  "description": "# Additional custom rules that can be added to the route",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalRules",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "apiVersion": {
                  "default": "gateway.networking.k8s.io/v1",
                  "description": "Set the route apiVersion, e.g. gateway.networking.k8s.io/v1 or gateway.networking.k8s.io/v1alpha2",
                  "required": [],
                  "title": "apiVersion",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enables or disables the route",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "filters": {
                  "description": "# Filters define the filters that are applied to requests that match this rule.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "filters",
                  "type": "array"
                },
                "hostnames": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "hostnames",
                  "type": "array"
                },
                "httpsRedirect": {
                  "default": false,
                  "description": "create http route for redirect (https://gateway-api.sigs.k8s.io/guides/http-redirect-rewrite/#http-to-https-redirects)\n# Take care that you only enable this on the http listener of the gateway to avoid an infinite redirect.\n# matches, filters and additionalRules will be ignored if this is set to true. Be are",
                  "required": [],
                  "title": "httpsRedirect",
                  "type": "boolean"
                },
                "kind": {
                  "default": "HTTPRoute",
                  "description": "Set the route kind\nValid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute",
                  "required": [],
                  "title": "kind",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "matches": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "path": {
                        "additionalProperties": true,
                        "properties": {
                          "type": {
                            "default": "PathPrefix",
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "default": "/",
                            "required": [],
                            "title": "value",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "path",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "matches",
                  "type": "array"
                },
                "parentRefs": {
                  "description": "- my-filter.example.com",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "parentRefs",
                  "type": "array"
                }
              },
              "required": [],
              "title": "main",
              "type": "object"
            }
          },
          "required": [],
          "title": "route",
          "type": "object"
        },
        "scrapeconfig": {
          "additionalProperties": true,
          "description": "# Create a scrapeConfig resource for scraping the kube-state-metrics service. Use this instead of serviceMonitor\n# to have more instances of kube-state-metrics safety.",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enableHttp2": {
              "default": false,
              "description": "# Whether to enable HTTP2 for scrapeconfig",
              "required": [],
              "title": "enableHttp2",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "# To avoid duplicate metrics, first disable the serviceMonitor creation via prometheus.monitor.enabled=false",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "honorLabels": {
              "default": true,
              "required": [],
              "title": "honorLabels",
              "type": "boolean"
            },
            "jobName": {
              "default": "kube-state-metrics",
              "required": [],
              "title": "jobName",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeInterval": {
              "default": "",
              "required": [],
              "title": "scrapeInterval",
              "type": "string"
            },
            "scrapeTimeout": {
              "default": "",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "staticConfigLabels": {
              "additionalProperties": true,
              "description": "# StaticConfigLabels defines the labels to be used in the Prometheus static configuration for scraping.",
              "required": [],
              "title": "staticConfigLabels",
              "type": "object"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "scrapeconfig",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Configuration for Prometheus service\n#",
          "properties": {
            "additionalPorts": {
              "description": "# Additional ports to open for Prometheus service\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPorts",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "",
              "required": [],
              "title": "clusterIP",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalIPs": {
              "description": "# List of IP addresses at which the Prometheus server service is available\n# Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "externalIPs",
              "type": "array"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "# Loadbalancer IP\n# Only use if service.type is \"LoadBalancer\"",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30090,
              "description": "# Port to expose on each node\n# Only used if service.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 9090,
              "description": "# Port for Prometheus Service to listen on\n#",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "publishNotReadyAddresses": {
              "default": false,
              "description": "# Consider that all endpoints are considered \"ready\" even if the Pods themselves are not\n# Ref: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec",
              "required": [],
              "title": "publishNotReadyAddresses",
              "type": "boolean"
            },
            "reloaderWebPort": {
              "default": 8080,
              "description": "# Port for Prometheus Reloader to listen on\n#",
              "required": [],
              "title": "reloaderWebPort",
              "type": "integer"
            },
            "sessionAffinity": {
              "default": "None",
              "description": "# If you want to make sure that connections from a particular client are passed to the same Pod each time\n# Accepts 'ClientIP' or 'None'\n#",
              "required": [],
              "title": "sessionAffinity",
              "type": "string"
            },
            "sessionAffinityConfig": {
              "additionalProperties": true,
              "description": "# If you want to modify the ClientIP sessionAffinity timeout\n# The value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\"\n#",
              "properties": {
                "clientIP": {
                  "additionalProperties": true,
                  "properties": {
                    "timeoutSeconds": {
                      "default": 10800,
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "clientIP",
                  "type": "object"
                }
              },
              "required": [],
              "title": "sessionAffinityConfig",
              "type": "object"
            },
            "targetPort": {
              "default": 9090,
              "description": "# To be used with a proxy extraContainer port",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "# Service account for Prometheuses to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "additionalEndpoints": {
              "description": "# Additional Endpoints\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalEndpoints",
              "type": "array"
            },
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# Metric relabel configs to apply to samples before ingestion.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "relabelings": {
              "description": "  relabel configs to apply to samples before ingestion.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "",
              "description": "# scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "selfMonitor": {
              "default": true,
              "description": "# If true, create a serviceMonitor for prometheus\n#",
              "required": [],
              "title": "selfMonitor",
              "type": "boolean"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "# tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.\n# Of type: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#tlsconfig",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "servicePerReplica": {
          "additionalProperties": true,
          "description": "# Configuration for creating a separate Service for each statefulset Prometheus replica\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "description": "# Service dual stack\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "loadBalancerSourceRanges": {
              "description": "# Loadbalancer source IP ranges\n# Only used if servicePerReplica.type is \"LoadBalancer\"",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30091,
              "description": "# Port to expose on each node\n# Only used if servicePerReplica.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 9090,
              "description": "# Port for Prometheus Service per replica to listen on\n#",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 9090,
              "description": "# To be used with a proxy extraContainer port",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "servicePerReplica",
          "type": "object"
        },
        "thanosIngress": {
          "additionalProperties": true,
          "description": "Ingress exposes thanos sidecar outside the cluster",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "# Hosts must be provided if Ingress is enabled.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodePort": {
              "default": 30901,
              "description": "# Port to expose on each node\n# Only used if service.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "paths": {
              "description": "# Paths to use for ingress rules\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "servicePort": {
              "default": 10901,
              "required": [],
              "title": "servicePort",
              "type": "integer"
            },
            "tls": {
              "description": "# TLS configuration for Thanos Ingress\n# Secret must be manually created in the namespace\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "thanosIngress",
          "type": "object"
        },
        "thanosService": {
          "additionalProperties": true,
          "description": "Service for thanos service discovery on sidecar\nEnable this can make Thanos Query can use\n`--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\nThanos sidecar on prometheus nodes\n(Please remember to change ${kube-prometheus-stack.fullname} and ${namespace}. Not just copy and paste!)",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "None",
              "description": "# ClusterIP to assign\nDefault is to make this a headless service (\"None\")",
              "required": [],
              "title": "clusterIP",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "httpNodePort": {
              "default": 30902,
              "required": [],
              "title": "httpNodePort",
              "type": "integer"
            },
            "httpPort": {
              "default": 10902,
              "required": [],
              "title": "httpPort",
              "type": "integer"
            },
            "httpPortName": {
              "default": "http",
              "description": "# HTTP port config (for metrics)",
              "required": [],
              "title": "httpPortName",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "description": "# Service dual stack\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodePort": {
              "default": 30901,
              "description": "# Port to expose on each node, if service type is NodePort\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 10901,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "grpc",
              "description": "# gRPC port config",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "targetHttpPort": {
              "default": "http",
              "required": [],
              "title": "targetHttpPort",
              "type": "string"
            },
            "targetPort": {
              "default": "grpc",
              "required": [],
              "title": "targetPort",
              "type": "string"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "thanosService",
          "type": "object"
        },
        "thanosServiceExternal": {
          "additionalProperties": true,
          "description": "Service for external access to sidecar\nEnabling this creates a service to expose thanos-sidecar outside the cluster.",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "httpNodePort": {
              "default": 30902,
              "required": [],
              "title": "httpNodePort",
              "type": "integer"
            },
            "httpPort": {
              "default": 10902,
              "required": [],
              "title": "httpPort",
              "type": "integer"
            },
            "httpPortName": {
              "default": "http",
              "description": "# HTTP port config (for metrics)",
              "required": [],
              "title": "httpPortName",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30901,
              "description": "# Port to expose on each node\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 10901,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "portName": {
              "default": "grpc",
              "description": "# gRPC port config",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "targetHttpPort": {
              "default": "http",
              "required": [],
              "title": "targetHttpPort",
              "type": "string"
            },
            "targetPort": {
              "default": "grpc",
              "required": [],
              "title": "targetPort",
              "type": "string"
            },
            "type": {
              "default": "LoadBalancer",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "thanosServiceExternal",
          "type": "object"
        },
        "thanosServiceMonitor": {
          "additionalProperties": true,
          "description": "ServiceMonitor to scrape Sidecar metrics\nNeeds thanosService to be enabled as well",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "interval": {
              "default": "",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "metricRelabelings": {
              "description": "# Metric relabel configs to apply to samples before ingestion.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "relabelings": {
              "description": "# relabel configs to apply to samples before ingestion.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "scheme": {
              "default": "",
              "description": "# scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "scrapeProtocols": {
              "description": "# Set default scrapeProtocols for Prometheus instances\n# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#scrapeprotocolstring-alias",
              "items": {
                "required": []
              },
              "required": [],
              "title": "scrapeProtocols",
              "type": "array"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "# tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.\n# Of type: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#tlsconfig",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "thanosServiceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "prometheus",
      "type": "object"
    },
    "prometheus-node-exporter": {
      "additionalProperties": true,
      "description": "# Configuration for prometheus-node-exporter subchart\n#",
      "properties": {
        "extraArgs": {
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "namespaceOverride": {
          "default": "",
          "required": [],
          "title": "namespaceOverride",
          "type": "string"
        },
        "podLabels": {
          "additionalProperties": true,
          "properties": {
            "jobLabel": {
              "default": "node-exporter",
              "description": "# Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards\n#",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "prometheus": {
          "additionalProperties": true,
          "properties": {
            "monitor": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "interval": {
                  "default": "",
                  "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "jobLabel": {
                  "default": "jobLabel",
                  "required": [],
                  "title": "jobLabel",
                  "type": "string"
                },
                "labelLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelLimit",
                  "type": "integer"
                },
                "labelNameLengthLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelNameLengthLimit",
                  "type": "integer"
                },
                "labelValueLengthLimit": {
                  "default": 0,
                  "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
                  "required": [],
                  "title": "labelValueLengthLimit",
                  "type": "integer"
                },
                "metricRelabelings": {
                  "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "proxyUrl": {
                  "default": "",
                  "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
                  "required": [],
                  "title": "proxyUrl",
                  "type": "string"
                },
                "relabelings": {
                  "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "sampleLimit": {
                  "default": 0,
                  "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
                  "required": [],
                  "title": "sampleLimit",
                  "type": "integer"
                },
                "scrapeTimeout": {
                  "default": "",
                  "description": "# How long until a scrape request times out. If not set, the Prometheus default scape timeout is used.\n#",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "targetLimit": {
                  "default": 0,
                  "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
                  "required": [],
                  "title": "targetLimit",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "monitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "rbac": {
          "additionalProperties": true,
          "properties": {
            "pspEnabled": {
              "default": false,
              "description": "# If true, create PSPs for node-exporter\n#",
              "required": [],
              "title": "pspEnabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        },
        "service": {
          "additionalProperties": true,
          "properties": {
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "properties": {
                "jobLabel": {
                  "default": "node-exporter",
                  "required": [],
                  "title": "jobLabel",
                  "type": "string"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "portName": {
              "default": "http-metrics",
              "required": [],
              "title": "portName",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        }
      },
      "required": [],
      "title": "prometheus-node-exporter",
      "type": "object"
    },
    "prometheus-windows-exporter": {
      "additionalProperties": true,
      "description": "# Configuration for prometheus-windows-exporter\n# ref: https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-windows-exporter\n#",
      "properties": {
        "config": {
          "default": "collectors:\n  enabled: '[defaults],memory,container'",
          "description": "# Enable memory and container metrics as required by the default Prometheus rules and Grafana dashboards\n#",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "# Set job label to 'windows-exporter' as required by the default Prometheus rules and Grafana dashboards\n#",
          "properties": {
            "jobLabel": {
              "default": "windows-exporter",
              "required": [],
              "title": "jobLabel",
              "type": "string"
            }
          },
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "prometheus": {
          "additionalProperties": true,
          "description": "# Enable ServiceMonitor and set Kubernetes label to use as a job label\n#",
          "properties": {
            "monitor": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "jobLabel": {
                  "default": "jobLabel",
                  "required": [],
                  "title": "jobLabel",
                  "type": "string"
                }
              },
              "required": [],
              "title": "monitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheus",
          "type": "object"
        },
        "releaseLabel": {
          "default": true,
          "required": [],
          "title": "releaseLabel",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "prometheus-windows-exporter",
      "type": "object"
    },
    "prometheusOperator": {
      "additionalProperties": true,
      "description": "# Manages Prometheus and Alertmanager components\n#",
      "properties": {
        "admissionWebhooks": {
          "additionalProperties": true,
          "description": "# Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted\n# rules from making their way into prometheus and potentially preventing the container from starting",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "# If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.\n# On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own\n# certs ahead of time if you wish.\n#",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "caBundle": {
              "default": "",
              "description": "# A PEM encoded CA bundle which will be used to validate the webhook's server certificate.\n# If unspecified, system trust roots on the apiserver are used.",
              "required": [],
              "title": "caBundle",
              "type": "string"
            },
            "certManager": {
              "additionalProperties": true,
              "description": "Use certmanager to generate webhook certs",
              "properties": {
                "admissionCert": {
                  "additionalProperties": true,
                  "properties": {
                    "duration": {
                      "default": "",
                      "required": [],
                      "title": "duration",
                      "type": "string"
                    },
                    "revisionHistoryLimit": {
                      "default": "",
                      "description": "Set the revisionHistoryLimit on the Certificate. See\nhttps://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec\nDefaults to nil.",
                      "required": [],
                      "title": "revisionHistoryLimit",
                      "type": "null"
                    }
                  },
                  "required": [],
                  "title": "admissionCert",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "rootCert": {
                  "additionalProperties": true,
                  "description": "self-signed root certificate",
                  "properties": {
                    "duration": {
                      "default": "",
                      "required": [],
                      "title": "duration",
                      "type": "string"
                    },
                    "revisionHistoryLimit": {
                      "default": "",
                      "description": "Set the revisionHistoryLimit on the Certificate. See\nhttps://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec\nDefaults to nil.",
                      "required": [],
                      "title": "revisionHistoryLimit",
                      "type": "null"
                    }
                  },
                  "required": [],
                  "title": "rootCert",
                  "type": "object"
                }
              },
              "required": [],
              "title": "certManager",
              "type": "object"
            },
            "createSecretJob": {
              "additionalProperties": true,
              "description": "Security context for create job container",
              "properties": {
                "securityContext": {
                  "additionalProperties": true,
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "additionalProperties": true,
                      "properties": {
                        "drop": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "drop",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "capabilities",
                      "type": "object"
                    },
                    "readOnlyRootFilesystem": {
                      "default": true,
                      "required": [],
                      "title": "readOnlyRootFilesystem",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                }
              },
              "required": [],
              "title": "createSecretJob",
              "type": "object"
            },
            "deployment": {
              "additionalProperties": true,
              "properties": {
                "affinity": {
                  "additionalProperties": true,
                  "description": "# Assign custom affinity rules to the prometheus operator\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
                  "required": [],
                  "title": "affinity",
                  "type": "object"
                },
                "annotations": {
                  "additionalProperties": true,
                  "description": "# Annotations to add to the operator webhook deployment\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "automountServiceAccountToken": {
                  "default": true,
                  "description": "# If false then the user will opt out of automounting API credentials.\n#",
                  "required": [],
                  "title": "automountServiceAccountToken",
                  "type": "boolean"
                },
                "containerSecurityContext": {
                  "additionalProperties": true,
                  "description": "# Container-specific security context configuration\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "additionalProperties": true,
                      "properties": {
                        "drop": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "drop",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "capabilities",
                      "type": "object"
                    },
                    "readOnlyRootFilesystem": {
                      "default": true,
                      "required": [],
                      "title": "readOnlyRootFilesystem",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "containerSecurityContext",
                  "type": "object"
                },
                "dnsConfig": {
                  "additionalProperties": true,
                  "description": "nodeAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    nodeSelectorTerms:\n    - matchExpressions:\n      - key: kubernetes.io/e2e-az-name\n        operator: In\n        values:\n        - e2e-az1\n        - e2e-az2",
                  "required": [],
                  "title": "dnsConfig",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hostNetwork": {
                  "default": false,
                  "description": "Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\nbecause control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n#",
                  "required": [],
                  "title": "hostNetwork",
                  "type": "boolean"
                },
                "image": {
                  "additionalProperties": true,
                  "description": "# Prometheus-operator webhook image\n#",
                  "properties": {
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "registry": {
                      "default": "quay.io",
                      "required": [],
                      "title": "registry",
                      "type": "string"
                    },
                    "repository": {
                      "default": "prometheus-operator/admission-webhook",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "sha": {
                      "default": "",
                      "required": [],
                      "title": "sha",
                      "type": "string"
                    },
                    "tag": {
                      "default": "",
                      "description": "if not set appVersion field from Chart.yaml is used",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "image",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": true,
                  "description": "## Labels to add to the operator webhook deployment\n##",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "livenessProbe": {
                  "additionalProperties": true,
                  "description": "# Liveness probe\n#",
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "failureThreshold": {
                      "default": 3,
                      "required": [],
                      "title": "failureThreshold",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "default": 30,
                      "required": [],
                      "title": "initialDelaySeconds",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "default": 10,
                      "required": [],
                      "title": "periodSeconds",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "default": 1,
                      "required": [],
                      "title": "successThreshold",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "default": 1,
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "livenessProbe",
                  "type": "object"
                },
                "nodeSelector": {
                  "additionalProperties": true,
                  "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
                  "required": [],
                  "title": "nodeSelector",
                  "type": "object"
                },
                "podAnnotations": {
                  "additionalProperties": true,
                  "description": "# Annotations to add to the operator webhook pod\n#",
                  "required": [],
                  "title": "podAnnotations",
                  "type": "object"
                },
                "podDisruptionBudget": {
                  "additionalProperties": true,
                  "description": "Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "maxUnavailable": {
                      "default": "",
                      "required": [],
                      "title": "maxUnavailable",
                      "type": "string"
                    },
                    "minAvailable": {
                      "default": 1,
                      "required": [],
                      "title": "minAvailable",
                      "type": "integer"
                    },
                    "unhealthyPodEvictionPolicy": {
                      "default": "AlwaysAllow",
                      "required": [],
                      "title": "unhealthyPodEvictionPolicy",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "podDisruptionBudget",
                  "type": "object"
                },
                "podLabels": {
                  "additionalProperties": true,
                  "description": "# Labels to add to the operator webhook pod\n#",
                  "required": [],
                  "title": "podLabels",
                  "type": "object"
                },
                "readinessProbe": {
                  "additionalProperties": true,
                  "description": "# Readiness probe\n#",
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "failureThreshold": {
                      "default": 3,
                      "required": [],
                      "title": "failureThreshold",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "default": 5,
                      "required": [],
                      "title": "initialDelaySeconds",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "default": 10,
                      "required": [],
                      "title": "periodSeconds",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "default": 1,
                      "required": [],
                      "title": "successThreshold",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "default": 1,
                      "required": [],
                      "title": "timeoutSeconds",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "readinessProbe",
                  "type": "object"
                },
                "replicas": {
                  "default": 1,
                  "description": "# Number of replicas\n#",
                  "required": [],
                  "title": "replicas",
                  "type": "integer"
                },
                "resources": {
                  "additionalProperties": true,
                  "description": "# Resource limits \u0026 requests\n#",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "revisionHistoryLimit": {
                  "default": 10,
                  "description": "# Number of old replicasets to retain ##\n# The default value is 10, 0 will garbage-collect old replicasets ##",
                  "required": [],
                  "title": "revisionHistoryLimit",
                  "type": "integer"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "nameservers:\n  - 1.2.3.4\nsearches:\n  - ns1.svc.cluster-domain.example\n  - my.dns.search.suffix\noptions:\n  - name: ndots\n    value: \"2\"\n  - name: edns0",
                  "properties": {
                    "fsGroup": {
                      "default": 65534,
                      "required": [],
                      "title": "fsGroup",
                      "type": "integer"
                    },
                    "runAsGroup": {
                      "default": 65534,
                      "required": [],
                      "title": "runAsGroup",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "default": true,
                      "required": [],
                      "title": "runAsNonRoot",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "default": 65534,
                      "required": [],
                      "title": "runAsUser",
                      "type": "integer"
                    },
                    "seccompProfile": {
                      "additionalProperties": true,
                      "properties": {
                        "type": {
                          "default": "RuntimeDefault",
                          "required": [],
                          "title": "type",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "seccompProfile",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                },
                "service": {
                  "additionalProperties": true,
                  "description": "# Configuration for Prometheus operator Webhook service\n#",
                  "properties": {
                    "additionalPorts": {
                      "description": "# Additional ports to open for Prometheus operator Webhook service\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services\n#",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "additionalPorts",
                      "type": "array"
                    },
                    "annotations": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "clusterIP": {
                      "default": "",
                      "required": [],
                      "title": "clusterIP",
                      "type": "string"
                    },
                    "externalIPs": {
                      "description": "# List of IP addresses at which the Prometheus server service is available\n# Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n#",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "externalIPs",
                      "type": "array"
                    },
                    "externalTrafficPolicy": {
                      "default": "Cluster",
                      "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
                      "required": [],
                      "title": "externalTrafficPolicy",
                      "type": "string"
                    },
                    "ipDualStack": {
                      "additionalProperties": true,
                      "properties": {
                        "enabled": {
                          "default": false,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        },
                        "ipFamilies": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "ipFamilies",
                          "type": "array"
                        },
                        "ipFamilyPolicy": {
                          "default": "PreferDualStack",
                          "required": [],
                          "title": "ipFamilyPolicy",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "ipDualStack",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "labels",
                      "type": "object"
                    },
                    "loadBalancerIP": {
                      "default": "",
                      "description": "# Loadbalancer IP\n# Only use if service.type is \"LoadBalancer\"\n#",
                      "required": [],
                      "title": "loadBalancerIP",
                      "type": "string"
                    },
                    "loadBalancerSourceRanges": {
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "loadBalancerSourceRanges",
                      "type": "array"
                    },
                    "nodePort": {
                      "default": 31080,
                      "description": "# Port to expose on each node\n# Only used if service.type is 'NodePort'\n#",
                      "required": [],
                      "title": "nodePort",
                      "type": "integer"
                    },
                    "nodePortTls": {
                      "default": 31443,
                      "required": [],
                      "title": "nodePortTls",
                      "type": "integer"
                    },
                    "type": {
                      "default": "ClusterIP",
                      "description": "# Service type\n# NodePort, ClusterIP, LoadBalancer\n#",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "service",
                  "type": "object"
                },
                "serviceAccount": {
                  "additionalProperties": true,
                  "description": "# Service account for Prometheus Operator Webhook to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
                  "properties": {
                    "annotations": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "automountServiceAccountToken": {
                      "default": false,
                      "required": [],
                      "title": "automountServiceAccountToken",
                      "type": "boolean"
                    },
                    "create": {
                      "default": true,
                      "required": [],
                      "title": "create",
                      "type": "boolean"
                    },
                    "name": {
                      "default": "",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "serviceAccount",
                  "type": "object"
                },
                "strategy": {
                  "additionalProperties": true,
                  "description": "# Strategy of the deployment\n#",
                  "required": [],
                  "title": "strategy",
                  "type": "object"
                },
                "tls": {
                  "additionalProperties": true,
                  "description": "# Prometheus-Operator v0.39.0 and later support TLS natively.\n#",
                  "properties": {
                    "enabled": {
                      "default": true,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "internalPort": {
                      "default": 10250,
                      "description": "The default webhook port is 10250 in order to work out-of-the-box in GKE private clusters and avoid adding firewall rules.",
                      "required": [],
                      "title": "internalPort",
                      "type": "integer"
                    },
                    "tlsMinVersion": {
                      "default": "VersionTLS13",
                      "description": "Value must match version names from https://pkg.go.dev/crypto/tls#pkg-constants",
                      "required": [],
                      "title": "tlsMinVersion",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "tls",
                  "type": "object"
                },
                "tolerations": {
                  "description": "# Tolerations for use with node taints\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tolerations",
                  "type": "array"
                }
              },
              "required": [],
              "title": "deployment",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "failurePolicy": {
              "default": "",
              "description": "# Valid values: Fail, Ignore, IgnoreOnInstallOnly\n# IgnoreOnInstallOnly - If Release.IsInstall returns \"true\", set \"Ignore\" otherwise \"Fail\"",
              "required": [],
              "title": "failurePolicy",
              "type": "string"
            },
            "mutatingWebhookConfiguration": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "mutatingWebhookConfiguration",
              "type": "object"
            },
            "namespaceSelector": {
              "additionalProperties": true,
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "objectSelector": {
              "additionalProperties": true,
              "required": [],
              "title": "objectSelector",
              "type": "object"
            },
            "patch": {
              "additionalProperties": true,
              "properties": {
                "affinity": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "affinity",
                  "type": "object"
                },
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "image": {
                  "additionalProperties": true,
                  "properties": {
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "registry": {
                      "default": "registry.k8s.io",
                      "required": [],
                      "title": "registry",
                      "type": "string"
                    },
                    "repository": {
                      "default": "ingress-nginx/kube-webhook-certgen",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "sha": {
                      "default": "",
                      "required": [],
                      "title": "sha",
                      "type": "string"
                    },
                    "tag": {
                      "default": "v1.5.3",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "image",
                  "type": "object"
                },
                "nodeSelector": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "nodeSelector",
                  "type": "object"
                },
                "podAnnotations": {
                  "additionalProperties": true,
                  "description": "  argocd.argoproj.io/hook: PreSync\n  argocd.argoproj.io/hook-delete-policy: HookSucceeded",
                  "required": [],
                  "title": "podAnnotations",
                  "type": "object"
                },
                "priorityClassName": {
                  "default": "",
                  "description": "# Provide a priority class name to the webhook patching job\n#",
                  "required": [],
                  "title": "priorityClassName",
                  "type": "string"
                },
                "resources": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "securityContext": {
                  "additionalProperties": true,
                  "description": "# SecurityContext holds pod-level security attributes and common container settings.\n# This defaults to non root user with uid 2000 and gid 2000. *v1.PodSecurityContext  false\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
                  "properties": {
                    "runAsGroup": {
                      "default": 2000,
                      "required": [],
                      "title": "runAsGroup",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "default": true,
                      "required": [],
                      "title": "runAsNonRoot",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "default": 2000,
                      "required": [],
                      "title": "runAsUser",
                      "type": "integer"
                    },
                    "seccompProfile": {
                      "additionalProperties": true,
                      "properties": {
                        "type": {
                          "default": "RuntimeDefault",
                          "required": [],
                          "title": "type",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "seccompProfile",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                },
                "serviceAccount": {
                  "additionalProperties": true,
                  "description": "# Service account for Prometheus Operator Webhook Job Patch to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
                  "properties": {
                    "annotations": {
                      "additionalProperties": true,
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "automountServiceAccountToken": {
                      "default": true,
                      "required": [],
                      "title": "automountServiceAccountToken",
                      "type": "boolean"
                    },
                    "create": {
                      "default": true,
                      "required": [],
                      "title": "create",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "serviceAccount",
                  "type": "object"
                },
                "tolerations": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tolerations",
                  "type": "array"
                },
                "ttlSecondsAfterFinished": {
                  "default": 60,
                  "required": [],
                  "title": "ttlSecondsAfterFinished",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "patch",
              "type": "object"
            },
            "patchWebhookJob": {
              "additionalProperties": true,
              "properties": {
                "securityContext": {
                  "additionalProperties": true,
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "required": [],
                      "title": "allowPrivilegeEscalation",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "additionalProperties": true,
                      "properties": {
                        "drop": {
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "title": "drop",
                          "type": "array"
                        }
                      },
                      "required": [],
                      "title": "capabilities",
                      "type": "object"
                    },
                    "readOnlyRootFilesystem": {
                      "default": true,
                      "required": [],
                      "title": "readOnlyRootFilesystem",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": "object"
                }
              },
              "required": [],
              "title": "patchWebhookJob",
              "type": "object"
            },
            "timeoutSeconds": {
              "default": 10,
              "description": "# The default timeoutSeconds is 10 and the maximum value is 30.",
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            },
            "validatingWebhookConfiguration": {
              "additionalProperties": true,
              "properties": {
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                }
              },
              "required": [],
              "title": "validatingWebhookConfiguration",
              "type": "object"
            }
          },
          "required": [],
          "title": "admissionWebhooks",
          "type": "object"
        },
        "affinity": {
          "additionalProperties": true,
          "description": "# Assign custom affinity rules to the prometheus operator\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "alertmanagerConfigNamespaces": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "alertmanagerConfigNamespaces",
          "type": "array"
        },
        "alertmanagerInstanceNamespaces": {
          "description": "# Filter namespaces to look for prometheus-operator custom resources\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "alertmanagerInstanceNamespaces",
          "type": "array"
        },
        "alertmanagerInstanceSelector": {
          "default": "",
          "description": "# Set a Label Selector to filter watched alertmanager\n#",
          "required": [],
          "title": "alertmanagerInstanceSelector",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": true,
          "description": "# Annotations to add to the operator deployment\n#",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automountServiceAccountToken": {
          "default": true,
          "description": "# If false then the user will opt out of automounting API credentials.\n#",
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "# Container-specific security context configuration\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "denyNamespaces": {
          "description": "# Namespaces not to scope the interaction of the Prometheus Operator (deny list).\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "denyNamespaces",
          "type": "array"
        },
        "dnsConfig": {
          "additionalProperties": true,
          "description": "nodeAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    nodeSelectorTerms:\n    - matchExpressions:\n      - key: kubernetes.io/e2e-az-name\n        operator: In\n        values:\n        - e2e-az1\n        - e2e-az2",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": true,
          "description": "# Operator Environment\n#  env:\n#    VARIABLE: value",
          "properties": {
            "GOGC": {
              "default": "30",
              "required": [],
              "title": "GOGC",
              "type": "string"
            }
          },
          "required": [],
          "title": "env",
          "type": "object"
        },
        "extraArgs": {
          "description": "# Extra arguments to pass to prometheusOperator\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/operator.md",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraArgs",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "# Additional volume mounts\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "# Additional volumes\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "fullnameOverride": {
          "default": "",
          "description": "# Use '{{ template \"kube-prometheus-stack.fullname\" . }}-operator' by default",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "hostNetwork": {
          "default": false,
          "description": "Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\nbecause control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n#",
          "required": [],
          "title": "hostNetwork",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "# Prometheus-operator image\n#",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "quay.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "prometheus-operator/prometheus-operator",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "",
              "description": "if not set appVersion field from Chart.yaml is used",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "kubeletEndpointSliceEnabled": {
          "default": false,
          "description": "# Create EndpointSlice objects for kubelet targets.",
          "required": [],
          "title": "kubeletEndpointSliceEnabled",
          "type": "boolean"
        },
        "kubeletEndpointsEnabled": {
          "default": true,
          "description": "# Create Endpoints objects for kubelet targets.",
          "required": [],
          "title": "kubeletEndpointsEnabled",
          "type": "boolean"
        },
        "kubeletService": {
          "additionalProperties": true,
          "description": "# Decrease log verbosity to errors only\nlogLevel: error",
          "properties": {
            "enabled": {
              "default": true,
              "description": "# If true, the operator will create and maintain a service for scraping kubelets\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/helm/prometheus-operator/README.md\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "# Use '{{ template \"kube-prometheus-stack.fullname\" . }}-kubelet' by default",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "namespace": {
              "default": "kube-system",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "selector": {
              "default": "",
              "required": [],
              "title": "selector",
              "type": "string"
            }
          },
          "required": [],
          "title": "kubeletService",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "## Labels to add to the operator deployment\n##",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "lifecycle": {
          "additionalProperties": true,
          "description": "Specify lifecycle hooks for the  controller",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "# Liveness probe for the prometheusOperator deployment\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": 3,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 0,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 10,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "required": [],
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "namespaces": {
          "additionalProperties": true,
          "description": "# Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list).\n# This is mutually exclusive with denyNamespaces. Setting this to an empty object will disable the configuration\n#",
          "required": [],
          "title": "namespaces",
          "type": "object"
        },
        "networkPolicy": {
          "additionalProperties": true,
          "description": "# The clusterDomain value will be added to the cluster.peer option of the alertmanager.\n# Without this specified option cluster.peer will have value alertmanager-monitoring-alertmanager-0.alertmanager-operated:9094 (default value)\n# With this specified option cluster.peer will have value alertmanager-monitoring-alertmanager-0.alertmanager-operated.namespace.svc.cluster-domain:9094\n#\nclusterDomain: \"cluster.local\"",
          "properties": {
            "enabled": {
              "default": false,
              "description": "# Enable creation of NetworkPolicy resources.\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "flavor": {
              "default": "kubernetes",
              "description": "# Flavor of the network policy to use.\n Can be:\n * kubernetes for networking.k8s.io/v1/NetworkPolicy\n * cilium     for cilium.io/v2/CiliumNetworkPolicy",
              "required": [],
              "title": "flavor",
              "type": "string"
            }
          },
          "required": [],
          "title": "networkPolicy",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "# Annotations to add to the operator pod\n#",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "# Assign a podDisruptionBudget to the operator\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": "",
              "required": [],
              "title": "maxUnavailable",
              "type": "string"
            },
            "minAvailable": {
              "default": 1,
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            },
            "unhealthyPodEvictionPolicy": {
              "default": "AlwaysAllow",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "# Labels to add to the operator pod\n#",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "prometheusConfigReloader": {
          "additionalProperties": true,
          "description": "# Prometheus-config-reloader\n#",
          "properties": {
            "enableProbe": {
              "default": false,
              "description": "add prometheus config reloader liveness and readiness probe. Default: false",
              "required": [],
              "title": "enableProbe",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "properties": {
                "registry": {
                  "default": "quay.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "prometheus-operator/prometheus-config-reloader",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "sha": {
                  "default": "",
                  "required": [],
                  "title": "sha",
                  "type": "string"
                },
                "tag": {
                  "default": "",
                  "description": "if not set appVersion field from Chart.yaml is used",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "resources": {
              "additionalProperties": true,
              "description": "resource config for prometheusConfigReloader",
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "prometheusConfigReloader",
          "type": "object"
        },
        "prometheusInstanceNamespaces": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "prometheusInstanceNamespaces",
          "type": "array"
        },
        "prometheusInstanceSelector": {
          "default": "",
          "description": "# Set a Label Selector to filter watched prometheus and prometheusAgent\n#",
          "required": [],
          "title": "prometheusInstanceSelector",
          "type": "string"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "# Readiness probe for the prometheusOperator deployment\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "failureThreshold": {
              "default": 3,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 0,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 10,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "successThreshold": {
              "default": 1,
              "required": [],
              "title": "successThreshold",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 1,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "# Resource limits \u0026 requests\n#",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "description": "# Number of old replicasets to retain ##\n# The default value is 10, 0 will garbage-collect old replicasets ##",
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "secretFieldSelector": {
          "default": "type!=kubernetes.io/dockercfg,type!=kubernetes.io/service-account-token,type!=helm.sh/release.v1",
          "description": "# Set a Field Selector to filter watched secrets\n#",
          "required": [],
          "title": "secretFieldSelector",
          "type": "string"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "nameservers:\n  - 1.2.3.4\nsearches:\n  - ns1.svc.cluster-domain.example\n  - my.dns.search.suffix\noptions:\n  - name: ndots\n    value: \"2\"\n  - name: edns0",
          "properties": {
            "fsGroup": {
              "default": 65534,
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 65534,
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 65534,
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Configuration for Prometheus operator service\n#",
          "properties": {
            "additionalPorts": {
              "description": "# Additional ports to open for Prometheus operator service\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPorts",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "",
              "required": [],
              "title": "clusterIP",
              "type": "string"
            },
            "externalIPs": {
              "description": "# List of IP addresses at which the Prometheus server service is available\n# Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "externalIPs",
              "type": "array"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "# Loadbalancer IP\n# Only use if service.type is \"LoadBalancer\"\n#",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30080,
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "nodePortTls": {
              "default": 30443,
              "required": [],
              "title": "nodePortTls",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n# NodePort, ClusterIP, LoadBalancer\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "# Service account for Prometheus Operator to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": true,
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "# Create a servicemonitor for the operator\n#",
          "properties": {
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Labels for ServiceMonitor",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# Metric relabel configs to apply to samples before ingestion.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "relabelings": {
              "description": "  relabel configs to apply to samples before ingestion.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scrapeTimeout": {
              "default": "",
              "description": "# Scrape timeout. If not set, the Prometheus default scrape timeout is used.",
              "required": [],
              "title": "scrapeTimeout",
              "type": "string"
            },
            "selfMonitor": {
              "default": true,
              "description": "# If true, create a serviceMonitor for prometheus operator\n#",
              "required": [],
              "title": "selfMonitor",
              "type": "boolean"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "strategy": {
          "additionalProperties": true,
          "description": "# Strategy of the deployment\n#",
          "required": [],
          "title": "strategy",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "terminationGracePeriodSeconds for container lifecycle hook",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "thanosImage": {
          "additionalProperties": true,
          "description": "# Thanos side-car image when configured\n#",
          "properties": {
            "registry": {
              "default": "quay.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "thanos/thanos",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "v0.38.0",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "thanosImage",
          "type": "object"
        },
        "thanosRulerInstanceNamespaces": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "thanosRulerInstanceNamespaces",
          "type": "array"
        },
        "thanosRulerInstanceSelector": {
          "default": "",
          "description": "# Set a Label Selector to filter watched thanosRuler",
          "required": [],
          "title": "thanosRulerInstanceSelector",
          "type": "string"
        },
        "tls": {
          "additionalProperties": true,
          "description": "# Prometheus-Operator v0.39.0 and later support TLS natively.\n#",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "internalPort": {
              "default": 10250,
              "description": "The default webhook port is 10250 in order to work out-of-the-box in GKE private clusters and avoid adding firewall rules.",
              "required": [],
              "title": "internalPort",
              "type": "integer"
            },
            "tlsMinVersion": {
              "default": "VersionTLS13",
              "description": "Value must match version names from https://pkg.go.dev/crypto/tls#pkg-constants",
              "required": [],
              "title": "tlsMinVersion",
              "type": "string"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "tolerations": {
          "description": "# Tolerations for use with node taints\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "verticalPodAutoscaler": {
          "additionalProperties": true,
          "description": "Enable vertical pod autoscaler support for prometheus-operator",
          "properties": {
            "controlledResources": {
              "description": "List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
              "items": {
                "required": []
              },
              "required": [],
              "title": "controlledResources",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxAllowed": {
              "additionalProperties": true,
              "description": "Define the max allowed resources for the pod",
              "required": [],
              "title": "maxAllowed",
              "type": "object"
            },
            "minAllowed": {
              "additionalProperties": true,
              "description": "cpu: 200m\nmemory: 100Mi\nDefine the min allowed resources for the pod",
              "required": [],
              "title": "minAllowed",
              "type": "object"
            },
            "updatePolicy": {
              "additionalProperties": true,
              "properties": {
                "updateMode": {
                  "default": "Auto",
                  "description": "Specifies minimal number of replicas which need to be alive for VPA Updater to attempt pod eviction\nminReplicas: 1\nSpecifies whether recommended updates are applied when a Pod is started and whether recommended updates\nare applied during the life of a Pod. Possible values are \"Off\", \"Initial\", \"Recreate\", and \"Auto\".",
                  "required": [],
                  "title": "updateMode",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updatePolicy",
              "type": "object"
            }
          },
          "required": [],
          "title": "verticalPodAutoscaler",
          "type": "object"
        }
      },
      "required": [],
      "title": "prometheusOperator",
      "type": "object"
    },
    "prometheusScrape": {
      "default": true,
      "description": "Default values for kube-state-metrics.",
      "required": [],
      "title": "prometheusScrape",
      "type": "boolean"
    },
    "rbac": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": true,
          "description": "# If true, create \u0026 use RBAC resources\n#",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "extraClusterRoleRules": {
          "description": "- apiGroups: []\n  resources: []\n  verbs: []",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraClusterRoleRules",
          "type": "array"
        },
        "extraRoleRules": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraRoleRules",
          "type": "array"
        },
        "extraRules": {
          "description": "Add permissions for CustomResources' apiGroups in Role/ClusterRole. Should be used in conjunction with Custom Resource State Metrics configuration\nExample:\n- apiGroups: [\"monitoring.coreos.com\"]\n  resources: [\"prometheuses\"]\n  verbs: [\"list\", \"watch\"]",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraRules",
          "type": "array"
        },
        "namespaced": {
          "default": false,
          "required": [],
          "title": "namespaced",
          "type": "boolean"
        },
        "pspAnnotations": {
          "additionalProperties": true,
          "required": [],
          "title": "pspAnnotations",
          "type": "object"
        },
        "pspEnabled": {
          "default": true,
          "description": "# If true, create \u0026 use Pod Security Policy resources\n# https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
          "required": [],
          "title": "pspEnabled",
          "type": "boolean"
        },
        "pspUseAppArmor": {
          "default": false,
          "required": [],
          "title": "pspUseAppArmor",
          "type": "boolean"
        },
        "useClusterRole": {
          "default": true,
          "description": "If set to false - Run without Cluteradmin privs needed - ONLY works if namespace is also set (if useExistingRole is set this name is used as ClusterRole or Role to bind to)",
          "required": [],
          "title": "useClusterRole",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "rbac",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": true,
      "description": "# Readiness probe\n#",
      "properties": {
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": 3000,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 1,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "readinessProbe",
      "type": "object"
    },
    "registry": {
      "default": "robustadev",
      "required": [],
      "title": "registry",
      "type": "string"
    },
    "releaseLabel": {
      "default": false,
      "description": "# set to true to add the release label so scraping of the servicemonitor with kube-prometheus-stack works out of the box",
      "required": [],
      "title": "releaseLabel",
      "type": "boolean"
    },
    "releaseNamespace": {
      "default": false,
      "description": "Enable only the release namespace for collecting resources. By default all namespaces are collected.\nIf releaseNamespace and namespaces are both set a merged list will be collected.",
      "required": [],
      "title": "releaseNamespace",
      "type": "boolean"
    },
    "replicas": {
      "default": 1,
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": true,
      "properties": {
        "limits": {
          "additionalProperties": true,
          "properties": {
            "memory": {
              "default": "2048Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "additionalProperties": true,
          "properties": {
            "cpu": {
              "default": "100m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "2048Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "restartPolicy": {
      "default": "null",
      "description": "Specify the container restart policy passed to the Node Export container\nPossible Values: Always (default)|OnFailure|Never",
      "required": [],
      "title": "restartPolicy",
      "type": "null"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "Number of old history to retain to allow rollback\nDefault Kubernetes value is set to 10",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "route": {
      "additionalProperties": true,
      "description": "BETA: Configure the gateway routes for the chart here.\nMore routes can be added by adding a dictionary key like the 'main' route.\nBe aware that this is an early beta of this feature,\nkube-prometheus-stack does not guarantee this works and is subject to change.\nBeing BETA this can/will change in the future without notice, do not use unless you want to take that risk\n[[ref]](https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io%2fv1alpha2)",
      "properties": {
        "main": {
          "additionalProperties": true,
          "properties": {
            "additionalRules": {
              "description": "# Additional custom rules that can be added to the route",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "filters": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "requestHeaderModifier": {
                          "additionalProperties": true,
                          "properties": {
                            "set": {
                              "items": {
                                "additionalProperties": true,
                                "properties": {
                                  "name": {
                                    "required": [],
                                    "title": "name",
                                    "type": "string"
                                  },
                                  "value": {
                                    "required": [],
                                    "title": "value",
                                    "type": "string"
                                  }
                                },
                                "required": [],
                                "type": "object"
                              },
                              "required": [],
                              "title": "set",
                              "type": "array"
                            }
                          },
                          "required": [],
                          "title": "requestHeaderModifier",
                          "type": "object"
                        },
                        "type": {
                          "required": [],
                          "title": "type",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "filters",
                    "type": "array"
                  },
                  "matches": {
                    "items": {
                      "additionalProperties": true,
                      "properties": {
                        "path": {
                          "additionalProperties": true,
                          "properties": {
                            "type": {
                              "required": [],
                              "title": "type",
                              "type": "string"
                            },
                            "value": {
                              "required": [],
                              "title": "value",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "path",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "title": "matches",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "additionalRules",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "apiVersion": {
              "default": "gateway.networking.k8s.io/v1",
              "description": "Set the route apiVersion, e.g. gateway.networking.k8s.io/v1 or gateway.networking.k8s.io/v1alpha2",
              "required": [],
              "title": "apiVersion",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enables or disables the route",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "filters": {
              "description": "# Filters define the filters that are applied to requests that match this rule.",
              "items": {
                "additionalProperties": true,
                "properties": {
                  "requestHeaderModifier": {
                    "additionalProperties": true,
                    "properties": {
                      "set": {
                        "items": {
                          "additionalProperties": true,
                          "properties": {
                            "name": {
                              "required": [],
                              "title": "name",
                              "type": "string"
                            },
                            "value": {
                              "required": [],
                              "title": "value",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "type": "object"
                        },
                        "required": [],
                        "title": "set",
                        "type": "array"
                      }
                    },
                    "required": [],
                    "title": "requestHeaderModifier",
                    "type": "object"
                  },
                  "type": {
                    "required": [],
                    "title": "type",
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "filters",
              "type": "array"
            },
            "hostnames": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "hostnames",
              "type": "array"
            },
            "kind": {
              "default": "HTTPRoute",
              "description": "Set the route kind\nValid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute",
              "required": [],
              "title": "kind",
              "type": "string"
            },
            "labels": {
              "additionalProperties": true,
              "properties": {
                "app": {
                  "required": [],
                  "title": "app",
                  "type": "string"
                }
              },
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "matches": {
              "items": {
                "additionalProperties": true,
                "properties": {
                  "path": {
                    "additionalProperties": true,
                    "properties": {
                      "type": {
                        "default": "PathPrefix",
                        "required": [],
                        "title": "type",
                        "type": "string"
                      },
                      "value": {
                        "default": "/",
                        "required": [],
                        "title": "value",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "path",
                    "type": "object"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "matches",
              "type": "array"
            },
            "parentRefs": {
              "description": "- my-filter.example.com",
              "items": {
                "required": []
              },
              "required": [],
              "title": "parentRefs",
              "type": "array"
            }
          },
          "required": [],
          "title": "main",
          "type": "object"
        }
      },
      "required": [],
      "title": "route",
      "type": "object"
    },
    "runner": {
      "additionalProperties": true,
      "description": "parameters for the robusta runner",
      "properties": {
        "additional_env_froms": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additional_env_froms",
          "type": "array"
        },
        "additional_env_vars": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "additional_env_vars",
          "type": "array"
        },
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "certificate": {
          "default": "",
          "required": [],
          "title": "certificate",
          "type": "string"
        },
        "customCRD": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "customCRD",
          "type": "array"
        },
        "customClusterRoleRules": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "customClusterRoleRules",
          "type": "array"
        },
        "customServiceAccount": {
          "default": "",
          "required": [],
          "title": "customServiceAccount",
          "type": "string"
        },
        "extraVolumeMounts": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hardenedFs": {
          "default": false,
          "description": "Enable hardened filesystem security (read-only root filesystem with writable volume mounts)",
          "required": [],
          "title": "hardenedFs",
          "type": "boolean"
        },
        "image": {
          "default": "~",
          "required": [],
          "title": "image",
          "type": "null"
        },
        "imageName": {
          "default": "robusta-runner:0.29.0",
          "required": [],
          "title": "imageName",
          "type": "string"
        },
        "imagePullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "imagePullPolicy",
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "log_level": {
          "default": "INFO",
          "required": [],
          "title": "log_level",
          "type": "string"
        },
        "nodeSelector": {
          "default": "~",
          "required": [],
          "title": "nodeSelector",
          "type": "null"
        },
        "priorityClassName": {
          "default": "",
          "required": [],
          "title": "priorityClassName",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "properties": {
            "limits": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "~",
                  "required": [],
                  "title": "cpu",
                  "type": "null"
                }
              },
              "required": [],
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": true,
              "properties": {
                "cpu": {
                  "default": "250m",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "1024Mi",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "revisionHistoryLimit": {
          "default": 10,
          "required": [],
          "title": "revisionHistoryLimit",
          "type": "integer"
        },
        "securityContext": {
          "additionalProperties": true,
          "properties": {
            "container": {
              "additionalProperties": true,
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "privileged": {
                  "default": false,
                  "required": [],
                  "title": "privileged",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": false,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "container",
              "type": "object"
            },
            "pod": {
              "additionalProperties": true,
              "required": [],
              "title": "pod",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "sendAdditionalTelemetry": {
          "default": false,
          "required": [],
          "title": "sendAdditionalTelemetry",
          "type": "boolean"
        },
        "sentry_dsn": {
          "default": "https://4f1a66f025c60830fec303a094dcdf94@o1120648.ingest.sentry.io/6156573",
          "required": [],
          "title": "sentry_dsn",
          "type": "string"
        },
        "service": {
          "additionalProperties": true,
          "description": "k8s service config",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "custom service annotations",
              "required": [],
              "title": "annotations",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "properties": {
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "setKRRSecurityContext": {
          "default": false,
          "required": [],
          "title": "setKRRSecurityContext",
          "type": "boolean"
        },
        "tolerations": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "runner",
      "type": "object"
    },
    "runnerServiceAccount": {
      "additionalProperties": true,
      "description": "parameters for the robusta runner service account",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the ServiceAccount.",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "image pull secrets added to the runner service account. Any pod using the service account will get those",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        }
      },
      "required": [],
      "title": "runnerServiceAccount",
      "type": "object"
    },
    "scaleAlertsProcessing": {
      "default": "False",
      "description": "scale alerts processing.\nUsed to support clusters with high load of alerts. When used, the runner will consume more memory",
      "required": [],
      "title": "scaleAlertsProcessing",
      "type": "boolean"
    },
    "secrets": {
      "description": "- name: \u003cconfigMapName\u003e\n  mountPath: \u003cmountPath\u003e",
      "items": {
        "required": []
      },
      "required": [],
      "title": "secrets",
      "type": "array"
    },
    "securityContext": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "fsGroup": {
          "default": 65534,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "runAsGroup": {
          "default": 65534,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 65534,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        },
        "seccompProfile": {
          "additionalProperties": true,
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "seccompProfile",
          "type": "object"
        },
        "windowsOptions": {
          "additionalProperties": true,
          "properties": {
            "hostProcess": {
              "default": true,
              "required": [],
              "title": "hostProcess",
              "type": "boolean"
            },
            "runAsUserName": {
              "default": "NT AUTHORITY\\system",
              "required": [],
              "title": "runAsUserName",
              "type": "string"
            }
          },
          "required": [],
          "title": "windowsOptions",
          "type": "object"
        }
      },
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "selectorOverride": {
      "additionalProperties": true,
      "description": "# Override selector labels",
      "required": [],
      "title": "selectorOverride",
      "type": "object"
    },
    "selfMonitor": {
      "additionalProperties": true,
      "description": "Enable self metrics configuration for service and Service Monitor\nDefault values for telemetry configuration can be overridden\nIf you set telemetryNodePort, you must also set service.type to NodePort",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "selfMonitor",
      "type": "object"
    },
    "sentryDSN": {
      "default": "https://51f9cd9bd2fdee16144db08fc423cd3b@o1120648.ingest.us.sentry.io/4508799804702720",
      "required": [],
      "title": "sentryDSN",
      "type": "string"
    },
    "service": {
      "additionalProperties": true,
      "description": "# Service configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "# Additional annotations and labels for the service.",
          "properties": {
            "prometheus.io/scrape": {
              "default": "true",
              "required": [],
              "title": "prometheus.io/scrape",
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "appProtocol": {
          "default": "",
          "description": "Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: \"http\" or \"tcp\"",
          "required": [],
          "title": "appProtocol",
          "type": "string"
        },
        "clusterIP": {
          "default": "",
          "description": "# IP address for type ClusterIP",
          "required": [],
          "title": "clusterIP",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "# Creating a service is enabled by default",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalTrafficPolicy": {
          "default": "",
          "description": "# External/Internal traffic policy setting (Cluster, Local)\n# https://kubernetes.io/docs/reference/networking/virtual-ips/#traffic-policies",
          "required": [],
          "title": "externalTrafficPolicy",
          "type": "string"
        },
        "internalTrafficPolicy": {
          "default": "",
          "required": [],
          "title": "internalTrafficPolicy",
          "type": "string"
        },
        "ipDualStack": {
          "additionalProperties": true,
          "description": "# Dual stack settings for the service\n# https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ipFamilies": {
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "ipFamilies",
              "type": "array"
            },
            "ipFamilyPolicy": {
              "default": "PreferDualStack",
              "required": [],
              "title": "ipFamilyPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "ipDualStack",
          "type": "object"
        },
        "ipFamilies": {
          "description": "Sets the families that should be supported and the order in which they should be applied to ClusterIP as well. Can be IPv4 and/or IPv6.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "ipFamilies",
          "type": "array"
        },
        "ipFamilyPolicy": {
          "default": "",
          "description": "Set the ip family policy to configure dual-stack see [Configure dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services)",
          "required": [],
          "title": "ipFamilyPolicy",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "listenOnAllInterfaces": {
          "default": true,
          "description": "# If true, node exporter will listen on all interfaces",
          "required": [],
          "title": "listenOnAllInterfaces",
          "type": "boolean"
        },
        "loadBalancerClass": {
          "default": "",
          "required": [],
          "title": "loadBalancerClass",
          "type": "string"
        },
        "loadBalancerIP": {
          "default": "",
          "required": [],
          "title": "loadBalancerIP",
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "description": "Only allow access to the loadBalancerIP from these IPs",
          "items": {
            "required": []
          },
          "required": [],
          "title": "loadBalancerSourceRanges",
          "type": "array"
        },
        "nodePort": {
          "default": "",
          "description": "# Port number for service type NodePort",
          "required": [],
          "title": "nodePort",
          "type": "null"
        },
        "port": {
          "default": 9182,
          "description": "# Default service port. Sets the port of the exposed container as well (windows-exporter).",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "portName": {
          "default": "metrics",
          "description": "# Name of the service port. Sets the port name of the main container (windows-exporter) as well.",
          "required": [],
          "title": "portName",
          "type": "string"
        },
        "servicePort": {
          "default": "",
          "description": "# Service port. Use this field if you wish to set a different service port\n# without changing the container port (\"port\" above).",
          "required": [],
          "title": "servicePort",
          "type": "string"
        },
        "sessionAffinity": {
          "default": "",
          "required": [],
          "title": "sessionAffinity",
          "type": "string"
        },
        "targetPort": {
          "default": 9100,
          "description": "# Targeted port in the pod. Must refer to an open container port (\"port\" or \"portName\").\n# (IntOrString)",
          "required": [],
          "title": "targetPort",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "# Service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": true,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "ServiceAccount annotations.\nUse case: AWS EKS IAM roles for service accounts\nref: https://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automountServiceAccountToken": {
          "default": false,
          "description": "If false then the user will opt out of automounting API credentials.",
          "required": [],
          "title": "automountServiceAccountToken",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a ServiceAccount should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "Reference to one or more secrets to be used when pulling images\nref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "labels": {
          "additionalProperties": true,
          "description": "# ServiceAccount labels.",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "name": {
          "default": "",
          "description": "The name of the ServiceAccount to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "null"
        },
        "nameTest": {
          "default": "",
          "required": [],
          "title": "nameTest",
          "type": "null"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": true,
      "properties": {
        "basicAuth": {
          "additionalProperties": true,
          "required": [],
          "title": "basicAuth",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "# If true, a ServiceMonitor CR is created for a prometheus operator\n# https://github.com/coreos/prometheus-operator\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "30s",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "description": " namespace: monitoring  (defaults to use the namespace this chart is deployed to)",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "path": {
          "default": "/metrics",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "relabelings": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scheme": {
          "default": "http",
          "required": [],
          "title": "scheme",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "30s",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "targetLabels": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "targetLabels",
          "type": "array"
        },
        "tlsConfig": {
          "additionalProperties": true,
          "required": [],
          "title": "tlsConfig",
          "type": "object"
        }
      },
      "required": [],
      "title": "serviceMonitor",
      "type": "object"
    },
    "shareProcessNamespace": {
      "default": false,
      "description": "When process namespace sharing is enabled, processes in a container are visible to all other containers in the same pod\nThis parameter is added because the ldap reload api is not working https://grafana.com/docs/grafana/latest/developers/http_api/admin/#reload-ldap-configuration\nTo allow an extraContainer to restart the Grafana container",
      "required": [],
      "title": "shareProcessNamespace",
      "type": "boolean"
    },
    "sidecar": {
      "additionalProperties": true,
      "description": "# Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders\n# Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards",
      "properties": {
        "alerts": {
          "additionalProperties": true,
          "description": "Log level default for all sidecars. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL. Defaults to INFO\nlogLevel: INFO",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "description": "Additional environment variables for the alerts sidecar",
              "required": [],
              "title": "env",
              "type": "object"
            },
            "extraMounts": {
              "description": "Additional alerts sidecar volume mounts",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraMounts",
              "type": "array"
            },
            "initAlerts": {
              "default": false,
              "description": "This is needed if skipReload is true, to load any alerts defined at startup time.\nDeploy the alert sidecar as an initContainer.",
              "required": [],
              "title": "initAlerts",
              "type": "boolean"
            },
            "label": {
              "default": "grafana_alert",
              "description": "Do not reprocess already processed unchanged resources on k8s API reconnect.\nignoreAlreadyProcessed: true\nlabel that the configmaps with alert are marked with (can be templated)",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "value of label that the configmaps with alert are set to (can be templated)",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "reloadURL": {
              "default": "http://localhost:3000/api/admin/provisioning/alerting/reload",
              "description": "\nwatchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S\nwatchServerTimeout: 3600\n\nwatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\ndefaults to 66sec (sic!)\nwatchClientTimeout: 60\n\nmaxTotalRetries: Total number of retries to allow for any http request.\nTakes precedence over other counts. Applies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry.\nmaxTotalRetries: 5\n\nmaxConnectRetries: How many connection-related errors to retry on for any http request.\nThese are errors raised before the request is sent to the remote server, which we assume has not triggered the server to process the request.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxConnectRetries: 10\n\nmaxReadRetries: How many times to retry on read errors for any http request\nThese errors are raised after the request was sent to the server, so the request may have side-effects.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxReadRetries: 5\n\nEndpoint to send request to reload alerts",
              "required": [],
              "title": "reloadURL",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "search in configmap, secret or both",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "resourceName": {
              "default": "",
              "description": "\nresourceName: comma separated list of resource names to be fetched/checked by this sidecar.\nper default all resources of the type defined in {{ .Values.sidecar.alerts.resource }} will be checked.\nThis e.g. allows stricter RBAC rules which are limited to the resources meant for the sidecars.\nresourceName: \"secret/alerts-1,configmap/alerts-0\"",
              "required": [],
              "title": "resourceName",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to a script to execute after a configmap got reloaded.\nIt runs before calls to REQ_URI. If the file is not executable it will be passed to sh.\nOtherwise, it's executed as is. Shebangs known to work are #!/bin/sh and #!/usr/bin/env python",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.\nlogLevel: INFO\nIf specified, the sidecar will search for alert config-maps inside this namespace.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify ALL to search in all namespaces",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "sizeLimit": {
              "additionalProperties": true,
              "description": "Sets the size limit of the alert sidecar emptyDir volume",
              "required": [],
              "title": "sizeLimit",
              "type": "object"
            },
            "skipReload": {
              "default": false,
              "required": [],
              "title": "skipReload",
              "type": "boolean"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            }
          },
          "required": [],
          "title": "alerts",
          "type": "object"
        },
        "dashboards": {
          "additionalProperties": true,
          "properties": {
            "SCProvider": {
              "default": true,
              "description": " ENV_NAME:\n   configMapKeyRef:\n     name: configmap-name\n     key: value_key\nDo not reprocess already processed unchanged resources on k8s API reconnect.\nignoreAlreadyProcessed: true",
              "required": [],
              "title": "SCProvider",
              "type": "boolean"
            },
            "defaultFolderName": {
              "default": "null",
              "description": "The default folder name, it will create a subfolder under the `folder` and put dashboards in there instead",
              "required": [],
              "title": "defaultFolderName",
              "type": "null"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "description": "Additional environment variables for the dashboards sidecar",
              "required": [],
              "title": "env",
              "type": "object"
            },
            "envValueFrom": {
              "additionalProperties": true,
              "description": "# \"valueFrom\" environment variable references that will be added to deployment pods. Name is templated.\n# ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core\n# Renders in container spec as:\n#   env:\n#     ...\n#     - name: \u003ckey\u003e\n#       valueFrom:\n#         \u003cvalue rendered as YAML\u003e",
              "properties": {
                "VAR1": {
                  "additionalProperties": true,
                  "properties": {
                    "configMapKeyRef": {
                      "additionalProperties": true,
                      "properties": {
                        "key": {
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "name": {
                          "required": [],
                          "title": "name",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "configMapKeyRef",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "VAR1",
                  "type": "object"
                },
                "VAR2": {
                  "additionalProperties": true,
                  "properties": {
                    "secretKeyRef": {
                      "additionalProperties": true,
                      "properties": {
                        "key": {
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "name": {
                          "required": [],
                          "title": "name",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "secretKeyRef",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "VAR2",
                  "type": "object"
                }
              },
              "required": [],
              "title": "envValueFrom",
              "type": "object"
            },
            "extraMounts": {
              "description": "Additional dashboards sidecar volume mounts",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraMounts",
              "type": "array"
            },
            "folder": {
              "default": "/tmp/dashboards",
              "description": "Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.\nlogLevel: INFO\nfolder in the pod that should hold the collected dashboards (unless `defaultFolderName` is set)",
              "required": [],
              "title": "folder",
              "type": "string"
            },
            "folderAnnotation": {
              "default": "null",
              "description": "If specified, the sidecar will look for annotation with this name to create folder and put graph here.\nYou can use this parameter together with `provider.foldersFromFilesStructure`to annotate configmaps and create folder structure.",
              "required": [],
              "title": "folderAnnotation",
              "type": "null"
            },
            "label": {
              "default": "grafana_dashboard",
              "description": "label that the configmaps with dashboards are marked with (can be templated)",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "value of label that the configmaps with dashboards are set to (can be templated)",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "provider": {
              "additionalProperties": true,
              "description": "watchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S\nwatchServerTimeout: 3600\n\nwatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\ndefaults to 66sec (sic!)\nwatchClientTimeout: 60\n\nprovider configuration that lets grafana manage the dashboards",
              "properties": {
                "allowUiUpdates": {
                  "default": false,
                  "description": "allow updating provisioned dashboards from the UI",
                  "required": [],
                  "title": "allowUiUpdates",
                  "type": "boolean"
                },
                "disableDelete": {
                  "default": false,
                  "description": "disableDelete to activate a import-only behaviour",
                  "required": [],
                  "title": "disableDelete",
                  "type": "boolean"
                },
                "folder": {
                  "default": "",
                  "description": "folder in which the dashboards should be imported in grafana",
                  "required": [],
                  "title": "folder",
                  "type": "string"
                },
                "folderUid": {
                  "default": "",
                  "description": "\u003cstring\u003e folder UID. will be automatically generated if not specified",
                  "required": [],
                  "title": "folderUid",
                  "type": "string"
                },
                "foldersFromFilesStructure": {
                  "default": false,
                  "description": "allow Grafana to replicate dashboard structure from filesystem",
                  "required": [],
                  "title": "foldersFromFilesStructure",
                  "type": "boolean"
                },
                "name": {
                  "default": "sidecarProvider",
                  "description": "name of the provider, should be unique",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "orgid": {
                  "default": 1,
                  "description": "orgid as configured in grafana",
                  "required": [],
                  "title": "orgid",
                  "type": "integer"
                },
                "type": {
                  "default": "file",
                  "description": "type of the provider",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "provider",
              "type": "object"
            },
            "reloadURL": {
              "default": "http://localhost:3000/api/admin/provisioning/dashboards/reload",
              "description": "\nmaxTotalRetries: Total number of retries to allow for any http request.\nTakes precedence over other counts. Applies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry.\nmaxTotalRetries: 5\n\nmaxConnectRetries: How many connection-related errors to retry on for any http request.\nThese are errors raised before the request is sent to the remote server, which we assume has not triggered the server to process the request.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxConnectRetries: 10\n\nmaxReadRetries: How many times to retry on read errors for any http request\nThese errors are raised after the request was sent to the server, so the request may have side-effects.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxReadRetries: 5\n\nEndpoint to send request to reload alerts",
              "required": [],
              "title": "reloadURL",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "search in configmap, secret or both",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "resourceName": {
              "default": "",
              "description": "\nresourceName: comma separated list of resource names to be fetched/checked by this sidecar.\nper default all resources of the type defined in {{ .Values.sidecar.dashboards.resource }} will be checked.\nThis e.g. allows stricter RBAC rules which are limited to the resources meant for the sidecars.\nresourceName: \"secret/dashboards-0,configmap/dashboards-1\"",
              "required": [],
              "title": "resourceName",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to a script to execute after a configmap got reloaded.\nIt runs before calls to REQ_URI. If the file is not executable it will be passed to sh.\nOtherwise, it's executed as is. Shebangs known to work are #!/bin/sh and #!/usr/bin/env python",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Namespaces list. If specified, the sidecar will search for config-maps/secrets inside these namespaces.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify ALL to search in all namespaces.",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "sizeLimit": {
              "additionalProperties": true,
              "description": "Sets the size limit of the dashboard sidecar emptyDir volume",
              "required": [],
              "title": "sizeLimit",
              "type": "object"
            },
            "skipReload": {
              "default": false,
              "required": [],
              "title": "skipReload",
              "type": "boolean"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            }
          },
          "required": [],
          "title": "dashboards",
          "type": "object"
        },
        "datasources": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "description": "Additional environment variables for the datasourcessidecar",
              "required": [],
              "title": "env",
              "type": "object"
            },
            "envValueFrom": {
              "additionalProperties": true,
              "description": "# \"valueFrom\" environment variable references that will be added to deployment pods. Name is templated.\n# ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core\n# Renders in container spec as:\n#   env:\n#     ...\n#     - name: \u003ckey\u003e\n#       valueFrom:\n#         \u003cvalue rendered as YAML\u003e",
              "properties": {
                "VAR1": {
                  "additionalProperties": true,
                  "properties": {
                    "configMapKeyRef": {
                      "additionalProperties": true,
                      "properties": {
                        "key": {
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "name": {
                          "required": [],
                          "title": "name",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "configMapKeyRef",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "VAR1",
                  "type": "object"
                },
                "VAR2": {
                  "additionalProperties": true,
                  "properties": {
                    "secretKeyRef": {
                      "additionalProperties": true,
                      "properties": {
                        "key": {
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "name": {
                          "required": [],
                          "title": "name",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "secretKeyRef",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "VAR2",
                  "type": "object"
                }
              },
              "required": [],
              "title": "envValueFrom",
              "type": "object"
            },
            "extraMounts": {
              "description": "Additional datasources sidecar volume mounts",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraMounts",
              "type": "array"
            },
            "initDatasources": {
              "default": false,
              "description": "This is needed if skipReload is true, to load any datasources defined at startup time.\nDeploy the datasources sidecar as an initContainer.",
              "required": [],
              "title": "initDatasources",
              "type": "boolean"
            },
            "label": {
              "default": "grafana_datasource",
              "description": " ENV_NAME:\n   configMapKeyRef:\n     name: configmap-name\n     key: value_key\nDo not reprocess already processed unchanged resources on k8s API reconnect.\nignoreAlreadyProcessed: true\nlabel that the configmaps with datasources are marked with (can be templated)",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "value of label that the configmaps with datasources are set to (can be templated)",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "reloadURL": {
              "default": "http://localhost:3000/api/admin/provisioning/datasources/reload",
              "description": "\nwatchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S\nwatchServerTimeout: 3600\n\nwatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\ndefaults to 66sec (sic!)\nwatchClientTimeout: 60\n\nmaxTotalRetries: Total number of retries to allow for any http request.\nTakes precedence over other counts. Applies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry.\nmaxTotalRetries: 5\n\nmaxConnectRetries: How many connection-related errors to retry on for any http request.\nThese are errors raised before the request is sent to the remote server, which we assume has not triggered the server to process the request.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxConnectRetries: 10\n\nmaxReadRetries: How many times to retry on read errors for any http request\nThese errors are raised after the request was sent to the server, so the request may have side-effects.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxReadRetries: 5\n\nEndpoint to send request to reload datasources",
              "required": [],
              "title": "reloadURL",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "search in configmap, secret or both",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "resourceName": {
              "default": "",
              "description": "\nresourceName: comma separated list of resource names to be fetched/checked by this sidecar.\nper default all resources of the type defined in {{ .Values.sidecar.datasources.resource }} will be checked.\nThis e.g. allows stricter RBAC rules which are limited to the resources meant for the sidecars.\nresourceName: \"secret/datasources-0,configmap/datasources-15\"",
              "required": [],
              "title": "resourceName",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to a script to execute after a configmap got reloaded.\nIt runs before calls to REQ_URI. If the file is not executable it will be passed to sh.\nOtherwise, it's executed as is. Shebangs known to work are #!/bin/sh and #!/usr/bin/env python",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.\nlogLevel: INFO\nIf specified, the sidecar will search for datasource config-maps inside this namespace.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify ALL to search in all namespaces",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "sizeLimit": {
              "additionalProperties": true,
              "description": "Sets the size limit of the datasource sidecar emptyDir volume",
              "required": [],
              "title": "sizeLimit",
              "type": "object"
            },
            "skipReload": {
              "default": false,
              "required": [],
              "title": "skipReload",
              "type": "boolean"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            }
          },
          "required": [],
          "title": "datasources",
          "type": "object"
        },
        "enableUniqueFilenames": {
          "default": false,
          "description": "skipTlsVerify Set to true to skip tls verification for kube api calls\nskipTlsVerify: true",
          "required": [],
          "title": "enableUniqueFilenames",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "properties": {
            "registry": {
              "default": "quay.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "kiwigrid/k8s-sidecar",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "sha": {
              "default": "",
              "required": [],
              "title": "sha",
              "type": "string"
            },
            "tag": {
              "default": "1.30.0",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "imagePullPolicy",
          "type": "string"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "notifiers": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "description": "Additional environment variables for the notifierssidecar",
              "required": [],
              "title": "env",
              "type": "object"
            },
            "extraMounts": {
              "description": "Additional notifiers sidecar volume mounts",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraMounts",
              "type": "array"
            },
            "initNotifiers": {
              "default": false,
              "description": "Deploy the notifier sidecar as an initContainer in addition to a container.\nThis is needed if skipReload is true, to load any notifiers defined at startup time.",
              "required": [],
              "title": "initNotifiers",
              "type": "boolean"
            },
            "label": {
              "default": "grafana_notifier",
              "description": "Do not reprocess already processed unchanged resources on k8s API reconnect.\nignoreAlreadyProcessed: true\nlabel that the configmaps with notifiers are marked with (can be templated)",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "value of label that the configmaps with notifiers are set to (can be templated)",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "reloadURL": {
              "default": "http://localhost:3000/api/admin/provisioning/notifications/reload",
              "description": "\nwatchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S\nwatchServerTimeout: 3600\n\nwatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\ndefaults to 66sec (sic!)\nwatchClientTimeout: 60\n\nmaxTotalRetries: Total number of retries to allow for any http request.\nTakes precedence over other counts. Applies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry.\nmaxTotalRetries: 5\n\nmaxConnectRetries: How many connection-related errors to retry on for any http request.\nThese are errors raised before the request is sent to the remote server, which we assume has not triggered the server to process the request.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxConnectRetries: 10\n\nmaxReadRetries: How many times to retry on read errors for any http request\nThese errors are raised after the request was sent to the server, so the request may have side-effects.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxReadRetries: 5\n\nEndpoint to send request to reload notifiers",
              "required": [],
              "title": "reloadURL",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "search in configmap, secret or both",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "resourceName": {
              "default": "",
              "description": "\nresourceName: comma separated list of resource names to be fetched/checked by this sidecar.\nper default all resources of the type defined in {{ .Values.sidecar.notifiers.resource }} will be checked.\nThis e.g. allows stricter RBAC rules which are limited to the resources meant for the sidecars.\nresourceName: \"secret/notifiers-2,configmap/notifiers-1\"",
              "required": [],
              "title": "resourceName",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to a script to execute after a configmap got reloaded.\nIt runs before calls to REQ_URI. If the file is not executable it will be passed to sh.\nOtherwise, it's executed as is. Shebangs known to work are #!/bin/sh and #!/usr/bin/env python",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.\nlogLevel: INFO\nIf specified, the sidecar will search for notifier config-maps inside this namespace.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify ALL to search in all namespaces",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "sizeLimit": {
              "additionalProperties": true,
              "description": "Sets the size limit of the notifier sidecar emptyDir volume",
              "required": [],
              "title": "sizeLimit",
              "type": "object"
            },
            "skipReload": {
              "default": false,
              "required": [],
              "title": "skipReload",
              "type": "boolean"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            }
          },
          "required": [],
          "title": "notifiers",
          "type": "object"
        },
        "plugins": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "env": {
              "additionalProperties": true,
              "description": "Additional environment variables for the plugins sidecar",
              "required": [],
              "title": "env",
              "type": "object"
            },
            "extraMounts": {
              "description": "Additional plugins sidecar volume mounts",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraMounts",
              "type": "array"
            },
            "initPlugins": {
              "default": false,
              "description": "Deploy the datasource sidecar as an initContainer in addition to a container.\nThis is needed if skipReload is true, to load any plugins defined at startup time.",
              "required": [],
              "title": "initPlugins",
              "type": "boolean"
            },
            "label": {
              "default": "grafana_plugin",
              "description": "Do not reprocess already processed unchanged resources on k8s API reconnect.\nignoreAlreadyProcessed: true\nlabel that the configmaps with plugins are marked with (can be templated)",
              "required": [],
              "title": "label",
              "type": "string"
            },
            "labelValue": {
              "default": "",
              "description": "value of label that the configmaps with plugins are set to (can be templated)",
              "required": [],
              "title": "labelValue",
              "type": "string"
            },
            "reloadURL": {
              "default": "http://localhost:3000/api/admin/provisioning/plugins/reload",
              "description": "\nwatchServerTimeout: request to the server, asking it to cleanly close the connection after that.\ndefaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S\nwatchServerTimeout: 3600\n\nwatchClientTimeout: is a client-side timeout, configuring your local socket.\nIf you have a network outage dropping all packets with no RST/FIN,\nthis is how long your client waits before realizing \u0026 dropping the connection.\ndefaults to 66sec (sic!)\nwatchClientTimeout: 60\n\nmaxTotalRetries: Total number of retries to allow for any http request.\nTakes precedence over other counts. Applies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry.\nmaxTotalRetries: 5\n\nmaxConnectRetries: How many connection-related errors to retry on for any http request.\nThese are errors raised before the request is sent to the remote server, which we assume has not triggered the server to process the request.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxConnectRetries: 10\n\nmaxReadRetries: How many times to retry on read errors for any http request\nThese errors are raised after the request was sent to the server, so the request may have side-effects.\nApplies to all requests to reloadURL and k8s api requests.\nSet to 0 to fail on the first retry of this type.\nmaxReadRetries: 5\n\nEndpoint to send request to reload plugins",
              "required": [],
              "title": "reloadURL",
              "type": "string"
            },
            "resource": {
              "default": "both",
              "description": "search in configmap, secret or both",
              "required": [],
              "title": "resource",
              "type": "string"
            },
            "resourceName": {
              "default": "",
              "description": "\nresourceName: comma separated list of resource names to be fetched/checked by this sidecar.\nper default all resources of the type defined in {{ .Values.sidecar.plugins.resource }} will be checked.\nThis e.g. allows stricter RBAC rules which are limited to the resources meant for the sidecars.\nresourceName: \"secret/plugins-0,configmap/plugins-1\"",
              "required": [],
              "title": "resourceName",
              "type": "string"
            },
            "script": {
              "default": "null",
              "description": "Absolute path to a script to execute after a configmap got reloaded.\nIt runs before calls to REQ_URI. If the file is not executable it will be passed to sh.\nOtherwise, it's executed as is. Shebangs known to work are #!/bin/sh and #!/usr/bin/env python",
              "required": [],
              "title": "script",
              "type": "null"
            },
            "searchNamespace": {
              "default": "null",
              "description": "Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.\nlogLevel: INFO\nIf specified, the sidecar will search for plugin config-maps inside this namespace.\nOtherwise the namespace in which the sidecar is running will be used.\nIt's also possible to specify ALL to search in all namespaces",
              "required": [],
              "title": "searchNamespace",
              "type": "null"
            },
            "sizeLimit": {
              "additionalProperties": true,
              "description": "Sets the size limit of the plugin sidecar emptyDir volume",
              "required": [],
              "title": "sizeLimit",
              "type": "object"
            },
            "skipReload": {
              "default": false,
              "required": [],
              "title": "skipReload",
              "type": "boolean"
            },
            "watchMethod": {
              "default": "WATCH",
              "description": "Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.",
              "required": [],
              "title": "watchMethod",
              "type": "string"
            }
          },
          "required": [],
          "title": "plugins",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "  limits:\n    cpu: 100m\n    memory: 100Mi\n  requests:\n    cpu: 50m\n    memory: 50Mi",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "properties": {
                "drop": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "sidecar",
      "type": "object"
    },
    "sidecarHostVolumeMounts": {
      "description": "# Additional mounts from the host to sidecar containers\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecarHostVolumeMounts",
      "type": "array"
    },
    "sidecarVolumeMount": {
      "description": "# Volume for sidecar containers\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecarVolumeMount",
      "type": "array"
    },
    "sidecars": {
      "description": "# Additional containers for export metrics to text file\n#",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sidecars",
      "type": "array"
    },
    "sinksConfig": {
      "description": "sinks configurations",
      "items": {
        "required": []
      },
      "required": [],
      "title": "sinksConfig",
      "type": "array"
    },
    "smtp": {
      "additionalProperties": true,
      "description": "# Grafana's SMTP configuration\n# NOTE: To enable, grafana.ini must be configured with smtp.enabled\n# ref: http://docs.grafana.org/installation/configuration/#smtp",
      "properties": {
        "existingSecret": {
          "default": "",
          "description": "`existingSecret` is a reference to an existing secret containing the smtp configuration\nfor Grafana.",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        },
        "passwordKey": {
          "default": "password",
          "required": [],
          "title": "passwordKey",
          "type": "string"
        },
        "userKey": {
          "default": "user",
          "required": [],
          "title": "userKey",
          "type": "string"
        }
      },
      "required": [],
      "title": "smtp",
      "type": "object"
    },
    "startupProbe": {
      "additionalProperties": true,
      "description": "# Startup probe can optionally be enabled.\n#",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "failureThreshold": {
          "default": 3,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": true,
          "properties": {
            "httpHeaders": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "httpHeaders",
              "type": "array"
            },
            "scheme": {
              "default": "http",
              "required": [],
              "title": "scheme",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 0,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [],
      "title": "startupProbe",
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "default": "null",
      "description": "Specify grace period for graceful termination of pods. Defaults to 30 if null or not specified",
      "required": [],
      "title": "terminationGracePeriodSeconds",
      "type": "null"
    },
    "terminationMessageParams": {
      "additionalProperties": true,
      "description": "Enable or disable container termination message settings\nhttps://kubernetes.io/docs/tasks/debug/debug-application/determine-reason-pod-failure/",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "default": "/dev/termination-log",
          "description": "If enabled, specify the path for termination messages",
          "required": [],
          "title": "terminationMessagePath",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "default": "File",
          "description": "If enabled, specify the policy for termination messages",
          "required": [],
          "title": "terminationMessagePolicy",
          "type": "string"
        }
      },
      "required": [],
      "title": "terminationMessageParams",
      "type": "object"
    },
    "testFramework": {
      "additionalProperties": true,
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": true,
          "description": "# The type of Helm hook used to run this test. Defaults to test.\n# ref: https://helm.sh/docs/topics/charts_hooks/#the-available-hooks\n#\nhookType: test",
          "properties": {
            "registry": {
              "default": "docker.io",
              "description": "The Docker registry",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "bats/bats",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v1.4.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "imagePullPolicy",
          "type": "string"
        },
        "resources": {
          "additionalProperties": true,
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "required": [],
          "title": "securityContext",
          "type": "object"
        }
      },
      "required": [],
      "title": "testFramework",
      "type": "object"
    },
    "thanosRuler": {
      "additionalProperties": true,
      "description": "# Configuration for thanosRuler\n# ref: https://thanos.io/tip/components/rule.md/\n#",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "# Annotations for ThanosRuler\n#",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "# Deploy thanosRuler\n#",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraSecret": {
          "additionalProperties": true,
          "description": "# ExtraSecret can be used to store various data in an extra secret\n# (use it for example to store hashed basic auth credentials)",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "# if not set, name will be auto generated\nname: \"\"",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "data": {
              "additionalProperties": true,
              "required": [],
              "title": "data",
              "type": "object"
            }
          },
          "required": [],
          "title": "extraSecret",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": true,
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\nSee https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\ningressClassName: nginx",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "# Hosts must be provided if Ingress is enabled.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "paths": {
              "description": "# Paths to use for ingress rules - one path should match the thanosruler.routePrefix\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "paths",
              "type": "array"
            },
            "tls": {
              "description": "# TLS configuration for ThanosRuler Ingress\n# Secret must be manually created in the namespace\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tls",
              "type": "array"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "podDisruptionBudget": {
          "additionalProperties": true,
          "description": "# Configure pod disruption budgets for ThanosRuler\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": "",
              "required": [],
              "title": "maxUnavailable",
              "type": "string"
            },
            "minAvailable": {
              "default": 1,
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            },
            "unhealthyPodEvictionPolicy": {
              "default": "AlwaysAllow",
              "required": [],
              "title": "unhealthyPodEvictionPolicy",
              "type": "string"
            }
          },
          "required": [],
          "title": "podDisruptionBudget",
          "type": "object"
        },
        "route": {
          "additionalProperties": true,
          "description": "BETA: Configure the gateway routes for the chart here.\nMore routes can be added by adding a dictionary key like the 'main' route.\nBe aware that this is an early beta of this feature,\nkube-prometheus-stack does not guarantee this works and is subject to change.\nBeing BETA this can/will change in the future without notice, do not use unless you want to take that risk\n[[ref]](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1alpha2)",
          "properties": {
            "main": {
              "additionalProperties": true,
              "properties": {
                "additionalRules": {
                  "description": "# Additional custom rules that can be added to the route",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalRules",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "apiVersion": {
                  "default": "gateway.networking.k8s.io/v1",
                  "description": "Set the route apiVersion, e.g. gateway.networking.k8s.io/v1 or gateway.networking.k8s.io/v1alpha2",
                  "required": [],
                  "title": "apiVersion",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enables or disables the route",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "filters": {
                  "description": "# Filters define the filters that are applied to requests that match this rule.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "filters",
                  "type": "array"
                },
                "hostnames": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "hostnames",
                  "type": "array"
                },
                "httpsRedirect": {
                  "default": false,
                  "description": "create http route for redirect (https://gateway-api.sigs.k8s.io/guides/http-redirect-rewrite/#http-to-https-redirects)\n# Take care that you only enable this on the http listener of the gateway to avoid an infinite redirect.\n# matches, filters and additionalRules will be ignored if this is set to true. Be are",
                  "required": [],
                  "title": "httpsRedirect",
                  "type": "boolean"
                },
                "kind": {
                  "default": "HTTPRoute",
                  "description": "Set the route kind\nValid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute",
                  "required": [],
                  "title": "kind",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": true,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "matches": {
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "path": {
                        "additionalProperties": true,
                        "properties": {
                          "type": {
                            "default": "PathPrefix",
                            "required": [],
                            "title": "type",
                            "type": "string"
                          },
                          "value": {
                            "default": "/",
                            "required": [],
                            "title": "value",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "path",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "matches",
                  "type": "array"
                },
                "parentRefs": {
                  "description": "- my-filter.example.com",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "parentRefs",
                  "type": "array"
                }
              },
              "required": [],
              "title": "main",
              "type": "object"
            }
          },
          "required": [],
          "title": "route",
          "type": "object"
        },
        "service": {
          "additionalProperties": true,
          "description": "# Configuration for ThanosRuler service\n#",
          "properties": {
            "additionalPorts": {
              "description": "# Additional ports to open for ThanosRuler service",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPorts",
              "type": "array"
            },
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "clusterIP": {
              "default": "",
              "required": [],
              "title": "clusterIP",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalIPs": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "externalIPs",
              "type": "array"
            },
            "externalTrafficPolicy": {
              "default": "Cluster",
              "description": "# Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n#",
              "required": [],
              "title": "externalTrafficPolicy",
              "type": "string"
            },
            "ipDualStack": {
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "ipFamilies": {
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "PreferDualStack",
                  "required": [],
                  "title": "ipFamilyPolicy",
                  "type": "string"
                }
              },
              "required": [],
              "title": "ipDualStack",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "loadBalancerIP": {
              "default": "",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePort": {
              "default": 30905,
              "description": "# Port to expose on each node\n# Only used if service.type is 'NodePort'\n#",
              "required": [],
              "title": "nodePort",
              "type": "integer"
            },
            "port": {
              "default": 10902,
              "description": "# Port for ThanosRuler Service to listen on\n#",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "targetPort": {
              "default": 10902,
              "description": "# To be used with a proxy extraContainer port\n#",
              "required": [],
              "title": "targetPort",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "# Service type\n#",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": true,
          "description": "# Service account for ThanosRuler to use.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n#",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "create": {
              "default": true,
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": true,
          "description": "# Configuration for creating a ServiceMonitor for the ThanosRuler service\n#",
          "properties": {
            "additionalEndpoints": {
              "description": "# Additional Endpoints\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalEndpoints",
              "type": "array"
            },
            "additionalLabels": {
              "additionalProperties": true,
              "description": "# Additional labels\n#",
              "required": [],
              "title": "additionalLabels",
              "type": "object"
            },
            "bearerTokenFile": {
              "default": "",
              "required": [],
              "title": "bearerTokenFile",
              "type": "null"
            },
            "interval": {
              "default": "",
              "description": "# Scrape interval. If not set, the Prometheus default scrape interval is used.\n#",
              "required": [],
              "title": "interval",
              "type": "string"
            },
            "labelLimit": {
              "default": 0,
              "description": "# Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelLimit",
              "type": "integer"
            },
            "labelNameLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelNameLengthLimit",
              "type": "integer"
            },
            "labelValueLengthLimit": {
              "default": 0,
              "description": "# Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.\n#",
              "required": [],
              "title": "labelValueLengthLimit",
              "type": "integer"
            },
            "metricRelabelings": {
              "description": "# MetricRelabelConfigs to apply to samples after scraping, but before ingestion.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "metricRelabelings",
              "type": "array"
            },
            "proxyUrl": {
              "default": "",
              "description": "# proxyUrl: URL of a proxy that should be used for scraping.\n#",
              "required": [],
              "title": "proxyUrl",
              "type": "string"
            },
            "relabelings": {
              "description": "# RelabelConfigs to apply to samples before scraping\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#relabelconfig\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "relabelings",
              "type": "array"
            },
            "sampleLimit": {
              "default": 0,
              "description": "# SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\n#",
              "required": [],
              "title": "sampleLimit",
              "type": "integer"
            },
            "scheme": {
              "default": "",
              "description": "# scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.",
              "required": [],
              "title": "scheme",
              "type": "string"
            },
            "selfMonitor": {
              "default": true,
              "description": "# If true, create a serviceMonitor for thanosRuler\n#",
              "required": [],
              "title": "selfMonitor",
              "type": "boolean"
            },
            "targetLimit": {
              "default": 0,
              "description": "# TargetLimit defines a limit on the number of scraped targets that will be accepted.\n#",
              "required": [],
              "title": "targetLimit",
              "type": "integer"
            },
            "tlsConfig": {
              "additionalProperties": true,
              "description": "# tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.\n# Of type: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#tlsconfig",
              "required": [],
              "title": "tlsConfig",
              "type": "object"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        },
        "thanosRulerSpec": {
          "additionalProperties": true,
          "description": "# Settings affecting thanosRulerpec\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#thanosrulerspec\n#",
          "properties": {
            "additionalArgs": {
              "description": "# Allows setting additional arguments for the ThanosRuler container\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#thanosruler\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalArgs",
              "type": "array"
            },
            "additionalConfig": {
              "additionalProperties": true,
              "description": "# Additional configuration which is not covered by the properties above. (passed through tpl)",
              "required": [],
              "title": "additionalConfig",
              "type": "object"
            },
            "additionalConfigString": {
              "default": "",
              "description": "# Additional configuration which is not covered by the properties above.\n# Useful, if you need advanced templating",
              "required": [],
              "title": "additionalConfigString",
              "type": "string"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "# Assign custom affinity rules to the thanosRuler instance\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "alertDropLabels": {
              "description": "# Labels by name to drop before sending to alertmanager\n# Maps to the --alert.label-drop flag of thanos ruler.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "alertDropLabels",
              "type": "array"
            },
            "alertmanagersConfig": {
              "additionalProperties": true,
              "description": "# AlertmanagerConfig define configuration for connecting to alertmanager.\n# Only available with Thanos v0.10.0 and higher. Maps to the alertmanagers.config Thanos Ruler arg.",
              "properties": {
                "existingSecret": {
                  "additionalProperties": true,
                  "description": "use existing secret, if configured, alertmanagersConfig.secret will not be used",
                  "required": [],
                  "title": "existingSecret",
                  "type": "object"
                },
                "secret": {
                  "additionalProperties": true,
                  "description": "name: \"\"\nkey: \"\"\nwill render alertmanagersConfig secret data and configure it to be used by Thanos Ruler custom resource, ignored when alertmanagersConfig.existingSecret is set\nhttps://thanos.io/tip/components/rule.md/#alertmanager",
                  "required": [],
                  "title": "secret",
                  "type": "object"
                }
              },
              "required": [],
              "title": "alertmanagersConfig",
              "type": "object"
            },
            "containers": {
              "description": "# Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an ThanosRuler pod.\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "containers",
              "type": "array"
            },
            "evaluationInterval": {
              "default": "",
              "description": "# Interval between consecutive evaluations.\n#",
              "required": [],
              "title": "evaluationInterval",
              "type": "string"
            },
            "externalPrefix": {
              "default": "",
              "description": "# The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name. string false\n#",
              "required": [],
              "title": "externalPrefix",
              "type": "null"
            },
            "externalPrefixNilUsesHelmValues": {
              "default": true,
              "description": "# If true, http://{{ template \"kube-prometheus-stack.thanosRuler.name\" . }}.{{ template \"kube-prometheus-stack.namespace\" . }}:{{ .Values.thanosRuler.service.port }}\n# will be used as value for externalPrefix",
              "required": [],
              "title": "externalPrefixNilUsesHelmValues",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": true,
              "description": "# Image of ThanosRuler\n#",
              "properties": {
                "registry": {
                  "default": "quay.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "thanos/thanos",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "sha": {
                  "default": "",
                  "required": [],
                  "title": "sha",
                  "type": "string"
                },
                "tag": {
                  "default": "v0.38.0",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "initContainers": {
              "description": "# InitContainers allows injecting additional initContainers. This is meant to allow doing some changes\n# (permissions, dir tree) on mounted volumes before starting prometheus",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "labels": {
              "additionalProperties": true,
              "description": "# Labels configure the external label pairs to ThanosRuler. A default replica\n# label `thanos_ruler_replica` will be always added as a label with the value\n# of the pod's name and it will be dropped in the alerts.",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "listenLocal": {
              "default": false,
              "description": "# ListenLocal makes the ThanosRuler server listen on loopback, so that it does not bind against the Pod IP.\n# Note this is only for the ThanosRuler UI, not the gossip communication.\n#",
              "required": [],
              "title": "listenLocal",
              "type": "boolean"
            },
            "logFormat": {
              "default": "logfmt",
              "description": "# Define Log Format\nUse logfmt (default) or json logging",
              "required": [],
              "title": "logFormat",
              "type": "string"
            },
            "logLevel": {
              "default": "info",
              "description": "# Log level for ThanosRuler to be configured with.\n#",
              "required": [],
              "title": "logLevel",
              "type": "string"
            },
            "nodeSelector": {
              "additionalProperties": true,
              "description": "# Define which Nodes the Pods are scheduled on.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "objectStorageConfig": {
              "additionalProperties": true,
              "description": "# ObjectStorageConfig configures object storage in Thanos",
              "properties": {
                "existingSecret": {
                  "additionalProperties": true,
                  "description": "use existing secret, if configured, objectStorageConfig.secret will not be used",
                  "required": [],
                  "title": "existingSecret",
                  "type": "object"
                },
                "secret": {
                  "additionalProperties": true,
                  "description": "name: \"\"\nkey: \"\"\nwill render objectStorageConfig secret data and configure it to be used by Thanos Ruler custom resource, ignored when objectStorageConfig.existingSecret is set\nhttps://thanos.io/tip/thanos/storage.md/#s3",
                  "required": [],
                  "title": "secret",
                  "type": "object"
                }
              },
              "required": [],
              "title": "objectStorageConfig",
              "type": "object"
            },
            "paused": {
              "default": false,
              "description": "# If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.\n#",
              "required": [],
              "title": "paused",
              "type": "boolean"
            },
            "podAntiAffinity": {
              "default": "soft",
              "description": "# Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n# The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n# The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n# The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n#",
              "required": [],
              "title": "podAntiAffinity",
              "type": "string"
            },
            "podAntiAffinityTopologyKey": {
              "default": "kubernetes.io/hostname",
              "description": "# If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n# This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n#",
              "required": [],
              "title": "podAntiAffinityTopologyKey",
              "type": "string"
            },
            "podMetadata": {
              "additionalProperties": true,
              "description": "# Standard object's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata\n# Metadata Labels and Annotations gets propagated to the ThanosRuler pods.\n#",
              "required": [],
              "title": "podMetadata",
              "type": "object"
            },
            "portName": {
              "default": "web",
              "description": "# PortName to use for ThanosRuler.\n#",
              "required": [],
              "title": "portName",
              "type": "string"
            },
            "priorityClassName": {
              "default": "",
              "description": "# Priority class assigned to the Pods\n#",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "queryConfig": {
              "additionalProperties": true,
              "description": "# Define configuration for connecting to thanos query instances. If this is defined, the queryEndpoints field will be ignored.\n# Maps to the query.config CLI argument. Only available with thanos v0.11.0 and higher.",
              "properties": {
                "existingSecret": {
                  "additionalProperties": true,
                  "description": "use existing secret, if configured, queryConfig.secret will not be used",
                  "required": [],
                  "title": "existingSecret",
                  "type": "object"
                },
                "secret": {
                  "additionalProperties": true,
                  "description": "name: \"\"\nkey: \"\"\nrender queryConfig secret data and configure it to be used by Thanos Ruler custom resource, ignored when queryConfig.existingSecret is set\nhttps://thanos.io/tip/components/rule.md/#query-api",
                  "required": [],
                  "title": "secret",
                  "type": "object"
                }
              },
              "required": [],
              "title": "queryConfig",
              "type": "object"
            },
            "queryEndpoints": {
              "description": "# QueryEndpoints defines Thanos querier endpoints from which to query metrics.\n# Maps to the --query flag of thanos ruler.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "queryEndpoints",
              "type": "array"
            },
            "replicas": {
              "default": 1,
              "description": "# Size is the expected size of the thanosRuler cluster. The controller will eventually make the size of the\n# running cluster equal to the expected size.",
              "required": [],
              "title": "replicas",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": true,
              "description": "# Define resources requests and limits for single Pods.\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "retention": {
              "default": "24h",
              "description": "# Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression\n# [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n#",
              "required": [],
              "title": "retention",
              "type": "string"
            },
            "routePrefix": {
              "default": "/",
              "description": "# The route prefix ThanosRuler registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true,\n# but the server serves requests under a different route prefix. For example for use with kubectl proxy.\n#",
              "required": [],
              "title": "routePrefix",
              "type": "string"
            },
            "ruleNamespaceSelector": {
              "additionalProperties": true,
              "description": "# Namespaces to be selected for PrometheusRules discovery.\n# If nil, select own namespace. Namespaces to be selected for ServiceMonitor discovery.\n# See https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#namespaceselector for usage\n#",
              "required": [],
              "title": "ruleNamespaceSelector",
              "type": "object"
            },
            "ruleSelector": {
              "additionalProperties": true,
              "description": "# PrometheusRules to be selected for target discovery.\n# If {}, select all PrometheusRules\n#",
              "required": [],
              "title": "ruleSelector",
              "type": "object"
            },
            "ruleSelectorNilUsesHelmValues": {
              "default": true,
              "description": "# If true, a nil or {} value for thanosRuler.thanosRulerSpec.ruleSelector will cause the\n# prometheus resource to be created with selectors based on values in the helm deployment,\n# which will also match the PrometheusRule resources created\n#",
              "required": [],
              "title": "ruleSelectorNilUsesHelmValues",
              "type": "boolean"
            },
            "securityContext": {
              "additionalProperties": true,
              "description": "# SecurityContext holds pod-level security attributes and common container settings.\n# This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n#",
              "properties": {
                "fsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "runAsGroup": {
                  "default": 2000,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1000,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seccompProfile": {
                  "additionalProperties": true,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "serviceName": {
              "default": "",
              "description": "#",
              "required": [],
              "title": "serviceName",
              "type": "null"
            },
            "storage": {
              "additionalProperties": true,
              "description": "# Storage is the definition of how storage will be used by the ThanosRuler instances.\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/storage.md\n#",
              "required": [],
              "title": "storage",
              "type": "object"
            },
            "tolerations": {
              "description": "# If specified, the pod's tolerations.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "# If specified, the pod's topology spread constraints.\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "volumeMounts": {
              "description": "Additional VolumeMounts on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumeMounts",
              "type": "array"
            },
            "volumes": {
              "description": "Additional volumes on the output StatefulSet definition.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            },
            "web": {
              "additionalProperties": true,
              "description": "# WebTLSConfig defines the TLS parameters for HTTPS\n# ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md#thanosrulerwebspec",
              "required": [],
              "title": "web",
              "type": "object"
            }
          },
          "required": [],
          "title": "thanosRulerSpec",
          "type": "object"
        }
      },
      "required": [],
      "title": "thanosRuler",
      "type": "object"
    },
    "tlsSecret": {
      "additionalProperties": true,
      "description": "# tlsSecret refers to an existing secret holding TLS items: client CA certificate, private key and certificate.\n# secretName and volumeName can be templated.\n# If enabled, volume volumeName gets created on secret secretName.\n# The volume's resources will be used by kube-rbac-proxy if kubeRBACProxy.tls.enabled is set.",
      "properties": {
        "caItem": {
          "default": "",
          "description": "# Key with client CA certificate (optional)",
          "required": [],
          "title": "caItem",
          "type": "string"
        },
        "certItem": {
          "default": "tls.crt",
          "description": "# Key with certificate",
          "required": [],
          "title": "certItem",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "keyItem": {
          "default": "tls.key",
          "description": "# Key with private key",
          "required": [],
          "title": "keyItem",
          "type": "string"
        },
        "secretName": {
          "default": "prometheus-node-exporter-tls",
          "description": "# Name of an existing secret",
          "required": [],
          "title": "secretName",
          "type": "string"
        },
        "volumeName": {
          "default": "prometheus-node-exporter-tls",
          "description": "# Name of the volume to be created",
          "required": [],
          "title": "volumeName",
          "type": "string"
        }
      },
      "required": [],
      "title": "tlsSecret",
      "type": "object"
    },
    "tolerations": {
      "description": "# Tolerations for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
      "items": {
        "additionalProperties": true,
        "properties": {
          "effect": {
            "default": "NoSchedule",
            "required": [],
            "title": "effect",
            "type": "string"
          },
          "operator": {
            "default": "Exists",
            "required": [],
            "title": "operator",
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "toolsets": {
      "additionalProperties": true,
      "properties": {
        "internet": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "internet",
          "type": "object"
        },
        "kubernetes/core": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubernetes/core",
          "type": "object"
        },
        "kubernetes/logs": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubernetes/logs",
          "type": "object"
        },
        "prometheus/metrics": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "prometheus/metrics",
          "type": "object"
        },
        "robusta": {
          "additionalProperties": true,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "robusta",
          "type": "object"
        }
      },
      "required": [],
      "title": "toolsets",
      "type": "object"
    },
    "topologySpreadConstraints": {
      "description": "# Topology spread constraints for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "topologySpreadConstraints",
      "type": "array"
    },
    "updateStrategy": {
      "additionalProperties": true,
      "description": "# Customize the updateStrategy if set",
      "properties": {
        "rollingUpdate": {
          "additionalProperties": true,
          "properties": {
            "maxUnavailable": {
              "default": 1,
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            }
          },
          "required": [],
          "title": "rollingUpdate",
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "updateStrategy",
      "type": "object"
    },
    "upgradeJob": {
      "additionalProperties": true,
      "description": "# Check out kube-prometheus-stack/values.yaml for more information\n# on this parameter",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "upgradeJob",
      "type": "object"
    },
    "useStatefulSet": {
      "default": false,
      "required": [],
      "title": "useStatefulSet",
      "type": "boolean"
    },
    "version": {
      "default": "",
      "description": "Override version of app, required if image.tag is defined and does not follow semver",
      "required": [],
      "title": "version",
      "type": "string"
    },
    "verticalPodAutoscaler": {
      "additionalProperties": true,
      "description": "Enable vertical pod autoscaler support for prometheus-node-exporter",
      "properties": {
        "controlledResources": {
          "description": "List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
          "items": {
            "required": []
          },
          "required": [],
          "title": "controlledResources",
          "type": "array"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxAllowed": {
          "additionalProperties": true,
          "description": "Define the max allowed resources for the pod",
          "required": [],
          "title": "maxAllowed",
          "type": "object"
        },
        "minAllowed": {
          "additionalProperties": true,
          "description": "cpu: 200m\nmemory: 100Mi\nDefine the min allowed resources for the pod",
          "required": [],
          "title": "minAllowed",
          "type": "object"
        }
      },
      "required": [],
      "title": "verticalPodAutoscaler",
      "type": "object"
    },
    "volumeMounts": {
      "description": "volumeMounts are used to add custom volume mounts to deployment.\nSee example below",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumeMounts",
      "type": "array"
    },
    "volumes": {
      "description": "volumes are used to add custom volumes to deployment\nSee example below",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumes",
      "type": "array"
    },
    "windowsMonitoring": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "description": "# Deploys the windows-exporter and Windows-specific dashboards and rules (job name must be 'windows-exporter')",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "windowsMonitoring",
      "type": "object"
    }
  },
  "required": [],
  "type": "object"
}