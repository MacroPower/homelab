clusterName: home
talosVersion: v1.6.1
kubernetesVersion: v1.28.4
endpoint: https://kube.home.macro.network:6443
cniConfig:
  name: none

additionalMachineCertSans:
  - kube.home.macro.network

clusterSvcNets:
  - 10.112.0.0/12
  - 2603:6010:5300:ad70::/108
clusterPodNets:
  - 10.128.0.0/16
  - 2603:6010:5300:ad80::/64

nodes:
  - hostname: knode01.home.macro.network
    ipAddress: 10.10.10.1
    installDisk: /dev/mmcblk0
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az01
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth0
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe10c6e45f016edba8

  - hostname: knode02.home.macro.network
    ipAddress: 10.10.10.2
    installDisk: /dev/mmcblk0
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az02
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth0
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe0899e45f016ece7e

  - hostname: knode03.home.macro.network
    ipAddress: 10.10.10.3
    installDisk: /dev/mmcblk0
    controlPlane: true
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az03
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth0
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe1274e45f016ed058

  - hostname: knode13.home.macro.network
    ipAddress: 10.10.10.13
    installDisk: /dev/sda
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az01
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth4
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe19fa0002c956fe52

  - hostname: knode14.home.macro.network
    ipAddress: 10.10.10.14
    installDisk: /dev/sda
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az02
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth4
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe19f50002c956d1a4

  - hostname: knode15.home.macro.network
    ipAddress: 10.10.10.15
    installDisk: /dev/sda
    controlPlane: false
    nodeLabels:
      topology.kubernetes.io/region: rack01
      topology.kubernetes.io/zone: az03
    nameservers:
      - 10.10.0.1
    networkInterfaces:
      - interface: eth4
        dhcp: true
        dhcpOptions:
          ipv4: true
          ipv6: true
          duidv6: 000100012cfe19fc0002c9530a86

controlPlane:
  inlinePatch:
    cluster:
      secretboxEncryptionSecret: ${SECRETS_SECRETBOXENCRYPTIONKEY}
      aggregatorCA:
        crt: ${CERTS_K8SAGGREGATOR_CRT}
        key: ${CERTS_K8SAGGREGATOR_KEY}
      apiServer:
        disablePodSecurityPolicy: true
        admissionControl: []
      ca:
        crt: ${CERTS_K8S_CRT}
        key: ${CERTS_K8S_KEY}
      controllerManager:
        extraArgs:
          bind-address: 0.0.0.0
          ## Node CIDR mask size for IPv4 and IPv6.
          ## Note that the clusterPodNets must be the same or a greater size,
          ## which will be the same or a smaller number.
          ##
          node-cidr-mask-size-ipv4: "16"
          node-cidr-mask-size-ipv6: "64"
      etcd:
        ca:
          crt: ${CERTS_ETCD_CRT}
          key: ${CERTS_ETCD_KEY}
        extraArgs:
          listen-metrics-urls: http://0.0.0.0:2381
      scheduler:
        extraArgs:
          bind-address: 0.0.0.0
      proxy:
        # Replaced by Cillium.
        disabled: true
      id: ${CLUSTER_ID}
      secret: ${CLUSTER_SECRET}
      serviceAccount:
        key: ${CERTS_K8SSERVICEACCOUNT_KEY}
      token: ${SECRETS_BOOTSTRAPTOKEN}
    machine:
      ca:
        crt: ${CERTS_OS_CRT}
        key: ${CERTS_OS_KEY}
      kubelet:
        extraArgs:
          feature-gates: MemoryQoS=true,SidecarContainers=true
          #rotate-server-certificates: true
      token: ${TRUSTEDINFO_TOKEN}
      install:
        extraKernelArgs:
          - "talos.logging.kernel=udp://syslog.home.macro.network:6050/"
      logging:
        destinations:
          - endpoint: "udp://syslog.home.macro.network:6051/"
            format: json_lines

worker:
  inlinePatch:
    cluster:
      ca:
        crt: ${CERTS_K8S_CRT}
        key: ${CERTS_K8S_KEY}
      id: ${CLUSTER_ID}
      secret: ${CLUSTER_SECRET}
      token: ${SECRETS_BOOTSTRAPTOKEN}
    machine:
      ca:
        crt: ${CERTS_OS_CRT}
        key: ${CERTS_OS_KEY}
      kubelet:
        extraArgs:
          feature-gates: MemoryQoS=true,SidecarContainers=true
          #rotate-server-certificates: true
      token: ${TRUSTEDINFO_TOKEN}
      install:
        extraKernelArgs:
          - "talos.logging.kernel=udp://syslog.home.macro.network:6050/"
      logging:
        destinations:
          - endpoint: "udp://syslog.home.macro.network:6051/"
            format: json_lines
