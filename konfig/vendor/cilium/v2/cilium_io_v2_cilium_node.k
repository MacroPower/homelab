"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CiliumNode:
    """
    CiliumNode represents a node managed by Cilium. It contains a specification to control various node specific configuration aspects and a status section to represent the status of the node.

    Attributes
    ----------
    apiVersion : str, default is "cilium.io/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CiliumNode", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : CiliumIoV2CiliumNodeSpec, default is Undefined, required
        spec
    status : CiliumIoV2CiliumNodeStatus, default is Undefined, optional
        status
    """


    apiVersion: "cilium.io/v2" = "cilium.io/v2"

    kind: "CiliumNode" = "CiliumNode"

    metadata: v1.ObjectMeta

    spec: CiliumIoV2CiliumNodeSpec

    status?: CiliumIoV2CiliumNodeStatus


schema CiliumIoV2CiliumNodeSpec:
    """
    Spec defines the desired specification/configuration of the node.

    Attributes
    ----------
    addresses : [CiliumIoV2CiliumNodeSpecAddressesItems0], default is Undefined, optional
        Addresses is the list of all node addresses.
    alibaba_cloud : CiliumIoV2CiliumNodeSpecAlibabaCloud, default is Undefined, optional
        alibaba cloud
    azure : CiliumIoV2CiliumNodeSpecAzure, default is Undefined, optional
        azure
    bootid : str, default is Undefined, optional
        BootID is a unique node identifier generated on boot
    encryption : CiliumIoV2CiliumNodeSpecEncryption, default is Undefined, optional
        encryption
    eni : CiliumIoV2CiliumNodeSpecEni, default is Undefined, optional
        eni
    health : CiliumIoV2CiliumNodeSpecHealth, default is Undefined, optional
        health
    ingress : CiliumIoV2CiliumNodeSpecIngress, default is Undefined, optional
        ingress
    instance_id : str, default is Undefined, optional
        InstanceID is the identifier of the node. This is different from the node name which is typically the FQDN of the node. The InstanceID typically refers to the identifier used by the cloud provider or some other means of identification.
    ipam : CiliumIoV2CiliumNodeSpecIpam, default is Undefined, optional
        ipam
    nodeidentity : int, default is Undefined, optional
        NodeIdentity is the Cilium numeric identity allocated for the node, if any.
    """


    addresses?: [CiliumIoV2CiliumNodeSpecAddressesItems0]

    alibaba_cloud?: CiliumIoV2CiliumNodeSpecAlibabaCloud

    azure?: CiliumIoV2CiliumNodeSpecAzure

    bootid?: str

    encryption?: CiliumIoV2CiliumNodeSpecEncryption

    eni?: CiliumIoV2CiliumNodeSpecEni

    health?: CiliumIoV2CiliumNodeSpecHealth

    ingress?: CiliumIoV2CiliumNodeSpecIngress

    instance_id?: str

    ipam?: CiliumIoV2CiliumNodeSpecIpam

    nodeidentity?: int


schema CiliumIoV2CiliumNodeSpecAddressesItems0:
    """
    NodeAddress is a node address.

    Attributes
    ----------
    ip : str, default is Undefined, optional
        IP is an IP of a node
    $type : str, default is Undefined, optional
        Type is the type of the node address
    """


    ip?: str

    $type?: str


schema CiliumIoV2CiliumNodeSpecAlibabaCloud:
    """
    AlibabaCloud is the AlibabaCloud IPAM specific configuration.

    Attributes
    ----------
    availability_zone : str, default is Undefined, optional
        AvailabilityZone is the availability zone to use when allocating ENIs.
    cidr_block : str, default is Undefined, optional
        CIDRBlock is vpc ipv4 CIDR
    instance_type : str, default is Undefined, optional
        InstanceType is the ECS instance type, e.g. "ecs.g6.2xlarge"
    security_group_tags : {str:str}, default is Undefined, optional
        SecurityGroupTags is the list of tags to use when evaluating which security groups to use for the ENI.
    security_groups : [str], default is Undefined, optional
        SecurityGroups is the list of security groups to attach to any ENI that is created and attached to the instance.
    vpc_id : str, default is Undefined, optional
        VPCID is the VPC ID to use when allocating ENIs.
    vswitch_tags : {str:str}, default is Undefined, optional
        VSwitchTags is the list of tags to use when evaluating which vSwitch to use for the ENI.
    vswitches : [str], default is Undefined, optional
        VSwitches is the ID of vSwitch available for ENI
    """


    availability_zone?: str

    cidr_block?: str

    instance_type?: str

    security_group_tags?: {str:str}

    security_groups?: [str]

    vpc_id?: str

    vswitch_tags?: {str:str}

    vswitches?: [str]


schema CiliumIoV2CiliumNodeSpecAzure:
    """
    Azure is the Azure IPAM specific configuration.

    Attributes
    ----------
    interface_name : str, default is Undefined, optional
        InterfaceName is the name of the interface the cilium-operator will use to allocate all the IPs on
    """


    interface_name?: str


schema CiliumIoV2CiliumNodeSpecEncryption:
    """
    Encryption is the encryption configuration of the node.

    Attributes
    ----------
    key : int, default is Undefined, optional
        Key is the index to the key to use for encryption or 0 if encryption is disabled.
    """


    key?: int


schema CiliumIoV2CiliumNodeSpecEni:
    """
    ENI is the AWS ENI specific configuration.

    Attributes
    ----------
    availability_zone : str, default is Undefined, optional
        AvailabilityZone is the availability zone to use when allocating ENIs.
    delete_on_termination : bool, default is Undefined, optional
        DeleteOnTermination defines that the ENI should be deleted when the associated instance is terminated. If the parameter is not set the default behavior is to delete the ENI on instance termination.
    disable_prefix_delegation : bool, default is Undefined, optional
        DisablePrefixDelegation determines whether ENI prefix delegation should be disabled on this node.
    exclude_interface_tags : {str:str}, default is Undefined, optional
        ExcludeInterfaceTags is the list of tags to use when excluding ENIs for Cilium IP allocation. Any interface matching this set of tags will not be managed by Cilium.
    first_interface_index : int, default is Undefined, optional
        FirstInterfaceIndex is the index of the first ENI to use for IP allocation, e.g. if the node has eth0, eth1, eth2 and FirstInterfaceIndex is set to 1, then only eth1 and eth2 will be used for IP allocation, eth0 will be ignored for PodIP allocation.
    instance_id : str, default is Undefined, optional
        InstanceID is the AWS InstanceId of the node. The InstanceID is used to retrieve AWS metadata for the node. 
         OBSOLETE: This field is obsolete, please use Spec.InstanceID
    instance_type : str, default is Undefined, optional
        InstanceType is the AWS EC2 instance type, e.g. "m5.large"
    max_above_watermark : int, default is Undefined, optional
        MaxAboveWatermark is the maximum number of addresses to allocate beyond the addresses needed to reach the PreAllocate watermark. Going above the watermark can help reduce the number of API calls to allocate IPs, e.g. when a new ENI is allocated, as many secondary IPs as possible are allocated. Limiting the amount can help reduce waste of IPs. 
         OBSOLETE: This field is obsolete, please use Spec.IPAM.MaxAboveWatermark
    min_allocate : int, default is Undefined, optional
        MinAllocate is the minimum number of IPs that must be allocated when the node is first bootstrapped. It defines the minimum base socket of addresses that must be available. After reaching this watermark, the PreAllocate and MaxAboveWatermark logic takes over to continue allocating IPs. 
         OBSOLETE: This field is obsolete, please use Spec.IPAM.MinAllocate
    node_subnet_id : str, default is Undefined, optional
        NodeSubnetID is the subnet of the primary ENI the instance was brought up with. It is used as a sensible default subnet to create ENIs in.
    pre_allocate : int, default is Undefined, optional
        PreAllocate defines the number of IP addresses that must be available for allocation in the IPAMspec. It defines the buffer of addresses available immediately without requiring cilium-operator to get involved. 
         OBSOLETE: This field is obsolete, please use Spec.IPAM.PreAllocate
    security_group_tags : {str:str}, default is Undefined, optional
        SecurityGroupTags is the list of tags to use when evaliating what AWS security groups to use for the ENI.
    security_groups : [str], default is Undefined, optional
        SecurityGroups is the list of security groups to attach to any ENI that is created and attached to the instance.
    subnet_ids : [str], default is Undefined, optional
        SubnetIDs is the list of subnet ids to use when evaluating what AWS subnets to use for ENI and IP allocation.
    subnet_tags : {str:str}, default is Undefined, optional
        SubnetTags is the list of tags to use when evaluating what AWS subnets to use for ENI and IP allocation.
    use_primary_address : bool, default is Undefined, optional
        UsePrimaryAddress determines whether an ENI's primary address should be available for allocations on the node
    vpc_id : str, default is Undefined, optional
        VpcID is the VPC ID to use when allocating ENIs.
    """


    availability_zone?: str

    delete_on_termination?: bool

    disable_prefix_delegation?: bool

    exclude_interface_tags?: {str:str}

    first_interface_index?: int

    instance_id?: str

    instance_type?: str

    max_above_watermark?: int

    min_allocate?: int

    node_subnet_id?: str

    pre_allocate?: int

    security_group_tags?: {str:str}

    security_groups?: [str]

    subnet_ids?: [str]

    subnet_tags?: {str:str}

    use_primary_address?: bool

    vpc_id?: str


    check:
        first_interface_index >= 0
        max_above_watermark >= 0
        min_allocate >= 0
        pre_allocate >= 0


schema CiliumIoV2CiliumNodeSpecHealth:
    """
    HealthAddressing is the addressing information for health connectivity checking.

    Attributes
    ----------
    ipv4 : str, default is Undefined, optional
        IPv4 is the IPv4 address of the IPv4 health endpoint.
    ipv6 : str, default is Undefined, optional
        IPv6 is the IPv6 address of the IPv4 health endpoint.
    """


    ipv4?: str

    ipv6?: str


schema CiliumIoV2CiliumNodeSpecIngress:
    """
    IngressAddressing is the addressing information for Ingress listener.

    Attributes
    ----------
    ipv4 : str, default is Undefined, optional
        ipv4
    ipv6 : str, default is Undefined, optional
        ipv6
    """


    ipv4?: str

    ipv6?: str


schema CiliumIoV2CiliumNodeSpecIpam:
    """
    IPAM is the address management specification. This section can be populated by a user or it can be automatically populated by an IPAM operator.

    Attributes
    ----------
    ipv6_pool : {str:CiliumIoV2CiliumNodeSpecIpamIPV6PoolAnon}, default is Undefined, optional
        IPv6Pool is the list of IPv6 addresses available to the node for allocation. When an IPv6 address is used, it will remain on this list but will be added to Status.IPAM.IPv6Used
    max_above_watermark : int, default is Undefined, optional
        MaxAboveWatermark is the maximum number of addresses to allocate beyond the addresses needed to reach the PreAllocate watermark. Going above the watermark can help reduce the number of API calls to allocate IPs, e.g. when a new ENI is allocated, as many secondary IPs as possible are allocated. Limiting the amount can help reduce waste of IPs.
    max_allocate : int, default is Undefined, optional
        MaxAllocate is the maximum number of IPs that can be allocated to the node. When the current amount of allocated IPs will approach this value, the considered value for PreAllocate will decrease down to 0 in order to not attempt to allocate more addresses than defined.
    min_allocate : int, default is Undefined, optional
        MinAllocate is the minimum number of IPs that must be allocated when the node is first bootstrapped. It defines the minimum base socket of addresses that must be available. After reaching this watermark, the PreAllocate and MaxAboveWatermark logic takes over to continue allocating IPs.
    podCIDRs : [str], default is Undefined, optional
        PodCIDRs is the list of CIDRs available to the node for allocation. When an IP is used, the IP will be added to Status.IPAM.Used
    pool : {str:CiliumIoV2CiliumNodeSpecIpamPoolAnon}, default is Undefined, optional
        Pool is the list of IPv4 addresses available to the node for allocation. When an IPv4 address is used, it will remain on this list but will be added to Status.IPAM.Used
    pools : CiliumIoV2CiliumNodeSpecIpamPools, default is Undefined, optional
        pools
    pre_allocate : int, default is Undefined, optional
        PreAllocate defines the number of IP addresses that must be available for allocation in the IPAMspec. It defines the buffer of addresses available immediately without requiring cilium-operator to get involved.
    """


    ipv6_pool?: {str:CiliumIoV2CiliumNodeSpecIpamIPV6PoolAnon}

    max_above_watermark?: int

    max_allocate?: int

    min_allocate?: int

    podCIDRs?: [str]

    pool?: {str:CiliumIoV2CiliumNodeSpecIpamPoolAnon}

    pools?: CiliumIoV2CiliumNodeSpecIpamPools

    pre_allocate?: int


    check:
        max_above_watermark >= 0
        max_allocate >= 0
        min_allocate >= 0
        pre_allocate >= 0


schema CiliumIoV2CiliumNodeSpecIpamIPV6PoolAnon:
    """
    AllocationIP is an IP which is available for allocation, or already has been allocated

    Attributes
    ----------
    owner : str, default is Undefined, optional
        Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP 
         The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.
    resource : str, default is Undefined, optional
        Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI
    """


    owner?: str

    resource?: str


schema CiliumIoV2CiliumNodeSpecIpamPoolAnon:
    """
    AllocationIP is an IP which is available for allocation, or already has been allocated

    Attributes
    ----------
    owner : str, default is Undefined, optional
        Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP 
         The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.
    resource : str, default is Undefined, optional
        Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI
    """


    owner?: str

    resource?: str


schema CiliumIoV2CiliumNodeSpecIpamPools:
    """
    Pools contains the list of assigned IPAM pools for this node.

    Attributes
    ----------
    allocated : [CiliumIoV2CiliumNodeSpecIpamPoolsAllocatedItems0], default is Undefined, optional
        Allocated contains the list of pooled CIDR assigned to this node. The operator will add new pod CIDRs to this field, whereas the agent will remove CIDRs it has released.
    requested : [CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0], default is Undefined, optional
        Requested contains a list of IPAM pool requests, i.e. indicates how many addresses this node requests out of each pool listed here. This field is owned and written to by cilium-agent and read by the operator.
    """


    allocated?: [CiliumIoV2CiliumNodeSpecIpamPoolsAllocatedItems0]

    requested?: [CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0]


schema CiliumIoV2CiliumNodeSpecIpamPoolsAllocatedItems0:
    """
    IPAMPoolAllocation describes an allocation of an IPAM pool from the operator to the node. It contains the assigned PodCIDRs allocated from this pool

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        CIDRs contains a list of pod CIDRs currently allocated from this pool
    pool : str, default is Undefined, required
        Pool is the name of the IPAM pool backing this allocation
    """


    cidrs?: [str]

    pool: str


    check:
        len(pool) >= 1


schema CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0:
    """
    cilium io v2 cilium node spec ipam pools requested items0

    Attributes
    ----------
    needed : CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0Needed, default is Undefined, optional
        needed
    pool : str, default is Undefined, required
        Pool is the name of the IPAM pool backing this request
    """


    needed?: CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0Needed

    pool: str


    check:
        len(pool) >= 1


schema CiliumIoV2CiliumNodeSpecIpamPoolsRequestedItems0Needed:
    """
    Needed indicates how many IPs out of the above Pool this node requests from the operator. The operator runs a reconciliation loop to ensure each node always has enough PodCIDRs allocated in each pool to fulfill the requested number of IPs here.

    Attributes
    ----------
    ipv4_addrs : int, default is Undefined, optional
        IPv4Addrs contains the number of requested IPv4 addresses out of a given pool
    ipv6_addrs : int, default is Undefined, optional
        IPv6Addrs contains the number of requested IPv6 addresses out of a given pool
    """


    ipv4_addrs?: int

    ipv6_addrs?: int


schema CiliumIoV2CiliumNodeStatus:
    """
    Status defines the realized specification/configuration and status of the node.

    Attributes
    ----------
    alibaba_cloud : CiliumIoV2CiliumNodeStatusAlibabaCloud, default is Undefined, optional
        alibaba cloud
    azure : CiliumIoV2CiliumNodeStatusAzure, default is Undefined, optional
        azure
    eni : CiliumIoV2CiliumNodeStatusEni, default is Undefined, optional
        eni
    ipam : CiliumIoV2CiliumNodeStatusIpam, default is Undefined, optional
        ipam
    """


    alibaba_cloud?: CiliumIoV2CiliumNodeStatusAlibabaCloud

    azure?: CiliumIoV2CiliumNodeStatusAzure

    eni?: CiliumIoV2CiliumNodeStatusEni

    ipam?: CiliumIoV2CiliumNodeStatusIpam


schema CiliumIoV2CiliumNodeStatusAlibabaCloud:
    """
    AlibabaCloud is the AlibabaCloud specific status of the node.

    Attributes
    ----------
    enis : {str:CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnon}, default is Undefined, optional
        ENIs is the list of ENIs on the node
    """


    enis?: {str:CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnon}


schema CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnon:
    """
    ENI represents an AlibabaCloud Elastic Network Interface

    Attributes
    ----------
    instance_id : str, default is Undefined, optional
        InstanceID is the InstanceID using this ENI
    mac_address : str, default is Undefined, optional
        MACAddress is the mac address of the ENI
    network_interface_id : str, default is Undefined, optional
        NetworkInterfaceID is the ENI id
    primary_ip_address : str, default is Undefined, optional
        PrimaryIPAddress is the primary IP on ENI
    private_ipsets : [CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonPrivateIpsetsItems0], default is Undefined, optional
        PrivateIPSets is the list of all IPs on the ENI, including PrimaryIPAddress
    security_groupids : [str], default is Undefined, optional
        SecurityGroupIDs is the security group ids used by this ENI
    tags : {str:str}, default is Undefined, optional
        Tags is the tags on this ENI
    $type : str, default is Undefined, optional
        Type is the ENI type Primary or Secondary
    vpc : CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVpc, default is Undefined, optional
        vpc
    vswitch : CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVswitch, default is Undefined, optional
        vswitch
    zone_id : str, default is Undefined, optional
        ZoneID is the zone to which the ENI belongs
    """


    instance_id?: str

    mac_address?: str

    network_interface_id?: str

    primary_ip_address?: str

    private_ipsets?: [CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonPrivateIpsetsItems0]

    security_groupids?: [str]

    tags?: {str:str}

    $type?: str

    vpc?: CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVpc

    vswitch?: CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVswitch

    zone_id?: str


schema CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonPrivateIpsetsItems0:
    """
    PrivateIPSet is a nested struct in ecs response

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        primary
    private_ip_address : str, default is Undefined, optional
        private ip address
    """


    primary?: bool

    private_ip_address?: str


schema CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVpc:
    """
    VPC is the vpc to which the ENI belongs

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        CIDRBlock is the VPC IPv4 CIDR
    ipv6_cidr : str, default is Undefined, optional
        IPv6CIDRBlock is the VPC IPv6 CIDR
    secondary_cidrs : [str], default is Undefined, optional
        SecondaryCIDRs is the list of Secondary CIDRs associated with the VPC
    vpc_id : str, default is Undefined, optional
        VPCID is the vpc to which the ENI belongs
    """


    cidr?: str

    ipv6_cidr?: str

    secondary_cidrs?: [str]

    vpc_id?: str


schema CiliumIoV2CiliumNodeStatusAlibabaCloudEnisAnonVswitch:
    """
    VSwitch is the vSwitch the ENI is using

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        CIDRBlock is the vSwitch IPv4 CIDR
    ipv6_cidr : str, default is Undefined, optional
        IPv6CIDRBlock is the vSwitch IPv6 CIDR
    vswitch_id : str, default is Undefined, optional
        VSwitchID is the vSwitch to which the ENI belongs
    """


    cidr?: str

    ipv6_cidr?: str

    vswitch_id?: str


schema CiliumIoV2CiliumNodeStatusAzure:
    """
    Azure is the Azure specific status of the node.

    Attributes
    ----------
    interfaces : [CiliumIoV2CiliumNodeStatusAzureInterfacesItems0], default is Undefined, optional
        Interfaces is the list of interfaces on the node
    """


    interfaces?: [CiliumIoV2CiliumNodeStatusAzureInterfacesItems0]


schema CiliumIoV2CiliumNodeStatusAzureInterfacesItems0:
    """
    AzureInterface represents an Azure Interface

    Attributes
    ----------
    GatewayIP : str, default is Undefined, optional
        GatewayIP is the interface's subnet's default route 
         OBSOLETE: This field is obsolete, please use Gateway field instead.
    addresses : [CiliumIoV2CiliumNodeStatusAzureInterfacesItems0AddressesItems0], default is Undefined, optional
        Addresses is the list of all IPs associated with the interface, including all secondary addresses
    cidr : str, default is Undefined, optional
        CIDR is the range that the interface belongs to.
    gateway : str, default is Undefined, optional
        Gateway is the interface's subnet's default route
    id : str, default is Undefined, optional
        ID is the identifier
    mac : str, default is Undefined, optional
        MAC is the mac address
    name : str, default is Undefined, optional
        Name is the name of the interface
    security_group : str, default is Undefined, optional
        SecurityGroup is the security group associated with the interface
    state : str, default is Undefined, optional
        State is the provisioning state
    """


    GatewayIP?: str

    addresses?: [CiliumIoV2CiliumNodeStatusAzureInterfacesItems0AddressesItems0]

    cidr?: str

    gateway?: str

    id?: str

    mac?: str

    name?: str

    security_group?: str

    state?: str


schema CiliumIoV2CiliumNodeStatusAzureInterfacesItems0AddressesItems0:
    """
    AzureAddress is an IP address assigned to an AzureInterface

    Attributes
    ----------
    ip : str, default is Undefined, optional
        IP is the ip address of the address
    state : str, default is Undefined, optional
        State is the provisioning state of the address
    subnet : str, default is Undefined, optional
        Subnet is the subnet the address belongs to
    """


    ip?: str

    state?: str

    subnet?: str


schema CiliumIoV2CiliumNodeStatusEni:
    """
    ENI is the AWS ENI specific status of the node.

    Attributes
    ----------
    enis : {str:CiliumIoV2CiliumNodeStatusEniEnisAnon}, default is Undefined, optional
        ENIs is the list of ENIs on the node
    """


    enis?: {str:CiliumIoV2CiliumNodeStatusEniEnisAnon}


schema CiliumIoV2CiliumNodeStatusEniEnisAnon:
    """
    ENI represents an AWS Elastic Network Interface 
     More details: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html

    Attributes
    ----------
    addresses : [str], default is Undefined, optional
        Addresses is the list of all secondary IPs associated with the ENI
    availability_zone : str, default is Undefined, optional
        AvailabilityZone is the availability zone of the ENI
    description : str, default is Undefined, optional
        Description is the description field of the ENI
    id : str, default is Undefined, optional
        ID is the ENI ID
    ip : str, default is Undefined, optional
        IP is the primary IP of the ENI
    mac : str, default is Undefined, optional
        MAC is the mac address of the ENI
    number : int, default is Undefined, optional
        Number is the interface index, it used in combination with FirstInterfaceIndex
    prefixes : [str], default is Undefined, optional
        Prefixes is the list of all /28 prefixes associated with the ENI
    security_groups : [str], default is Undefined, optional
        SecurityGroups are the security groups associated with the ENI
    subnet : CiliumIoV2CiliumNodeStatusEniEnisAnonSubnet, default is Undefined, optional
        subnet
    tags : {str:str}, default is Undefined, optional
        Tags is the set of tags of the ENI. Used to detect ENIs which should not be managed by Cilium
    vpc : CiliumIoV2CiliumNodeStatusEniEnisAnonVpc, default is Undefined, optional
        vpc
    """


    addresses?: [str]

    availability_zone?: str

    description?: str

    id?: str

    ip?: str

    mac?: str

    number?: int

    prefixes?: [str]

    security_groups?: [str]

    subnet?: CiliumIoV2CiliumNodeStatusEniEnisAnonSubnet

    tags?: {str:str}

    vpc?: CiliumIoV2CiliumNodeStatusEniEnisAnonVpc


schema CiliumIoV2CiliumNodeStatusEniEnisAnonSubnet:
    """
    Subnet is the subnet the ENI is associated with

    Attributes
    ----------
    cidr : str, default is Undefined, optional
        CIDR is the CIDR range associated with the subnet
    id : str, default is Undefined, optional
        ID is the ID of the subnet
    """


    cidr?: str

    id?: str


schema CiliumIoV2CiliumNodeStatusEniEnisAnonVpc:
    """
    VPC is the VPC information to which the ENI is attached to

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        CIDRs is the list of CIDR ranges associated with the VPC
    id : str, default is Undefined, optional
        / ID is the ID of a VPC
    primary_cidr : str, default is Undefined, optional
        PrimaryCIDR is the primary CIDR of the VPC
    """


    cidrs?: [str]

    id?: str

    primary_cidr?: str


schema CiliumIoV2CiliumNodeStatusIpam:
    """
    IPAM is the IPAM status of the node.

    Attributes
    ----------
    ipv6_used : {str:CiliumIoV2CiliumNodeStatusIpamIPV6UsedAnon}, default is Undefined, optional
        IPv6Used lists all IPv6 addresses out of Spec.IPAM.IPv6Pool which have been allocated and are in use.
    operator_status : CiliumIoV2CiliumNodeStatusIpamOperatorStatus, default is Undefined, optional
        operator status
    pod_cidrs : {str:CiliumIoV2CiliumNodeStatusIpamPodCidrsAnon}, default is Undefined, optional
        PodCIDRs lists the status of each pod CIDR allocated to this node.
    release_ips : {str:str}, default is Undefined, optional
        ReleaseIPs tracks the state for every IPv4 address considered for release. The value can be one of the following strings: * marked-for-release : Set by operator as possible candidate for IP * ready-for-release  : Acknowledged as safe to release by agent * do-not-release     : IP already in use / not owned by the node. Set by agent * released           : IP successfully released. Set by operator
    release_ipv6s : {str:str}, default is Undefined, optional
        ReleaseIPv6s tracks the state for every IPv6 address considered for release. The value can be one of the following strings: * marked-for-release : Set by operator as possible candidate for IP * ready-for-release  : Acknowledged as safe to release by agent * do-not-release     : IP already in use / not owned by the node. Set by agent * released           : IP successfully released. Set by operator
    used : {str:CiliumIoV2CiliumNodeStatusIpamUsedAnon}, default is Undefined, optional
        Used lists all IPv4 addresses out of Spec.IPAM.Pool which have been allocated and are in use.
    """


    ipv6_used?: {str:CiliumIoV2CiliumNodeStatusIpamIPV6UsedAnon}

    operator_status?: CiliumIoV2CiliumNodeStatusIpamOperatorStatus

    pod_cidrs?: {str:CiliumIoV2CiliumNodeStatusIpamPodCidrsAnon}

    release_ips?: {str:str}

    release_ipv6s?: {str:str}

    used?: {str:CiliumIoV2CiliumNodeStatusIpamUsedAnon}


schema CiliumIoV2CiliumNodeStatusIpamIPV6UsedAnon:
    """
    AllocationIP is an IP which is available for allocation, or already has been allocated

    Attributes
    ----------
    owner : str, default is Undefined, optional
        Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP 
         The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.
    resource : str, default is Undefined, optional
        Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI
    """


    owner?: str

    resource?: str


schema CiliumIoV2CiliumNodeStatusIpamOperatorStatus:
    """
    Operator is the Operator status of the node

    Attributes
    ----------
    error : str, default is Undefined, optional
        Error is the error message set by cilium-operator.
    """


    error?: str


schema CiliumIoV2CiliumNodeStatusIpamPodCidrsAnon:
    """
    cilium io v2 cilium node status ipam pod cidrs anon

    Attributes
    ----------
    status : str, default is Undefined, optional
        Status describes the status of a pod CIDR
    """


    status?: "released" | "depleted" | "in-use"


schema CiliumIoV2CiliumNodeStatusIpamUsedAnon:
    """
    AllocationIP is an IP which is available for allocation, or already has been allocated

    Attributes
    ----------
    owner : str, default is Undefined, optional
        Owner is the owner of the IP. This field is set if the IP has been allocated. It will be set to the pod name or another identifier representing the usage of the IP 
         The owner field is left blank for an entry in Spec.IPAM.Pool and filled out as the IP is used and also added to Status.IPAM.Used.
    resource : str, default is Undefined, optional
        Resource is set for both available and allocated IPs, it represents what resource the IP is associated with, e.g. in combination with AWS ENI, this will refer to the ID of the ENI
    """


    owner?: str

    resource?: str


