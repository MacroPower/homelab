"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretStore:
    """
    SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.

    Attributes
    ----------
    apiVersion : str, default is "external-secrets.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretStore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ExternalSecretsIoV1beta1SecretStoreSpec, default is Undefined, optional
        spec
    status : ExternalSecretsIoV1beta1SecretStoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "external-secrets.io/v1beta1" = "external-secrets.io/v1beta1"

    kind: "SecretStore" = "SecretStore"

    metadata?: v1.ObjectMeta

    spec?: ExternalSecretsIoV1beta1SecretStoreSpec

    status?: ExternalSecretsIoV1beta1SecretStoreStatus


schema ExternalSecretsIoV1beta1SecretStoreSpec:
    """
    SecretStoreSpec defines the desired state of SecretStore.

    Attributes
    ----------
    conditions : [ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0], default is Undefined, optional
        Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
    controller : str, default is Undefined, optional
        Used to select the correct ESO controller (think: ingress.ingressClassName)
        The ESO controller is instantiated with a specific controller name and filters ES based on this property
    provider : ExternalSecretsIoV1beta1SecretStoreSpecProvider, default is Undefined, required
        provider
    refreshInterval : int, default is Undefined, optional
        Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
    retrySettings : ExternalSecretsIoV1beta1SecretStoreSpecRetrySettings, default is Undefined, optional
        retry settings
    """


    conditions?: [ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0]

    controller?: str

    provider: ExternalSecretsIoV1beta1SecretStoreSpecProvider

    refreshInterval?: int

    retrySettings?: ExternalSecretsIoV1beta1SecretStoreSpecRetrySettings


schema ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0:
    """
    ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
    for a ClusterSecretStore instance.

    Attributes
    ----------
    namespaceRegexes : [str], default is Undefined, optional
        Choose namespaces by using regex matching
    namespaceSelector : ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Choose namespaces by name
    """


    namespaceRegexes?: [str]

    namespaceSelector?: ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelector

    namespaces?: [str]


schema ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelector:
    """
    Choose namespace using a labelSelector

    Attributes
    ----------
    matchExpressions : [ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema ExternalSecretsIoV1beta1SecretStoreSpecConditionsItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema ExternalSecretsIoV1beta1SecretStoreSpecProvider:
    """
    Used to configure the provider. Only one provider may be set

    Attributes
    ----------
    akeyless : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeyless, default is Undefined, optional
        akeyless
    alibaba : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibaba, default is Undefined, optional
        alibaba
    aws : ExternalSecretsIoV1beta1SecretStoreSpecProviderAws, default is Undefined, optional
        aws
    azurekv : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekv, default is Undefined, optional
        azurekv
    bitwardensecretsmanager : ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanager, default is Undefined, optional
        bitwardensecretsmanager
    chef : ExternalSecretsIoV1beta1SecretStoreSpecProviderChef, default is Undefined, optional
        chef
    conjur : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjur, default is Undefined, optional
        conjur
    delinea : ExternalSecretsIoV1beta1SecretStoreSpecProviderDelinea, default is Undefined, optional
        delinea
    device42 : ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42, default is Undefined, optional
        device42
    doppler : ExternalSecretsIoV1beta1SecretStoreSpecProviderDoppler, default is Undefined, optional
        doppler
    fake : ExternalSecretsIoV1beta1SecretStoreSpecProviderFake, default is Undefined, optional
        fake
    fortanix : ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanix, default is Undefined, optional
        fortanix
    gcpsm : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsm, default is Undefined, optional
        gcpsm
    gitlab : ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlab, default is Undefined, optional
        gitlab
    ibm : ExternalSecretsIoV1beta1SecretStoreSpecProviderIbm, default is Undefined, optional
        ibm
    infisical : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisical, default is Undefined, optional
        infisical
    keepersecurity : ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurity, default is Undefined, optional
        keepersecurity
    kubernetes : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetes, default is Undefined, optional
        kubernetes
    onboardbase : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbase, default is Undefined, optional
        onboardbase
    onepassword : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepassword, default is Undefined, optional
        onepassword
    oracle : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracle, default is Undefined, optional
        oracle
    passbolt : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassbolt, default is Undefined, optional
        passbolt
    passworddepot : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepot, default is Undefined, optional
        passworddepot
    pulumi : ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumi, default is Undefined, optional
        pulumi
    scaleway : ExternalSecretsIoV1beta1SecretStoreSpecProviderScaleway, default is Undefined, optional
        scaleway
    secretserver : ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserver, default is Undefined, optional
        secretserver
    senhasegura : ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhasegura, default is Undefined, optional
        senhasegura
    vault : ExternalSecretsIoV1beta1SecretStoreSpecProviderVault, default is Undefined, optional
        vault
    webhook : ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhook, default is Undefined, optional
        webhook
    yandexcertificatemanager : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanager, default is Undefined, optional
        yandexcertificatemanager
    yandexlockbox : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockbox, default is Undefined, optional
        yandexlockbox
    """


    akeyless?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeyless

    alibaba?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibaba

    aws?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAws

    azurekv?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekv

    bitwardensecretsmanager?: ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanager

    chef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderChef

    conjur?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjur

    delinea?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDelinea

    device42?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42

    doppler?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDoppler

    fake?: ExternalSecretsIoV1beta1SecretStoreSpecProviderFake

    fortanix?: ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanix

    gcpsm?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsm

    gitlab?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlab

    ibm?: ExternalSecretsIoV1beta1SecretStoreSpecProviderIbm

    infisical?: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisical

    keepersecurity?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurity

    kubernetes?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetes

    onboardbase?: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbase

    onepassword?: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepassword

    oracle?: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracle

    passbolt?: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassbolt

    passworddepot?: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepot

    pulumi?: ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumi

    scaleway?: ExternalSecretsIoV1beta1SecretStoreSpecProviderScaleway

    secretserver?: ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserver

    senhasegura?: ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhasegura

    vault?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVault

    webhook?: ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhook

    yandexcertificatemanager?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanager

    yandexlockbox?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockbox


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeyless:
    """
    Akeyless configures this store to sync secrets using Akeyless Vault provider

    Attributes
    ----------
    akeylessGWApiURL : str, default is Undefined, required
        Akeyless GW API Url from which the secrets to be fetched from.
    authSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRef, default is Undefined, required
        auth secret ref
    caBundle : str, default is Undefined, optional
        PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
        if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessCaProvider, default is Undefined, optional
        ca provider
    """


    akeylessGWApiURL: str

    authSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRef

    caBundle?: str

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessCaProvider


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRef:
    """
    Auth configures how the operator authenticates with Akeyless.

    Attributes
    ----------
    kubernetesAuth : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth, default is Undefined, optional
        kubernetes auth
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesAuth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth:
    """
    Kubernetes authenticates with Akeyless by passing the ServiceAccount
    token stored in the named Secret resource.

    Attributes
    ----------
    accessID : str, default is Undefined, required
        the Akeyless Kubernetes auth-method access-id
    k8sConfName : str, default is Undefined, required
        Kubernetes-auth configuration name in Akeyless-Gateway
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef, default is Undefined, optional
        service account ref
    """


    accessID: str

    k8sConfName: str

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef

    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef:
    """
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Akeyless. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef:
    """
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Akeyless. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef:
    """
    Reference to a Secret that contains the details
    to authenticate with Akeyless.

    Attributes
    ----------
    accessID : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID, default is Undefined, optional
        access ID
    accessType : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType, default is Undefined, optional
        access type
    accessTypeParam : ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam, default is Undefined, optional
        access type param
    """


    accessID?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID

    accessType?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType

    accessTypeParam?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID:
    """
    The SecretAccessID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAkeylessCaProvider:
    """
    The provider for the CA bundle to use to validate Akeyless Gateway certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibaba:
    """
    Alibaba configures this store to sync secrets using Alibaba Cloud provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuth, default is Undefined, required
        auth
    regionID : str, default is Undefined, required
        Alibaba Region to be used for the provider
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuth

    regionID: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuth:
    """
    AlibabaAuth contains a secretRef for credentials.

    Attributes
    ----------
    rrsa : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthRrsa, default is Undefined, optional
        rrsa
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRef, default is Undefined, optional
        secret ref
    """


    rrsa?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthRrsa

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthRrsa:
    """
    Authenticate against Alibaba using RRSA.

    Attributes
    ----------
    oidcProviderArn : str, default is Undefined, required
        oidc provider arn
    oidcTokenFilePath : str, default is Undefined, required
        oidc token file path
    roleArn : str, default is Undefined, required
        role arn
    sessionName : str, default is Undefined, required
        session name
    """


    oidcProviderArn: str

    oidcTokenFilePath: str

    roleArn: str

    sessionName: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRef:
    """
    AlibabaAuthSecretRef holds secret references for Alibaba credentials.

    Attributes
    ----------
    accessKeyIDSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef, default is Undefined, required
        access key ID secret ref
    accessKeySecretSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef, default is Undefined, required
        access key secret secret ref
    """


    accessKeyIDSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef

    accessKeySecretSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef:
    """
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef:
    """
    The AccessKeySecret is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAws:
    """
    AWS configures this store to sync secrets using AWS Secret Manager provider

    Attributes
    ----------
    additionalRoles : [str], default is Undefined, optional
        AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuth, default is Undefined, optional
        auth
    externalID : str, default is Undefined, optional
        AWS External ID set on assumed IAM roles
    region : str, default is Undefined, required
        AWS Region to be used for the provider
    role : str, default is Undefined, optional
        Role is a Role ARN which the provider will assume
    secretsManager : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSecretsManager, default is Undefined, optional
        secrets manager
    service : str, default is Undefined, required
        Service defines which service should be used to fetch the secrets
    sessionTags : [ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSessionTagsItems0], default is Undefined, optional
        AWS STS assume role session tags
    transitiveTagKeys : [str], default is Undefined, optional
        AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
    """


    additionalRoles?: [str]

    auth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuth

    externalID?: str

    region: str

    role?: str

    secretsManager?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSecretsManager

    service: "SecretsManager" | "ParameterStore"

    sessionTags?: [ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSessionTagsItems0]

    transitiveTagKeys?: [str]


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuth:
    """
    Auth defines the information necessary to authenticate against AWS
    if not set aws sdk will infer credentials from your environment
    see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials

    Attributes
    ----------
    jwt : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwt, default is Undefined, optional
        jwt
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRef, default is Undefined, optional
        secret ref
    """


    jwt?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwt

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwt:
    """
    Authenticate against AWS using service account tokens.

    Attributes
    ----------
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwtServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthJwtServiceAccountRef:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRef:
    """
    AWSAuthSecretRef holds secret references for AWS credentials
    both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.

    Attributes
    ----------
    accessKeyIDSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """


    accessKeyIDSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef

    sessionTokenSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef:
    """
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef:
    """
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSecretsManager:
    """
    SecretsManager defines how the provider behaves when interacting with AWS SecretsManager

    Attributes
    ----------
    forceDeleteWithoutRecovery : bool, default is Undefined, optional
        Specifies whether to delete the secret without any recovery window. You
        can't use both this parameter and RecoveryWindowInDays in the same call.
        If you don't use either, then by default Secrets Manager uses a 30 day
        recovery window.
        see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
    recoveryWindowInDays : int, default is Undefined, optional
        The number of days from 7 to 30 that Secrets Manager waits before
        permanently deleting the secret. You can't use both this parameter and
        ForceDeleteWithoutRecovery in the same call. If you don't use either,
        then by default Secrets Manager uses a 30 day recovery window.
        see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
    """


    forceDeleteWithoutRecovery?: bool

    recoveryWindowInDays?: int


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAwsSessionTagsItems0:
    """
    external secrets io v1beta1 secret store spec provider aws session tags items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    value : str, default is Undefined, required
        value
    """


    key: str

    value: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekv:
    """
    AzureKV configures this store to sync secrets using Azure Key Vault provider

    Attributes
    ----------
    authSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRef, default is Undefined, optional
        auth secret ref
    authType : str, default is "ServicePrincipal", optional
        Auth type defines how to authenticate to the keyvault service.
        Valid values are:
        - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
        - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
    environmentType : str, default is "PublicCloud", optional
        EnvironmentType specifies the Azure cloud environment endpoints to use for
        connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
        The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
        PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
    identityId : str, default is Undefined, optional
        If multiple Managed Identity is assigned to the pod, you can select the one to be used
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvServiceAccountRef, default is Undefined, optional
        service account ref
    tenantId : str, default is Undefined, optional
        TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
    vaultUrl : str, default is Undefined, required
        Vault Url from which the secrets to be fetched from.
    """


    authSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRef

    authType?: "ServicePrincipal" | "ManagedIdentity" | "WorkloadIdentity" = "ServicePrincipal"

    environmentType?: "PublicCloud" | "USGovernmentCloud" | "ChinaCloud" | "GermanCloud" = "PublicCloud"

    identityId?: str

    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvServiceAccountRef

    tenantId?: str

    vaultUrl: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRef:
    """
    Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.

    Attributes
    ----------
    clientCertificate : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate, default is Undefined, optional
        client certificate
    clientId : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientID, default is Undefined, optional
        client Id
    clientSecret : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret, default is Undefined, optional
        client secret
    tenantId : ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefTenantID, default is Undefined, optional
        tenant Id
    """


    clientCertificate?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate

    clientId?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientID

    clientSecret?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret

    tenantId?: ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefTenantID


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate:
    """
    The Azure ClientCertificate of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientID:
    """
    The Azure clientId of the service principle or managed identity used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret:
    """
    The Azure ClientSecret of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvAuthSecretRefTenantID:
    """
    The Azure tenantId of the managed identity used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderAzurekvServiceAccountRef:
    """
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanager:
    """
    BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider

    Attributes
    ----------
    apiURL : str, default is Undefined, optional
        api URL
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuth, default is Undefined, required
        auth
    bitwardenServerSDKURL : str, default is Undefined, optional
        bitwarden server s d k URL
    caBundle : str, default is Undefined, required
        Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
        can be performed.
    identityURL : str, default is Undefined, optional
        identity URL
    organizationID : str, default is Undefined, required
        OrganizationID determines which organization this secret store manages.
    projectID : str, default is Undefined, required
        ProjectID determines which project this secret store manages.
    """


    apiURL?: str

    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuth

    bitwardenServerSDKURL?: str

    caBundle: str

    identityURL?: str

    organizationID: str

    projectID: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuth:
    """
    Auth configures how secret-manager authenticates with a bitwarden machine account instance.
    Make sure that the token being used has permissions on the given secret.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef:
    """
    BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.

    Attributes
    ----------
    credentials : ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials, default is Undefined, required
        credentials
    """


    credentials: ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials:
    """
    AccessToken used for the bitwarden instance.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderChef:
    """
    Chef configures this store to sync secrets with chef server

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuth, default is Undefined, required
        auth
    serverUrl : str, default is Undefined, required
        ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
    username : str, default is Undefined, required
        UserName should be the user ID on the chef server
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuth

    serverUrl: str

    username: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuth:
    """
    Auth defines the information necessary to authenticate against chef Server

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRef:
    """
    ChefAuthSecretRef holds secret references for chef server login credentials.

    Attributes
    ----------
    privateKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef, default is Undefined, required
        private key secret ref
    """


    privateKeySecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef:
    """
    SecretKey is the Signing Key in PEM format, used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjur:
    """
    Conjur configures this store to sync secrets using conjur provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuth, default is Undefined, required
        auth
    caBundle : str, default is Undefined, optional
        ca bundle
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurCaProvider, default is Undefined, optional
        ca provider
    url : str, default is Undefined, required
        url
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuth

    caBundle?: str

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurCaProvider

    url: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuth:
    """
    external secrets io v1beta1 secret store spec provider conjur auth

    Attributes
    ----------
    apikey : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikey, default is Undefined, optional
        apikey
    jwt : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwt, default is Undefined, optional
        jwt
    """


    apikey?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikey

    jwt?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwt


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikey:
    """
    external secrets io v1beta1 secret store spec provider conjur auth apikey

    Attributes
    ----------
    account : str, default is Undefined, required
        account
    apiKeyRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyAPIKeyRef, default is Undefined, required
        api key ref
    userRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyUserRef, default is Undefined, required
        user ref
    """


    account: str

    apiKeyRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyAPIKeyRef

    userRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyUserRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyAPIKeyRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthApikeyUserRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwt:
    """
    external secrets io v1beta1 secret store spec provider conjur auth jwt

    Attributes
    ----------
    account : str, default is Undefined, required
        account
    hostId : str, default is Undefined, optional
        Optional HostID for JWT authentication. This may be used depending
        on how the Conjur JWT authenticator policy is configured.
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    serviceID : str, default is Undefined, required
        The conjur authn jwt webservice id
    """


    account: str

    hostId?: str

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtSecretRef

    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtServiceAccountRef

    serviceID: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtSecretRef:
    """
    Optional SecretRef that refers to a key in a Secret resource containing JWT token to
    authenticate with Conjur using the JWT authentication method.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurAuthJwtServiceAccountRef:
    """
    Optional ServiceAccountRef specifies the Kubernetes service account for which to request
    a token for with the `TokenRequest` API.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderConjurCaProvider:
    """
    Used to provide custom certificate authority (CA) certificates
    for a secret store. The CAProvider points to a Secret or ConfigMap resource
    that contains a PEM-encoded certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDelinea:
    """
    Delinea DevOps Secrets Vault
    https://docs.delinea.com/online-help/products/devops-secrets-vault/current

    Attributes
    ----------
    clientId : ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientID, default is Undefined, required
        client Id
    clientSecret : ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecret, default is Undefined, required
        client secret
    tenant : str, default is Undefined, required
        Tenant is the chosen hostname / site name.
    tld : str, default is Undefined, optional
        TLD is based on the server location that was chosen during provisioning.
        If unset, defaults to "com".
    urlTemplate : str, default is Undefined, optional
        URLTemplate
        If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
    """


    clientId: ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientID

    clientSecret: ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecret

    tenant: str

    tld?: str

    urlTemplate?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientID:
    """
    ClientID is the non-secret part of the credential.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientIDSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientIDSecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientIDSecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecret:
    """
    ClientSecret is the secret part of the credential.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecretSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecretSecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDelineaClientSecretSecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42:
    """
    Device42 configures this store to sync secrets using the Device42 provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42Auth, default is Undefined, required
        auth
    host : str, default is Undefined, required
        URL configures the Device42 instance URL.
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42Auth

    host: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42Auth:
    """
    Auth configures how secret-manager authenticates with a Device42 instance.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider device42 auth secret ref

    Attributes
    ----------
    credentials : ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRefCredentials, default is Undefined, optional
        credentials
    """


    credentials?: ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRefCredentials


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDevice42AuthSecretRefCredentials:
    """
    Username / Password is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDoppler:
    """
    Doppler configures this store to sync secrets using the Doppler provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuth, default is Undefined, required
        auth
    config : str, default is Undefined, optional
        Doppler config (required if not using a Service Token)
    format : str, default is Undefined, optional
        Format enables the downloading of secrets as a file (string)
    nameTransformer : str, default is Undefined, optional
        Environment variable compatible name transforms that change secret names to a different format
    project : str, default is Undefined, optional
        Doppler project (required if not using a Service Token)
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuth

    config?: str

    format?: "json" | "dotnet-json" | "env" | "yaml" | "docker"

    nameTransformer?: "upper-camel" | "camel" | "lower-snake" | "tf-var" | "dotnet-env" | "lower-kebab"

    project?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuth:
    """
    Auth configures how the Operator authenticates with the Doppler API

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider doppler auth secret ref

    Attributes
    ----------
    dopplerToken : ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken, default is Undefined, required
        doppler token
    """


    dopplerToken: ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken:
    """
    The DopplerToken is used for authentication.
    See https://docs.doppler.com/reference/api#authentication for auth token types.
    The Key attribute defaults to dopplerToken if not specified.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderFake:
    """
    Fake configures a store with static key/value pairs

    Attributes
    ----------
    data : [ExternalSecretsIoV1beta1SecretStoreSpecProviderFakeDataItems0], default is Undefined, required
        data
    """


    data: [ExternalSecretsIoV1beta1SecretStoreSpecProviderFakeDataItems0]


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderFakeDataItems0:
    """
    external secrets io v1beta1 secret store spec provider fake data items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    value : str, default is Undefined, optional
        value
    valueMap : {str:str}, default is Undefined, optional
        Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
    version : str, default is Undefined, optional
        version
    """


    key: str

    value?: str

    valueMap?: {str:str}

    version?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanix:
    """
    Fortanix configures this store to sync secrets using the Fortanix provider

    Attributes
    ----------
    apiKey : ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKey, default is Undefined, optional
        api key
    apiUrl : str, default is Undefined, optional
        APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
    """


    apiKey?: ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKey

    apiUrl?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKey:
    """
    APIKey is the API token to access SDKMS Applications.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKeySecretRef, default is Undefined, optional
        secret ref
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderFortanixAPIKeySecretRef:
    """
    SecretRef is a reference to a secret containing the SDKMS API Key.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsm:
    """
    GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuth, default is Undefined, optional
        auth
    location : str, default is Undefined, optional
        Location optionally defines a location for a secret
    projectID : str, default is Undefined, optional
        ProjectID project where secret is located
    """


    auth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuth

    location?: str

    projectID?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuth:
    """
    Auth defines the information necessary to authenticate against GCP

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRef, default is Undefined, optional
        secret ref
    workloadIdentity : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentity, default is Undefined, optional
        workload identity
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRef

    workloadIdentity?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentity


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider gcpsm auth secret ref

    Attributes
    ----------
    secretAccessKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    """


    secretAccessKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentity:
    """
    external secrets io v1beta1 secret store spec provider gcpsm auth workload identity

    Attributes
    ----------
    clusterLocation : str, default is Undefined, required
        cluster location
    clusterName : str, default is Undefined, required
        cluster name
    clusterProjectID : str, default is Undefined, optional
        cluster project ID
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef, default is Undefined, required
        service account ref
    """


    clusterLocation: str

    clusterName: str

    clusterProjectID?: str

    serviceAccountRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlab:
    """
    GitLab configures this store to sync secrets using GitLab Variables provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuth, default is Undefined, required
        auth
    environment : str, default is Undefined, optional
        Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
    groupIDs : [str], default is Undefined, optional
        GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
    inheritFromGroups : bool, default is Undefined, optional
        InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
    projectID : str, default is Undefined, optional
        ProjectID specifies a project where secrets are located.
    url : str, default is Undefined, optional
        URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuth

    environment?: str

    groupIDs?: [str]

    inheritFromGroups?: bool

    projectID?: str

    url?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuth:
    """
    Auth configures how secret-manager authenticates with a GitLab instance.

    Attributes
    ----------
    SecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRef, default is Undefined, required
        secret ref
    """


    SecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider gitlab auth secret ref

    Attributes
    ----------
    accessToken : ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRefAccessToken, default is Undefined, optional
        access token
    """


    accessToken?: ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRefAccessToken


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderGitlabAuthSecretRefAccessToken:
    """
    AccessToken is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderIbm:
    """
    IBM configures this store to sync secrets using IBM Cloud provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuth, default is Undefined, required
        auth
    serviceUrl : str, default is Undefined, optional
        ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuth

    serviceUrl?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuth:
    """
    Auth configures how secret-manager authenticates with the IBM secrets manager.

    Attributes
    ----------
    containerAuth : ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthContainerAuth, default is Undefined, optional
        container auth
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRef, default is Undefined, optional
        secret ref
    """


    containerAuth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthContainerAuth

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthContainerAuth:
    """
    IBM Container-based auth with IAM Trusted Profile.

    Attributes
    ----------
    iamEndpoint : str, default is Undefined, optional
        iam endpoint
    profile : str, default is Undefined, required
        the IBM Trusted Profile
    tokenLocation : str, default is Undefined, optional
        Location the token is mounted on the pod
    """


    iamEndpoint?: str

    profile: str

    tokenLocation?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider ibm auth secret ref

    Attributes
    ----------
    secretApiKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef, default is Undefined, optional
        secret Api key secret ref
    """


    secretApiKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisical:
    """
    Infisical configures this store to sync secrets using the Infisical provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuth, default is Undefined, required
        auth
    hostAPI : str, default is "https://app.infisical.com/api", optional
        host API
    secretsScope : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalSecretsScope, default is Undefined, required
        secrets scope
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuth

    hostAPI?: str = "https://app.infisical.com/api"

    secretsScope: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalSecretsScope


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuth:
    """
    Auth configures how the Operator authenticates with the Infisical API

    Attributes
    ----------
    universalAuthCredentials : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials, default is Undefined, optional
        universal auth credentials
    """


    universalAuthCredentials?: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials:
    """
    external secrets io v1beta1 secret store spec provider infisical auth universal auth credentials

    Attributes
    ----------
    clientId : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientID, default is Undefined, required
        client Id
    clientSecret : ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret, default is Undefined, required
        client secret
    """


    clientId: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientID

    clientSecret: ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientID:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderInfisicalSecretsScope:
    """
    external secrets io v1beta1 secret store spec provider infisical secrets scope

    Attributes
    ----------
    environmentSlug : str, default is Undefined, required
        environment slug
    projectSlug : str, default is Undefined, required
        project slug
    secretsPath : str, default is "/", optional
        secrets path
    """


    environmentSlug: str

    projectSlug: str

    secretsPath?: str = "/"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurity:
    """
    KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider

    Attributes
    ----------
    authRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurityAuthRef, default is Undefined, required
        auth ref
    folderID : str, default is Undefined, required
        folder ID
    """


    authRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurityAuthRef

    folderID: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKeepersecurityAuthRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetes:
    """
    Kubernetes configures this store to sync secrets using a Kubernetes cluster provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuth, default is Undefined, optional
        auth
    authRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthRef, default is Undefined, optional
        auth ref
    remoteNamespace : str, default is "default", optional
        Remote namespace to fetch the secrets from
    server : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServer, default is Undefined, optional
        server
    """


    auth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuth

    authRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthRef

    remoteNamespace?: str = "default"

    server?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServer


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuth:
    """
    Auth configures how secret-manager authenticates with a Kubernetes instance.

    Attributes
    ----------
    cert : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCert, default is Undefined, optional
        cert
    serviceAccount : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthServiceAccount, default is Undefined, optional
        service account
    token : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthToken, default is Undefined, optional
        token
    """


    cert?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCert

    serviceAccount?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthServiceAccount

    token?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthToken


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCert:
    """
    has both clientCert and clientKey as secretKeySelector

    Attributes
    ----------
    clientCert : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientCert, default is Undefined, optional
        client cert
    clientKey : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientKey, default is Undefined, optional
        client key
    """


    clientCert?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientCert

    clientKey?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientKey


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientCert:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthCertClientKey:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthRef:
    """
    A reference to a secret that contains the auth information.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthServiceAccount:
    """
    points to a service account that should be used for authentication

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthToken:
    """
    use static token to authenticate with

    Attributes
    ----------
    bearerToken : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthTokenBearerToken, default is Undefined, optional
        bearer token
    """


    bearerToken?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthTokenBearerToken


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesAuthTokenBearerToken:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServer:
    """
    configures the Kubernetes server Address.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        CABundle is a base64-encoded CA certificate
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServerCaProvider, default is Undefined, optional
        ca provider
    url : str, default is "kubernetes.default", optional
        configures the Kubernetes server Address.
    """


    caBundle?: str

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServerCaProvider

    url?: str = "kubernetes.default"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderKubernetesServerCaProvider:
    """
    see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbase:
    """
    Onboardbase configures this store to sync secrets using the Onboardbase provider

    Attributes
    ----------
    apiHost : str, default is "https://public.onboardbase.com/api/v1/", required
        APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuth, default is Undefined, required
        auth
    environment : str, default is "development", required
        Environment is the name of an environmnent within a project to pull the secrets from
    project : str, default is "development", required
        Project is an onboardbase project that the secrets should be pulled from
    """


    apiHost: str = "https://public.onboardbase.com/api/v1/"

    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuth

    environment: str = "development"

    project: str = "development"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuth:
    """
    Auth configures how the Operator authenticates with the Onboardbase API

    Attributes
    ----------
    apiKeyRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthAPIKeyRef, default is Undefined, required
        api key ref
    passcodeRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthPasscodeRef, default is Undefined, required
        passcode ref
    """


    apiKeyRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthAPIKeyRef

    passcodeRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthPasscodeRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthAPIKeyRef:
    """
    OnboardbaseAPIKey is the APIKey generated by an admin account.
    It is used to recognize and authorize access to a project and environment within onboardbase

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnboardbaseAuthPasscodeRef:
    """
    OnboardbasePasscode is the passcode attached to the API Key

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepassword:
    """
    OnePassword configures this store to sync secrets using the 1Password Cloud provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuth, default is Undefined, required
        auth
    connectHost : str, default is Undefined, required
        ConnectHost defines the OnePassword Connect Server to connect to
    vaults : {str:int}, default is Undefined, required
        Vaults defines which OnePassword vaults to search in which order
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuth

    connectHost: str

    vaults: {str:int}


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuth:
    """
    Auth defines the information necessary to authenticate against OnePassword Connect Server

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRef:
    """
    OnePasswordAuthSecretRef holds secret references for 1Password credentials.

    Attributes
    ----------
    connectTokenSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef, default is Undefined, required
        connect token secret ref
    """


    connectTokenSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef:
    """
    The ConnectToken is used for authentication to a 1Password Connect Server.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracle:
    """
    Oracle configures this store to sync secrets using Oracle Vault provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuth, default is Undefined, optional
        auth
    compartment : str, default is Undefined, optional
        Compartment is the vault compartment OCID.
        Required for PushSecret
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the OCID of the encryption key within the vault.
        Required for PushSecret
    principalType : str, default is Undefined, optional
        The type of principal to use for authentication. If left blank, the Auth struct will
        determine the principal type. This optional field must be specified if using
        workload identity.
    region : str, default is Undefined, required
        Region is the region where vault is located.
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleServiceAccountRef, default is Undefined, optional
        service account ref
    vault : str, default is Undefined, required
        Vault is the vault's OCID of the specific vault where secret is located.
    """


    auth?: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuth

    compartment?: str

    encryptionKey?: str

    principalType?: "" | "UserPrincipal" | "InstancePrincipal" | "Workload"

    region: str

    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleServiceAccountRef

    vault: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuth:
    """
    Auth configures how secret-manager authenticates with the Oracle Vault.
    If empty, use the instance principal, otherwise the user credentials specified in Auth.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRef, default is Undefined, required
        secret ref
    tenancy : str, default is Undefined, required
        Tenancy is the tenancy OCID where user is located.
    user : str, default is Undefined, required
        User is an access OCID specific to the account.
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRef

    tenancy: str

    user: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRef:
    """
    SecretRef to pass through sensitive information.

    Attributes
    ----------
    fingerprint : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefFingerprint, default is Undefined, required
        fingerprint
    privatekey : ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefPrivatekey, default is Undefined, required
        privatekey
    """


    fingerprint: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefFingerprint

    privatekey: ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefPrivatekey


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefFingerprint:
    """
    Fingerprint is the fingerprint of the API private key.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleAuthSecretRefPrivatekey:
    """
    PrivateKey is the user's API Signing Key in PEM format, used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderOracleServiceAccountRef:
    """
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassbolt:
    """
    external secrets io v1beta1 secret store spec provider passbolt

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuth, default is Undefined, required
        auth
    host : str, default is Undefined, required
        Host defines the Passbolt Server to connect to
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuth

    host: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuth:
    """
    Auth defines the information necessary to authenticate against Passbolt Server

    Attributes
    ----------
    passwordSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPasswordSecretRef, default is Undefined, required
        password secret ref
    privateKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef, default is Undefined, required
        private key secret ref
    """


    passwordSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPasswordSecretRef

    privateKeySecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPasswordSecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepot:
    """
    Configures a store to sync secrets with a Password Depot instance.

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuth, default is Undefined, required
        auth
    database : str, default is Undefined, required
        Database to use as source
    host : str, default is Undefined, required
        URL configures the Password Depot instance URL.
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuth

    database: str

    host: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuth:
    """
    Auth configures how secret-manager authenticates with a Password Depot instance.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRef:
    """
    external secrets io v1beta1 secret store spec provider passworddepot auth secret ref

    Attributes
    ----------
    credentials : ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials, default is Undefined, optional
        credentials
    """


    credentials?: ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials:
    """
    Username / Password is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumi:
    """
    Pulumi configures this store to sync secrets using the Pulumi provider

    Attributes
    ----------
    accessToken : ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessToken, default is Undefined, required
        access token
    apiUrl : str, default is "https://api.pulumi.com", optional
        APIURL is the URL of the Pulumi API.
    environment : str, default is Undefined, required
        Environment are YAML documents composed of static key-value pairs, programmatic expressions,
        dynamically retrieved values from supported providers including all major clouds,
        and other Pulumi ESC environments.
        To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
    organization : str, default is Undefined, required
        Organization are a space to collaborate on shared projects and stacks.
        To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
    """


    accessToken: ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessToken

    apiUrl?: str = "https://api.pulumi.com"

    environment: str

    organization: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessToken:
    """
    AccessToken is the access tokens to sign in to the Pulumi Cloud Console.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessTokenSecretRef, default is Undefined, optional
        secret ref
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessTokenSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderPulumiAccessTokenSecretRef:
    """
    SecretRef is a reference to a secret containing the Pulumi API token.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderScaleway:
    """
    Scaleway

    Attributes
    ----------
    accessKey : ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKey, default is Undefined, required
        access key
    apiUrl : str, default is Undefined, optional
        APIURL is the url of the api to use. Defaults to https://api.scaleway.com
    projectId : str, default is Undefined, required
        ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
    region : str, default is Undefined, required
        Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
    secretKey : ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKey, default is Undefined, required
        secret key
    """


    accessKey: ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKey

    apiUrl?: str

    projectId: str

    region: str

    secretKey: ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKey


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKey:
    """
    AccessKey is the non-secret part of the api key.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKeySecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKeySecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewayAccessKeySecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKey:
    """
    SecretKey is the non-secret part of the api key.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKeySecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKeySecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderScalewaySecretKeySecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserver:
    """
    SecretServer configures this store to sync secrets using SecretServer provider
    https://docs.delinea.com/online-help/secret-server/start.htm

    Attributes
    ----------
    password : ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPassword, default is Undefined, required
        password
    serverURL : str, default is Undefined, required
        ServerURL
        URL to your secret server installation
    username : ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsername, default is Undefined, required
        username
    """


    password: ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPassword

    serverURL: str

    username: ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsername


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPassword:
    """
    Password is the secret server account password.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPasswordSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPasswordSecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverPasswordSecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsername:
    """
    Username is the secret server account username.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsernameSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsernameSecretRef

    value?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSecretserverUsernameSecretRef:
    """
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhasegura:
    """
    Senhasegura configures this store to sync secrets using senhasegura provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuth, default is Undefined, required
        auth
    ignoreSslCertificate : bool, default is Undefined, optional
        IgnoreSslCertificate defines if SSL certificate must be ignored
    module : str, default is Undefined, required
        Module defines which senhasegura module should be used to get secrets
    url : str, default is Undefined, required
        URL of senhasegura
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuth

    ignoreSslCertificate?: bool = False

    module: str

    url: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuth:
    """
    Auth defines parameters to authenticate in senhasegura

    Attributes
    ----------
    clientId : str, default is Undefined, required
        client Id
    clientSecretSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    """


    clientId: str

    clientSecretSecretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVault:
    """
    Vault configures this store to sync secrets using Hashi provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuth, default is Undefined, required
        auth
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate Vault server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultCaProvider, default is Undefined, optional
        ca provider
    forwardInconsistent : bool, default is Undefined, optional
        ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
        leader instead of simply retrying within a loop. This can increase performance if
        the option is enabled serverside.
        https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
    headers : {str:str}, default is Undefined, optional
        Headers to be added in Vault request
    namespace : str, default is Undefined, optional
        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
        Vault environments to support Secure Multi-tenancy. e.g: "ns1".
        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
    path : str, default is Undefined, optional
        Path is the mount path of the Vault KV backend endpoint, e.g:
        "secret". The v2 KV secret engine version specific "/data" path suffix
        for fetching secrets from Vault is optional and will be appended
        if not present in specified path.
    readYourWrites : bool, default is Undefined, optional
        ReadYourWrites ensures isolated read-after-write semantics by
        providing discovered cluster replication states in each request.
        More information about eventual consistency in Vault can be found here
        https://www.vaultproject.io/docs/enterprise/consistency
    server : str, default is Undefined, required
        Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
    tls : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLS, default is Undefined, optional
        tls
    version : str, default is "v2", optional
        Version is the Vault KV secret engine version. This can be either "v1" or
        "v2". Version defaults to "v2".
    """


    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuth

    caBundle?: str

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultCaProvider

    forwardInconsistent?: bool

    headers?: {str:str}

    namespace?: str

    path?: str

    readYourWrites?: bool

    server: str

    tls?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLS

    version?: "v1" | "v2" = "v2"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuth:
    """
    Auth configures how secret-manager authenticates with the Vault server.

    Attributes
    ----------
    appRole : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRole, default is Undefined, optional
        app role
    cert : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCert, default is Undefined, optional
        cert
    iam : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIam, default is Undefined, optional
        iam
    jwt : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwt, default is Undefined, optional
        jwt
    kubernetes : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetes, default is Undefined, optional
        kubernetes
    ldap : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdap, default is Undefined, optional
        ldap
    namespace : str, default is Undefined, optional
        Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
        Namespaces is a set of features within Vault Enterprise that allows
        Vault environments to support Secure Multi-tenancy. e.g: "ns1".
        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
        This will default to Vault.Namespace field if set, or empty otherwise
    tokenSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthTokenSecretRef, default is Undefined, optional
        token secret ref
    userPass : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPass, default is Undefined, optional
        user pass
    """


    appRole?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRole

    cert?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCert

    iam?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIam

    jwt?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwt

    kubernetes?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetes

    ldap?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdap

    namespace?: str

    tokenSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthTokenSecretRef

    userPass?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPass


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRole:
    """
    AppRole authenticates with Vault using the App Role auth mechanism,
    with the role and secret stored in a Kubernetes Secret resource.

    Attributes
    ----------
    path : str, default is "approle", required
        Path where the App Role authentication backend is mounted
        in Vault, e.g: "approle"
    roleId : str, default is Undefined, optional
        RoleID configured in the App Role authentication backend when setting
        up the authentication backend in Vault.
    roleRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleRoleRef, default is Undefined, optional
        role ref
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleSecretRef, default is Undefined, required
        secret ref
    """


    path: str = "approle"

    roleId?: str

    roleRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleRoleRef

    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleRoleRef:
    """
    Reference to a key in a Secret that contains the App Role ID used
    to authenticate with Vault.
    The `key` field must be specified and denotes which entry within the Secret
    resource is used as the app role id.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthAppRoleSecretRef:
    """
    Reference to a key in a Secret that contains the App Role secret used
    to authenticate with Vault.
    The `key` field must be specified and denotes which entry within the Secret
    resource is used as the app role secret.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCert:
    """
    Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
    Cert authentication method

    Attributes
    ----------
    clientCert : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertClientCert, default is Undefined, optional
        client cert
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertSecretRef, default is Undefined, optional
        secret ref
    """


    clientCert?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertClientCert

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertClientCert:
    """
    ClientCert is a certificate to authenticate using the Cert Vault
    authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthCertSecretRef:
    """
    SecretRef to a key in a Secret resource containing client private key to
    authenticate with Vault using the Cert authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIam:
    """
    Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
    AWS IAM authentication method

    Attributes
    ----------
    externalID : str, default is Undefined, optional
        AWS External ID set on assumed IAM roles
    jwt : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwt, default is Undefined, optional
        jwt
    path : str, default is Undefined, optional
        Path where the AWS auth method is enabled in Vault, e.g: "aws"
    region : str, default is Undefined, optional
        AWS region
    role : str, default is Undefined, optional
        This is the AWS role to be assumed before talking to vault
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRef, default is Undefined, optional
        secret ref
    vaultAwsIamServerID : str, default is Undefined, optional
        X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
    vaultRole : str, default is Undefined, required
        Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
    """


    externalID?: str

    jwt?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwt

    path?: str

    region?: str

    role?: str

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRef

    vaultAwsIamServerID?: str

    vaultRole: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwt:
    """
    Specify a service account with IRSA enabled

    Attributes
    ----------
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRef:
    """
    Specify credentials in a Secret object

    Attributes
    ----------
    accessKeyIDSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """


    accessKeyIDSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef

    sessionTokenSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef:
    """
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef:
    """
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwt:
    """
    Jwt authenticates with Vault by passing role and JWT token using the
    JWT/OIDC authentication method

    Attributes
    ----------
    kubernetesServiceAccountToken : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken, default is Undefined, optional
        kubernetes service account token
    path : str, default is "jwt", required
        Path where the JWT authentication backend is mounted
        in Vault, e.g: "jwt"
    role : str, default is Undefined, optional
        Role is a JWT role to authenticate using the JWT/OIDC Vault
        authentication method
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesServiceAccountToken?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken

    path: str = "jwt"

    role?: str

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken:
    """
    Optional ServiceAccountToken specifies the Kubernetes service account for which to request
    a token for with the `TokenRequest` API.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Optional audiences field that will be used to request a temporary Kubernetes service
        account token for the service account referenced by `serviceAccountRef`.
        Defaults to a single audience `vault` it not specified.
        Deprecated: use serviceAccountRef.Audiences instead
    expirationSeconds : int, default is Undefined, optional
        Optional expiration time in seconds that will be used to request a temporary
        Kubernetes service account token for the service account referenced by
        `serviceAccountRef`.
        Deprecated: this will be removed in the future.
        Defaults to 10 minutes.
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef, default is Undefined, required
        service account ref
    """


    audiences?: [str]

    expirationSeconds?: int

    serviceAccountRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef:
    """
    Service account field containing the name of a kubernetes ServiceAccount.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthJwtSecretRef:
    """
    Optional SecretRef that refers to a key in a Secret resource containing JWT token to
    authenticate with Vault using the JWT/OIDC authentication method.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetes:
    """
    Kubernetes authenticates with Vault by passing the ServiceAccount
    token stored in the named Secret resource to the Vault server.

    Attributes
    ----------
    mountPath : str, default is "kubernetes", required
        Path where the Kubernetes authentication backend is mounted in Vault, e.g:
        "kubernetes"
    role : str, default is Undefined, required
        A required field containing the Vault Role to assume. A Role binds a
        Kubernetes ServiceAccount with a set of Vault policies.
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef, default is Undefined, optional
        service account ref
    """


    mountPath: str = "kubernetes"

    role: str

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesSecretRef

    serviceAccountRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesSecretRef:
    """
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Vault. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef:
    """
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Vault. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdap:
    """
    Ldap authenticates with Vault by passing username/password pair using
    the LDAP authentication method

    Attributes
    ----------
    path : str, default is "ldap", required
        Path where the LDAP authentication backend is mounted
        in Vault, e.g: "ldap"
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdapSecretRef, default is Undefined, optional
        secret ref
    username : str, default is Undefined, required
        Username is a LDAP user name used to authenticate using the LDAP Vault
        authentication method
    """


    path: str = "ldap"

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdapSecretRef

    username: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthLdapSecretRef:
    """
    SecretRef to a key in a Secret resource containing password for the LDAP
    user used to authenticate with Vault using the LDAP authentication
    method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthTokenSecretRef:
    """
    TokenSecretRef authenticates with Vault by presenting a token.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPass:
    """
    UserPass authenticates with Vault by passing username/password pair

    Attributes
    ----------
    path : str, default is "user", required
        Path where the UserPassword authentication backend is mounted
        in Vault, e.g: "user"
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPassSecretRef, default is Undefined, optional
        secret ref
    username : str, default is Undefined, required
        Username is a user name used to authenticate using the UserPass Vault
        authentication method
    """


    path: str = "user"

    secretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPassSecretRef

    username: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultAuthUserPassSecretRef:
    """
    SecretRef to a key in a Secret resource containing password for the
    user used to authenticate with Vault using the UserPass authentication
    method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultCaProvider:
    """
    The provider for the CA bundle to use to validate Vault server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLS:
    """
    The configuration used for client side related TLS communication, when the Vault server
    requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
    This parameter is ignored for plain HTTP protocol connection.
    It's worth noting this configuration is different from the "TLS certificates auth method",
    which is available under the `auth.cert` section.

    Attributes
    ----------
    certSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSCertSecretRef, default is Undefined, optional
        cert secret ref
    keySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSKeySecretRef, default is Undefined, optional
        key secret ref
    """


    certSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSCertSecretRef

    keySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSCertSecretRef:
    """
    CertSecretRef is a certificate added to the transport layer
    when communicating with the Vault server.
    If no key for the Secret is specified, external-secret will default to 'tls.crt'.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderVaultTLSKeySecretRef:
    """
    KeySecretRef to a key in a Secret resource containing client private key
    added to the transport layer when communicating with the Vault server.
    If no key for the Secret is specified, external-secret will default to 'tls.key'.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhook:
    """
    Webhook configures this store to sync secrets using a generic templated webhook

    Attributes
    ----------
    body : str, default is Undefined, optional
        Body
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate webhook server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookCaProvider, default is Undefined, optional
        ca provider
    headers : {str:str}, default is Undefined, optional
        Headers
    method : str, default is Undefined, optional
        Webhook Method
    result : ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookResult, default is Undefined, required
        result
    secrets : [ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0], default is Undefined, optional
        Secrets to fill in templates
        These secrets will be passed to the templating function as key value pairs under the given name
    timeout : str, default is Undefined, optional
        Timeout
    url : str, default is Undefined, required
        Webhook url to call
    """


    body?: str

    caBundle?: str

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookCaProvider

    headers?: {str:str}

    method?: str

    result: ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookResult

    secrets?: [ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0]

    timeout?: str

    url: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookCaProvider:
    """
    The provider for the CA bundle to use to validate webhook server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookResult:
    """
    Result formatting

    Attributes
    ----------
    jsonPath : str, default is Undefined, optional
        Json path of return value
    """


    jsonPath?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0:
    """
    external secrets io v1beta1 secret store spec provider webhook secrets items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this secret in templates
    secretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0SecretRef, default is Undefined, required
        secret ref
    """


    name: str

    secretRef: ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0SecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderWebhookSecretsItems0SecretRef:
    """
    Secret ref to fill in credentials

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanager:
    """
    YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuth, default is Undefined, required
        auth
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProvider, default is Undefined, optional
        ca provider
    """


    apiEndpoint?: str

    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuth

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProvider


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuth:
    """
    Auth defines the information necessary to authenticate against Yandex Certificate Manager

    Attributes
    ----------
    authorizedKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef, default is Undefined, optional
        authorized key secret ref
    """


    authorizedKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef:
    """
    The authorized key used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProvider:
    """
    The provider for the CA bundle to use to validate Yandex.Cloud server certificate.

    Attributes
    ----------
    certSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef, default is Undefined, optional
        cert secret ref
    """


    certSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockbox:
    """
    YandexLockbox configures this store to sync secrets using Yandex Lockbox provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
    auth : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuth, default is Undefined, required
        auth
    caProvider : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProvider, default is Undefined, optional
        ca provider
    """


    apiEndpoint?: str

    auth: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuth

    caProvider?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProvider


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuth:
    """
    Auth defines the information necessary to authenticate against Yandex Lockbox

    Attributes
    ----------
    authorizedKeySecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef, default is Undefined, optional
        authorized key secret ref
    """


    authorizedKeySecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef:
    """
    The authorized key used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProvider:
    """
    The provider for the CA bundle to use to validate Yandex.Cloud server certificate.

    Attributes
    ----------
    certSecretRef : ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef, default is Undefined, optional
        cert secret ref
    """


    certSecretRef?: ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef


schema ExternalSecretsIoV1beta1SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1beta1SecretStoreSpecRetrySettings:
    """
    Used to configure http retries if failed

    Attributes
    ----------
    maxRetries : int, default is Undefined, optional
        max retries
    retryInterval : str, default is Undefined, optional
        retry interval
    """


    maxRetries?: int

    retryInterval?: str


schema ExternalSecretsIoV1beta1SecretStoreStatus:
    """
    SecretStoreStatus defines the observed state of the SecretStore.

    Attributes
    ----------
    capabilities : str, default is Undefined, optional
        SecretStoreCapabilities defines the possible operations a SecretStore can do.
    conditions : [ExternalSecretsIoV1beta1SecretStoreStatusConditionsItems0], default is Undefined, optional
        conditions
    """


    capabilities?: str

    conditions?: [ExternalSecretsIoV1beta1SecretStoreStatusConditionsItems0]


schema ExternalSecretsIoV1beta1SecretStoreStatusConditionsItems0:
    """
    external secrets io v1beta1 secret store status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


