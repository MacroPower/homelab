"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Webhook:
    """
    Webhook connects to a third party API server to handle the secrets generation
    configuration parameters in spec.
    You can specify the server, the token, and additional body parameters.
    See documentation for the full API specification for requests and responses.

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Webhook", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GeneratorsExternalSecretsIoV1alpha1WebhookSpec, default is Undefined, optional
        spec
    """


    apiVersion: "generators.external-secrets.io/v1alpha1" = "generators.external-secrets.io/v1alpha1"

    kind: "Webhook" = "Webhook"

    metadata?: v1.ObjectMeta

    spec?: GeneratorsExternalSecretsIoV1alpha1WebhookSpec


schema GeneratorsExternalSecretsIoV1alpha1WebhookSpec:
    """
    WebhookSpec controls the behavior of the external generator. Any body parameters should be passed to the server through the parameters field.

    Attributes
    ----------
    body : str, default is Undefined, optional
        Body
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate webhook server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : GeneratorsExternalSecretsIoV1alpha1WebhookSpecCaProvider, default is Undefined, optional
        ca provider
    headers : {str:str}, default is Undefined, optional
        Headers
    method : str, default is Undefined, optional
        Webhook Method
    result : GeneratorsExternalSecretsIoV1alpha1WebhookSpecResult, default is Undefined, required
        result
    secrets : [GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0], default is Undefined, optional
        Secrets to fill in templates
        These secrets will be passed to the templating function as key value pairs under the given name
    timeout : str, default is Undefined, optional
        Timeout
    url : str, default is Undefined, required
        Webhook url to call
    """


    body?: str

    caBundle?: str

    caProvider?: GeneratorsExternalSecretsIoV1alpha1WebhookSpecCaProvider

    headers?: {str:str}

    method?: str

    result: GeneratorsExternalSecretsIoV1alpha1WebhookSpecResult

    secrets?: [GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0]

    timeout?: str

    url: str


schema GeneratorsExternalSecretsIoV1alpha1WebhookSpecCaProvider:
    """
    The provider for the CA bundle to use to validate webhook server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema GeneratorsExternalSecretsIoV1alpha1WebhookSpecResult:
    """
    Result formatting

    Attributes
    ----------
    jsonPath : str, default is Undefined, optional
        Json path of return value
    """


    jsonPath?: str


schema GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0:
    """
    generators external secrets io v1alpha1 webhook spec secrets items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this secret in templates
    secretRef : GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0SecretRef, default is Undefined, required
        secret ref
    """


    name: str

    secretRef: GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0SecretRef


schema GeneratorsExternalSecretsIoV1alpha1WebhookSpecSecretsItems0SecretRef:
    """
    Secret ref to fill in credentials

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the token is found.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    """


    key?: str

    name?: str


