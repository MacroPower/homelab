"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterSecretStore:
    """
    ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.

    Attributes
    ----------
    apiVersion : str, default is "external-secrets.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterSecretStore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ExternalSecretsIoV1alpha1ClusterSecretStoreSpec, default is Undefined, optional
        spec
    status : ExternalSecretsIoV1alpha1ClusterSecretStoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "external-secrets.io/v1alpha1" = "external-secrets.io/v1alpha1"

    kind: "ClusterSecretStore" = "ClusterSecretStore"

    metadata?: v1.ObjectMeta

    spec?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpec

    status?: ExternalSecretsIoV1alpha1ClusterSecretStoreStatus


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpec:
    """
    SecretStoreSpec defines the desired state of SecretStore.

    Attributes
    ----------
    controller : str, default is Undefined, optional
        Used to select the correct ESO controller (think: ingress.ingressClassName)
        The ESO controller is instantiated with a specific controller name and filters ES based on this property
    provider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProvider, default is Undefined, required
        provider
    retrySettings : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecRetrySettings, default is Undefined, optional
        retry settings
    """


    controller?: str

    provider: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProvider

    retrySettings?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecRetrySettings


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProvider:
    """
    Used to configure the provider. Only one provider may be set

    Attributes
    ----------
    akeyless : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeyless, default is Undefined, optional
        akeyless
    alibaba : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibaba, default is Undefined, optional
        alibaba
    aws : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAws, default is Undefined, optional
        aws
    azurekv : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekv, default is Undefined, optional
        azurekv
    fake : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFake, default is Undefined, optional
        fake
    gcpsm : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsm, default is Undefined, optional
        gcpsm
    gitlab : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlab, default is Undefined, optional
        gitlab
    ibm : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbm, default is Undefined, optional
        ibm
    kubernetes : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetes, default is Undefined, optional
        kubernetes
    oracle : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracle, default is Undefined, optional
        oracle
    passworddepot : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepot, default is Undefined, optional
        passworddepot
    vault : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVault, default is Undefined, optional
        vault
    webhook : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhook, default is Undefined, optional
        webhook
    yandexlockbox : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockbox, default is Undefined, optional
        yandexlockbox
    """


    akeyless?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeyless

    alibaba?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibaba

    aws?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAws

    azurekv?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekv

    fake?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFake

    gcpsm?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsm

    gitlab?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlab

    ibm?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbm

    kubernetes?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetes

    oracle?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracle

    passworddepot?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepot

    vault?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVault

    webhook?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhook

    yandexlockbox?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockbox


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeyless:
    """
    Akeyless configures this store to sync secrets using Akeyless Vault provider

    Attributes
    ----------
    akeylessGWApiURL : str, default is Undefined, required
        Akeyless GW API Url from which the secrets to be fetched from.
    authSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRef, default is Undefined, required
        auth secret ref
    caBundle : str, default is Undefined, optional
        PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
        if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessCaProvider, default is Undefined, optional
        ca provider
    """


    akeylessGWApiURL: str

    authSecretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRef

    caBundle?: str

    caProvider?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessCaProvider


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRef:
    """
    Auth configures how the operator authenticates with Akeyless.

    Attributes
    ----------
    kubernetesAuth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth, default is Undefined, optional
        kubernetes auth
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesAuth?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth:
    """
    Kubernetes authenticates with Akeyless by passing the ServiceAccount
    token stored in the named Secret resource.

    Attributes
    ----------
    accessID : str, default is Undefined, required
        the Akeyless Kubernetes auth-method access-id
    k8sConfName : str, default is Undefined, required
        Kubernetes-auth configuration name in Akeyless-Gateway
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef, default is Undefined, optional
        service account ref
    """


    accessID: str

    k8sConfName: str

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef

    serviceAccountRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef:
    """
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Akeyless. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef:
    """
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Akeyless. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef:
    """
    Reference to a Secret that contains the details
    to authenticate with Akeyless.

    Attributes
    ----------
    accessID : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID, default is Undefined, optional
        access ID
    accessType : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType, default is Undefined, optional
        access type
    accessTypeParam : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam, default is Undefined, optional
        access type param
    """


    accessID?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID

    accessType?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType

    accessTypeParam?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID:
    """
    The SecretAccessID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAkeylessCaProvider:
    """
    The provider for the CA bundle to use to validate Akeyless Gateway certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibaba:
    """
    Alibaba configures this store to sync secrets using Alibaba Cloud provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuth, default is Undefined, required
        auth
    regionID : str, default is Undefined, required
        Alibaba Region to be used for the provider
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuth

    regionID: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuth:
    """
    AlibabaAuth contains a secretRef for credentials.

    Attributes
    ----------
    rrsa : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthRrsa, default is Undefined, optional
        rrsa
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRef, default is Undefined, optional
        secret ref
    """


    rrsa?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthRrsa

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthRrsa:
    """
    Authenticate against Alibaba using RRSA.

    Attributes
    ----------
    oidcProviderArn : str, default is Undefined, required
        oidc provider arn
    oidcTokenFilePath : str, default is Undefined, required
        oidc token file path
    roleArn : str, default is Undefined, required
        role arn
    sessionName : str, default is Undefined, required
        session name
    """


    oidcProviderArn: str

    oidcTokenFilePath: str

    roleArn: str

    sessionName: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRef:
    """
    AlibabaAuthSecretRef holds secret references for Alibaba credentials.

    Attributes
    ----------
    accessKeyIDSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef, default is Undefined, required
        access key ID secret ref
    accessKeySecretSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef, default is Undefined, required
        access key secret secret ref
    """


    accessKeyIDSecretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef

    accessKeySecretSecretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef:
    """
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef:
    """
    The AccessKeySecret is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAws:
    """
    AWS configures this store to sync secrets using AWS Secret Manager provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuth, default is Undefined, optional
        auth
    region : str, default is Undefined, required
        AWS Region to be used for the provider
    role : str, default is Undefined, optional
        Role is a Role ARN which the SecretManager provider will assume
    service : str, default is Undefined, required
        Service defines which service should be used to fetch the secrets
    """


    auth?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuth

    region: str

    role?: str

    service: "SecretsManager" | "ParameterStore"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuth:
    """
    Auth defines the information necessary to authenticate against AWS
    if not set aws sdk will infer credentials from your environment
    see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials

    Attributes
    ----------
    jwt : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwt, default is Undefined, optional
        jwt
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRef, default is Undefined, optional
        secret ref
    """


    jwt?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwt

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwt:
    """
    Authenticate against AWS using service account tokens.

    Attributes
    ----------
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRef:
    """
    AWSAuthSecretRef holds secret references for AWS credentials
    both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.

    Attributes
    ----------
    accessKeyIDSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    """


    accessKeyIDSecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef:
    """
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekv:
    """
    AzureKV configures this store to sync secrets using Azure Key Vault provider

    Attributes
    ----------
    authSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRef, default is Undefined, optional
        auth secret ref
    authType : str, default is "ServicePrincipal", optional
        Auth type defines how to authenticate to the keyvault service.
        Valid values are:
        - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
        - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
    identityId : str, default is Undefined, optional
        If multiple Managed Identity is assigned to the pod, you can select the one to be used
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvServiceAccountRef, default is Undefined, optional
        service account ref
    tenantId : str, default is Undefined, optional
        TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
    vaultUrl : str, default is Undefined, required
        Vault Url from which the secrets to be fetched from.
    """


    authSecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRef

    authType?: "ServicePrincipal" | "ManagedIdentity" | "WorkloadIdentity" = "ServicePrincipal"

    identityId?: str

    serviceAccountRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvServiceAccountRef

    tenantId?: str

    vaultUrl: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRef:
    """
    Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.

    Attributes
    ----------
    clientId : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientID, default is Undefined, optional
        client Id
    clientSecret : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret, default is Undefined, optional
        client secret
    """


    clientId?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientID

    clientSecret?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientID:
    """
    The Azure clientId of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret:
    """
    The Azure ClientSecret of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderAzurekvServiceAccountRef:
    """
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFake:
    """
    Fake configures a store with static key/value pairs

    Attributes
    ----------
    data : [ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFakeDataItems0], default is Undefined, required
        data
    """


    data: [ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFakeDataItems0]


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderFakeDataItems0:
    """
    external secrets io v1alpha1 cluster secret store spec provider fake data items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    value : str, default is Undefined, optional
        value
    valueMap : {str:str}, default is Undefined, optional
        value map
    version : str, default is Undefined, optional
        version
    """


    key: str

    value?: str

    valueMap?: {str:str}

    version?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsm:
    """
    GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuth, default is Undefined, optional
        auth
    projectID : str, default is Undefined, optional
        ProjectID project where secret is located
    """


    auth?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuth

    projectID?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuth:
    """
    Auth defines the information necessary to authenticate against GCP

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRef, default is Undefined, optional
        secret ref
    workloadIdentity : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity, default is Undefined, optional
        workload identity
    """


    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRef

    workloadIdentity?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRef:
    """
    external secrets io v1alpha1 cluster secret store spec provider gcpsm auth secret ref

    Attributes
    ----------
    secretAccessKeySecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    """


    secretAccessKeySecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity:
    """
    external secrets io v1alpha1 cluster secret store spec provider gcpsm auth workload identity

    Attributes
    ----------
    clusterLocation : str, default is Undefined, required
        cluster location
    clusterName : str, default is Undefined, required
        cluster name
    clusterProjectID : str, default is Undefined, optional
        cluster project ID
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef, default is Undefined, required
        service account ref
    """


    clusterLocation: str

    clusterName: str

    clusterProjectID?: str

    serviceAccountRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlab:
    """
    GitLab configures this store to sync secrets using GitLab Variables provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuth, default is Undefined, required
        auth
    projectID : str, default is Undefined, optional
        ProjectID specifies a project where secrets are located.
    url : str, default is Undefined, optional
        URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuth

    projectID?: str

    url?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuth:
    """
    Auth configures how secret-manager authenticates with a GitLab instance.

    Attributes
    ----------
    SecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRef, default is Undefined, required
        secret ref
    """


    SecretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRef:
    """
    external secrets io v1alpha1 cluster secret store spec provider gitlab auth secret ref

    Attributes
    ----------
    accessToken : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken, default is Undefined, optional
        access token
    """


    accessToken?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken:
    """
    AccessToken is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbm:
    """
    IBM configures this store to sync secrets using IBM Cloud provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuth, default is Undefined, required
        auth
    serviceUrl : str, default is Undefined, optional
        ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuth

    serviceUrl?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuth:
    """
    Auth configures how secret-manager authenticates with the IBM secrets manager.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRef:
    """
    external secrets io v1alpha1 cluster secret store spec provider ibm auth secret ref

    Attributes
    ----------
    secretApiKeySecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef, default is Undefined, optional
        secret Api key secret ref
    """


    secretApiKeySecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef:
    """
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetes:
    """
    Kubernetes configures this store to sync secrets using a Kubernetes cluster provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuth, default is Undefined, required
        auth
    remoteNamespace : str, default is "default", optional
        Remote namespace to fetch the secrets from
    server : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServer, default is Undefined, optional
        server
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuth

    remoteNamespace?: str = "default"

    server?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServer


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuth:
    """
    Auth configures how secret-manager authenticates with a Kubernetes instance.

    Attributes
    ----------
    cert : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCert, default is Undefined, optional
        cert
    serviceAccount : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount, default is Undefined, optional
        service account
    token : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthToken, default is Undefined, optional
        token
    """


    cert?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCert

    serviceAccount?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount

    token?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthToken


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCert:
    """
    has both clientCert and clientKey as secretKeySelector

    Attributes
    ----------
    clientCert : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert, default is Undefined, optional
        client cert
    clientKey : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey, default is Undefined, optional
        client key
    """


    clientCert?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert

    clientKey?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount:
    """
    points to a service account that should be used for authentication

    Attributes
    ----------
    serviceAccount : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount, default is Undefined, optional
        service account
    """


    serviceAccount?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount:
    """
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthToken:
    """
    use static token to authenticate with

    Attributes
    ----------
    bearerToken : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken, default is Undefined, optional
        bearer token
    """


    bearerToken?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServer:
    """
    configures the Kubernetes server Address.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        CABundle is a base64-encoded CA certificate
    caProvider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServerCaProvider, default is Undefined, optional
        ca provider
    url : str, default is "kubernetes.default", optional
        configures the Kubernetes server Address.
    """


    caBundle?: str

    caProvider?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServerCaProvider

    url?: str = "kubernetes.default"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderKubernetesServerCaProvider:
    """
    see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracle:
    """
    Oracle configures this store to sync secrets using Oracle Vault provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuth, default is Undefined, optional
        auth
    compartment : str, default is Undefined, optional
        Compartment is the vault compartment OCID.
        Required for PushSecret
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the OCID of the encryption key within the vault.
        Required for PushSecret
    principalType : str, default is Undefined, optional
        The type of principal to use for authentication. If left blank, the Auth struct will
        determine the principal type. This optional field must be specified if using
        workload identity.
    region : str, default is Undefined, required
        Region is the region where vault is located.
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleServiceAccountRef, default is Undefined, optional
        service account ref
    vault : str, default is Undefined, required
        Vault is the vault's OCID of the specific vault where secret is located.
    """


    auth?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuth

    compartment?: str

    encryptionKey?: str

    principalType?: "" | "UserPrincipal" | "InstancePrincipal" | "Workload"

    region: str

    serviceAccountRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleServiceAccountRef

    vault: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuth:
    """
    Auth configures how secret-manager authenticates with the Oracle Vault.
    If empty, instance principal is used. Optionally, the authenticating principal type
    and/or user data may be supplied for the use of workload identity and user principal.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRef, default is Undefined, required
        secret ref
    tenancy : str, default is Undefined, required
        Tenancy is the tenancy OCID where user is located.
    user : str, default is Undefined, required
        User is an access OCID specific to the account.
    """


    secretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRef

    tenancy: str

    user: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRef:
    """
    SecretRef to pass through sensitive information.

    Attributes
    ----------
    fingerprint : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint, default is Undefined, required
        fingerprint
    privatekey : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey, default is Undefined, required
        privatekey
    """


    fingerprint: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint

    privatekey: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint:
    """
    Fingerprint is the fingerprint of the API private key.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey:
    """
    PrivateKey is the user's API Signing Key in PEM format, used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderOracleServiceAccountRef:
    """
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepot:
    """
    Configures a store to sync secrets with a Password Depot instance.

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuth, default is Undefined, required
        auth
    database : str, default is Undefined, required
        Database to use as source
    host : str, default is Undefined, required
        URL configures the Password Depot instance URL.
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuth

    database: str

    host: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuth:
    """
    Auth configures how secret-manager authenticates with a Password Depot instance.

    Attributes
    ----------
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef:
    """
    external secrets io v1alpha1 cluster secret store spec provider passworddepot auth secret ref

    Attributes
    ----------
    credentials : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials, default is Undefined, optional
        credentials
    """


    credentials?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials:
    """
    Username / Password is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVault:
    """
    Vault configures this store to sync secrets using Hashi provider

    Attributes
    ----------
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuth, default is Undefined, required
        auth
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate Vault server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultCaProvider, default is Undefined, optional
        ca provider
    forwardInconsistent : bool, default is Undefined, optional
        ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
        leader instead of simply retrying within a loop. This can increase performance if
        the option is enabled serverside.
        https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
    namespace : str, default is Undefined, optional
        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
        Vault environments to support Secure Multi-tenancy. e.g: "ns1".
        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
    path : str, default is Undefined, optional
        Path is the mount path of the Vault KV backend endpoint, e.g:
        "secret". The v2 KV secret engine version specific "/data" path suffix
        for fetching secrets from Vault is optional and will be appended
        if not present in specified path.
    readYourWrites : bool, default is Undefined, optional
        ReadYourWrites ensures isolated read-after-write semantics by
        providing discovered cluster replication states in each request.
        More information about eventual consistency in Vault can be found here
        https://www.vaultproject.io/docs/enterprise/consistency
    server : str, default is Undefined, required
        Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
    version : str, default is "v2", optional
        Version is the Vault KV secret engine version. This can be either "v1" or
        "v2". Version defaults to "v2".
    """


    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuth

    caBundle?: str

    caProvider?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultCaProvider

    forwardInconsistent?: bool

    namespace?: str

    path?: str

    readYourWrites?: bool

    server: str

    version?: "v1" | "v2" = "v2"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuth:
    """
    Auth configures how secret-manager authenticates with the Vault server.

    Attributes
    ----------
    appRole : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRole, default is Undefined, optional
        app role
    cert : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCert, default is Undefined, optional
        cert
    jwt : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwt, default is Undefined, optional
        jwt
    kubernetes : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetes, default is Undefined, optional
        kubernetes
    ldap : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdap, default is Undefined, optional
        ldap
    tokenSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef, default is Undefined, optional
        token secret ref
    """


    appRole?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRole

    cert?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCert

    jwt?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwt

    kubernetes?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetes

    ldap?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdap

    tokenSecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRole:
    """
    AppRole authenticates with Vault using the App Role auth mechanism,
    with the role and secret stored in a Kubernetes Secret resource.

    Attributes
    ----------
    path : str, default is "approle", required
        Path where the App Role authentication backend is mounted
        in Vault, e.g: "approle"
    roleId : str, default is Undefined, required
        RoleID configured in the App Role authentication backend when setting
        up the authentication backend in Vault.
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef, default is Undefined, required
        secret ref
    """


    path: str = "approle"

    roleId: str

    secretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef:
    """
    Reference to a key in a Secret that contains the App Role secret used
    to authenticate with Vault.
    The `key` field must be specified and denotes which entry within the Secret
    resource is used as the app role secret.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCert:
    """
    Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
    Cert authentication method

    Attributes
    ----------
    clientCert : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertClientCert, default is Undefined, optional
        client cert
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertSecretRef, default is Undefined, optional
        secret ref
    """


    clientCert?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertClientCert

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertClientCert:
    """
    ClientCert is a certificate to authenticate using the Cert Vault
    authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthCertSecretRef:
    """
    SecretRef to a key in a Secret resource containing client private key to
    authenticate with Vault using the Cert authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwt:
    """
    Jwt authenticates with Vault by passing role and JWT token using the
    JWT/OIDC authentication method

    Attributes
    ----------
    kubernetesServiceAccountToken : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken, default is Undefined, optional
        kubernetes service account token
    path : str, default is "jwt", required
        Path where the JWT authentication backend is mounted
        in Vault, e.g: "jwt"
    role : str, default is Undefined, optional
        Role is a JWT role to authenticate using the JWT/OIDC Vault
        authentication method
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesServiceAccountToken?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken

    path: str = "jwt"

    role?: str

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken:
    """
    Optional ServiceAccountToken specifies the Kubernetes service account for which to request
    a token for with the `TokenRequest` API.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Optional audiences field that will be used to request a temporary Kubernetes service
        account token for the service account referenced by `serviceAccountRef`.
        Defaults to a single audience `vault` it not specified.
    expirationSeconds : int, default is Undefined, optional
        Optional expiration time in seconds that will be used to request a temporary
        Kubernetes service account token for the service account referenced by
        `serviceAccountRef`.
        Defaults to 10 minutes.
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef, default is Undefined, required
        service account ref
    """


    audiences?: [str]

    expirationSeconds?: int

    serviceAccountRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef:
    """
    Service account field containing the name of a kubernetes ServiceAccount.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef:
    """
    Optional SecretRef that refers to a key in a Secret resource containing JWT token to
    authenticate with Vault using the JWT/OIDC authentication method.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetes:
    """
    Kubernetes authenticates with Vault by passing the ServiceAccount
    token stored in the named Secret resource to the Vault server.

    Attributes
    ----------
    mountPath : str, default is "kubernetes", required
        Path where the Kubernetes authentication backend is mounted in Vault, e.g:
        "kubernetes"
    role : str, default is Undefined, required
        A required field containing the Vault Role to assume. A Role binds a
        Kubernetes ServiceAccount with a set of Vault policies.
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef, default is Undefined, optional
        service account ref
    """


    mountPath: str = "kubernetes"

    role: str

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef

    serviceAccountRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef:
    """
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Vault. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef:
    """
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Vault. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdap:
    """
    Ldap authenticates with Vault by passing username/password pair using
    the LDAP authentication method

    Attributes
    ----------
    path : str, default is "ldap", required
        Path where the LDAP authentication backend is mounted
        in Vault, e.g: "ldap"
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef, default is Undefined, optional
        secret ref
    username : str, default is Undefined, required
        Username is a LDAP user name used to authenticate using the LDAP Vault
        authentication method
    """


    path: str = "ldap"

    secretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef

    username: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef:
    """
    SecretRef to a key in a Secret resource containing password for the LDAP
    user used to authenticate with Vault using the LDAP authentication
    method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef:
    """
    TokenSecretRef authenticates with Vault by presenting a token.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderVaultCaProvider:
    """
    The provider for the CA bundle to use to validate Vault server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhook:
    """
    Webhook configures this store to sync secrets using a generic templated webhook

    Attributes
    ----------
    body : str, default is Undefined, optional
        Body
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate webhook server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookCaProvider, default is Undefined, optional
        ca provider
    headers : {str:str}, default is Undefined, optional
        Headers
    method : str, default is Undefined, optional
        Webhook Method
    result : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookResult, default is Undefined, required
        result
    secrets : [ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0], default is Undefined, optional
        Secrets to fill in templates
        These secrets will be passed to the templating function as key value pairs under the given name
    timeout : str, default is Undefined, optional
        Timeout
    url : str, default is Undefined, required
        Webhook url to call
    """


    body?: str

    caBundle?: str

    caProvider?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookCaProvider

    headers?: {str:str}

    method?: str

    result: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookResult

    secrets?: [ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0]

    timeout?: str

    url: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookCaProvider:
    """
    The provider for the CA bundle to use to validate webhook server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookResult:
    """
    Result formatting

    Attributes
    ----------
    jsonPath : str, default is Undefined, optional
        Json path of return value
    """


    jsonPath?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0:
    """
    external secrets io v1alpha1 cluster secret store spec provider webhook secrets items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this secret in templates
    secretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0SecretRef, default is Undefined, required
        secret ref
    """


    name: str

    secretRef: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0SecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderWebhookSecretsItems0SecretRef:
    """
    Secret ref to fill in credentials

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockbox:
    """
    YandexLockbox configures this store to sync secrets using Yandex Lockbox provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
    auth : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuth, default is Undefined, required
        auth
    caProvider : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProvider, default is Undefined, optional
        ca provider
    """


    apiEndpoint?: str

    auth: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuth

    caProvider?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProvider


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuth:
    """
    Auth defines the information necessary to authenticate against Yandex Lockbox

    Attributes
    ----------
    authorizedKeySecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef, default is Undefined, optional
        authorized key secret ref
    """


    authorizedKeySecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef:
    """
    The authorized key used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProvider:
    """
    The provider for the CA bundle to use to validate Yandex.Cloud server certificate.

    Attributes
    ----------
    certSecretRef : ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef, default is Undefined, optional
        cert secret ref
    """


    certSecretRef?: ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef:
    """
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreSpecRetrySettings:
    """
    Used to configure http retries if failed

    Attributes
    ----------
    maxRetries : int, default is Undefined, optional
        max retries
    retryInterval : str, default is Undefined, optional
        retry interval
    """


    maxRetries?: int

    retryInterval?: str


schema ExternalSecretsIoV1alpha1ClusterSecretStoreStatus:
    """
    SecretStoreStatus defines the observed state of the SecretStore.

    Attributes
    ----------
    conditions : [ExternalSecretsIoV1alpha1ClusterSecretStoreStatusConditionsItems0], default is Undefined, optional
        conditions
    """


    conditions?: [ExternalSecretsIoV1alpha1ClusterSecretStoreStatusConditionsItems0]


schema ExternalSecretsIoV1alpha1ClusterSecretStoreStatusConditionsItems0:
    """
    external secrets io v1alpha1 cluster secret store status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


