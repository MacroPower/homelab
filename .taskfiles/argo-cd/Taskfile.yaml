---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  ARGOCD_NS: argocd
  ARGO_PROXY_PORT: "8080"
  ARGO_LOG_LEVEL: warn # info and below are verbose enough to destroy your shell, be warned
  REPO_ROOT: "{{.REPO_ROOT | default .ROOT_DIR}}"

includes:
  helm: "../helm/Taskfile.yaml"

tasks:
  proxy:
    status:
      - nc -z localhost {{.ARGO_PROXY_PORT}}
    cmds:
      - kubectl port-forward -n {{.ARGOCD_NS}} service/argocd-server "{{.ARGO_PROXY_PORT}}:443" &

  proxy-stop:
    desc: Stop ArgoCD kubectl proxy
    vars:
      PID:
        sh: ps -ef | grep '[^]]kubectl port-forward' | awk '{print $2}'
    preconditions:
      - nc -z localhost {{.ARGO_PROXY_PORT}}
    cmds:
      - kill -9 "{{.PID}}"

  proxy-login:
    desc: Login to ArgoCD via kubectl proxy
    vars:
      PASSWORD:
        sh: kubectl -n {{.ARGOCD_NS}} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
    preconditions:
      - &requireArgoCdCli
        sh: command -v argocd
        msg: |
          ArgoCD CLI not found, you can install it with:

          brew install argocd
    status:
      - argocd app list -l foo=bar
    cmds:
      - task: proxy
      - cmd: argocd login --insecure "localhost:{{.ARGO_PROXY_PORT}}" --username=admin --password="{{.PASSWORD}}"
        silent: true

  refresh:
    desc: Refresh ArgoCD Application
    requires:
      vars: [APP]
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    cmds:
      - argocd app refresh {{.APP}}

  pause:
    desc: Pause ArgoCD Application
    requires:
      vars: [APP]
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    status:
      - >-
        ! argocd app get {{.APP}} -o json | jq '.spec.syncPolicy.automated' --exit-status
    cmds:
      - >-
        argocd app patch {{.APP}}
        --patch='[{"op": "remove", "path": "/spec/syncPolicy/automated"}]'

  resume:
    desc: Resume ArgoCD Application
    requires:
      vars: [APP]
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    cmds:
      - >-
        argocd app patch {{.APP}}
        --patch='[{"op": "add", "path": "/spec/syncPolicy/automated", "value": {"prune": true, "selfHeal": true}}]' > /dev/null

  local-diff:
    desc: Diff ArgoCD Application
    summary: |
      Args:
        APP: Application to diff (required)
    requires:
      vars: [APP]
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    cmds:
      - >-
        argocd app diff {{.APP}}
        --server-side-generate
        --exit-code=false
        --loglevel={{.ARGO_LOG_LEVEL}}
        --local="{{.REPO_ROOT}}"

  sync:
    desc: Sync ArgoCD Application
    summary: |
      Args:
        APP: Application to sync (required)
        PREVIEW: Preview changes before syncing (default: true)
        DRY_RUN: Dry run (default: false)
    requires:
      vars: [APP]
    vars:
      PREVIEW: '{{.PREVIEW | default "true"}}'
      DRY_RUN: '{{.DRY_RUN | default "false"}}'
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    cmds:
      - >-
        argocd app sync {{.APP}}
        --server-side
        --loglevel={{.ARGO_LOG_LEVEL}}
        {{- if eq .DRY_RUN "true" }}
        --dry-run
        {{- else if eq .PREVIEW "true" }}
        --preview-changes
        {{- end }}

  local-sync:
    desc: Sync ArgoCD Application from local path
    summary: |
      Args:
        APP: Application to sync (required)
        PREVIEW: Preview changes before syncing (default: true)
        DRY_RUN: Dry run (default: false)
    requires:
      vars: [APP]
    vars:
      PATH:
        sh: argocd app get {{.APP}} -o json | jq -r '.spec.source.path'
      PREVIEW: '{{.PREVIEW | default "true"}}'
      DRY_RUN: '{{.DRY_RUN | default "false"}}'
    preconditions:
      - *requireArgoCdCli
      - sh: argocd app get {{.APP}}
        msg: Application "{{.APP}}" not found
    deps:
      - task: pause
        vars: { APP: "{{.APP}}" }
    cmds:
      - >-
        argocd app sync {{.APP}}
        --server-side
        --loglevel={{.ARGO_LOG_LEVEL}}
        {{- if eq .DRY_RUN "true" }}
        --dry-run
        {{- else if eq .PREVIEW "true" }}
        --preview-changes
        {{- end }}
        --local {{.PATH}}
        --local-repo-root {{.REPO_ROOT}}

  watch:
    desc: Watch ArgoCD Application
    requires:
      vars: [APP]
    vars:
      PATH:
        sh: argocd app get {{.APP}} -o json | jq -r '.spec.source.path'
    sources:
      - "{{.PATH}}/**/*"
    watch: true
    ignore_error: true
    preconditions:
      - *requireArgoCdCli
    deps:
      - task: proxy-login
    cmds:
      - task: local-diff
        vars: { APP: "{{.APP}}" }

  lint:
    desc: Lint ArgoCD Application
    requires:
      vars: [APP]
    vars:
      PATH:
        sh: argocd app get {{.APP}} -o json | jq -r '.spec.source.path'
    cmds:
      - task: helm:lint-chart
        vars:
          PATH: "{{.PATH}}"
          PARAMS: >-
            --set=config.create=true
            --set=config.name={{.APP}}
